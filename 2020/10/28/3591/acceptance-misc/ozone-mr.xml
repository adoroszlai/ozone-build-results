<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201028 01:55:26.237" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:41:42.338" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:41:44.625" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 01:41:44.625" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201028 01:41:44.625" starttime="20201028 01:41:42.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:41:44.626" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201028 01:41:44.626" starttime="20201028 01:41:44.625"></status>
</kw>
<msg timestamp="20201028 01:41:44.626" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201028 01:41:44.626" starttime="20201028 01:41:42.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:41:44.633" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:41:46.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:41:46.616" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:41:46.616" starttime="20201028 01:41:44.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:41:46.618" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:41:46.618" starttime="20201028 01:41:46.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:41:46.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:41:46.618" starttime="20201028 01:41:46.618"></status>
</kw>
<status status="PASS" endtime="20201028 01:41:46.619" starttime="20201028 01:41:44.628"></status>
</kw>
<msg timestamp="20201028 01:41:46.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:41:46.619" starttime="20201028 01:41:44.628"></status>
</kw>
<msg timestamp="20201028 01:41:46.619" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201028 01:41:46.619" starttime="20201028 01:41:44.627"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201028 01:41:46.620" starttime="20201028 01:41:46.619"></status>
</kw>
<status status="PASS" endtime="20201028 01:41:46.620" starttime="20201028 01:41:44.627"></status>
</kw>
<status status="PASS" endtime="20201028 01:41:46.620" starttime="20201028 01:41:44.626"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:41:46.624" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:41:48.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:41:48.452" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:41:48.452" starttime="20201028 01:41:46.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:41:48.453" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:41:48.454" starttime="20201028 01:41:48.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:41:48.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:41:48.454" starttime="20201028 01:41:48.454"></status>
</kw>
<status status="PASS" endtime="20201028 01:41:48.454" starttime="20201028 01:41:46.622"></status>
</kw>
<msg timestamp="20201028 01:41:48.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:41:48.455" starttime="20201028 01:41:46.621"></status>
</kw>
<status status="PASS" endtime="20201028 01:41:48.455" starttime="20201028 01:41:46.621"></status>
</kw>
<status status="PASS" endtime="20201028 01:41:48.455" starttime="20201028 01:41:46.620"></status>
</kw>
<status status="PASS" endtime="20201028 01:41:48.455" starttime="20201028 01:41:46.620"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201028 01:41:48.455" starttime="20201028 01:41:48.455"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:41:48.459" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:41:50.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:41:50.613" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T01:41:48.421Z",
  "modificat...</msg>
<status status="PASS" endtime="20201028 01:41:50.613" starttime="20201028 01:41:48.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:41:50.614" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T01:41:48.421Z",
  "modificationTime" : "2020-10-28T01:41:48.421Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201028 01:41:50.614" starttime="20201028 01:41:50.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:41:50.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:41:50.615" starttime="20201028 01:41:50.614"></status>
</kw>
<status status="PASS" endtime="20201028 01:41:50.615" starttime="20201028 01:41:48.457"></status>
</kw>
<msg timestamp="20201028 01:41:50.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:41:50.615" starttime="20201028 01:41:48.456"></status>
</kw>
<msg timestamp="20201028 01:41:50.615" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T01:41:48.421Z",
  "modificat...</msg>
<status status="PASS" endtime="20201028 01:41:50.615" starttime="20201028 01:41:48.456"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201028 01:41:50.616" starttime="20201028 01:41:50.616"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:41:50.620" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:41:50.620" starttime="20201028 01:41:50.619"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:41:50.620" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:41:50.620" starttime="20201028 01:41:50.620"></status>
</kw>
<status status="PASS" endtime="20201028 01:41:50.620" starttime="20201028 01:41:50.619"></status>
</kw>
<msg timestamp="20201028 01:41:50.621" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:41:50.621" starttime="20201028 01:41:50.618"></status>
</kw>
<status status="PASS" endtime="20201028 01:41:50.621" starttime="20201028 01:41:50.618"></status>
</kw>
<msg timestamp="20201028 01:41:50.621" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201028 01:41:50.621" starttime="20201028 01:41:50.617"></status>
</kw>
<msg timestamp="20201028 01:41:50.621" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201028 01:41:50.621" starttime="20201028 01:41:50.616"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:41:50.626" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:41:52.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:41:52.627" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:41:52.627" starttime="20201028 01:41:50.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:41:52.628" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:41:52.628" starttime="20201028 01:41:52.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:41:52.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:41:52.629" starttime="20201028 01:41:52.628"></status>
</kw>
<status status="PASS" endtime="20201028 01:41:52.629" starttime="20201028 01:41:50.622"></status>
</kw>
<msg timestamp="20201028 01:41:52.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:41:52.629" starttime="20201028 01:41:50.622"></status>
</kw>
<status status="PASS" endtime="20201028 01:41:52.629" starttime="20201028 01:41:50.621"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:41:52.633" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:41:58.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:41:58.005" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:41:58.005" starttime="20201028 01:41:52.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:41:58.006" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:41:58.006" starttime="20201028 01:41:58.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:41:58.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:41:58.007" starttime="20201028 01:41:58.007"></status>
</kw>
<status status="PASS" endtime="20201028 01:41:58.008" starttime="20201028 01:41:52.631"></status>
</kw>
<msg timestamp="20201028 01:41:58.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:41:58.008" starttime="20201028 01:41:52.630"></status>
</kw>
<status status="PASS" endtime="20201028 01:41:58.008" starttime="20201028 01:41:52.630"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:41:58.012" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:42:01.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:42:01.891" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:42:01.891" starttime="20201028 01:41:58.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:42:01.892" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:42:01.892" starttime="20201028 01:42:01.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:42:01.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:42:01.893" starttime="20201028 01:42:01.892"></status>
</kw>
<status status="PASS" endtime="20201028 01:42:01.893" starttime="20201028 01:41:58.009"></status>
</kw>
<msg timestamp="20201028 01:42:01.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:42:01.893" starttime="20201028 01:41:58.009"></status>
</kw>
<status status="PASS" endtime="20201028 01:42:01.893" starttime="20201028 01:41:58.008"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:42:01.898" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:42:05.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:42:05.752" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:42:05.752" starttime="20201028 01:42:01.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:42:05.753" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:42:05.753" starttime="20201028 01:42:05.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:42:05.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:42:05.754" starttime="20201028 01:42:05.753"></status>
</kw>
<status status="PASS" endtime="20201028 01:42:05.754" starttime="20201028 01:42:01.894"></status>
</kw>
<msg timestamp="20201028 01:42:05.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:42:05.754" starttime="20201028 01:42:01.894"></status>
</kw>
<status status="PASS" endtime="20201028 01:42:05.754" starttime="20201028 01:42:01.893"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 01:42:05.755" critical="yes" starttime="20201028 01:41:42.332"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:42:05.759" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:42:05.759" starttime="20201028 01:42:05.759"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:42:05.760" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:42:05.760" starttime="20201028 01:42:05.760"></status>
</kw>
<status status="PASS" endtime="20201028 01:42:05.760" starttime="20201028 01:42:05.758"></status>
</kw>
<msg timestamp="20201028 01:42:05.760" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:42:05.760" starttime="20201028 01:42:05.758"></status>
</kw>
<status status="PASS" endtime="20201028 01:42:05.761" starttime="20201028 01:42:05.757"></status>
</kw>
<msg timestamp="20201028 01:42:05.761" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201028 01:42:05.761" starttime="20201028 01:42:05.757"></status>
</kw>
<msg timestamp="20201028 01:42:05.761" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201028 01:42:05.761" starttime="20201028 01:42:05.756"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:42:05.765" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:42:07.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:42:07.986" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:42:07.986" starttime="20201028 01:42:05.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:42:07.987" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:42:07.987" starttime="20201028 01:42:07.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:42:07.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:42:07.988" starttime="20201028 01:42:07.987"></status>
</kw>
<status status="PASS" endtime="20201028 01:42:07.988" starttime="20201028 01:42:05.762"></status>
</kw>
<msg timestamp="20201028 01:42:07.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:42:07.988" starttime="20201028 01:42:05.762"></status>
</kw>
<status status="PASS" endtime="20201028 01:42:07.988" starttime="20201028 01:42:05.761"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:42:07.992" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:42:10.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:42:10.011" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:42:10.012" starttime="20201028 01:42:07.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:42:10.013" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:42:10.013" starttime="20201028 01:42:10.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:42:10.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:42:10.013" starttime="20201028 01:42:10.013"></status>
</kw>
<status status="PASS" endtime="20201028 01:42:10.014" starttime="20201028 01:42:07.989"></status>
</kw>
<msg timestamp="20201028 01:42:10.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:42:10.014" starttime="20201028 01:42:07.989"></status>
</kw>
<status status="PASS" endtime="20201028 01:42:10.014" starttime="20201028 01:42:07.988"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 01:42:10.014" critical="yes" starttime="20201028 01:42:05.755"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201028 01:42:10.015" starttime="20201028 01:41:42.281"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 01:43:42.275" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 01:43:42.275" starttime="20201028 01:43:42.275"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:43:42.276" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 01:43:42.276" starttime="20201028 01:43:42.275"></status>
</kw>
<status status="PASS" endtime="20201028 01:43:42.276" starttime="20201028 01:43:42.274"></status>
</kw>
<msg timestamp="20201028 01:43:42.276" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 01:43:42.276" starttime="20201028 01:43:42.274"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201028 01:43:42.277" starttime="20201028 01:43:42.276"></status>
</kw>
<msg timestamp="20201028 01:43:42.277" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201028 01:43:42.277" starttime="20201028 01:43:42.276"></status>
</kw>
<status status="PASS" endtime="20201028 01:43:42.277" starttime="20201028 01:43:42.273"></status>
</kw>
<msg timestamp="20201028 01:43:42.277" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 01:43:42.277" starttime="20201028 01:43:42.273"></status>
</kw>
<msg timestamp="20201028 01:43:42.277" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 01:43:42.277" starttime="20201028 01:43:42.272"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 01:43:42.278" level="INFO">${random} = 15271</msg>
<status status="PASS" endtime="20201028 01:43:42.278" starttime="20201028 01:43:42.277"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:43:42.290" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-15271 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:43:45.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:43:45.650" level="INFO">${output} = 2020-10-28 01:43:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:43:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 ...</msg>
<status status="PASS" endtime="20201028 01:43:45.650" starttime="20201028 01:43:42.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:43:45.651" level="INFO">2020-10-28 01:43:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:43:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 01:43:44 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-28 01:43:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 01:43:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-77A3AF042364-&gt;4ab30cb0-b01a-4cdc-84c5-a9a38a8b972a
2020-10-28 01:43:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201028 01:43:45.652" starttime="20201028 01:43:45.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:43:45.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:43:45.652" starttime="20201028 01:43:45.652"></status>
</kw>
<status status="PASS" endtime="20201028 01:43:45.652" starttime="20201028 01:43:42.279"></status>
</kw>
<msg timestamp="20201028 01:43:45.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:43:45.653" starttime="20201028 01:43:42.278"></status>
</kw>
<msg timestamp="20201028 01:43:45.653" level="INFO">${result} = 2020-10-28 01:43:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:43:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 ...</msg>
<status status="PASS" endtime="20201028 01:43:45.653" starttime="20201028 01:43:42.278"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:43:45.656" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:43:47.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:43:47.444" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:41 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-28 01:43 ofs://om/volume1/bucket1/ozone-15271
-rw-...</msg>
<status status="PASS" endtime="20201028 01:43:47.444" starttime="20201028 01:43:45.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:43:47.445" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:41 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-28 01:43 ofs://om/volume1/bucket1/ozone-15271
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-28 01:42 ofs://om/volume1/bucket1/ozone-75083
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:42 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:43 ofs://om/volume1/bucket1/wordcount-61.txt</msg>
<status status="PASS" endtime="20201028 01:43:47.445" starttime="20201028 01:43:47.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:43:47.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:43:47.446" starttime="20201028 01:43:47.445"></status>
</kw>
<status status="PASS" endtime="20201028 01:43:47.446" starttime="20201028 01:43:45.654"></status>
</kw>
<msg timestamp="20201028 01:43:47.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:43:47.446" starttime="20201028 01:43:45.653"></status>
</kw>
<msg timestamp="20201028 01:43:47.446" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:41 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-28 01:43 ofs://om/volume1/bucket1/ozone-15271
-rw-...</msg>
<status status="PASS" endtime="20201028 01:43:47.446" starttime="20201028 01:43:45.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201028 01:43:47.447" starttime="20201028 01:43:47.446"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 01:43:47.447" critical="yes" starttime="20201028 01:43:42.271"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201028 01:43:47.448" starttime="20201028 01:43:42.225"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:42:14.711" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:42:14.711" starttime="20201028 01:42:14.710"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:42:14.711" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:42:14.711" starttime="20201028 01:42:14.711"></status>
</kw>
<status status="PASS" endtime="20201028 01:42:14.711" starttime="20201028 01:42:14.710"></status>
</kw>
<msg timestamp="20201028 01:42:14.711" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:42:14.711" starttime="20201028 01:42:14.710"></status>
</kw>
<status status="PASS" endtime="20201028 01:42:14.711" starttime="20201028 01:42:14.709"></status>
</kw>
<msg timestamp="20201028 01:42:14.712" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 01:42:14.712" starttime="20201028 01:42:14.709"></status>
</kw>
<msg timestamp="20201028 01:42:14.712" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 01:42:14.712" starttime="20201028 01:42:14.707"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 01:42:14.712" level="INFO">${random} = 75083</msg>
<status status="PASS" endtime="20201028 01:42:14.712" starttime="20201028 01:42:14.712"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:42:14.717" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-75083 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:42:18.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:42:18.195" level="INFO">${output} = 2020-10-28 01:42:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:42:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 ...</msg>
<status status="PASS" endtime="20201028 01:42:18.195" starttime="20201028 01:42:14.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:42:18.196" level="INFO">2020-10-28 01:42:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:42:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 01:42:16 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-28 01:42:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 01:42:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4AF3D069F717-&gt;4ab30cb0-b01a-4cdc-84c5-a9a38a8b972a
2020-10-28 01:42:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201028 01:42:18.196" starttime="20201028 01:42:18.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:42:18.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:42:18.197" starttime="20201028 01:42:18.196"></status>
</kw>
<status status="PASS" endtime="20201028 01:42:18.197" starttime="20201028 01:42:14.713"></status>
</kw>
<msg timestamp="20201028 01:42:18.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:42:18.197" starttime="20201028 01:42:14.713"></status>
</kw>
<msg timestamp="20201028 01:42:18.197" level="INFO">${result} = 2020-10-28 01:42:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:42:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 ...</msg>
<status status="PASS" endtime="20201028 01:42:18.197" starttime="20201028 01:42:14.712"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:42:18.201" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:42:19.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:42:19.919" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:41 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-28 01:42 o3fs://bucket1.volume1.om/ozone-75083
dr...</msg>
<status status="PASS" endtime="20201028 01:42:19.919" starttime="20201028 01:42:18.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:42:19.920" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:41 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-28 01:42 o3fs://bucket1.volume1.om/ozone-75083
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:42 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201028 01:42:19.920" starttime="20201028 01:42:19.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:42:19.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:42:19.921" starttime="20201028 01:42:19.920"></status>
</kw>
<status status="PASS" endtime="20201028 01:42:19.921" starttime="20201028 01:42:18.198"></status>
</kw>
<msg timestamp="20201028 01:42:19.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:42:19.921" starttime="20201028 01:42:18.198"></status>
</kw>
<msg timestamp="20201028 01:42:19.921" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:41 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-28 01:42 o3fs://bucket1.volume1.om/ozone-75083
dr...</msg>
<status status="PASS" endtime="20201028 01:42:19.921" starttime="20201028 01:42:18.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201028 01:42:19.922" starttime="20201028 01:42:19.921"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 01:42:19.922" critical="yes" starttime="20201028 01:42:14.707"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201028 01:42:19.923" starttime="20201028 01:42:14.663"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:43:52.179" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:43:52.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:43:52.182" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 01:43:52.182" starttime="20201028 01:43:52.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:43:52.183" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 01:43:52.183" starttime="20201028 01:43:52.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:43:52.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:43:52.184" starttime="20201028 01:43:52.183"></status>
</kw>
<status status="PASS" endtime="20201028 01:43:52.184" starttime="20201028 01:43:52.172"></status>
</kw>
<msg timestamp="20201028 01:43:52.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:43:52.184" starttime="20201028 01:43:52.172"></status>
</kw>
<msg timestamp="20201028 01:43:52.184" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 01:43:52.184" starttime="20201028 01:43:52.171"></status>
</kw>
<msg timestamp="20201028 01:43:52.185" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 01:43:52.185" starttime="20201028 01:43:52.171"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 01:43:52.188" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 01:43:52.188" starttime="20201028 01:43:52.187"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:43:52.188" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 01:43:52.188" starttime="20201028 01:43:52.188"></status>
</kw>
<status status="PASS" endtime="20201028 01:43:52.189" starttime="20201028 01:43:52.187"></status>
</kw>
<msg timestamp="20201028 01:43:52.189" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 01:43:52.189" starttime="20201028 01:43:52.187"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201028 01:43:52.189" starttime="20201028 01:43:52.189"></status>
</kw>
<msg timestamp="20201028 01:43:52.190" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201028 01:43:52.190" starttime="20201028 01:43:52.189"></status>
</kw>
<status status="PASS" endtime="20201028 01:43:52.190" starttime="20201028 01:43:52.186"></status>
</kw>
<msg timestamp="20201028 01:43:52.190" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 01:43:52.190" starttime="20201028 01:43:52.185"></status>
</kw>
<msg timestamp="20201028 01:43:52.190" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 01:43:52.190" starttime="20201028 01:43:52.185"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:43:52.194" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:44:30.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:44:30.782" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 01:43:54 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:43:54 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201028 01:44:30.782" starttime="20201028 01:43:52.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:44:30.783" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-28 01:43:54 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:43:54 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 01:43:54 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-28 01:43:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 01:43:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5195CAD60990-&gt;4ab30cb0-b01a-4cdc-84c5-a9a38a8b972a
2020-10-28 01:43:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-28 01:43:55 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-28 01:43:55 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-28 01:43:55 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-28 01:43:55 INFO  JobSubmitter:198 - number of splits:3
2020-10-28 01:43:58 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603849269264_0003
2020-10-28 01:43:58 INFO  YarnClientImpl:273 - Submitted application application_1603849269264_0003
2020-10-28 01:43:58 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603849269264_0003/
2020-10-28 01:43:58 INFO  Job:1339 - Running job: job_1603849269264_0003
2020-10-28 01:44:05 INFO  Job:1360 - Job job_1603849269264_0003 running in uber mode : false
2020-10-28 01:44:05 INFO  Job:1367 -  map 0% reduce 0%
2020-10-28 01:44:13 INFO  Job:1367 -  map 33% reduce 0%
2020-10-28 01:44:17 INFO  Job:1367 -  map 67% reduce 0%
2020-10-28 01:44:22 INFO  Job:1367 -  map 100% reduce 0%
2020-10-28 01:44:29 INFO  Job:1367 -  map 100% reduce 100%
2020-10-28 01:44:30 INFO  Job:1378 - Job job_1603849269264_0003 completed successfully
2020-10-28 01:44:30 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615237
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38356
		Total time spent by all reduces in occupied slots (ms)=24524
		Total time spent by all map tasks (ms)=9589
		Total time spent by all reduce tasks (ms)=6131
		Total vcore-milliseconds taken by all map tasks=9589
		Total vcore-milliseconds taken by all reduce tasks=6131
		Total megabyte-milliseconds taken by all map tasks=39276544
		Total megabyte-milliseconds taken by all reduce tasks=25112576
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=583
		CPU time spent (ms)=7590
		Physical memory (bytes) snapshot=1141379072
		Virtual memory (bytes) snapshot=16064446464
		Total committed heap usage (bytes)=1054343168
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.935 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201028 01:44:30.783" starttime="20201028 01:44:30.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:44:30.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:44:30.784" starttime="20201028 01:44:30.783"></status>
</kw>
<status status="PASS" endtime="20201028 01:44:30.784" starttime="20201028 01:43:52.191"></status>
</kw>
<msg timestamp="20201028 01:44:30.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:44:30.784" starttime="20201028 01:43:52.191"></status>
</kw>
<msg timestamp="20201028 01:44:30.785" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 01:43:54 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:43:54 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201028 01:44:30.785" starttime="20201028 01:43:52.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 01:44:30.785" starttime="20201028 01:44:30.785"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 01:44:30.785" critical="yes" starttime="20201028 01:43:52.170"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:44:30.790" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:44:30.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:44:30.796" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 01:44:30.796" starttime="20201028 01:44:30.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:44:30.797" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 01:44:30.797" starttime="20201028 01:44:30.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:44:30.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:44:30.797" starttime="20201028 01:44:30.797"></status>
</kw>
<status status="PASS" endtime="20201028 01:44:30.797" starttime="20201028 01:44:30.788"></status>
</kw>
<msg timestamp="20201028 01:44:30.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:44:30.798" starttime="20201028 01:44:30.787"></status>
</kw>
<msg timestamp="20201028 01:44:30.798" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 01:44:30.798" starttime="20201028 01:44:30.787"></status>
</kw>
<msg timestamp="20201028 01:44:30.798" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 01:44:30.798" starttime="20201028 01:44:30.787"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 01:44:30.799" level="INFO">${random} = 02</msg>
<status status="PASS" endtime="20201028 01:44:30.799" starttime="20201028 01:44:30.798"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 01:44:30.802" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 01:44:30.802" starttime="20201028 01:44:30.801"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:44:30.802" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 01:44:30.802" starttime="20201028 01:44:30.802"></status>
</kw>
<status status="PASS" endtime="20201028 01:44:30.802" starttime="20201028 01:44:30.801"></status>
</kw>
<msg timestamp="20201028 01:44:30.802" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 01:44:30.802" starttime="20201028 01:44:30.801"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201028 01:44:30.803" starttime="20201028 01:44:30.803"></status>
</kw>
<msg timestamp="20201028 01:44:30.803" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201028 01:44:30.803" starttime="20201028 01:44:30.803"></status>
</kw>
<status status="PASS" endtime="20201028 01:44:30.804" starttime="20201028 01:44:30.800"></status>
</kw>
<msg timestamp="20201028 01:44:30.804" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 01:44:30.804" starttime="20201028 01:44:30.799"></status>
</kw>
<msg timestamp="20201028 01:44:30.804" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 01:44:30.804" starttime="20201028 01:44:30.799"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 01:44:30.806" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 01:44:30.806" starttime="20201028 01:44:30.806"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:44:30.807" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 01:44:30.807" starttime="20201028 01:44:30.807"></status>
</kw>
<status status="PASS" endtime="20201028 01:44:30.807" starttime="20201028 01:44:30.806"></status>
</kw>
<msg timestamp="20201028 01:44:30.807" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 01:44:30.807" starttime="20201028 01:44:30.805"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:44:30.808" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201028 01:44:30.808" starttime="20201028 01:44:30.808"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:44:30.809" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201028 01:44:30.809" starttime="20201028 01:44:30.809"></status>
</kw>
<status status="PASS" endtime="20201028 01:44:30.809" starttime="20201028 01:44:30.808"></status>
</kw>
<msg timestamp="20201028 01:44:30.809" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201028 01:44:30.809" starttime="20201028 01:44:30.807"></status>
</kw>
<status status="PASS" endtime="20201028 01:44:30.809" starttime="20201028 01:44:30.805"></status>
</kw>
<msg timestamp="20201028 01:44:30.810" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201028 01:44:30.810" starttime="20201028 01:44:30.805"></status>
</kw>
<msg timestamp="20201028 01:44:30.810" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201028 01:44:30.810" starttime="20201028 01:44:30.804"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 01:44:30.813" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 01:44:30.813" starttime="20201028 01:44:30.812"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:44:30.813" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 01:44:30.813" starttime="20201028 01:44:30.813"></status>
</kw>
<status status="PASS" endtime="20201028 01:44:30.813" starttime="20201028 01:44:30.812"></status>
</kw>
<msg timestamp="20201028 01:44:30.813" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 01:44:30.813" starttime="20201028 01:44:30.811"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:44:30.814" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201028 01:44:30.814" starttime="20201028 01:44:30.814"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:44:30.815" level="INFO">${result} = /wordcount-02.txt</msg>
<status status="PASS" endtime="20201028 01:44:30.815" starttime="20201028 01:44:30.815"></status>
</kw>
<status status="PASS" endtime="20201028 01:44:30.815" starttime="20201028 01:44:30.814"></status>
</kw>
<msg timestamp="20201028 01:44:30.815" level="INFO">${path_with_leading} = /wordcount-02.txt</msg>
<status status="PASS" endtime="20201028 01:44:30.815" starttime="20201028 01:44:30.813"></status>
</kw>
<status status="PASS" endtime="20201028 01:44:30.815" starttime="20201028 01:44:30.811"></status>
</kw>
<msg timestamp="20201028 01:44:30.815" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-02.txt</msg>
<status status="PASS" endtime="20201028 01:44:30.815" starttime="20201028 01:44:30.810"></status>
</kw>
<msg timestamp="20201028 01:44:30.816" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-02.txt</msg>
<status status="PASS" endtime="20201028 01:44:30.816" starttime="20201028 01:44:30.810"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:44:30.820" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-02.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:45:07.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:45:07.993" level="INFO">${output} = 2020-10-28 01:44:32 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-28 01:44:32 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201028 01:45:07.993" starttime="20201028 01:44:30.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:45:07.994" level="INFO">2020-10-28 01:44:32 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-28 01:44:32 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-28 01:44:33 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:44:33 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 01:44:33 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-28 01:44:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 01:44:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B91913F27405-&gt;4ab30cb0-b01a-4cdc-84c5-a9a38a8b972a
2020-10-28 01:44:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 01:44:34 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-28 01:44:36 INFO  JobSubmitter:198 - number of splits:3
2020-10-28 01:44:36 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603849269264_0004
2020-10-28 01:44:37 INFO  YarnClientImpl:273 - Submitted application application_1603849269264_0004
2020-10-28 01:44:37 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603849269264_0004/
2020-10-28 01:44:37 INFO  Job:1339 - Running job: job_1603849269264_0004
2020-10-28 01:44:43 INFO  Job:1360 - Job job_1603849269264_0004 running in uber mode : false
2020-10-28 01:44:43 INFO  Job:1367 -  map 0% reduce 0%
2020-10-28 01:44:50 INFO  Job:1367 -  map 33% reduce 0%
2020-10-28 01:44:54 INFO  Job:1367 -  map 67% reduce 0%
2020-10-28 01:45:00 INFO  Job:1367 -  map 100% reduce 0%
2020-10-28 01:45:04 INFO  Job:1367 -  map 100% reduce 100%
2020-10-28 01:45:07 INFO  Job:1378 - Job job_1603849269264_0004 completed successfully
2020-10-28 01:45:07 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37988
		Total time spent by all reduces in occupied slots (ms)=14064
		Total time spent by all map tasks (ms)=9497
		Total time spent by all reduce tasks (ms)=3516
		Total vcore-milliseconds taken by all map tasks=9497
		Total vcore-milliseconds taken by all reduce tasks=3516
		Total megabyte-milliseconds taken by all map tasks=38899712
		Total megabyte-milliseconds taken by all reduce tasks=14401536
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=600
		CPU time spent (ms)=6550
		Physical memory (bytes) snapshot=1094692864
		Virtual memory (bytes) snapshot=16030806016
		Total committed heap usage (bytes)=1045430272
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201028 01:45:07.995" starttime="20201028 01:45:07.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:45:07.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:45:07.996" starttime="20201028 01:45:07.995"></status>
</kw>
<status status="PASS" endtime="20201028 01:45:07.996" starttime="20201028 01:44:30.816"></status>
</kw>
<msg timestamp="20201028 01:45:07.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:45:07.996" starttime="20201028 01:44:30.816"></status>
</kw>
<msg timestamp="20201028 01:45:07.997" level="INFO">${output} = 2020-10-28 01:44:32 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-28 01:44:32 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201028 01:45:07.997" starttime="20201028 01:44:30.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201028 01:45:07.997" starttime="20201028 01:45:07.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 01:45:07.998" starttime="20201028 01:45:07.997"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 01:45:07.998" critical="yes" starttime="20201028 01:44:30.786"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201028 01:45:07.998" starttime="20201028 01:43:52.123"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:42:24.607" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:42:24.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:42:24.611" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 01:42:24.612" starttime="20201028 01:42:24.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:42:24.613" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 01:42:24.613" starttime="20201028 01:42:24.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:42:24.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:42:24.613" starttime="20201028 01:42:24.613"></status>
</kw>
<status status="PASS" endtime="20201028 01:42:24.613" starttime="20201028 01:42:24.602"></status>
</kw>
<msg timestamp="20201028 01:42:24.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:42:24.614" starttime="20201028 01:42:24.601"></status>
</kw>
<msg timestamp="20201028 01:42:24.614" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 01:42:24.614" starttime="20201028 01:42:24.601"></status>
</kw>
<msg timestamp="20201028 01:42:24.614" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 01:42:24.614" starttime="20201028 01:42:24.601"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:42:24.617" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:42:24.617" starttime="20201028 01:42:24.617"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:42:24.618" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:42:24.618" starttime="20201028 01:42:24.617"></status>
</kw>
<status status="PASS" endtime="20201028 01:42:24.618" starttime="20201028 01:42:24.616"></status>
</kw>
<msg timestamp="20201028 01:42:24.618" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:42:24.618" starttime="20201028 01:42:24.616"></status>
</kw>
<status status="PASS" endtime="20201028 01:42:24.618" starttime="20201028 01:42:24.615"></status>
</kw>
<msg timestamp="20201028 01:42:24.618" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 01:42:24.618" starttime="20201028 01:42:24.615"></status>
</kw>
<msg timestamp="20201028 01:42:24.619" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 01:42:24.619" starttime="20201028 01:42:24.614"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:42:24.622" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:43:00.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:43:00.906" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 01:42:26 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:42:26 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201028 01:43:00.906" starttime="20201028 01:42:24.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:43:00.907" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-28 01:42:26 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:42:26 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 01:42:26 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-28 01:42:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 01:42:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B1E5ECA20504-&gt;4ab30cb0-b01a-4cdc-84c5-a9a38a8b972a
2020-10-28 01:42:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-28 01:42:27 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-28 01:42:28 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-28 01:42:28 INFO  JobSubmitter:198 - number of splits:3
2020-10-28 01:42:28 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603849269264_0001
2020-10-28 01:42:28 INFO  YarnClientImpl:273 - Submitted application application_1603849269264_0001
2020-10-28 01:42:28 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603849269264_0001/
2020-10-28 01:42:28 INFO  Job:1339 - Running job: job_1603849269264_0001
2020-10-28 01:42:38 INFO  Job:1360 - Job job_1603849269264_0001 running in uber mode : false
2020-10-28 01:42:38 INFO  Job:1367 -  map 0% reduce 0%
2020-10-28 01:42:44 INFO  Job:1367 -  map 33% reduce 0%
2020-10-28 01:42:49 INFO  Job:1367 -  map 67% reduce 0%
2020-10-28 01:42:54 INFO  Job:1367 -  map 100% reduce 0%
2020-10-28 01:43:00 INFO  Job:1367 -  map 100% reduce 100%
2020-10-28 01:43:00 INFO  Job:1378 - Job job_1603849269264_0001 completed successfully
2020-10-28 01:43:00 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615457
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38068
		Total time spent by all reduces in occupied slots (ms)=18672
		Total time spent by all map tasks (ms)=9517
		Total time spent by all reduce tasks (ms)=4668
		Total vcore-milliseconds taken by all map tasks=9517
		Total vcore-milliseconds taken by all reduce tasks=4668
		Total megabyte-milliseconds taken by all map tasks=38981632
		Total megabyte-milliseconds taken by all reduce tasks=19120128
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=586
		CPU time spent (ms)=6660
		Physical memory (bytes) snapshot=1136521216
		Virtual memory (bytes) snapshot=16058130432
		Total committed heap usage (bytes)=1049624576
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.551 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201028 01:43:00.908" starttime="20201028 01:43:00.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:43:00.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:43:00.908" starttime="20201028 01:43:00.908"></status>
</kw>
<status status="PASS" endtime="20201028 01:43:00.908" starttime="20201028 01:42:24.619"></status>
</kw>
<msg timestamp="20201028 01:43:00.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:43:00.909" starttime="20201028 01:42:24.619"></status>
</kw>
<msg timestamp="20201028 01:43:00.909" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 01:42:26 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:42:26 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201028 01:43:00.909" starttime="20201028 01:42:24.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 01:43:00.910" starttime="20201028 01:43:00.909"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 01:43:00.910" critical="yes" starttime="20201028 01:42:24.600"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:43:00.914" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:43:00.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:43:00.920" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 01:43:00.920" starttime="20201028 01:43:00.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:43:00.921" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 01:43:00.921" starttime="20201028 01:43:00.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:43:00.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:43:00.922" starttime="20201028 01:43:00.921"></status>
</kw>
<status status="PASS" endtime="20201028 01:43:00.922" starttime="20201028 01:43:00.912"></status>
</kw>
<msg timestamp="20201028 01:43:00.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:43:00.922" starttime="20201028 01:43:00.912"></status>
</kw>
<msg timestamp="20201028 01:43:00.922" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 01:43:00.922" starttime="20201028 01:43:00.911"></status>
</kw>
<msg timestamp="20201028 01:43:00.923" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201028 01:43:00.923" starttime="20201028 01:43:00.911"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 01:43:00.923" level="INFO">${random} = 61</msg>
<status status="PASS" endtime="20201028 01:43:00.923" starttime="20201028 01:43:00.923"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:43:00.926" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:43:00.926" starttime="20201028 01:43:00.926"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:43:00.927" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:43:00.927" starttime="20201028 01:43:00.926"></status>
</kw>
<status status="PASS" endtime="20201028 01:43:00.927" starttime="20201028 01:43:00.926"></status>
</kw>
<msg timestamp="20201028 01:43:00.927" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:43:00.927" starttime="20201028 01:43:00.925"></status>
</kw>
<status status="PASS" endtime="20201028 01:43:00.927" starttime="20201028 01:43:00.924"></status>
</kw>
<msg timestamp="20201028 01:43:00.927" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 01:43:00.927" starttime="20201028 01:43:00.924"></status>
</kw>
<msg timestamp="20201028 01:43:00.928" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 01:43:00.928" starttime="20201028 01:43:00.923"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:43:00.930" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:43:00.930" starttime="20201028 01:43:00.930"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:43:00.931" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:43:00.931" starttime="20201028 01:43:00.930"></status>
</kw>
<status status="PASS" endtime="20201028 01:43:00.931" starttime="20201028 01:43:00.930"></status>
</kw>
<msg timestamp="20201028 01:43:00.931" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:43:00.931" starttime="20201028 01:43:00.929"></status>
</kw>
<status status="PASS" endtime="20201028 01:43:00.931" starttime="20201028 01:43:00.929"></status>
</kw>
<msg timestamp="20201028 01:43:00.931" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201028 01:43:00.931" starttime="20201028 01:43:00.928"></status>
</kw>
<msg timestamp="20201028 01:43:00.932" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201028 01:43:00.932" starttime="20201028 01:43:00.928"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:43:00.934" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:43:00.934" starttime="20201028 01:43:00.934"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:43:00.935" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:43:00.935" starttime="20201028 01:43:00.934"></status>
</kw>
<status status="PASS" endtime="20201028 01:43:00.935" starttime="20201028 01:43:00.933"></status>
</kw>
<msg timestamp="20201028 01:43:00.935" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:43:00.935" starttime="20201028 01:43:00.933"></status>
</kw>
<status status="PASS" endtime="20201028 01:43:00.935" starttime="20201028 01:43:00.933"></status>
</kw>
<msg timestamp="20201028 01:43:00.935" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-61.txt</msg>
<status status="PASS" endtime="20201028 01:43:00.935" starttime="20201028 01:43:00.932"></status>
</kw>
<msg timestamp="20201028 01:43:00.936" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-61.txt</msg>
<status status="PASS" endtime="20201028 01:43:00.936" starttime="20201028 01:43:00.932"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:43:00.939" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-61.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:43:37.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:43:37.507" level="INFO">${output} = 2020-10-28 01:43:02 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-28 01:43:02 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201028 01:43:37.507" starttime="20201028 01:43:00.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:43:37.509" level="INFO">2020-10-28 01:43:02 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-28 01:43:02 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-28 01:43:03 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:43:03 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-28 01:43:03 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-28 01:43:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 01:43:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-139FC4BB938D-&gt;4ab30cb0-b01a-4cdc-84c5-a9a38a8b972a
2020-10-28 01:43:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 01:43:04 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-28 01:43:04 INFO  JobSubmitter:198 - number of splits:3
2020-10-28 01:43:04 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603849269264_0002
2020-10-28 01:43:04 INFO  YarnClientImpl:273 - Submitted application application_1603849269264_0002
2020-10-28 01:43:04 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603849269264_0002/
2020-10-28 01:43:04 INFO  Job:1339 - Running job: job_1603849269264_0002
2020-10-28 01:43:13 INFO  Job:1360 - Job job_1603849269264_0002 running in uber mode : false
2020-10-28 01:43:13 INFO  Job:1367 -  map 0% reduce 0%
2020-10-28 01:43:19 INFO  Job:1367 -  map 33% reduce 0%
2020-10-28 01:43:24 INFO  Job:1367 -  map 67% reduce 0%
2020-10-28 01:43:30 INFO  Job:1367 -  map 100% reduce 0%
2020-10-28 01:43:34 INFO  Job:1367 -  map 100% reduce 100%
2020-10-28 01:43:37 INFO  Job:1378 - Job job_1603849269264_0002 completed successfully
2020-10-28 01:43:37 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39836
		Total time spent by all reduces in occupied slots (ms)=14832
		Total time spent by all map tasks (ms)=9959
		Total time spent by all reduce tasks (ms)=3708
		Total vcore-milliseconds taken by all map tasks=9959
		Total vcore-milliseconds taken by all reduce tasks=3708
		Total megabyte-milliseconds taken by all map tasks=40792064
		Total megabyte-milliseconds taken by all reduce tasks=15187968
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=592
		CPU time spent (ms)=7320
		Physical memory (bytes) snapshot=1142108160
		Virtual memory (bytes) snapshot=16061304832
		Total committed heap usage (bytes)=1053294592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201028 01:43:37.509" starttime="20201028 01:43:37.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:43:37.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:43:37.509" starttime="20201028 01:43:37.509"></status>
</kw>
<status status="PASS" endtime="20201028 01:43:37.510" starttime="20201028 01:43:00.936"></status>
</kw>
<msg timestamp="20201028 01:43:37.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:43:37.510" starttime="20201028 01:43:00.936"></status>
</kw>
<msg timestamp="20201028 01:43:37.510" level="INFO">${output} = 2020-10-28 01:43:02 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-28 01:43:02 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201028 01:43:37.510" starttime="20201028 01:43:00.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201028 01:43:37.511" starttime="20201028 01:43:37.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 01:43:37.511" starttime="20201028 01:43:37.511"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 01:43:37.512" critical="yes" starttime="20201028 01:43:00.910"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201028 01:43:37.512" starttime="20201028 01:42:24.557"></status>
</suite>
<status status="PASS" elapsedtime="187047" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:46:46.798" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:46:48.893" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 01:46:48.894" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201028 01:46:48.894" starttime="20201028 01:46:46.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:46:48.895" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201028 01:46:48.895" starttime="20201028 01:46:48.894"></status>
</kw>
<msg timestamp="20201028 01:46:48.895" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201028 01:46:48.895" starttime="20201028 01:46:46.794"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:46:48.900" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:46:51.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:46:51.043" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:46:51.043" starttime="20201028 01:46:48.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:46:51.044" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:46:51.044" starttime="20201028 01:46:51.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:46:51.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:46:51.045" starttime="20201028 01:46:51.044"></status>
</kw>
<status status="PASS" endtime="20201028 01:46:51.045" starttime="20201028 01:46:48.897"></status>
</kw>
<msg timestamp="20201028 01:46:51.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:46:51.045" starttime="20201028 01:46:48.897"></status>
</kw>
<msg timestamp="20201028 01:46:51.046" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201028 01:46:51.046" starttime="20201028 01:46:48.896"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201028 01:46:51.046" starttime="20201028 01:46:51.046"></status>
</kw>
<status status="PASS" endtime="20201028 01:46:51.047" starttime="20201028 01:46:48.896"></status>
</kw>
<status status="PASS" endtime="20201028 01:46:51.047" starttime="20201028 01:46:48.895"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:46:51.052" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:46:52.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:46:52.944" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:46:52.944" starttime="20201028 01:46:51.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:46:52.945" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:46:52.945" starttime="20201028 01:46:52.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:46:52.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:46:52.945" starttime="20201028 01:46:52.945"></status>
</kw>
<status status="PASS" endtime="20201028 01:46:52.946" starttime="20201028 01:46:51.048"></status>
</kw>
<msg timestamp="20201028 01:46:52.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:46:52.946" starttime="20201028 01:46:51.048"></status>
</kw>
<status status="PASS" endtime="20201028 01:46:52.946" starttime="20201028 01:46:51.048"></status>
</kw>
<status status="PASS" endtime="20201028 01:46:52.946" starttime="20201028 01:46:51.047"></status>
</kw>
<status status="PASS" endtime="20201028 01:46:52.946" starttime="20201028 01:46:51.047"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201028 01:46:52.947" starttime="20201028 01:46:52.947"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:46:52.951" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:46:55.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:46:55.023" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T01:46:52.910Z",
  "modificat...</msg>
<status status="PASS" endtime="20201028 01:46:55.023" starttime="20201028 01:46:52.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:46:55.024" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T01:46:52.910Z",
  "modificationTime" : "2020-10-28T01:46:52.910Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201028 01:46:55.024" starttime="20201028 01:46:55.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:46:55.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:46:55.025" starttime="20201028 01:46:55.024"></status>
</kw>
<status status="PASS" endtime="20201028 01:46:55.025" starttime="20201028 01:46:52.948"></status>
</kw>
<msg timestamp="20201028 01:46:55.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:46:55.025" starttime="20201028 01:46:52.948"></status>
</kw>
<msg timestamp="20201028 01:46:55.026" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T01:46:52.910Z",
  "modificat...</msg>
<status status="PASS" endtime="20201028 01:46:55.026" starttime="20201028 01:46:52.947"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201028 01:46:55.026" starttime="20201028 01:46:55.026"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:46:55.030" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:46:55.030" starttime="20201028 01:46:55.030"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:46:55.031" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:46:55.031" starttime="20201028 01:46:55.030"></status>
</kw>
<status status="PASS" endtime="20201028 01:46:55.031" starttime="20201028 01:46:55.029"></status>
</kw>
<msg timestamp="20201028 01:46:55.031" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:46:55.031" starttime="20201028 01:46:55.029"></status>
</kw>
<status status="PASS" endtime="20201028 01:46:55.031" starttime="20201028 01:46:55.028"></status>
</kw>
<msg timestamp="20201028 01:46:55.032" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201028 01:46:55.032" starttime="20201028 01:46:55.027"></status>
</kw>
<msg timestamp="20201028 01:46:55.032" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201028 01:46:55.032" starttime="20201028 01:46:55.027"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:46:55.035" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:46:57.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:46:57.321" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:46:57.321" starttime="20201028 01:46:55.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:46:57.322" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:46:57.322" starttime="20201028 01:46:57.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:46:57.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:46:57.323" starttime="20201028 01:46:57.323"></status>
</kw>
<status status="PASS" endtime="20201028 01:46:57.323" starttime="20201028 01:46:55.033"></status>
</kw>
<msg timestamp="20201028 01:46:57.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:46:57.324" starttime="20201028 01:46:55.032"></status>
</kw>
<status status="PASS" endtime="20201028 01:46:57.324" starttime="20201028 01:46:55.032"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:46:57.328" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:47:02.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:47:02.616" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:47:02.616" starttime="20201028 01:46:57.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:47:02.617" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:47:02.618" starttime="20201028 01:47:02.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:47:02.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:47:02.618" starttime="20201028 01:47:02.618"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:02.619" starttime="20201028 01:46:57.325"></status>
</kw>
<msg timestamp="20201028 01:47:02.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:47:02.619" starttime="20201028 01:46:57.325"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:02.619" starttime="20201028 01:46:57.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:47:02.623" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:47:06.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:47:06.681" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:47:06.681" starttime="20201028 01:47:02.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:47:06.682" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:47:06.682" starttime="20201028 01:47:06.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:47:06.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:47:06.683" starttime="20201028 01:47:06.682"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:06.683" starttime="20201028 01:47:02.620"></status>
</kw>
<msg timestamp="20201028 01:47:06.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:47:06.683" starttime="20201028 01:47:02.620"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:06.683" starttime="20201028 01:47:02.619"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:47:06.688" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:47:10.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:47:10.341" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:47:10.341" starttime="20201028 01:47:06.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:47:10.342" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:47:10.342" starttime="20201028 01:47:10.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:47:10.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:47:10.343" starttime="20201028 01:47:10.342"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:10.343" starttime="20201028 01:47:06.684"></status>
</kw>
<msg timestamp="20201028 01:47:10.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:47:10.343" starttime="20201028 01:47:06.684"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:10.344" starttime="20201028 01:47:06.683"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 01:47:10.344" critical="yes" starttime="20201028 01:46:46.793"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:47:10.349" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:47:10.349" starttime="20201028 01:47:10.348"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:47:10.349" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:47:10.349" starttime="20201028 01:47:10.349"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:10.349" starttime="20201028 01:47:10.348"></status>
</kw>
<msg timestamp="20201028 01:47:10.349" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:47:10.350" starttime="20201028 01:47:10.347"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:10.350" starttime="20201028 01:47:10.347"></status>
</kw>
<msg timestamp="20201028 01:47:10.350" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201028 01:47:10.350" starttime="20201028 01:47:10.346"></status>
</kw>
<msg timestamp="20201028 01:47:10.350" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201028 01:47:10.350" starttime="20201028 01:47:10.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:47:10.354" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:47:12.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:47:12.243" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:47:12.243" starttime="20201028 01:47:10.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:47:12.244" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:47:12.244" starttime="20201028 01:47:12.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:47:12.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:47:12.245" starttime="20201028 01:47:12.245"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:12.245" starttime="20201028 01:47:10.351"></status>
</kw>
<msg timestamp="20201028 01:47:12.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:47:12.246" starttime="20201028 01:47:10.351"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:12.246" starttime="20201028 01:47:10.350"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:47:12.250" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:47:14.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:47:14.288" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:47:14.288" starttime="20201028 01:47:12.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:47:14.289" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:47:14.289" starttime="20201028 01:47:14.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:47:14.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:47:14.290" starttime="20201028 01:47:14.289"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:14.290" starttime="20201028 01:47:12.247"></status>
</kw>
<msg timestamp="20201028 01:47:14.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:47:14.290" starttime="20201028 01:47:12.247"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:14.291" starttime="20201028 01:47:12.246"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 01:47:14.291" critical="yes" starttime="20201028 01:47:10.345"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201028 01:47:14.292" starttime="20201028 01:46:46.740"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 01:48:48.540" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 01:48:48.540" starttime="20201028 01:48:48.539"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:48:48.540" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 01:48:48.540" starttime="20201028 01:48:48.540"></status>
</kw>
<status status="PASS" endtime="20201028 01:48:48.540" starttime="20201028 01:48:48.539"></status>
</kw>
<msg timestamp="20201028 01:48:48.540" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 01:48:48.540" starttime="20201028 01:48:48.539"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201028 01:48:48.541" starttime="20201028 01:48:48.541"></status>
</kw>
<msg timestamp="20201028 01:48:48.541" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201028 01:48:48.541" starttime="20201028 01:48:48.541"></status>
</kw>
<status status="PASS" endtime="20201028 01:48:48.542" starttime="20201028 01:48:48.538"></status>
</kw>
<msg timestamp="20201028 01:48:48.542" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 01:48:48.542" starttime="20201028 01:48:48.538"></status>
</kw>
<msg timestamp="20201028 01:48:48.542" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 01:48:48.542" starttime="20201028 01:48:48.537"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 01:48:48.542" level="INFO">${random} = 13542</msg>
<status status="PASS" endtime="20201028 01:48:48.542" starttime="20201028 01:48:48.542"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:48:48.548" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-13542 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:48:51.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:48:51.833" level="INFO">${output} = 2020-10-28 01:48:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 01:48:51.833" starttime="20201028 01:48:48.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:48:51.834" level="INFO">2020-10-28 01:48:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:50 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-28 01:48:50 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:48:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 01:48:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 01:48:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 01:48:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7B90F1BB590F-&gt;66a36a2b-1d27-41bb-9d01-37e3db6af042
2020-10-28 01:48:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 01:48:51 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201028 01:48:51.834" starttime="20201028 01:48:51.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:48:51.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:48:51.835" starttime="20201028 01:48:51.834"></status>
</kw>
<status status="PASS" endtime="20201028 01:48:51.835" starttime="20201028 01:48:48.543"></status>
</kw>
<msg timestamp="20201028 01:48:51.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:48:51.835" starttime="20201028 01:48:48.543"></status>
</kw>
<msg timestamp="20201028 01:48:51.835" level="INFO">${result} = 2020-10-28 01:48:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 01:48:51.836" starttime="20201028 01:48:48.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:48:51.839" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:48:53.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:48:53.475" level="INFO">${output} = 2020-10-28 01:48:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:53 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 01:48:53.475" starttime="20201028 01:48:51.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:48:53.476" level="INFO">2020-10-28 01:48:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:53 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:46 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-28 01:48 ofs://om/volume1/bucket1/ozone-13542
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-28 01:47 ofs://om/volume1/bucket1/ozone-42152
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:47 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:48 ofs://om/volume1/bucket1/wordcount-33.txt
2020-10-28 01:48:53 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201028 01:48:53.476" starttime="20201028 01:48:53.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:48:53.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:48:53.477" starttime="20201028 01:48:53.476"></status>
</kw>
<status status="PASS" endtime="20201028 01:48:53.477" starttime="20201028 01:48:51.836"></status>
</kw>
<msg timestamp="20201028 01:48:53.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:48:53.477" starttime="20201028 01:48:51.836"></status>
</kw>
<msg timestamp="20201028 01:48:53.477" level="INFO">${result} = 2020-10-28 01:48:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:53 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 01:48:53.477" starttime="20201028 01:48:51.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201028 01:48:53.478" starttime="20201028 01:48:53.477"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 01:48:53.478" critical="yes" starttime="20201028 01:48:48.536"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201028 01:48:53.479" starttime="20201028 01:48:48.492"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:47:18.862" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:47:18.862" starttime="20201028 01:47:18.862"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:47:18.863" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:47:18.863" starttime="20201028 01:47:18.862"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:18.863" starttime="20201028 01:47:18.861"></status>
</kw>
<msg timestamp="20201028 01:47:18.863" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:47:18.863" starttime="20201028 01:47:18.861"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:18.863" starttime="20201028 01:47:18.861"></status>
</kw>
<msg timestamp="20201028 01:47:18.863" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 01:47:18.863" starttime="20201028 01:47:18.860"></status>
</kw>
<msg timestamp="20201028 01:47:18.863" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 01:47:18.863" starttime="20201028 01:47:18.859"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 01:47:18.864" level="INFO">${random} = 42152</msg>
<status status="PASS" endtime="20201028 01:47:18.864" starttime="20201028 01:47:18.863"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:47:18.870" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-42152 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:47:22.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:47:22.287" level="INFO">${output} = 2020-10-28 01:47:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:20 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 01:47:22.287" starttime="20201028 01:47:18.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:47:22.288" level="INFO">2020-10-28 01:47:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:20 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-28 01:47:20 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:47:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 01:47:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 01:47:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 01:47:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-396DB083FBA2-&gt;66a36a2b-1d27-41bb-9d01-37e3db6af042
2020-10-28 01:47:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 01:47:21 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201028 01:47:22.288" starttime="20201028 01:47:22.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:47:22.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:47:22.289" starttime="20201028 01:47:22.288"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:22.289" starttime="20201028 01:47:18.865"></status>
</kw>
<msg timestamp="20201028 01:47:22.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:47:22.289" starttime="20201028 01:47:18.864"></status>
</kw>
<msg timestamp="20201028 01:47:22.289" level="INFO">${result} = 2020-10-28 01:47:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:20 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 01:47:22.289" starttime="20201028 01:47:18.864"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:47:22.293" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:47:23.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:47:23.882" level="INFO">${output} = 2020-10-28 01:47:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:23 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 01:47:23.882" starttime="20201028 01:47:22.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:47:23.883" level="INFO">2020-10-28 01:47:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:23 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:46 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-28 01:47 o3fs://bucket1.volume1.om/ozone-42152
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:47 o3fs://bucket1.volume1.om/user
2020-10-28 01:47:23 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201028 01:47:23.883" starttime="20201028 01:47:23.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:47:23.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:47:23.884" starttime="20201028 01:47:23.884"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:23.884" starttime="20201028 01:47:22.290"></status>
</kw>
<msg timestamp="20201028 01:47:23.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:47:23.884" starttime="20201028 01:47:22.290"></status>
</kw>
<msg timestamp="20201028 01:47:23.885" level="INFO">${result} = 2020-10-28 01:47:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:23 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 01:47:23.885" starttime="20201028 01:47:22.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201028 01:47:23.885" starttime="20201028 01:47:23.885"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 01:47:23.885" critical="yes" starttime="20201028 01:47:18.858"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201028 01:47:23.886" starttime="20201028 01:47:18.813"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:48:57.839" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:48:57.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:48:57.844" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 01:48:57.844" starttime="20201028 01:48:57.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:48:57.845" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 01:48:57.845" starttime="20201028 01:48:57.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:48:57.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:48:57.846" starttime="20201028 01:48:57.845"></status>
</kw>
<status status="PASS" endtime="20201028 01:48:57.846" starttime="20201028 01:48:57.835"></status>
</kw>
<msg timestamp="20201028 01:48:57.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:48:57.846" starttime="20201028 01:48:57.835"></status>
</kw>
<msg timestamp="20201028 01:48:57.846" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 01:48:57.846" starttime="20201028 01:48:57.835"></status>
</kw>
<msg timestamp="20201028 01:48:57.846" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 01:48:57.846" starttime="20201028 01:48:57.834"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 01:48:57.848" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 01:48:57.848" starttime="20201028 01:48:57.848"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:48:57.849" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 01:48:57.849" starttime="20201028 01:48:57.849"></status>
</kw>
<status status="PASS" endtime="20201028 01:48:57.849" starttime="20201028 01:48:57.848"></status>
</kw>
<msg timestamp="20201028 01:48:57.849" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 01:48:57.849" starttime="20201028 01:48:57.848"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201028 01:48:57.850" starttime="20201028 01:48:57.850"></status>
</kw>
<msg timestamp="20201028 01:48:57.850" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201028 01:48:57.850" starttime="20201028 01:48:57.849"></status>
</kw>
<status status="PASS" endtime="20201028 01:48:57.851" starttime="20201028 01:48:57.847"></status>
</kw>
<msg timestamp="20201028 01:48:57.851" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 01:48:57.851" starttime="20201028 01:48:57.847"></status>
</kw>
<msg timestamp="20201028 01:48:57.851" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 01:48:57.851" starttime="20201028 01:48:57.846"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:48:57.854" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:49:30.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:49:30.912" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 01:48:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48...</msg>
<status status="PASS" endtime="20201028 01:49:30.912" starttime="20201028 01:48:57.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:49:30.913" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-28 01:48:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:59 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-28 01:48:59 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:48:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 01:48:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 01:48:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 01:48:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CF19C8B8B604-&gt;66a36a2b-1d27-41bb-9d01-37e3db6af042
2020-10-28 01:48:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-28 01:49:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:00 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-28 01:49:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:00 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-28 01:49:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:01 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-28 01:49:01 INFO  JobSubmitter:202 - number of splits:3
2020-10-28 01:49:01 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603849550722_0003
2020-10-28 01:49:01 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-28 01:49:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:01 INFO  Configuration:2752 - resource-types.xml not found
2020-10-28 01:49:01 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-28 01:49:01 INFO  YarnClientImpl:324 - Submitted application application_1603849550722_0003
2020-10-28 01:49:01 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603849550722_0003/
2020-10-28 01:49:01 INFO  Job:1619 - Running job: job_1603849550722_0003
2020-10-28 01:49:08 INFO  Job:1640 - Job job_1603849550722_0003 running in uber mode : false
2020-10-28 01:49:08 INFO  Job:1647 -  map 0% reduce 0%
2020-10-28 01:49:15 INFO  Job:1647 -  map 33% reduce 0%
2020-10-28 01:49:20 INFO  Job:1647 -  map 67% reduce 0%
2020-10-28 01:49:25 INFO  Job:1647 -  map 100% reduce 0%
2020-10-28 01:49:29 INFO  Job:1647 -  map 100% reduce 100%
2020-10-28 01:49:30 INFO  Job:1658 - Job job_1603849550722_0003 completed successfully
2020-10-28 01:49:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021317
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35760
		Total time spent by all reduces in occupied slots (ms)=13576
		Total time spent by all map tasks (ms)=8940
		Total time spent by all reduce tasks (ms)=3394
		Total vcore-milliseconds taken by all map tasks=8940
		Total vcore-milliseconds taken by all reduce tasks=3394
		Total megabyte-milliseconds taken by all map tasks=36618240
		Total megabyte-milliseconds taken by all reduce tasks=13901824
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=568
		CPU time spent (ms)=6170
		Physical memory (bytes) snapshot=1171832832
		Virtual memory (bytes) snapshot=16062861312
		Total committed heap usage (bytes)=1055391744
		Peak Map Physical memory (bytes)=300777472
		Peak Map Virtual memory (bytes)=4013748224
		Peak Reduce Physical memory (bytes)=291913728
		Peak Reduce Virtual memory (bytes)=4028207104
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.733 seconds
2020-10-28 01:49:30 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-28 01:49:30 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201028 01:49:30.913" starttime="20201028 01:49:30.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:49:30.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:49:30.914" starttime="20201028 01:49:30.913"></status>
</kw>
<status status="PASS" endtime="20201028 01:49:30.914" starttime="20201028 01:48:57.851"></status>
</kw>
<msg timestamp="20201028 01:49:30.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:49:30.914" starttime="20201028 01:48:57.851"></status>
</kw>
<msg timestamp="20201028 01:49:30.915" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 01:48:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48...</msg>
<status status="PASS" endtime="20201028 01:49:30.915" starttime="20201028 01:48:57.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 01:49:30.915" starttime="20201028 01:49:30.915"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 01:49:30.915" critical="yes" starttime="20201028 01:48:57.834"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:49:30.920" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:49:30.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:49:30.924" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 01:49:30.924" starttime="20201028 01:49:30.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:49:30.925" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 01:49:30.925" starttime="20201028 01:49:30.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:49:30.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:49:30.926" starttime="20201028 01:49:30.925"></status>
</kw>
<status status="PASS" endtime="20201028 01:49:30.926" starttime="20201028 01:49:30.918"></status>
</kw>
<msg timestamp="20201028 01:49:30.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:49:30.926" starttime="20201028 01:49:30.917"></status>
</kw>
<msg timestamp="20201028 01:49:30.926" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 01:49:30.926" starttime="20201028 01:49:30.917"></status>
</kw>
<msg timestamp="20201028 01:49:30.927" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 01:49:30.927" starttime="20201028 01:49:30.917"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 01:49:30.927" level="INFO">${random} = 16</msg>
<status status="PASS" endtime="20201028 01:49:30.927" starttime="20201028 01:49:30.927"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 01:49:30.930" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 01:49:30.930" starttime="20201028 01:49:30.930"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:49:30.931" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 01:49:30.931" starttime="20201028 01:49:30.930"></status>
</kw>
<status status="PASS" endtime="20201028 01:49:30.931" starttime="20201028 01:49:30.929"></status>
</kw>
<msg timestamp="20201028 01:49:30.931" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 01:49:30.931" starttime="20201028 01:49:30.929"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201028 01:49:30.932" starttime="20201028 01:49:30.931"></status>
</kw>
<msg timestamp="20201028 01:49:30.932" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201028 01:49:30.932" starttime="20201028 01:49:30.931"></status>
</kw>
<status status="PASS" endtime="20201028 01:49:30.932" starttime="20201028 01:49:30.928"></status>
</kw>
<msg timestamp="20201028 01:49:30.932" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 01:49:30.932" starttime="20201028 01:49:30.928"></status>
</kw>
<msg timestamp="20201028 01:49:30.932" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 01:49:30.932" starttime="20201028 01:49:30.927"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 01:49:30.935" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 01:49:30.935" starttime="20201028 01:49:30.935"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:49:30.936" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 01:49:30.936" starttime="20201028 01:49:30.935"></status>
</kw>
<status status="PASS" endtime="20201028 01:49:30.936" starttime="20201028 01:49:30.934"></status>
</kw>
<msg timestamp="20201028 01:49:30.936" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 01:49:30.936" starttime="20201028 01:49:30.934"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:49:30.937" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201028 01:49:30.937" starttime="20201028 01:49:30.937"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:49:30.938" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201028 01:49:30.938" starttime="20201028 01:49:30.937"></status>
</kw>
<status status="PASS" endtime="20201028 01:49:30.938" starttime="20201028 01:49:30.936"></status>
</kw>
<msg timestamp="20201028 01:49:30.938" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201028 01:49:30.938" starttime="20201028 01:49:30.936"></status>
</kw>
<status status="PASS" endtime="20201028 01:49:30.938" starttime="20201028 01:49:30.933"></status>
</kw>
<msg timestamp="20201028 01:49:30.938" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201028 01:49:30.938" starttime="20201028 01:49:30.933"></status>
</kw>
<msg timestamp="20201028 01:49:30.938" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201028 01:49:30.938" starttime="20201028 01:49:30.932"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 01:49:30.941" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 01:49:30.941" starttime="20201028 01:49:30.940"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:49:30.941" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 01:49:30.941" starttime="20201028 01:49:30.941"></status>
</kw>
<status status="PASS" endtime="20201028 01:49:30.942" starttime="20201028 01:49:30.940"></status>
</kw>
<msg timestamp="20201028 01:49:30.942" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 01:49:30.942" starttime="20201028 01:49:30.940"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:49:30.943" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201028 01:49:30.943" starttime="20201028 01:49:30.942"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:49:30.943" level="INFO">${result} = /wordcount-16.txt</msg>
<status status="PASS" endtime="20201028 01:49:30.943" starttime="20201028 01:49:30.943"></status>
</kw>
<status status="PASS" endtime="20201028 01:49:30.943" starttime="20201028 01:49:30.942"></status>
</kw>
<msg timestamp="20201028 01:49:30.943" level="INFO">${path_with_leading} = /wordcount-16.txt</msg>
<status status="PASS" endtime="20201028 01:49:30.944" starttime="20201028 01:49:30.942"></status>
</kw>
<status status="PASS" endtime="20201028 01:49:30.944" starttime="20201028 01:49:30.939"></status>
</kw>
<msg timestamp="20201028 01:49:30.944" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-16.txt</msg>
<status status="PASS" endtime="20201028 01:49:30.944" starttime="20201028 01:49:30.939"></status>
</kw>
<msg timestamp="20201028 01:49:30.944" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-16.txt</msg>
<status status="PASS" endtime="20201028 01:49:30.944" starttime="20201028 01:49:30.938"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:49:30.947" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-16.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:50:05.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:50:05.862" level="INFO">${output} = 2020-10-28 01:49:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 01:50:05.862" starttime="20201028 01:49:30.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:50:05.864" level="INFO">2020-10-28 01:49:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:32 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-28 01:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:32 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-28 01:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:33 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-28 01:49:33 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:49:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 01:49:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 01:49:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 01:49:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3DF2DB50BC05-&gt;66a36a2b-1d27-41bb-9d01-37e3db6af042
2020-10-28 01:49:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 01:49:34 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-28 01:49:34 INFO  JobSubmitter:202 - number of splits:3
2020-10-28 01:49:34 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603849550722_0004
2020-10-28 01:49:34 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-28 01:49:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:34 INFO  Configuration:2752 - resource-types.xml not found
2020-10-28 01:49:34 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-28 01:49:34 INFO  YarnClientImpl:324 - Submitted application application_1603849550722_0004
2020-10-28 01:49:34 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603849550722_0004/
2020-10-28 01:49:34 INFO  Job:1619 - Running job: job_1603849550722_0004
2020-10-28 01:49:43 INFO  Job:1640 - Job job_1603849550722_0004 running in uber mode : false
2020-10-28 01:49:43 INFO  Job:1647 -  map 0% reduce 0%
2020-10-28 01:49:49 INFO  Job:1647 -  map 33% reduce 0%
2020-10-28 01:49:55 INFO  Job:1647 -  map 67% reduce 0%
2020-10-28 01:50:00 INFO  Job:1647 -  map 100% reduce 0%
2020-10-28 01:50:04 INFO  Job:1647 -  map 100% reduce 100%
2020-10-28 01:50:05 INFO  Job:1658 - Job job_1603849550722_0004 completed successfully
2020-10-28 01:50:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:50:05 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38852
		Total time spent by all reduces in occupied slots (ms)=14072
		Total time spent by all map tasks (ms)=9713
		Total time spent by all reduce tasks (ms)=3518
		Total vcore-milliseconds taken by all map tasks=9713
		Total vcore-milliseconds taken by all reduce tasks=3518
		Total megabyte-milliseconds taken by all map tasks=39784448
		Total megabyte-milliseconds taken by all reduce tasks=14409728
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=589
		CPU time spent (ms)=6840
		Physical memory (bytes) snapshot=1151266816
		Virtual memory (bytes) snapshot=16054546432
		Total committed heap usage (bytes)=1063780352
		Peak Map Physical memory (bytes)=297193472
		Peak Map Virtual memory (bytes)=4014542848
		Peak Reduce Physical memory (bytes)=292925440
		Peak Reduce Virtual memory (bytes)=4031897600
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-28 01:50:05 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201028 01:50:05.864" starttime="20201028 01:50:05.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:50:05.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:50:05.864" starttime="20201028 01:50:05.864"></status>
</kw>
<status status="PASS" endtime="20201028 01:50:05.865" starttime="20201028 01:49:30.945"></status>
</kw>
<msg timestamp="20201028 01:50:05.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:50:05.865" starttime="20201028 01:49:30.945"></status>
</kw>
<msg timestamp="20201028 01:50:05.865" level="INFO">${output} = 2020-10-28 01:49:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:49:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 01:50:05.865" starttime="20201028 01:49:30.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201028 01:50:05.866" starttime="20201028 01:50:05.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 01:50:05.866" starttime="20201028 01:50:05.866"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 01:50:05.867" critical="yes" starttime="20201028 01:49:30.916"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201028 01:50:05.868" starttime="20201028 01:48:57.793"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:47:28.380" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:47:28.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:47:28.384" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 01:47:28.384" starttime="20201028 01:47:28.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:47:28.385" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 01:47:28.385" starttime="20201028 01:47:28.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:47:28.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:47:28.386" starttime="20201028 01:47:28.385"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:28.386" starttime="20201028 01:47:28.375"></status>
</kw>
<msg timestamp="20201028 01:47:28.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:47:28.386" starttime="20201028 01:47:28.375"></status>
</kw>
<msg timestamp="20201028 01:47:28.386" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 01:47:28.386" starttime="20201028 01:47:28.375"></status>
</kw>
<msg timestamp="20201028 01:47:28.386" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 01:47:28.386" starttime="20201028 01:47:28.375"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:47:28.389" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:47:28.389" starttime="20201028 01:47:28.388"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:47:28.389" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:47:28.389" starttime="20201028 01:47:28.389"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:28.389" starttime="20201028 01:47:28.388"></status>
</kw>
<msg timestamp="20201028 01:47:28.390" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:47:28.390" starttime="20201028 01:47:28.388"></status>
</kw>
<status status="PASS" endtime="20201028 01:47:28.390" starttime="20201028 01:47:28.387"></status>
</kw>
<msg timestamp="20201028 01:47:28.390" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 01:47:28.390" starttime="20201028 01:47:28.387"></status>
</kw>
<msg timestamp="20201028 01:47:28.390" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 01:47:28.390" starttime="20201028 01:47:28.386"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:47:28.394" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:48:07.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:48:07.084" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 01:47:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47...</msg>
<status status="PASS" endtime="20201028 01:48:07.084" starttime="20201028 01:47:28.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:48:07.085" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-28 01:47:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:30 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-28 01:47:30 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:47:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 01:47:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 01:47:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 01:47:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-081BCB93CA53-&gt;66a36a2b-1d27-41bb-9d01-37e3db6af042
2020-10-28 01:47:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-28 01:47:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-28 01:47:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:32 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-28 01:47:32 INFO  JobSubmitter:202 - number of splits:3
2020-10-28 01:47:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603849550722_0001
2020-10-28 01:47:32 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-28 01:47:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:32 INFO  Configuration:2752 - resource-types.xml not found
2020-10-28 01:47:32 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-28 01:47:33 INFO  YarnClientImpl:324 - Submitted application application_1603849550722_0001
2020-10-28 01:47:33 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603849550722_0001/
2020-10-28 01:47:33 INFO  Job:1619 - Running job: job_1603849550722_0001
2020-10-28 01:47:42 INFO  Job:1640 - Job job_1603849550722_0001 running in uber mode : false
2020-10-28 01:47:42 INFO  Job:1647 -  map 0% reduce 0%
2020-10-28 01:47:49 INFO  Job:1647 -  map 33% reduce 0%
2020-10-28 01:47:53 INFO  Job:1647 -  map 67% reduce 0%
2020-10-28 01:47:58 INFO  Job:1647 -  map 100% reduce 0%
2020-10-28 01:48:03 INFO  Job:1647 -  map 100% reduce 100%
2020-10-28 01:48:06 INFO  Job:1658 - Job job_1603849550722_0001 completed successfully
2020-10-28 01:48:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:06 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021529
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38368
		Total time spent by all reduces in occupied slots (ms)=14544
		Total time spent by all map tasks (ms)=9592
		Total time spent by all reduce tasks (ms)=3636
		Total vcore-milliseconds taken by all map tasks=9592
		Total vcore-milliseconds taken by all reduce tasks=3636
		Total megabyte-milliseconds taken by all map tasks=39288832
		Total megabyte-milliseconds taken by all reduce tasks=14893056
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=603
		CPU time spent (ms)=6050
		Physical memory (bytes) snapshot=1148469248
		Virtual memory (bytes) snapshot=16057524224
		Total committed heap usage (bytes)=1061683200
		Peak Map Physical memory (bytes)=291934208
		Peak Map Virtual memory (bytes)=4014133248
		Peak Reduce Physical memory (bytes)=278081536
		Peak Reduce Virtual memory (bytes)=4021755904
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.086 seconds
2020-10-28 01:48:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:06 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-28 01:48:06 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201028 01:48:07.085" starttime="20201028 01:48:07.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:48:07.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:48:07.086" starttime="20201028 01:48:07.085"></status>
</kw>
<status status="PASS" endtime="20201028 01:48:07.086" starttime="20201028 01:47:28.391"></status>
</kw>
<msg timestamp="20201028 01:48:07.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:48:07.086" starttime="20201028 01:47:28.390"></status>
</kw>
<msg timestamp="20201028 01:48:07.087" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 01:47:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:47...</msg>
<status status="PASS" endtime="20201028 01:48:07.087" starttime="20201028 01:47:28.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 01:48:07.087" starttime="20201028 01:48:07.087"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 01:48:07.087" critical="yes" starttime="20201028 01:47:28.374"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:48:07.092" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:48:07.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:48:07.099" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 01:48:07.099" starttime="20201028 01:48:07.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:48:07.099" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 01:48:07.100" starttime="20201028 01:48:07.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:48:07.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:48:07.100" starttime="20201028 01:48:07.100"></status>
</kw>
<status status="PASS" endtime="20201028 01:48:07.100" starttime="20201028 01:48:07.090"></status>
</kw>
<msg timestamp="20201028 01:48:07.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:48:07.100" starttime="20201028 01:48:07.090"></status>
</kw>
<msg timestamp="20201028 01:48:07.101" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 01:48:07.101" starttime="20201028 01:48:07.089"></status>
</kw>
<msg timestamp="20201028 01:48:07.101" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201028 01:48:07.101" starttime="20201028 01:48:07.089"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 01:48:07.101" level="INFO">${random} = 33</msg>
<status status="PASS" endtime="20201028 01:48:07.101" starttime="20201028 01:48:07.101"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:48:07.105" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:48:07.105" starttime="20201028 01:48:07.104"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:48:07.105" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:48:07.105" starttime="20201028 01:48:07.105"></status>
</kw>
<status status="PASS" endtime="20201028 01:48:07.106" starttime="20201028 01:48:07.104"></status>
</kw>
<msg timestamp="20201028 01:48:07.106" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:48:07.106" starttime="20201028 01:48:07.104"></status>
</kw>
<status status="PASS" endtime="20201028 01:48:07.106" starttime="20201028 01:48:07.103"></status>
</kw>
<msg timestamp="20201028 01:48:07.106" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 01:48:07.106" starttime="20201028 01:48:07.102"></status>
</kw>
<msg timestamp="20201028 01:48:07.106" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 01:48:07.106" starttime="20201028 01:48:07.101"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:48:07.108" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:48:07.108" starttime="20201028 01:48:07.108"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:48:07.109" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:48:07.109" starttime="20201028 01:48:07.109"></status>
</kw>
<status status="PASS" endtime="20201028 01:48:07.109" starttime="20201028 01:48:07.108"></status>
</kw>
<msg timestamp="20201028 01:48:07.109" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:48:07.109" starttime="20201028 01:48:07.108"></status>
</kw>
<status status="PASS" endtime="20201028 01:48:07.109" starttime="20201028 01:48:07.107"></status>
</kw>
<msg timestamp="20201028 01:48:07.109" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201028 01:48:07.109" starttime="20201028 01:48:07.107"></status>
</kw>
<msg timestamp="20201028 01:48:07.110" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201028 01:48:07.110" starttime="20201028 01:48:07.106"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:48:07.112" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:48:07.112" starttime="20201028 01:48:07.112"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:48:07.112" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:48:07.113" starttime="20201028 01:48:07.112"></status>
</kw>
<status status="PASS" endtime="20201028 01:48:07.113" starttime="20201028 01:48:07.111"></status>
</kw>
<msg timestamp="20201028 01:48:07.113" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:48:07.113" starttime="20201028 01:48:07.111"></status>
</kw>
<status status="PASS" endtime="20201028 01:48:07.113" starttime="20201028 01:48:07.110"></status>
</kw>
<msg timestamp="20201028 01:48:07.113" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-33.txt</msg>
<status status="PASS" endtime="20201028 01:48:07.113" starttime="20201028 01:48:07.110"></status>
</kw>
<msg timestamp="20201028 01:48:07.113" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-33.txt</msg>
<status status="PASS" endtime="20201028 01:48:07.113" starttime="20201028 01:48:07.110"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:48:07.118" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-33.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:48:44.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:48:44.166" level="INFO">${output} = 2020-10-28 01:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:08 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 01:48:44.166" starttime="20201028 01:48:07.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:48:44.167" level="INFO">2020-10-28 01:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-28 01:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:09 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-28 01:48:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:09 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-28 01:48:09 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-28 01:48:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 01:48:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 01:48:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 01:48:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2B8618E399DC-&gt;66a36a2b-1d27-41bb-9d01-37e3db6af042
2020-10-28 01:48:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 01:48:10 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-28 01:48:10 INFO  JobSubmitter:202 - number of splits:3
2020-10-28 01:48:10 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603849550722_0002
2020-10-28 01:48:10 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-28 01:48:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:11 INFO  Configuration:2752 - resource-types.xml not found
2020-10-28 01:48:11 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-28 01:48:11 INFO  YarnClientImpl:324 - Submitted application application_1603849550722_0002
2020-10-28 01:48:11 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603849550722_0002/
2020-10-28 01:48:11 INFO  Job:1619 - Running job: job_1603849550722_0002
2020-10-28 01:48:19 INFO  Job:1640 - Job job_1603849550722_0002 running in uber mode : false
2020-10-28 01:48:19 INFO  Job:1647 -  map 0% reduce 0%
2020-10-28 01:48:26 INFO  Job:1647 -  map 33% reduce 0%
2020-10-28 01:48:31 INFO  Job:1647 -  map 67% reduce 0%
2020-10-28 01:48:36 INFO  Job:1647 -  map 100% reduce 0%
2020-10-28 01:48:40 INFO  Job:1647 -  map 100% reduce 100%
2020-10-28 01:48:43 INFO  Job:1658 - Job job_1603849550722_0002 completed successfully
2020-10-28 01:48:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:43 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38248
		Total time spent by all reduces in occupied slots (ms)=13368
		Total time spent by all map tasks (ms)=9562
		Total time spent by all reduce tasks (ms)=3342
		Total vcore-milliseconds taken by all map tasks=9562
		Total vcore-milliseconds taken by all reduce tasks=3342
		Total megabyte-milliseconds taken by all map tasks=39165952
		Total megabyte-milliseconds taken by all reduce tasks=13688832
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=602
		CPU time spent (ms)=6620
		Physical memory (bytes) snapshot=1177980928
		Virtual memory (bytes) snapshot=16078209024
		Total committed heap usage (bytes)=1061158912
		Peak Map Physical memory (bytes)=297218048
		Peak Map Virtual memory (bytes)=4015337472
		Peak Reduce Physical memory (bytes)=294322176
		Peak Reduce Virtual memory (bytes)=4038246400
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-28 01:48:43 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201028 01:48:44.167" starttime="20201028 01:48:44.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:48:44.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:48:44.168" starttime="20201028 01:48:44.167"></status>
</kw>
<status status="PASS" endtime="20201028 01:48:44.168" starttime="20201028 01:48:07.114"></status>
</kw>
<msg timestamp="20201028 01:48:44.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:48:44.168" starttime="20201028 01:48:07.114"></status>
</kw>
<msg timestamp="20201028 01:48:44.169" level="INFO">${output} = 2020-10-28 01:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-28 01:48:08 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201028 01:48:44.169" starttime="20201028 01:48:07.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201028 01:48:44.169" starttime="20201028 01:48:44.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 01:48:44.169" starttime="20201028 01:48:44.169"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 01:48:44.169" critical="yes" starttime="20201028 01:48:07.088"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201028 01:48:44.170" starttime="20201028 01:47:28.331"></status>
</suite>
<status status="PASS" elapsedtime="181526" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:51:43.959" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:51:47.286" level="INFO">${rc} = 255</msg>
<msg timestamp="20201028 01:51:47.287" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201028 01:51:47.287" starttime="20201028 01:51:43.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:51:47.288" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201028 01:51:47.288" starttime="20201028 01:51:47.287"></status>
</kw>
<msg timestamp="20201028 01:51:47.288" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201028 01:51:47.288" starttime="20201028 01:51:43.954"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:51:47.293" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:51:50.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:51:50.193" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:51:50.193" starttime="20201028 01:51:47.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:51:50.195" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:51:50.195" starttime="20201028 01:51:50.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:51:50.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:51:50.195" starttime="20201028 01:51:50.195"></status>
</kw>
<status status="PASS" endtime="20201028 01:51:50.196" starttime="20201028 01:51:47.290"></status>
</kw>
<msg timestamp="20201028 01:51:50.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:51:50.196" starttime="20201028 01:51:47.289"></status>
</kw>
<msg timestamp="20201028 01:51:50.196" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201028 01:51:50.196" starttime="20201028 01:51:47.289"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201028 01:51:50.197" starttime="20201028 01:51:50.196"></status>
</kw>
<status status="PASS" endtime="20201028 01:51:50.197" starttime="20201028 01:51:47.289"></status>
</kw>
<status status="PASS" endtime="20201028 01:51:50.197" starttime="20201028 01:51:47.288"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:51:50.201" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:51:53.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:51:53.024" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:51:53.024" starttime="20201028 01:51:50.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:51:53.025" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:51:53.025" starttime="20201028 01:51:53.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:51:53.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:51:53.026" starttime="20201028 01:51:53.025"></status>
</kw>
<status status="PASS" endtime="20201028 01:51:53.026" starttime="20201028 01:51:50.199"></status>
</kw>
<msg timestamp="20201028 01:51:53.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:51:53.026" starttime="20201028 01:51:50.198"></status>
</kw>
<status status="PASS" endtime="20201028 01:51:53.027" starttime="20201028 01:51:50.198"></status>
</kw>
<status status="PASS" endtime="20201028 01:51:53.027" starttime="20201028 01:51:50.197"></status>
</kw>
<status status="PASS" endtime="20201028 01:51:53.027" starttime="20201028 01:51:50.197"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201028 01:51:53.027" starttime="20201028 01:51:53.027"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:51:53.031" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:51:56.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:51:56.264" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T01:51:52.689Z",
  "modificat...</msg>
<status status="PASS" endtime="20201028 01:51:56.264" starttime="20201028 01:51:53.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:51:56.265" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T01:51:52.689Z",
  "modificationTime" : "2020-10-28T01:51:52.689Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201028 01:51:56.265" starttime="20201028 01:51:56.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:51:56.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:51:56.266" starttime="20201028 01:51:56.265"></status>
</kw>
<status status="PASS" endtime="20201028 01:51:56.266" starttime="20201028 01:51:53.029"></status>
</kw>
<msg timestamp="20201028 01:51:56.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:51:56.266" starttime="20201028 01:51:53.028"></status>
</kw>
<msg timestamp="20201028 01:51:56.267" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-28T01:51:52.689Z",
  "modificat...</msg>
<status status="PASS" endtime="20201028 01:51:56.267" starttime="20201028 01:51:53.028"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201028 01:51:56.267" starttime="20201028 01:51:56.267"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:51:56.271" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:51:56.271" starttime="20201028 01:51:56.270"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:51:56.271" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:51:56.271" starttime="20201028 01:51:56.271"></status>
</kw>
<status status="PASS" endtime="20201028 01:51:56.272" starttime="20201028 01:51:56.270"></status>
</kw>
<msg timestamp="20201028 01:51:56.272" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:51:56.272" starttime="20201028 01:51:56.269"></status>
</kw>
<status status="PASS" endtime="20201028 01:51:56.272" starttime="20201028 01:51:56.269"></status>
</kw>
<msg timestamp="20201028 01:51:56.272" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201028 01:51:56.272" starttime="20201028 01:51:56.268"></status>
</kw>
<msg timestamp="20201028 01:51:56.272" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201028 01:51:56.272" starttime="20201028 01:51:56.267"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:51:56.276" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:51:59.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:51:59.368" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:51:59.368" starttime="20201028 01:51:56.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:51:59.369" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:51:59.369" starttime="20201028 01:51:59.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:51:59.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:51:59.369" starttime="20201028 01:51:59.369"></status>
</kw>
<status status="PASS" endtime="20201028 01:51:59.370" starttime="20201028 01:51:56.273"></status>
</kw>
<msg timestamp="20201028 01:51:59.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:51:59.370" starttime="20201028 01:51:56.273"></status>
</kw>
<status status="PASS" endtime="20201028 01:51:59.370" starttime="20201028 01:51:56.273"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:51:59.375" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:52:06.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:52:06.054" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:52:06.054" starttime="20201028 01:51:59.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:52:06.055" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:52:06.055" starttime="20201028 01:52:06.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:52:06.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:52:06.056" starttime="20201028 01:52:06.055"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:06.056" starttime="20201028 01:51:59.371"></status>
</kw>
<msg timestamp="20201028 01:52:06.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:52:06.056" starttime="20201028 01:51:59.371"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:06.057" starttime="20201028 01:51:59.370"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:52:06.060" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:52:10.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:52:10.780" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:52:10.780" starttime="20201028 01:52:06.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:52:10.781" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:52:10.781" starttime="20201028 01:52:10.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:52:10.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:52:10.782" starttime="20201028 01:52:10.781"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:10.782" starttime="20201028 01:52:06.058"></status>
</kw>
<msg timestamp="20201028 01:52:10.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:52:10.782" starttime="20201028 01:52:06.057"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:10.782" starttime="20201028 01:52:06.057"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:52:10.787" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:52:15.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:52:15.863" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:52:15.863" starttime="20201028 01:52:10.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:52:15.865" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:52:15.865" starttime="20201028 01:52:15.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:52:15.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:52:15.865" starttime="20201028 01:52:15.865"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:15.866" starttime="20201028 01:52:10.783"></status>
</kw>
<msg timestamp="20201028 01:52:15.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:52:15.866" starttime="20201028 01:52:10.783"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:15.866" starttime="20201028 01:52:10.783"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 01:52:15.866" critical="yes" starttime="20201028 01:51:43.954"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:52:15.871" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:52:15.871" starttime="20201028 01:52:15.870"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:52:15.872" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:52:15.872" starttime="20201028 01:52:15.871"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:15.872" starttime="20201028 01:52:15.870"></status>
</kw>
<msg timestamp="20201028 01:52:15.872" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:52:15.872" starttime="20201028 01:52:15.869"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:15.872" starttime="20201028 01:52:15.869"></status>
</kw>
<msg timestamp="20201028 01:52:15.872" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201028 01:52:15.872" starttime="20201028 01:52:15.868"></status>
</kw>
<msg timestamp="20201028 01:52:15.873" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201028 01:52:15.873" starttime="20201028 01:52:15.868"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:52:15.876" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:52:18.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:52:18.895" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:52:18.895" starttime="20201028 01:52:15.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:52:18.896" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:52:18.896" starttime="20201028 01:52:18.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:52:18.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:52:18.897" starttime="20201028 01:52:18.897"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:18.897" starttime="20201028 01:52:15.873"></status>
</kw>
<msg timestamp="20201028 01:52:18.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:52:18.898" starttime="20201028 01:52:15.873"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:18.898" starttime="20201028 01:52:15.873"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:52:18.902" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:52:21.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:52:21.576" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201028 01:52:21.576" starttime="20201028 01:52:18.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:52:21.577" level="INFO"></msg>
<status status="PASS" endtime="20201028 01:52:21.577" starttime="20201028 01:52:21.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:52:21.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:52:21.578" starttime="20201028 01:52:21.577"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:21.578" starttime="20201028 01:52:18.899"></status>
</kw>
<msg timestamp="20201028 01:52:21.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:52:21.578" starttime="20201028 01:52:18.898"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:21.579" starttime="20201028 01:52:18.898"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201028 01:52:21.579" critical="yes" starttime="20201028 01:52:15.867"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201028 01:52:21.580" starttime="20201028 01:51:43.904"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 01:53:56.459" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 01:53:56.459" starttime="20201028 01:53:56.458"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:53:56.459" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 01:53:56.459" starttime="20201028 01:53:56.459"></status>
</kw>
<status status="PASS" endtime="20201028 01:53:56.460" starttime="20201028 01:53:56.458"></status>
</kw>
<msg timestamp="20201028 01:53:56.460" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 01:53:56.460" starttime="20201028 01:53:56.457"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201028 01:53:56.461" starttime="20201028 01:53:56.460"></status>
</kw>
<msg timestamp="20201028 01:53:56.461" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201028 01:53:56.461" starttime="20201028 01:53:56.460"></status>
</kw>
<status status="PASS" endtime="20201028 01:53:56.461" starttime="20201028 01:53:56.457"></status>
</kw>
<msg timestamp="20201028 01:53:56.461" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 01:53:56.461" starttime="20201028 01:53:56.456"></status>
</kw>
<msg timestamp="20201028 01:53:56.461" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 01:53:56.461" starttime="20201028 01:53:56.455"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 01:53:56.462" level="INFO">${random} = 70153</msg>
<status status="PASS" endtime="20201028 01:53:56.462" starttime="20201028 01:53:56.462"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:53:56.483" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-70153 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:53:59.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:53:59.800" level="INFO">${output} = 2020-10-28 01:53:58 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 01:53:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201028 01:53:59.800" starttime="20201028 01:53:56.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:53:59.801" level="INFO">2020-10-28 01:53:58 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 01:53:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 01:53:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 01:53:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 01:53:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7B5CE98B7343-&gt;4251b3c1-7ec2-419c-8c94-767d51814d1b
2020-10-28 01:53:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201028 01:53:59.801" starttime="20201028 01:53:59.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:53:59.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:53:59.802" starttime="20201028 01:53:59.801"></status>
</kw>
<status status="PASS" endtime="20201028 01:53:59.802" starttime="20201028 01:53:56.464"></status>
</kw>
<msg timestamp="20201028 01:53:59.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:53:59.802" starttime="20201028 01:53:56.464"></status>
</kw>
<msg timestamp="20201028 01:53:59.802" level="INFO">${result} = 2020-10-28 01:53:58 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 01:53:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201028 01:53:59.802" starttime="20201028 01:53:56.463"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:53:59.805" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:54:01.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:54:01.585" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-28 01:52 ofs://om/volume1/bucket1/ozone-31851
-rw-...</msg>
<status status="PASS" endtime="20201028 01:54:01.586" starttime="20201028 01:53:59.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:54:01.587" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-28 01:52 ofs://om/volume1/bucket1/ozone-31851
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-28 01:53 ofs://om/volume1/bucket1/ozone-70153
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:52 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:53 ofs://om/volume1/bucket1/wordcount-16.txt</msg>
<status status="PASS" endtime="20201028 01:54:01.587" starttime="20201028 01:54:01.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:54:01.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:54:01.587" starttime="20201028 01:54:01.587"></status>
</kw>
<status status="PASS" endtime="20201028 01:54:01.587" starttime="20201028 01:53:59.803"></status>
</kw>
<msg timestamp="20201028 01:54:01.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:54:01.588" starttime="20201028 01:53:59.803"></status>
</kw>
<msg timestamp="20201028 01:54:01.588" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-28 01:52 ofs://om/volume1/bucket1/ozone-31851
-rw-...</msg>
<status status="PASS" endtime="20201028 01:54:01.588" starttime="20201028 01:53:59.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201028 01:54:01.588" starttime="20201028 01:54:01.588"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 01:54:01.589" critical="yes" starttime="20201028 01:53:56.454"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201028 01:54:01.590" starttime="20201028 01:53:56.406"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:52:26.236" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:52:26.236" starttime="20201028 01:52:26.235"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:52:26.236" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:52:26.236" starttime="20201028 01:52:26.236"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:26.236" starttime="20201028 01:52:26.235"></status>
</kw>
<msg timestamp="20201028 01:52:26.236" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:52:26.236" starttime="20201028 01:52:26.234"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:26.237" starttime="20201028 01:52:26.234"></status>
</kw>
<msg timestamp="20201028 01:52:26.237" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 01:52:26.237" starttime="20201028 01:52:26.233"></status>
</kw>
<msg timestamp="20201028 01:52:26.237" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 01:52:26.237" starttime="20201028 01:52:26.232"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 01:52:26.237" level="INFO">${random} = 31851</msg>
<status status="PASS" endtime="20201028 01:52:26.237" starttime="20201028 01:52:26.237"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:52:26.242" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-31851 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:52:29.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:52:29.831" level="INFO">${output} = 2020-10-28 01:52:28 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 01:52:28 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201028 01:52:29.831" starttime="20201028 01:52:26.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:52:29.832" level="INFO">2020-10-28 01:52:28 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 01:52:28 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 01:52:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 01:52:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 01:52:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C98A6FC63658-&gt;4251b3c1-7ec2-419c-8c94-767d51814d1b
2020-10-28 01:52:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201028 01:52:29.832" starttime="20201028 01:52:29.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:52:29.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:52:29.832" starttime="20201028 01:52:29.832"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:29.833" starttime="20201028 01:52:26.238"></status>
</kw>
<msg timestamp="20201028 01:52:29.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:52:29.833" starttime="20201028 01:52:26.238"></status>
</kw>
<msg timestamp="20201028 01:52:29.833" level="INFO">${result} = 2020-10-28 01:52:28 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 01:52:28 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201028 01:52:29.833" starttime="20201028 01:52:26.238"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:52:29.836" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:52:31.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:52:31.703" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-28 01:52 o3fs://bucket1.volume1.om/ozone-31851
dr...</msg>
<status status="PASS" endtime="20201028 01:52:31.704" starttime="20201028 01:52:29.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:52:31.705" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-28 01:52 o3fs://bucket1.volume1.om/ozone-31851
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:52 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201028 01:52:31.705" starttime="20201028 01:52:31.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:52:31.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:52:31.705" starttime="20201028 01:52:31.705"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:31.706" starttime="20201028 01:52:29.834"></status>
</kw>
<msg timestamp="20201028 01:52:31.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:52:31.706" starttime="20201028 01:52:29.833"></status>
</kw>
<msg timestamp="20201028 01:52:31.706" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-28 01:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-28 01:52 o3fs://bucket1.volume1.om/ozone-31851
dr...</msg>
<status status="PASS" endtime="20201028 01:52:31.706" starttime="20201028 01:52:29.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201028 01:52:31.707" starttime="20201028 01:52:31.706"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201028 01:52:31.707" critical="yes" starttime="20201028 01:52:26.231"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201028 01:52:31.708" starttime="20201028 01:52:26.184"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:54:06.497" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:54:06.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:54:06.501" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 01:54:06.501" starttime="20201028 01:54:06.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:54:06.502" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 01:54:06.502" starttime="20201028 01:54:06.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:54:06.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:54:06.503" starttime="20201028 01:54:06.502"></status>
</kw>
<status status="PASS" endtime="20201028 01:54:06.503" starttime="20201028 01:54:06.492"></status>
</kw>
<msg timestamp="20201028 01:54:06.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:54:06.503" starttime="20201028 01:54:06.491"></status>
</kw>
<msg timestamp="20201028 01:54:06.503" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 01:54:06.503" starttime="20201028 01:54:06.491"></status>
</kw>
<msg timestamp="20201028 01:54:06.503" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 01:54:06.503" starttime="20201028 01:54:06.491"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 01:54:06.506" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 01:54:06.506" starttime="20201028 01:54:06.506"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:54:06.507" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 01:54:06.507" starttime="20201028 01:54:06.507"></status>
</kw>
<status status="PASS" endtime="20201028 01:54:06.507" starttime="20201028 01:54:06.506"></status>
</kw>
<msg timestamp="20201028 01:54:06.507" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 01:54:06.507" starttime="20201028 01:54:06.505"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201028 01:54:06.508" starttime="20201028 01:54:06.508"></status>
</kw>
<msg timestamp="20201028 01:54:06.508" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201028 01:54:06.508" starttime="20201028 01:54:06.508"></status>
</kw>
<status status="PASS" endtime="20201028 01:54:06.509" starttime="20201028 01:54:06.505"></status>
</kw>
<msg timestamp="20201028 01:54:06.509" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 01:54:06.509" starttime="20201028 01:54:06.504"></status>
</kw>
<msg timestamp="20201028 01:54:06.509" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 01:54:06.509" starttime="20201028 01:54:06.504"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:54:06.512" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:54:42.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:54:42.580" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 01:54:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 01:54:08 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201028 01:54:42.580" starttime="20201028 01:54:06.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:54:42.581" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-28 01:54:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 01:54:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 01:54:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 01:54:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 01:54:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A730E60BA42B-&gt;4251b3c1-7ec2-419c-8c94-767d51814d1b
2020-10-28 01:54:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-28 01:54:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-28 01:54:12 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-28 01:54:12 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-28 01:54:13 INFO  JobSubmitter:202 - number of splits:3
2020-10-28 01:54:13 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603849848497_0003
2020-10-28 01:54:13 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-28 01:54:13 INFO  Configuration:2795 - resource-types.xml not found
2020-10-28 01:54:13 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-28 01:54:13 INFO  YarnClientImpl:329 - Submitted application application_1603849848497_0003
2020-10-28 01:54:13 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603849848497_0003/
2020-10-28 01:54:13 INFO  Job:1619 - Running job: job_1603849848497_0003
2020-10-28 01:54:20 INFO  Job:1640 - Job job_1603849848497_0003 running in uber mode : false
2020-10-28 01:54:20 INFO  Job:1647 -  map 0% reduce 0%
2020-10-28 01:54:26 INFO  Job:1647 -  map 33% reduce 0%
2020-10-28 01:54:31 INFO  Job:1647 -  map 67% reduce 0%
2020-10-28 01:54:36 INFO  Job:1647 -  map 100% reduce 0%
2020-10-28 01:54:40 INFO  Job:1647 -  map 100% reduce 100%
2020-10-28 01:54:41 INFO  Job:1658 - Job job_1603849848497_0003 completed successfully
2020-10-28 01:54:41 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39260
		Total time spent by all reduces in occupied slots (ms)=14344
		Total time spent by all map tasks (ms)=9815
		Total time spent by all reduce tasks (ms)=3586
		Total vcore-milliseconds taken by all map tasks=9815
		Total vcore-milliseconds taken by all reduce tasks=3586
		Total megabyte-milliseconds taken by all map tasks=40202240
		Total megabyte-milliseconds taken by all reduce tasks=14688256
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=645
		CPU time spent (ms)=6810
		Physical memory (bytes) snapshot=1437446144
		Virtual memory (bytes) snapshot=16052596736
		Total committed heap usage (bytes)=1684013056
		Peak Map Physical memory (bytes)=361840640
		Peak Map Virtual memory (bytes)=4016975872
		Peak Reduce Physical memory (bytes)=373362688
		Peak Reduce Virtual memory (bytes)=4033179648
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.753 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201028 01:54:42.581" starttime="20201028 01:54:42.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:54:42.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:54:42.582" starttime="20201028 01:54:42.582"></status>
</kw>
<status status="PASS" endtime="20201028 01:54:42.582" starttime="20201028 01:54:06.510"></status>
</kw>
<msg timestamp="20201028 01:54:42.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:54:42.582" starttime="20201028 01:54:06.510"></status>
</kw>
<msg timestamp="20201028 01:54:42.583" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 01:54:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 01:54:08 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201028 01:54:42.583" starttime="20201028 01:54:06.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 01:54:42.583" starttime="20201028 01:54:42.583"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 01:54:42.584" critical="yes" starttime="20201028 01:54:06.490"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:54:42.588" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:54:42.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:54:42.595" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 01:54:42.595" starttime="20201028 01:54:42.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:54:42.596" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 01:54:42.596" starttime="20201028 01:54:42.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:54:42.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:54:42.597" starttime="20201028 01:54:42.596"></status>
</kw>
<status status="PASS" endtime="20201028 01:54:42.597" starttime="20201028 01:54:42.586"></status>
</kw>
<msg timestamp="20201028 01:54:42.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:54:42.597" starttime="20201028 01:54:42.586"></status>
</kw>
<msg timestamp="20201028 01:54:42.597" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 01:54:42.597" starttime="20201028 01:54:42.585"></status>
</kw>
<msg timestamp="20201028 01:54:42.598" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 01:54:42.598" starttime="20201028 01:54:42.585"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 01:54:42.598" level="INFO">${random} = 86</msg>
<status status="PASS" endtime="20201028 01:54:42.598" starttime="20201028 01:54:42.598"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 01:54:42.602" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 01:54:42.602" starttime="20201028 01:54:42.601"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:54:42.602" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 01:54:42.602" starttime="20201028 01:54:42.602"></status>
</kw>
<status status="PASS" endtime="20201028 01:54:42.602" starttime="20201028 01:54:42.601"></status>
</kw>
<msg timestamp="20201028 01:54:42.602" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 01:54:42.602" starttime="20201028 01:54:42.600"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201028 01:54:42.603" starttime="20201028 01:54:42.603"></status>
</kw>
<msg timestamp="20201028 01:54:42.603" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201028 01:54:42.603" starttime="20201028 01:54:42.603"></status>
</kw>
<status status="PASS" endtime="20201028 01:54:42.604" starttime="20201028 01:54:42.600"></status>
</kw>
<msg timestamp="20201028 01:54:42.604" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 01:54:42.604" starttime="20201028 01:54:42.599"></status>
</kw>
<msg timestamp="20201028 01:54:42.604" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201028 01:54:42.604" starttime="20201028 01:54:42.598"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 01:54:42.607" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 01:54:42.607" starttime="20201028 01:54:42.606"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:54:42.607" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 01:54:42.607" starttime="20201028 01:54:42.607"></status>
</kw>
<status status="PASS" endtime="20201028 01:54:42.607" starttime="20201028 01:54:42.606"></status>
</kw>
<msg timestamp="20201028 01:54:42.607" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 01:54:42.607" starttime="20201028 01:54:42.605"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:54:42.609" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201028 01:54:42.609" starttime="20201028 01:54:42.608"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:54:42.609" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201028 01:54:42.609" starttime="20201028 01:54:42.609"></status>
</kw>
<status status="PASS" endtime="20201028 01:54:42.609" starttime="20201028 01:54:42.608"></status>
</kw>
<msg timestamp="20201028 01:54:42.610" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201028 01:54:42.610" starttime="20201028 01:54:42.607"></status>
</kw>
<status status="PASS" endtime="20201028 01:54:42.610" starttime="20201028 01:54:42.605"></status>
</kw>
<msg timestamp="20201028 01:54:42.610" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201028 01:54:42.610" starttime="20201028 01:54:42.604"></status>
</kw>
<msg timestamp="20201028 01:54:42.610" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201028 01:54:42.610" starttime="20201028 01:54:42.604"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201028 01:54:42.613" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201028 01:54:42.613" starttime="20201028 01:54:42.612"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:54:42.613" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201028 01:54:42.613" starttime="20201028 01:54:42.613"></status>
</kw>
<status status="PASS" endtime="20201028 01:54:42.614" starttime="20201028 01:54:42.612"></status>
</kw>
<msg timestamp="20201028 01:54:42.614" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201028 01:54:42.614" starttime="20201028 01:54:42.612"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:54:42.615" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201028 01:54:42.615" starttime="20201028 01:54:42.615"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:54:42.615" level="INFO">${result} = /wordcount-86.txt</msg>
<status status="PASS" endtime="20201028 01:54:42.615" starttime="20201028 01:54:42.615"></status>
</kw>
<status status="PASS" endtime="20201028 01:54:42.616" starttime="20201028 01:54:42.614"></status>
</kw>
<msg timestamp="20201028 01:54:42.616" level="INFO">${path_with_leading} = /wordcount-86.txt</msg>
<status status="PASS" endtime="20201028 01:54:42.616" starttime="20201028 01:54:42.614"></status>
</kw>
<status status="PASS" endtime="20201028 01:54:42.616" starttime="20201028 01:54:42.611"></status>
</kw>
<msg timestamp="20201028 01:54:42.616" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-86.txt</msg>
<status status="PASS" endtime="20201028 01:54:42.616" starttime="20201028 01:54:42.611"></status>
</kw>
<msg timestamp="20201028 01:54:42.616" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-86.txt</msg>
<status status="PASS" endtime="20201028 01:54:42.616" starttime="20201028 01:54:42.610"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:54:42.622" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-86.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:55:19.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:55:19.116" level="INFO">${output} = 2020-10-28 01:54:44 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-28 01:54:44 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201028 01:55:19.116" starttime="20201028 01:54:42.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:55:19.117" level="INFO">2020-10-28 01:54:44 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-28 01:54:44 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-28 01:54:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 01:54:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 01:54:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 01:54:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 01:54:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-19E7B692C96E-&gt;4251b3c1-7ec2-419c-8c94-767d51814d1b
2020-10-28 01:54:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 01:54:46 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-28 01:54:48 INFO  JobSubmitter:202 - number of splits:3
2020-10-28 01:54:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603849848497_0004
2020-10-28 01:54:49 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-28 01:54:49 INFO  Configuration:2795 - resource-types.xml not found
2020-10-28 01:54:49 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-28 01:54:49 INFO  YarnClientImpl:329 - Submitted application application_1603849848497_0004
2020-10-28 01:54:49 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603849848497_0004/
2020-10-28 01:54:49 INFO  Job:1619 - Running job: job_1603849848497_0004
2020-10-28 01:54:57 INFO  Job:1640 - Job job_1603849848497_0004 running in uber mode : false
2020-10-28 01:54:57 INFO  Job:1647 -  map 0% reduce 0%
2020-10-28 01:55:03 INFO  Job:1647 -  map 33% reduce 0%
2020-10-28 01:55:08 INFO  Job:1647 -  map 67% reduce 0%
2020-10-28 01:55:13 INFO  Job:1647 -  map 100% reduce 0%
2020-10-28 01:55:17 INFO  Job:1647 -  map 100% reduce 100%
2020-10-28 01:55:18 INFO  Job:1658 - Job job_1603849848497_0004 completed successfully
2020-10-28 01:55:18 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38968
		Total time spent by all reduces in occupied slots (ms)=14544
		Total time spent by all map tasks (ms)=9742
		Total time spent by all reduce tasks (ms)=3636
		Total vcore-milliseconds taken by all map tasks=9742
		Total vcore-milliseconds taken by all reduce tasks=3636
		Total megabyte-milliseconds taken by all map tasks=39903232
		Total megabyte-milliseconds taken by all reduce tasks=14893056
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=664
		CPU time spent (ms)=7680
		Physical memory (bytes) snapshot=1484075008
		Virtual memory (bytes) snapshot=16087425024
		Total committed heap usage (bytes)=1687683072
		Peak Map Physical memory (bytes)=375689216
		Peak Map Virtual memory (bytes)=4017676288
		Peak Reduce Physical memory (bytes)=372170752
		Peak Reduce Virtual memory (bytes)=4043046912
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201028 01:55:19.117" starttime="20201028 01:55:19.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:55:19.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:55:19.118" starttime="20201028 01:55:19.117"></status>
</kw>
<status status="PASS" endtime="20201028 01:55:19.118" starttime="20201028 01:54:42.617"></status>
</kw>
<msg timestamp="20201028 01:55:19.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:55:19.118" starttime="20201028 01:54:42.617"></status>
</kw>
<msg timestamp="20201028 01:55:19.119" level="INFO">${output} = 2020-10-28 01:54:44 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-28 01:54:44 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201028 01:55:19.119" starttime="20201028 01:54:42.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201028 01:55:19.119" starttime="20201028 01:55:19.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 01:55:19.120" starttime="20201028 01:55:19.120"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 01:55:19.120" critical="yes" starttime="20201028 01:54:42.584"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201028 01:55:19.121" starttime="20201028 01:54:06.443"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:52:36.374" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:52:36.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:52:36.380" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 01:52:36.380" starttime="20201028 01:52:36.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:52:36.381" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 01:52:36.381" starttime="20201028 01:52:36.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:52:36.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:52:36.382" starttime="20201028 01:52:36.381"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:36.382" starttime="20201028 01:52:36.370"></status>
</kw>
<msg timestamp="20201028 01:52:36.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:52:36.382" starttime="20201028 01:52:36.370"></status>
</kw>
<msg timestamp="20201028 01:52:36.382" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 01:52:36.382" starttime="20201028 01:52:36.369"></status>
</kw>
<msg timestamp="20201028 01:52:36.383" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 01:52:36.383" starttime="20201028 01:52:36.369"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:52:36.385" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:52:36.385" starttime="20201028 01:52:36.385"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:52:36.386" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:52:36.386" starttime="20201028 01:52:36.386"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:36.386" starttime="20201028 01:52:36.385"></status>
</kw>
<msg timestamp="20201028 01:52:36.386" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:52:36.386" starttime="20201028 01:52:36.384"></status>
</kw>
<status status="PASS" endtime="20201028 01:52:36.387" starttime="20201028 01:52:36.384"></status>
</kw>
<msg timestamp="20201028 01:52:36.387" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 01:52:36.387" starttime="20201028 01:52:36.383"></status>
</kw>
<msg timestamp="20201028 01:52:36.387" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 01:52:36.387" starttime="20201028 01:52:36.383"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:52:36.390" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:53:16.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:53:16.871" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 01:52:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 01:52:38 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201028 01:53:16.871" starttime="20201028 01:52:36.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:53:16.872" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-28 01:52:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 01:52:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 01:52:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 01:52:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 01:52:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B999630ADEB9-&gt;4251b3c1-7ec2-419c-8c94-767d51814d1b
2020-10-28 01:52:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-28 01:52:42 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-28 01:52:42 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-28 01:52:42 INFO  JobSubmitter:202 - number of splits:3
2020-10-28 01:52:43 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603849848497_0001
2020-10-28 01:52:43 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-28 01:52:43 INFO  Configuration:2795 - resource-types.xml not found
2020-10-28 01:52:43 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-28 01:52:43 INFO  YarnClientImpl:329 - Submitted application application_1603849848497_0001
2020-10-28 01:52:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603849848497_0001/
2020-10-28 01:52:43 INFO  Job:1619 - Running job: job_1603849848497_0001
2020-10-28 01:52:53 INFO  Job:1640 - Job job_1603849848497_0001 running in uber mode : false
2020-10-28 01:52:53 INFO  Job:1647 -  map 0% reduce 0%
2020-10-28 01:53:00 INFO  Job:1647 -  map 33% reduce 0%
2020-10-28 01:53:05 INFO  Job:1647 -  map 67% reduce 0%
2020-10-28 01:53:10 INFO  Job:1647 -  map 100% reduce 0%
2020-10-28 01:53:15 INFO  Job:1647 -  map 100% reduce 100%
2020-10-28 01:53:16 INFO  Job:1658 - Job job_1603849848497_0001 completed successfully
2020-10-28 01:53:16 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39464
		Total time spent by all reduces in occupied slots (ms)=15304
		Total time spent by all map tasks (ms)=9866
		Total time spent by all reduce tasks (ms)=3826
		Total vcore-milliseconds taken by all map tasks=9866
		Total vcore-milliseconds taken by all reduce tasks=3826
		Total megabyte-milliseconds taken by all map tasks=40411136
		Total megabyte-milliseconds taken by all reduce tasks=15671296
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=650
		CPU time spent (ms)=7220
		Physical memory (bytes) snapshot=1485840384
		Virtual memory (bytes) snapshot=16081776640
		Total committed heap usage (bytes)=1712848896
		Peak Map Physical memory (bytes)=372682752
		Peak Map Virtual memory (bytes)=4017049600
		Peak Reduce Physical memory (bytes)=378646528
		Peak Reduce Virtual memory (bytes)=4035620864
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.131 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201028 01:53:16.873" starttime="20201028 01:53:16.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:53:16.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:53:16.873" starttime="20201028 01:53:16.873"></status>
</kw>
<status status="PASS" endtime="20201028 01:53:16.873" starttime="20201028 01:52:36.388"></status>
</kw>
<msg timestamp="20201028 01:53:16.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:53:16.874" starttime="20201028 01:52:36.387"></status>
</kw>
<msg timestamp="20201028 01:53:16.874" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-28 01:52:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 01:52:38 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201028 01:53:16.874" starttime="20201028 01:52:36.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 01:53:16.875" starttime="20201028 01:53:16.874"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 01:53:16.875" critical="yes" starttime="20201028 01:52:36.368"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:53:16.881" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:53:16.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:53:16.885" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 01:53:16.885" starttime="20201028 01:53:16.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:53:16.886" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 01:53:16.886" starttime="20201028 01:53:16.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:53:16.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:53:16.887" starttime="20201028 01:53:16.886"></status>
</kw>
<status status="PASS" endtime="20201028 01:53:16.887" starttime="20201028 01:53:16.877"></status>
</kw>
<msg timestamp="20201028 01:53:16.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:53:16.887" starttime="20201028 01:53:16.877"></status>
</kw>
<msg timestamp="20201028 01:53:16.887" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 01:53:16.887" starttime="20201028 01:53:16.877"></status>
</kw>
<msg timestamp="20201028 01:53:16.888" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201028 01:53:16.888" starttime="20201028 01:53:16.876"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201028 01:53:16.888" level="INFO">${random} = 16</msg>
<status status="PASS" endtime="20201028 01:53:16.888" starttime="20201028 01:53:16.888"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:53:16.891" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:53:16.891" starttime="20201028 01:53:16.891"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:53:16.892" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:53:16.892" starttime="20201028 01:53:16.891"></status>
</kw>
<status status="PASS" endtime="20201028 01:53:16.892" starttime="20201028 01:53:16.890"></status>
</kw>
<msg timestamp="20201028 01:53:16.892" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:53:16.892" starttime="20201028 01:53:16.890"></status>
</kw>
<status status="PASS" endtime="20201028 01:53:16.892" starttime="20201028 01:53:16.889"></status>
</kw>
<msg timestamp="20201028 01:53:16.892" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 01:53:16.892" starttime="20201028 01:53:16.889"></status>
</kw>
<msg timestamp="20201028 01:53:16.892" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201028 01:53:16.892" starttime="20201028 01:53:16.888"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:53:16.895" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:53:16.895" starttime="20201028 01:53:16.895"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:53:16.895" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:53:16.896" starttime="20201028 01:53:16.895"></status>
</kw>
<status status="PASS" endtime="20201028 01:53:16.896" starttime="20201028 01:53:16.894"></status>
</kw>
<msg timestamp="20201028 01:53:16.896" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:53:16.896" starttime="20201028 01:53:16.894"></status>
</kw>
<status status="PASS" endtime="20201028 01:53:16.896" starttime="20201028 01:53:16.893"></status>
</kw>
<msg timestamp="20201028 01:53:16.896" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201028 01:53:16.896" starttime="20201028 01:53:16.893"></status>
</kw>
<msg timestamp="20201028 01:53:16.896" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201028 01:53:16.896" starttime="20201028 01:53:16.892"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201028 01:53:16.899" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201028 01:53:16.899" starttime="20201028 01:53:16.899"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201028 01:53:16.899" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201028 01:53:16.900" starttime="20201028 01:53:16.899"></status>
</kw>
<status status="PASS" endtime="20201028 01:53:16.900" starttime="20201028 01:53:16.898"></status>
</kw>
<msg timestamp="20201028 01:53:16.900" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201028 01:53:16.900" starttime="20201028 01:53:16.898"></status>
</kw>
<status status="PASS" endtime="20201028 01:53:16.900" starttime="20201028 01:53:16.897"></status>
</kw>
<msg timestamp="20201028 01:53:16.900" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-16.txt</msg>
<status status="PASS" endtime="20201028 01:53:16.900" starttime="20201028 01:53:16.897"></status>
</kw>
<msg timestamp="20201028 01:53:16.900" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-16.txt</msg>
<status status="PASS" endtime="20201028 01:53:16.900" starttime="20201028 01:53:16.896"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201028 01:53:16.905" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-16.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201028 01:53:51.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20201028 01:53:51.723" level="INFO">${output} = 2020-10-28 01:53:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-28 01:53:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201028 01:53:51.723" starttime="20201028 01:53:16.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201028 01:53:51.724" level="INFO">2020-10-28 01:53:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-28 01:53:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-28 01:53:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-28 01:53:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-28 01:53:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-28 01:53:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-28 01:53:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1B4AEE5B9521-&gt;4251b3c1-7ec2-419c-8c94-767d51814d1b
2020-10-28 01:53:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-28 01:53:20 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-28 01:53:20 INFO  JobSubmitter:202 - number of splits:3
2020-10-28 01:53:20 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603849848497_0002
2020-10-28 01:53:20 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-28 01:53:20 INFO  Configuration:2795 - resource-types.xml not found
2020-10-28 01:53:20 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-28 01:53:20 INFO  YarnClientImpl:329 - Submitted application application_1603849848497_0002
2020-10-28 01:53:20 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603849848497_0002/
2020-10-28 01:53:20 INFO  Job:1619 - Running job: job_1603849848497_0002
2020-10-28 01:53:29 INFO  Job:1640 - Job job_1603849848497_0002 running in uber mode : false
2020-10-28 01:53:29 INFO  Job:1647 -  map 0% reduce 0%
2020-10-28 01:53:35 INFO  Job:1647 -  map 33% reduce 0%
2020-10-28 01:53:41 INFO  Job:1647 -  map 67% reduce 0%
2020-10-28 01:53:46 INFO  Job:1647 -  map 100% reduce 0%
2020-10-28 01:53:50 INFO  Job:1647 -  map 100% reduce 100%
2020-10-28 01:53:51 INFO  Job:1658 - Job job_1603849848497_0002 completed successfully
2020-10-28 01:53:51 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124185
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38896
		Total time spent by all reduces in occupied slots (ms)=14392
		Total time spent by all map tasks (ms)=9724
		Total time spent by all reduce tasks (ms)=3598
		Total vcore-milliseconds taken by all map tasks=9724
		Total vcore-milliseconds taken by all reduce tasks=3598
		Total megabyte-milliseconds taken by all map tasks=39829504
		Total megabyte-milliseconds taken by all reduce tasks=14737408
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=640
		CPU time spent (ms)=7500
		Physical memory (bytes) snapshot=1491894272
		Virtual memory (bytes) snapshot=16090247168
		Total committed heap usage (bytes)=1705508864
		Peak Map Physical memory (bytes)=376438784
		Peak Map Virtual memory (bytes)=4017852416
		Peak Reduce Physical memory (bytes)=375828480
		Peak Reduce Virtual memory (bytes)=4039389184
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201028 01:53:51.725" starttime="20201028 01:53:51.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201028 01:53:51.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201028 01:53:51.725" starttime="20201028 01:53:51.725"></status>
</kw>
<status status="PASS" endtime="20201028 01:53:51.725" starttime="20201028 01:53:16.901"></status>
</kw>
<msg timestamp="20201028 01:53:51.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201028 01:53:51.726" starttime="20201028 01:53:16.901"></status>
</kw>
<msg timestamp="20201028 01:53:51.726" level="INFO">${output} = 2020-10-28 01:53:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-28 01:53:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201028 01:53:51.726" starttime="20201028 01:53:16.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201028 01:53:51.727" starttime="20201028 01:53:51.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201028 01:53:51.727" starttime="20201028 01:53:51.727"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201028 01:53:51.727" critical="yes" starttime="20201028 01:53:16.876"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201028 01:53:51.728" starttime="20201028 01:52:36.322"></status>
</suite>
<status status="PASS" elapsedtime="196468" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="565041" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
