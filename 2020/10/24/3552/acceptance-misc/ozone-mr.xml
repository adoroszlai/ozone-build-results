<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201024 13:14:06.181" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:00:54.217" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:00:56.269" level="INFO">${rc} = 255</msg>
<msg timestamp="20201024 13:00:56.269" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201024 13:00:56.269" starttime="20201024 13:00:54.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:00:56.270" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201024 13:00:56.270" starttime="20201024 13:00:56.270"></status>
</kw>
<msg timestamp="20201024 13:00:56.271" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201024 13:00:56.271" starttime="20201024 13:00:54.213"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:00:56.276" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:00:58.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:00:58.377" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:00:58.377" starttime="20201024 13:00:56.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:00:58.378" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:00:58.378" starttime="20201024 13:00:58.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:00:58.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:00:58.379" starttime="20201024 13:00:58.378"></status>
</kw>
<status status="PASS" endtime="20201024 13:00:58.379" starttime="20201024 13:00:56.273"></status>
</kw>
<msg timestamp="20201024 13:00:58.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:00:58.379" starttime="20201024 13:00:56.272"></status>
</kw>
<msg timestamp="20201024 13:00:58.379" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201024 13:00:58.379" starttime="20201024 13:00:56.272"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201024 13:00:58.380" starttime="20201024 13:00:58.380"></status>
</kw>
<status status="PASS" endtime="20201024 13:00:58.380" starttime="20201024 13:00:56.271"></status>
</kw>
<status status="PASS" endtime="20201024 13:00:58.380" starttime="20201024 13:00:56.271"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:00:58.385" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:01:00.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:01:00.259" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:01:00.259" starttime="20201024 13:00:58.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:01:00.260" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:01:00.260" starttime="20201024 13:01:00.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:01:00.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:01:00.261" starttime="20201024 13:01:00.260"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:00.261" starttime="20201024 13:00:58.382"></status>
</kw>
<msg timestamp="20201024 13:01:00.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:01:00.261" starttime="20201024 13:00:58.382"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:00.261" starttime="20201024 13:00:58.381"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:00.261" starttime="20201024 13:00:58.381"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:00.261" starttime="20201024 13:00:58.380"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201024 13:01:00.262" starttime="20201024 13:01:00.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:01:00.267" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:01:02.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:01:02.345" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-24T13:01:00.221Z",
  "modificat...</msg>
<status status="PASS" endtime="20201024 13:01:02.346" starttime="20201024 13:01:00.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:01:02.347" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-24T13:01:00.221Z",
  "modificationTime" : "2020-10-24T13:01:00.221Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201024 13:01:02.347" starttime="20201024 13:01:02.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:01:02.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:01:02.347" starttime="20201024 13:01:02.347"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:02.348" starttime="20201024 13:01:00.263"></status>
</kw>
<msg timestamp="20201024 13:01:02.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:01:02.348" starttime="20201024 13:01:00.263"></status>
</kw>
<msg timestamp="20201024 13:01:02.348" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-24T13:01:00.221Z",
  "modificat...</msg>
<status status="PASS" endtime="20201024 13:01:02.348" starttime="20201024 13:01:00.262"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201024 13:01:02.349" starttime="20201024 13:01:02.348"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:01:02.352" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:01:02.352" starttime="20201024 13:01:02.352"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:01:02.353" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:01:02.353" starttime="20201024 13:01:02.353"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:02.353" starttime="20201024 13:01:02.352"></status>
</kw>
<msg timestamp="20201024 13:01:02.353" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:01:02.353" starttime="20201024 13:01:02.351"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:02.354" starttime="20201024 13:01:02.350"></status>
</kw>
<msg timestamp="20201024 13:01:02.354" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201024 13:01:02.354" starttime="20201024 13:01:02.350"></status>
</kw>
<msg timestamp="20201024 13:01:02.354" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201024 13:01:02.354" starttime="20201024 13:01:02.349"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:01:02.358" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:01:04.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:01:04.466" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:01:04.466" starttime="20201024 13:01:02.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:01:04.467" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:01:04.467" starttime="20201024 13:01:04.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:01:04.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:01:04.468" starttime="20201024 13:01:04.468"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:04.468" starttime="20201024 13:01:02.355"></status>
</kw>
<msg timestamp="20201024 13:01:04.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:01:04.469" starttime="20201024 13:01:02.355"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:04.469" starttime="20201024 13:01:02.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:01:04.473" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:01:09.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:01:09.635" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:01:09.635" starttime="20201024 13:01:04.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:01:09.636" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:01:09.636" starttime="20201024 13:01:09.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:01:09.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:01:09.637" starttime="20201024 13:01:09.636"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:09.637" starttime="20201024 13:01:04.470"></status>
</kw>
<msg timestamp="20201024 13:01:09.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:01:09.638" starttime="20201024 13:01:04.470"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:09.638" starttime="20201024 13:01:04.469"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:01:09.643" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:01:13.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:01:13.895" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:01:13.895" starttime="20201024 13:01:09.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:01:13.896" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:01:13.896" starttime="20201024 13:01:13.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:01:13.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:01:13.897" starttime="20201024 13:01:13.897"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:13.897" starttime="20201024 13:01:09.639"></status>
</kw>
<msg timestamp="20201024 13:01:13.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:01:13.898" starttime="20201024 13:01:09.639"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:13.898" starttime="20201024 13:01:09.638"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:01:13.902" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:01:17.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:01:17.584" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:01:17.584" starttime="20201024 13:01:13.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:01:17.585" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:01:17.585" starttime="20201024 13:01:17.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:01:17.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:01:17.586" starttime="20201024 13:01:17.585"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:17.586" starttime="20201024 13:01:13.899"></status>
</kw>
<msg timestamp="20201024 13:01:17.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:01:17.586" starttime="20201024 13:01:13.899"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:17.587" starttime="20201024 13:01:13.898"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201024 13:01:17.587" critical="yes" starttime="20201024 13:00:54.212"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:01:17.592" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:01:17.592" starttime="20201024 13:01:17.591"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:01:17.592" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:01:17.592" starttime="20201024 13:01:17.592"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:17.592" starttime="20201024 13:01:17.591"></status>
</kw>
<msg timestamp="20201024 13:01:17.592" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:01:17.592" starttime="20201024 13:01:17.590"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:17.593" starttime="20201024 13:01:17.590"></status>
</kw>
<msg timestamp="20201024 13:01:17.593" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201024 13:01:17.593" starttime="20201024 13:01:17.589"></status>
</kw>
<msg timestamp="20201024 13:01:17.593" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201024 13:01:17.593" starttime="20201024 13:01:17.588"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:01:17.596" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:01:19.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:01:19.438" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:01:19.438" starttime="20201024 13:01:17.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:01:19.439" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:01:19.439" starttime="20201024 13:01:19.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:01:19.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:01:19.440" starttime="20201024 13:01:19.439"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:19.440" starttime="20201024 13:01:17.594"></status>
</kw>
<msg timestamp="20201024 13:01:19.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:01:19.440" starttime="20201024 13:01:17.593"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:19.440" starttime="20201024 13:01:17.593"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:01:19.444" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:01:21.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:01:21.593" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:01:21.593" starttime="20201024 13:01:19.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:01:21.594" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:01:21.594" starttime="20201024 13:01:21.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:01:21.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:01:21.595" starttime="20201024 13:01:21.594"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:21.595" starttime="20201024 13:01:19.441"></status>
</kw>
<msg timestamp="20201024 13:01:21.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:01:21.595" starttime="20201024 13:01:19.441"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:21.595" starttime="20201024 13:01:19.440"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201024 13:01:21.595" critical="yes" starttime="20201024 13:01:17.587"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201024 13:01:21.596" starttime="20201024 13:00:54.159"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:02:52.888" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:02:52.888" starttime="20201024 13:02:52.888"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:02:52.889" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:02:52.889" starttime="20201024 13:02:52.889"></status>
</kw>
<status status="PASS" endtime="20201024 13:02:52.889" starttime="20201024 13:02:52.888"></status>
</kw>
<msg timestamp="20201024 13:02:52.889" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:02:52.889" starttime="20201024 13:02:52.887"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:02:52.890" starttime="20201024 13:02:52.890"></status>
</kw>
<msg timestamp="20201024 13:02:52.890" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201024 13:02:52.890" starttime="20201024 13:02:52.889"></status>
</kw>
<status status="PASS" endtime="20201024 13:02:52.890" starttime="20201024 13:02:52.887"></status>
</kw>
<msg timestamp="20201024 13:02:52.890" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:02:52.891" starttime="20201024 13:02:52.886"></status>
</kw>
<msg timestamp="20201024 13:02:52.891" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:02:52.891" starttime="20201024 13:02:52.885"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201024 13:02:52.891" level="INFO">${random} = 24540</msg>
<status status="PASS" endtime="20201024 13:02:52.891" starttime="20201024 13:02:52.891"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:02:52.896" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-24540 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:02:56.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:02:56.144" level="INFO">${output} = 2020-10-24 13:02:54 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:02:54 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-24 ...</msg>
<status status="PASS" endtime="20201024 13:02:56.144" starttime="20201024 13:02:52.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:02:56.145" level="INFO">2020-10-24 13:02:54 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:02:54 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-24 13:02:54 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-24 13:02:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:02:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C2BECC4255E5-&gt;9e6a1779-d430-4b4c-ab21-4d00d7d292fb
2020-10-24 13:02:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201024 13:02:56.145" starttime="20201024 13:02:56.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:02:56.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:02:56.146" starttime="20201024 13:02:56.145"></status>
</kw>
<status status="PASS" endtime="20201024 13:02:56.146" starttime="20201024 13:02:52.892"></status>
</kw>
<msg timestamp="20201024 13:02:56.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:02:56.146" starttime="20201024 13:02:52.892"></status>
</kw>
<msg timestamp="20201024 13:02:56.147" level="INFO">${result} = 2020-10-24 13:02:54 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:02:54 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-24 ...</msg>
<status status="PASS" endtime="20201024 13:02:56.147" starttime="20201024 13:02:52.891"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:02:56.150" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:02:57.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:02:57.830" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:01 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-24 13:02 ofs://om/volume1/bucket1/ozone-24540
-rw-...</msg>
<status status="PASS" endtime="20201024 13:02:57.830" starttime="20201024 13:02:56.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:02:57.831" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:01 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-24 13:02 ofs://om/volume1/bucket1/ozone-24540
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-24 13:01 ofs://om/volume1/bucket1/ozone-59479
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:01 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:02 ofs://om/volume1/bucket1/wordcount-86.txt</msg>
<status status="PASS" endtime="20201024 13:02:57.831" starttime="20201024 13:02:57.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:02:57.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:02:57.832" starttime="20201024 13:02:57.831"></status>
</kw>
<status status="PASS" endtime="20201024 13:02:57.832" starttime="20201024 13:02:56.148"></status>
</kw>
<msg timestamp="20201024 13:02:57.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:02:57.832" starttime="20201024 13:02:56.147"></status>
</kw>
<msg timestamp="20201024 13:02:57.833" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:01 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-24 13:02 ofs://om/volume1/bucket1/ozone-24540
-rw-...</msg>
<status status="PASS" endtime="20201024 13:02:57.833" starttime="20201024 13:02:56.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:02:57.833" starttime="20201024 13:02:57.833"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201024 13:02:57.833" critical="yes" starttime="20201024 13:02:52.885"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201024 13:02:57.834" starttime="20201024 13:02:52.838"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:01:26.250" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:01:26.250" starttime="20201024 13:01:26.250"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:01:26.251" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:01:26.251" starttime="20201024 13:01:26.250"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:26.251" starttime="20201024 13:01:26.250"></status>
</kw>
<msg timestamp="20201024 13:01:26.251" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:01:26.251" starttime="20201024 13:01:26.249"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:26.251" starttime="20201024 13:01:26.249"></status>
</kw>
<msg timestamp="20201024 13:01:26.251" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:01:26.251" starttime="20201024 13:01:26.248"></status>
</kw>
<msg timestamp="20201024 13:01:26.251" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:01:26.251" starttime="20201024 13:01:26.247"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201024 13:01:26.252" level="INFO">${random} = 59479</msg>
<status status="PASS" endtime="20201024 13:01:26.252" starttime="20201024 13:01:26.252"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:01:26.257" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-59479 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:01:29.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:01:29.581" level="INFO">${output} = 2020-10-24 13:01:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:01:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-24 ...</msg>
<status status="PASS" endtime="20201024 13:01:29.581" starttime="20201024 13:01:26.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:01:29.582" level="INFO">2020-10-24 13:01:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:01:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-24 13:01:27 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-24 13:01:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:01:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2D7C04A27C0B-&gt;9e6a1779-d430-4b4c-ab21-4d00d7d292fb
2020-10-24 13:01:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201024 13:01:29.582" starttime="20201024 13:01:29.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:01:29.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:01:29.583" starttime="20201024 13:01:29.582"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:29.583" starttime="20201024 13:01:26.253"></status>
</kw>
<msg timestamp="20201024 13:01:29.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:01:29.583" starttime="20201024 13:01:26.252"></status>
</kw>
<msg timestamp="20201024 13:01:29.584" level="INFO">${result} = 2020-10-24 13:01:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:01:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-24 ...</msg>
<status status="PASS" endtime="20201024 13:01:29.584" starttime="20201024 13:01:26.252"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:01:29.587" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:01:31.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:01:31.267" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:01 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-24 13:01 o3fs://bucket1.volume1.om/ozone-59479
dr...</msg>
<status status="PASS" endtime="20201024 13:01:31.267" starttime="20201024 13:01:29.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:01:31.268" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:01 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-24 13:01 o3fs://bucket1.volume1.om/ozone-59479
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:01 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201024 13:01:31.268" starttime="20201024 13:01:31.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:01:31.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:01:31.269" starttime="20201024 13:01:31.269"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:31.269" starttime="20201024 13:01:29.585"></status>
</kw>
<msg timestamp="20201024 13:01:31.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:01:31.269" starttime="20201024 13:01:29.584"></status>
</kw>
<msg timestamp="20201024 13:01:31.270" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:01 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-24 13:01 o3fs://bucket1.volume1.om/ozone-59479
dr...</msg>
<status status="PASS" endtime="20201024 13:01:31.270" starttime="20201024 13:01:29.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:01:31.270" starttime="20201024 13:01:31.270"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201024 13:01:31.270" critical="yes" starttime="20201024 13:01:26.247"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201024 13:01:31.271" starttime="20201024 13:01:26.201"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:03:02.371" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:03:02.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:03:02.379" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201024 13:03:02.379" starttime="20201024 13:03:02.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:03:02.380" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201024 13:03:02.380" starttime="20201024 13:03:02.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:03:02.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:03:02.380" starttime="20201024 13:03:02.380"></status>
</kw>
<status status="PASS" endtime="20201024 13:03:02.381" starttime="20201024 13:03:02.366"></status>
</kw>
<msg timestamp="20201024 13:03:02.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:03:02.381" starttime="20201024 13:03:02.366"></status>
</kw>
<msg timestamp="20201024 13:03:02.381" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201024 13:03:02.381" starttime="20201024 13:03:02.365"></status>
</kw>
<msg timestamp="20201024 13:03:02.381" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201024 13:03:02.381" starttime="20201024 13:03:02.365"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:03:02.384" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:03:02.384" starttime="20201024 13:03:02.384"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:03:02.385" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:03:02.385" starttime="20201024 13:03:02.384"></status>
</kw>
<status status="PASS" endtime="20201024 13:03:02.385" starttime="20201024 13:03:02.384"></status>
</kw>
<msg timestamp="20201024 13:03:02.385" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:03:02.385" starttime="20201024 13:03:02.383"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:03:02.386" starttime="20201024 13:03:02.386"></status>
</kw>
<msg timestamp="20201024 13:03:02.386" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201024 13:03:02.386" starttime="20201024 13:03:02.385"></status>
</kw>
<status status="PASS" endtime="20201024 13:03:02.387" starttime="20201024 13:03:02.383"></status>
</kw>
<msg timestamp="20201024 13:03:02.387" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:03:02.387" starttime="20201024 13:03:02.382"></status>
</kw>
<msg timestamp="20201024 13:03:02.387" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:03:02.387" starttime="20201024 13:03:02.381"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:03:02.390" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:03:36.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:03:36.614" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:03:04 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:03:04 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201024 13:03:36.614" starttime="20201024 13:03:02.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:03:36.616" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:03:04 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:03:04 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-24 13:03:04 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-24 13:03:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:03:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-50626DD48CBF-&gt;9e6a1779-d430-4b4c-ab21-4d00d7d292fb
2020-10-24 13:03:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-24 13:03:05 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-24 13:03:05 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-24 13:03:05 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-24 13:03:08 INFO  JobSubmitter:198 - number of splits:3
2020-10-24 13:03:08 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603544421480_0003
2020-10-24 13:03:08 INFO  YarnClientImpl:273 - Submitted application application_1603544421480_0003
2020-10-24 13:03:08 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603544421480_0003/
2020-10-24 13:03:08 INFO  Job:1339 - Running job: job_1603544421480_0003
2020-10-24 13:03:14 INFO  Job:1360 - Job job_1603544421480_0003 running in uber mode : false
2020-10-24 13:03:14 INFO  Job:1367 -  map 0% reduce 0%
2020-10-24 13:03:20 INFO  Job:1367 -  map 33% reduce 0%
2020-10-24 13:03:25 INFO  Job:1367 -  map 67% reduce 0%
2020-10-24 13:03:30 INFO  Job:1367 -  map 100% reduce 0%
2020-10-24 13:03:35 INFO  Job:1367 -  map 100% reduce 100%
2020-10-24 13:03:36 INFO  Job:1378 - Job job_1603544421480_0003 completed successfully
2020-10-24 13:03:36 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615237
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35596
		Total time spent by all reduces in occupied slots (ms)=13360
		Total time spent by all map tasks (ms)=8899
		Total time spent by all reduce tasks (ms)=3340
		Total vcore-milliseconds taken by all map tasks=8899
		Total vcore-milliseconds taken by all reduce tasks=3340
		Total megabyte-milliseconds taken by all map tasks=36450304
		Total megabyte-milliseconds taken by all reduce tasks=13680640
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=557
		CPU time spent (ms)=6590
		Physical memory (bytes) snapshot=1146318848
		Virtual memory (bytes) snapshot=16061001728
		Total committed heap usage (bytes)=1049100288
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.79 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201024 13:03:36.616" starttime="20201024 13:03:36.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:03:36.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:03:36.617" starttime="20201024 13:03:36.616"></status>
</kw>
<status status="PASS" endtime="20201024 13:03:36.617" starttime="20201024 13:03:02.388"></status>
</kw>
<msg timestamp="20201024 13:03:36.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:03:36.617" starttime="20201024 13:03:02.388"></status>
</kw>
<msg timestamp="20201024 13:03:36.618" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:03:04 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:03:04 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201024 13:03:36.618" starttime="20201024 13:03:02.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201024 13:03:36.618" starttime="20201024 13:03:36.618"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201024 13:03:36.618" critical="yes" starttime="20201024 13:03:02.364"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:03:36.624" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:03:36.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:03:36.630" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201024 13:03:36.630" starttime="20201024 13:03:36.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:03:36.631" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201024 13:03:36.631" starttime="20201024 13:03:36.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:03:36.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:03:36.632" starttime="20201024 13:03:36.631"></status>
</kw>
<status status="PASS" endtime="20201024 13:03:36.632" starttime="20201024 13:03:36.621"></status>
</kw>
<msg timestamp="20201024 13:03:36.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:03:36.632" starttime="20201024 13:03:36.621"></status>
</kw>
<msg timestamp="20201024 13:03:36.633" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201024 13:03:36.633" starttime="20201024 13:03:36.620"></status>
</kw>
<msg timestamp="20201024 13:03:36.633" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201024 13:03:36.633" starttime="20201024 13:03:36.620"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201024 13:03:36.633" level="INFO">${random} = 27</msg>
<status status="PASS" endtime="20201024 13:03:36.633" starttime="20201024 13:03:36.633"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:03:36.637" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:03:36.637" starttime="20201024 13:03:36.637"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:03:36.638" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:03:36.638" starttime="20201024 13:03:36.637"></status>
</kw>
<status status="PASS" endtime="20201024 13:03:36.638" starttime="20201024 13:03:36.636"></status>
</kw>
<msg timestamp="20201024 13:03:36.638" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:03:36.638" starttime="20201024 13:03:36.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:03:36.639" starttime="20201024 13:03:36.639"></status>
</kw>
<msg timestamp="20201024 13:03:36.639" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201024 13:03:36.639" starttime="20201024 13:03:36.638"></status>
</kw>
<status status="PASS" endtime="20201024 13:03:36.639" starttime="20201024 13:03:36.635"></status>
</kw>
<msg timestamp="20201024 13:03:36.639" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:03:36.639" starttime="20201024 13:03:36.634"></status>
</kw>
<msg timestamp="20201024 13:03:36.639" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:03:36.640" starttime="20201024 13:03:36.634"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:03:36.642" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:03:36.642" starttime="20201024 13:03:36.642"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:03:36.643" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:03:36.643" starttime="20201024 13:03:36.643"></status>
</kw>
<status status="PASS" endtime="20201024 13:03:36.643" starttime="20201024 13:03:36.642"></status>
</kw>
<msg timestamp="20201024 13:03:36.643" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:03:36.643" starttime="20201024 13:03:36.641"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:03:36.645" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201024 13:03:36.645" starttime="20201024 13:03:36.644"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:03:36.645" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201024 13:03:36.646" starttime="20201024 13:03:36.645"></status>
</kw>
<status status="PASS" endtime="20201024 13:03:36.646" starttime="20201024 13:03:36.644"></status>
</kw>
<msg timestamp="20201024 13:03:36.646" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201024 13:03:36.646" starttime="20201024 13:03:36.644"></status>
</kw>
<status status="PASS" endtime="20201024 13:03:36.646" starttime="20201024 13:03:36.641"></status>
</kw>
<msg timestamp="20201024 13:03:36.646" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201024 13:03:36.646" starttime="20201024 13:03:36.640"></status>
</kw>
<msg timestamp="20201024 13:03:36.646" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201024 13:03:36.646" starttime="20201024 13:03:36.640"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:03:36.649" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:03:36.649" starttime="20201024 13:03:36.649"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:03:36.650" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:03:36.650" starttime="20201024 13:03:36.650"></status>
</kw>
<status status="PASS" endtime="20201024 13:03:36.650" starttime="20201024 13:03:36.648"></status>
</kw>
<msg timestamp="20201024 13:03:36.650" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:03:36.650" starttime="20201024 13:03:36.648"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:03:36.651" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201024 13:03:36.651" starttime="20201024 13:03:36.651"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:03:36.652" level="INFO">${result} = /wordcount-27.txt</msg>
<status status="PASS" endtime="20201024 13:03:36.652" starttime="20201024 13:03:36.652"></status>
</kw>
<status status="PASS" endtime="20201024 13:03:36.652" starttime="20201024 13:03:36.651"></status>
</kw>
<msg timestamp="20201024 13:03:36.652" level="INFO">${path_with_leading} = /wordcount-27.txt</msg>
<status status="PASS" endtime="20201024 13:03:36.652" starttime="20201024 13:03:36.650"></status>
</kw>
<status status="PASS" endtime="20201024 13:03:36.652" starttime="20201024 13:03:36.648"></status>
</kw>
<msg timestamp="20201024 13:03:36.652" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-27.txt</msg>
<status status="PASS" endtime="20201024 13:03:36.653" starttime="20201024 13:03:36.647"></status>
</kw>
<msg timestamp="20201024 13:03:36.653" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-27.txt</msg>
<status status="PASS" endtime="20201024 13:03:36.653" starttime="20201024 13:03:36.646"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:03:36.656" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-27.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:04:12.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:04:12.375" level="INFO">${output} = 2020-10-24 13:03:38 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-24 13:03:38 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201024 13:04:12.375" starttime="20201024 13:03:36.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:04:12.376" level="INFO">2020-10-24 13:03:38 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-24 13:03:38 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-24 13:03:38 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:03:39 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-24 13:03:39 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-24 13:03:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:03:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A9C66DFFDC8F-&gt;9e6a1779-d430-4b4c-ab21-4d00d7d292fb
2020-10-24 13:03:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-24 13:03:40 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-24 13:03:40 INFO  JobSubmitter:198 - number of splits:3
2020-10-24 13:03:40 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603544421480_0004
2020-10-24 13:03:40 INFO  YarnClientImpl:273 - Submitted application application_1603544421480_0004
2020-10-24 13:03:40 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603544421480_0004/
2020-10-24 13:03:40 INFO  Job:1339 - Running job: job_1603544421480_0004
2020-10-24 13:03:48 INFO  Job:1360 - Job job_1603544421480_0004 running in uber mode : false
2020-10-24 13:03:48 INFO  Job:1367 -  map 0% reduce 0%
2020-10-24 13:03:54 INFO  Job:1367 -  map 33% reduce 0%
2020-10-24 13:03:59 INFO  Job:1367 -  map 67% reduce 0%
2020-10-24 13:04:04 INFO  Job:1367 -  map 100% reduce 0%
2020-10-24 13:04:08 INFO  Job:1367 -  map 100% reduce 100%
2020-10-24 13:04:11 INFO  Job:1378 - Job job_1603544421480_0004 completed successfully
2020-10-24 13:04:12 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36200
		Total time spent by all reduces in occupied slots (ms)=12684
		Total time spent by all map tasks (ms)=9050
		Total time spent by all reduce tasks (ms)=3171
		Total vcore-milliseconds taken by all map tasks=9050
		Total vcore-milliseconds taken by all reduce tasks=3171
		Total megabyte-milliseconds taken by all map tasks=37068800
		Total megabyte-milliseconds taken by all reduce tasks=12988416
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=555
		CPU time spent (ms)=6770
		Physical memory (bytes) snapshot=1143205888
		Virtual memory (bytes) snapshot=16069173248
		Total committed heap usage (bytes)=1053294592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201024 13:04:12.376" starttime="20201024 13:04:12.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:04:12.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:04:12.377" starttime="20201024 13:04:12.376"></status>
</kw>
<status status="PASS" endtime="20201024 13:04:12.377" starttime="20201024 13:03:36.654"></status>
</kw>
<msg timestamp="20201024 13:04:12.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:04:12.377" starttime="20201024 13:03:36.653"></status>
</kw>
<msg timestamp="20201024 13:04:12.378" level="INFO">${output} = 2020-10-24 13:03:38 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-24 13:03:38 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201024 13:04:12.378" starttime="20201024 13:03:36.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201024 13:04:12.379" starttime="20201024 13:04:12.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201024 13:04:12.379" starttime="20201024 13:04:12.379"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201024 13:04:12.379" critical="yes" starttime="20201024 13:03:36.619"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201024 13:04:12.380" starttime="20201024 13:03:02.316"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:01:35.802" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:01:35.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:01:35.806" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201024 13:01:35.806" starttime="20201024 13:01:35.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:01:35.806" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201024 13:01:35.807" starttime="20201024 13:01:35.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:01:35.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:01:35.807" starttime="20201024 13:01:35.807"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:35.807" starttime="20201024 13:01:35.797"></status>
</kw>
<msg timestamp="20201024 13:01:35.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:01:35.808" starttime="20201024 13:01:35.797"></status>
</kw>
<msg timestamp="20201024 13:01:35.808" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201024 13:01:35.808" starttime="20201024 13:01:35.797"></status>
</kw>
<msg timestamp="20201024 13:01:35.808" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201024 13:01:35.808" starttime="20201024 13:01:35.796"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:01:35.811" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:01:35.811" starttime="20201024 13:01:35.810"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:01:35.811" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:01:35.811" starttime="20201024 13:01:35.811"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:35.811" starttime="20201024 13:01:35.810"></status>
</kw>
<msg timestamp="20201024 13:01:35.811" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:01:35.811" starttime="20201024 13:01:35.810"></status>
</kw>
<status status="PASS" endtime="20201024 13:01:35.812" starttime="20201024 13:01:35.809"></status>
</kw>
<msg timestamp="20201024 13:01:35.812" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:01:35.812" starttime="20201024 13:01:35.809"></status>
</kw>
<msg timestamp="20201024 13:01:35.812" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:01:35.812" starttime="20201024 13:01:35.808"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:01:35.815" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:02:10.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:02:10.915" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:01:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:01:37 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201024 13:02:10.915" starttime="20201024 13:01:35.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:02:10.916" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:01:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:01:37 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-24 13:01:37 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-24 13:01:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:01:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-20FFBAEF2574-&gt;9e6a1779-d430-4b4c-ab21-4d00d7d292fb
2020-10-24 13:01:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-24 13:01:38 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-24 13:01:39 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-24 13:01:39 INFO  JobSubmitter:198 - number of splits:3
2020-10-24 13:01:39 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603544421480_0001
2020-10-24 13:01:39 INFO  YarnClientImpl:273 - Submitted application application_1603544421480_0001
2020-10-24 13:01:40 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603544421480_0001/
2020-10-24 13:01:40 INFO  Job:1339 - Running job: job_1603544421480_0001
2020-10-24 13:01:50 INFO  Job:1360 - Job job_1603544421480_0001 running in uber mode : false
2020-10-24 13:01:50 INFO  Job:1367 -  map 0% reduce 0%
2020-10-24 13:01:55 INFO  Job:1367 -  map 33% reduce 0%
2020-10-24 13:02:00 INFO  Job:1367 -  map 67% reduce 0%
2020-10-24 13:02:05 INFO  Job:1367 -  map 100% reduce 0%
2020-10-24 13:02:09 INFO  Job:1367 -  map 100% reduce 100%
2020-10-24 13:02:10 INFO  Job:1378 - Job job_1603544421480_0001 completed successfully
2020-10-24 13:02:10 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615465
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36840
		Total time spent by all reduces in occupied slots (ms)=13600
		Total time spent by all map tasks (ms)=9210
		Total time spent by all reduce tasks (ms)=3400
		Total vcore-milliseconds taken by all map tasks=9210
		Total vcore-milliseconds taken by all reduce tasks=3400
		Total megabyte-milliseconds taken by all map tasks=37724160
		Total megabyte-milliseconds taken by all reduce tasks=13926400
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=553
		CPU time spent (ms)=6410
		Physical memory (bytes) snapshot=1149349888
		Virtual memory (bytes) snapshot=16066658304
		Total committed heap usage (bytes)=1052246016
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.552 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201024 13:02:10.916" starttime="20201024 13:02:10.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:02:10.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:02:10.917" starttime="20201024 13:02:10.916"></status>
</kw>
<status status="PASS" endtime="20201024 13:02:10.917" starttime="20201024 13:01:35.813"></status>
</kw>
<msg timestamp="20201024 13:02:10.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:02:10.917" starttime="20201024 13:01:35.812"></status>
</kw>
<msg timestamp="20201024 13:02:10.918" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:01:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:01:37 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201024 13:02:10.918" starttime="20201024 13:01:35.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201024 13:02:10.918" starttime="20201024 13:02:10.918"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201024 13:02:10.918" critical="yes" starttime="20201024 13:01:35.796"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:02:10.923" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:02:10.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:02:10.929" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201024 13:02:10.929" starttime="20201024 13:02:10.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:02:10.929" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201024 13:02:10.930" starttime="20201024 13:02:10.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:02:10.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:02:10.930" starttime="20201024 13:02:10.930"></status>
</kw>
<status status="PASS" endtime="20201024 13:02:10.930" starttime="20201024 13:02:10.921"></status>
</kw>
<msg timestamp="20201024 13:02:10.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:02:10.930" starttime="20201024 13:02:10.921"></status>
</kw>
<msg timestamp="20201024 13:02:10.931" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201024 13:02:10.931" starttime="20201024 13:02:10.920"></status>
</kw>
<msg timestamp="20201024 13:02:10.931" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201024 13:02:10.931" starttime="20201024 13:02:10.920"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201024 13:02:10.931" level="INFO">${random} = 86</msg>
<status status="PASS" endtime="20201024 13:02:10.931" starttime="20201024 13:02:10.931"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:02:10.934" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:02:10.934" starttime="20201024 13:02:10.934"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:02:10.935" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:02:10.935" starttime="20201024 13:02:10.934"></status>
</kw>
<status status="PASS" endtime="20201024 13:02:10.935" starttime="20201024 13:02:10.934"></status>
</kw>
<msg timestamp="20201024 13:02:10.935" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:02:10.935" starttime="20201024 13:02:10.933"></status>
</kw>
<status status="PASS" endtime="20201024 13:02:10.935" starttime="20201024 13:02:10.933"></status>
</kw>
<msg timestamp="20201024 13:02:10.936" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:02:10.936" starttime="20201024 13:02:10.932"></status>
</kw>
<msg timestamp="20201024 13:02:10.936" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:02:10.936" starttime="20201024 13:02:10.932"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:02:10.938" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:02:10.938" starttime="20201024 13:02:10.938"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:02:10.939" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:02:10.939" starttime="20201024 13:02:10.938"></status>
</kw>
<status status="PASS" endtime="20201024 13:02:10.939" starttime="20201024 13:02:10.938"></status>
</kw>
<msg timestamp="20201024 13:02:10.939" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:02:10.939" starttime="20201024 13:02:10.937"></status>
</kw>
<status status="PASS" endtime="20201024 13:02:10.939" starttime="20201024 13:02:10.937"></status>
</kw>
<msg timestamp="20201024 13:02:10.939" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201024 13:02:10.939" starttime="20201024 13:02:10.936"></status>
</kw>
<msg timestamp="20201024 13:02:10.939" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201024 13:02:10.939" starttime="20201024 13:02:10.936"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:02:10.942" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:02:10.942" starttime="20201024 13:02:10.942"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:02:10.943" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:02:10.943" starttime="20201024 13:02:10.942"></status>
</kw>
<status status="PASS" endtime="20201024 13:02:10.943" starttime="20201024 13:02:10.941"></status>
</kw>
<msg timestamp="20201024 13:02:10.943" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:02:10.943" starttime="20201024 13:02:10.941"></status>
</kw>
<status status="PASS" endtime="20201024 13:02:10.943" starttime="20201024 13:02:10.940"></status>
</kw>
<msg timestamp="20201024 13:02:10.943" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-86.txt</msg>
<status status="PASS" endtime="20201024 13:02:10.943" starttime="20201024 13:02:10.940"></status>
</kw>
<msg timestamp="20201024 13:02:10.943" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-86.txt</msg>
<status status="PASS" endtime="20201024 13:02:10.943" starttime="20201024 13:02:10.940"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:02:10.946" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-86.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:02:48.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:02:48.229" level="INFO">${output} = 2020-10-24 13:02:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-24 13:02:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201024 13:02:48.229" starttime="20201024 13:02:10.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:02:48.231" level="INFO">2020-10-24 13:02:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-24 13:02:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-24 13:02:13 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:02:13 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-24 13:02:13 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-24 13:02:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:02:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C745A773C15E-&gt;9e6a1779-d430-4b4c-ab21-4d00d7d292fb
2020-10-24 13:02:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-24 13:02:13 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-24 13:02:19 INFO  JobSubmitter:198 - number of splits:3
2020-10-24 13:02:19 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603544421480_0002
2020-10-24 13:02:19 INFO  YarnClientImpl:273 - Submitted application application_1603544421480_0002
2020-10-24 13:02:19 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603544421480_0002/
2020-10-24 13:02:19 INFO  Job:1339 - Running job: job_1603544421480_0002
2020-10-24 13:02:26 INFO  Job:1360 - Job job_1603544421480_0002 running in uber mode : false
2020-10-24 13:02:26 INFO  Job:1367 -  map 0% reduce 0%
2020-10-24 13:02:32 INFO  Job:1367 -  map 33% reduce 0%
2020-10-24 13:02:37 INFO  Job:1367 -  map 67% reduce 0%
2020-10-24 13:02:42 INFO  Job:1367 -  map 100% reduce 0%
2020-10-24 13:02:46 INFO  Job:1367 -  map 100% reduce 100%
2020-10-24 13:02:47 INFO  Job:1378 - Job job_1603544421480_0002 completed successfully
2020-10-24 13:02:47 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36972
		Total time spent by all reduces in occupied slots (ms)=13948
		Total time spent by all map tasks (ms)=9243
		Total time spent by all reduce tasks (ms)=3487
		Total vcore-milliseconds taken by all map tasks=9243
		Total vcore-milliseconds taken by all reduce tasks=3487
		Total megabyte-milliseconds taken by all map tasks=37859328
		Total megabyte-milliseconds taken by all reduce tasks=14282752
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=547
		CPU time spent (ms)=6480
		Physical memory (bytes) snapshot=1121398784
		Virtual memory (bytes) snapshot=16051572736
		Total committed heap usage (bytes)=1053294592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201024 13:02:48.231" starttime="20201024 13:02:48.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:02:48.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:02:48.232" starttime="20201024 13:02:48.231"></status>
</kw>
<status status="PASS" endtime="20201024 13:02:48.232" starttime="20201024 13:02:10.944"></status>
</kw>
<msg timestamp="20201024 13:02:48.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:02:48.232" starttime="20201024 13:02:10.944"></status>
</kw>
<msg timestamp="20201024 13:02:48.232" level="INFO">${output} = 2020-10-24 13:02:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-24 13:02:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201024 13:02:48.232" starttime="20201024 13:02:10.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201024 13:02:48.233" starttime="20201024 13:02:48.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201024 13:02:48.233" starttime="20201024 13:02:48.233"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201024 13:02:48.234" critical="yes" starttime="20201024 13:02:10.919"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201024 13:02:48.235" starttime="20201024 13:01:35.753"></status>
</suite>
<status status="PASS" elapsedtime="180049" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:05:48.712" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:05:50.829" level="INFO">${rc} = 255</msg>
<msg timestamp="20201024 13:05:50.829" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201024 13:05:50.830" starttime="20201024 13:05:48.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:05:50.831" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201024 13:05:50.831" starttime="20201024 13:05:50.830"></status>
</kw>
<msg timestamp="20201024 13:05:50.831" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201024 13:05:50.831" starttime="20201024 13:05:48.707"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:05:50.836" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:05:52.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:05:52.727" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:05:52.727" starttime="20201024 13:05:50.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:05:52.728" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:05:52.728" starttime="20201024 13:05:52.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:05:52.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:05:52.729" starttime="20201024 13:05:52.728"></status>
</kw>
<status status="PASS" endtime="20201024 13:05:52.729" starttime="20201024 13:05:50.833"></status>
</kw>
<msg timestamp="20201024 13:05:52.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:05:52.729" starttime="20201024 13:05:50.832"></status>
</kw>
<msg timestamp="20201024 13:05:52.730" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201024 13:05:52.730" starttime="20201024 13:05:50.832"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201024 13:05:52.730" starttime="20201024 13:05:52.730"></status>
</kw>
<status status="PASS" endtime="20201024 13:05:52.730" starttime="20201024 13:05:50.832"></status>
</kw>
<status status="PASS" endtime="20201024 13:05:52.730" starttime="20201024 13:05:50.831"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:05:52.734" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:05:54.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:05:54.639" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:05:54.639" starttime="20201024 13:05:52.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:05:54.640" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:05:54.640" starttime="20201024 13:05:54.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:05:54.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:05:54.641" starttime="20201024 13:05:54.640"></status>
</kw>
<status status="PASS" endtime="20201024 13:05:54.641" starttime="20201024 13:05:52.732"></status>
</kw>
<msg timestamp="20201024 13:05:54.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:05:54.641" starttime="20201024 13:05:52.732"></status>
</kw>
<status status="PASS" endtime="20201024 13:05:54.641" starttime="20201024 13:05:52.731"></status>
</kw>
<status status="PASS" endtime="20201024 13:05:54.642" starttime="20201024 13:05:52.731"></status>
</kw>
<status status="PASS" endtime="20201024 13:05:54.642" starttime="20201024 13:05:52.730"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201024 13:05:54.642" starttime="20201024 13:05:54.642"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:05:54.646" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:05:56.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:05:56.603" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-24T13:05:54.518Z",
  "modificat...</msg>
<status status="PASS" endtime="20201024 13:05:56.603" starttime="20201024 13:05:54.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:05:56.604" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-24T13:05:54.518Z",
  "modificationTime" : "2020-10-24T13:05:54.518Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201024 13:05:56.604" starttime="20201024 13:05:56.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:05:56.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:05:56.605" starttime="20201024 13:05:56.604"></status>
</kw>
<status status="PASS" endtime="20201024 13:05:56.605" starttime="20201024 13:05:54.643"></status>
</kw>
<msg timestamp="20201024 13:05:56.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:05:56.605" starttime="20201024 13:05:54.643"></status>
</kw>
<msg timestamp="20201024 13:05:56.605" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-24T13:05:54.518Z",
  "modificat...</msg>
<status status="PASS" endtime="20201024 13:05:56.605" starttime="20201024 13:05:54.642"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201024 13:05:56.606" starttime="20201024 13:05:56.606"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:05:56.609" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:05:56.609" starttime="20201024 13:05:56.609"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:05:56.610" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:05:56.610" starttime="20201024 13:05:56.609"></status>
</kw>
<status status="PASS" endtime="20201024 13:05:56.610" starttime="20201024 13:05:56.609"></status>
</kw>
<msg timestamp="20201024 13:05:56.610" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:05:56.610" starttime="20201024 13:05:56.608"></status>
</kw>
<status status="PASS" endtime="20201024 13:05:56.610" starttime="20201024 13:05:56.608"></status>
</kw>
<msg timestamp="20201024 13:05:56.610" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201024 13:05:56.611" starttime="20201024 13:05:56.607"></status>
</kw>
<msg timestamp="20201024 13:05:56.611" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201024 13:05:56.611" starttime="20201024 13:05:56.606"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:05:56.614" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:05:58.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:05:58.462" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:05:58.462" starttime="20201024 13:05:56.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:05:58.463" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:05:58.463" starttime="20201024 13:05:58.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:05:58.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:05:58.464" starttime="20201024 13:05:58.463"></status>
</kw>
<status status="PASS" endtime="20201024 13:05:58.464" starttime="20201024 13:05:56.611"></status>
</kw>
<msg timestamp="20201024 13:05:58.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:05:58.464" starttime="20201024 13:05:56.611"></status>
</kw>
<status status="PASS" endtime="20201024 13:05:58.464" starttime="20201024 13:05:56.611"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:05:58.468" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:06:03.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:06:03.427" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:06:03.427" starttime="20201024 13:05:58.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:06:03.428" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:06:03.428" starttime="20201024 13:06:03.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:06:03.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:06:03.429" starttime="20201024 13:06:03.428"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:03.429" starttime="20201024 13:05:58.465"></status>
</kw>
<msg timestamp="20201024 13:06:03.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:06:03.429" starttime="20201024 13:05:58.465"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:03.429" starttime="20201024 13:05:58.464"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:06:03.433" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:06:07.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:06:07.128" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:06:07.128" starttime="20201024 13:06:03.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:06:07.129" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:06:07.129" starttime="20201024 13:06:07.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:06:07.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:06:07.130" starttime="20201024 13:06:07.129"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:07.130" starttime="20201024 13:06:03.430"></status>
</kw>
<msg timestamp="20201024 13:06:07.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:06:07.130" starttime="20201024 13:06:03.430"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:07.131" starttime="20201024 13:06:03.429"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:06:07.134" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:06:10.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:06:10.810" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:06:10.810" starttime="20201024 13:06:07.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:06:10.811" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:06:10.811" starttime="20201024 13:06:10.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:06:10.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:06:10.812" starttime="20201024 13:06:10.811"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:10.812" starttime="20201024 13:06:07.132"></status>
</kw>
<msg timestamp="20201024 13:06:10.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:06:10.812" starttime="20201024 13:06:07.131"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:10.813" starttime="20201024 13:06:07.131"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201024 13:06:10.813" critical="yes" starttime="20201024 13:05:48.706"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:06:10.818" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:06:10.818" starttime="20201024 13:06:10.818"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:06:10.819" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:06:10.819" starttime="20201024 13:06:10.819"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:10.819" starttime="20201024 13:06:10.817"></status>
</kw>
<msg timestamp="20201024 13:06:10.819" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:06:10.819" starttime="20201024 13:06:10.817"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:10.820" starttime="20201024 13:06:10.816"></status>
</kw>
<msg timestamp="20201024 13:06:10.820" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201024 13:06:10.820" starttime="20201024 13:06:10.815"></status>
</kw>
<msg timestamp="20201024 13:06:10.820" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201024 13:06:10.820" starttime="20201024 13:06:10.815"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:06:10.824" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:06:12.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:06:12.782" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:06:12.782" starttime="20201024 13:06:10.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:06:12.783" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:06:12.783" starttime="20201024 13:06:12.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:06:12.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:06:12.784" starttime="20201024 13:06:12.784"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:12.784" starttime="20201024 13:06:10.821"></status>
</kw>
<msg timestamp="20201024 13:06:12.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:06:12.785" starttime="20201024 13:06:10.821"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:12.785" starttime="20201024 13:06:10.820"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:06:12.788" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:06:14.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:06:14.834" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:06:14.834" starttime="20201024 13:06:12.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:06:14.835" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:06:14.835" starttime="20201024 13:06:14.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:06:14.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:06:14.836" starttime="20201024 13:06:14.835"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:14.836" starttime="20201024 13:06:12.786"></status>
</kw>
<msg timestamp="20201024 13:06:14.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:06:14.836" starttime="20201024 13:06:12.785"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:14.836" starttime="20201024 13:06:12.785"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201024 13:06:14.837" critical="yes" starttime="20201024 13:06:10.814"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201024 13:06:14.838" starttime="20201024 13:05:48.655"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:07:47.794" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:07:47.794" starttime="20201024 13:07:47.794"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:07:47.795" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:07:47.795" starttime="20201024 13:07:47.794"></status>
</kw>
<status status="PASS" endtime="20201024 13:07:47.795" starttime="20201024 13:07:47.794"></status>
</kw>
<msg timestamp="20201024 13:07:47.795" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:07:47.795" starttime="20201024 13:07:47.793"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:07:47.796" starttime="20201024 13:07:47.796"></status>
</kw>
<msg timestamp="20201024 13:07:47.796" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201024 13:07:47.796" starttime="20201024 13:07:47.795"></status>
</kw>
<status status="PASS" endtime="20201024 13:07:47.796" starttime="20201024 13:07:47.793"></status>
</kw>
<msg timestamp="20201024 13:07:47.796" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:07:47.796" starttime="20201024 13:07:47.792"></status>
</kw>
<msg timestamp="20201024 13:07:47.796" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:07:47.796" starttime="20201024 13:07:47.791"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201024 13:07:47.797" level="INFO">${random} = 40142</msg>
<status status="PASS" endtime="20201024 13:07:47.797" starttime="20201024 13:07:47.797"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:07:47.803" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-40142 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:07:51.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:07:51.051" level="INFO">${output} = 2020-10-24 13:07:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201024 13:07:51.051" starttime="20201024 13:07:47.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:07:51.052" level="INFO">2020-10-24 13:07:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:49 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-24 13:07:49 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:07:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-24 13:07:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-24 13:07:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:07:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-923FEBFC8CF6-&gt;cf65f03e-2cb1-4a7b-9af0-a78834fd3772
2020-10-24 13:07:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-24 13:07:50 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201024 13:07:51.052" starttime="20201024 13:07:51.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:07:51.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:07:51.052" starttime="20201024 13:07:51.052"></status>
</kw>
<status status="PASS" endtime="20201024 13:07:51.053" starttime="20201024 13:07:47.798"></status>
</kw>
<msg timestamp="20201024 13:07:51.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:07:51.053" starttime="20201024 13:07:47.797"></status>
</kw>
<msg timestamp="20201024 13:07:51.053" level="INFO">${result} = 2020-10-24 13:07:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201024 13:07:51.053" starttime="20201024 13:07:47.797"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:07:51.056" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:07:52.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:07:52.763" level="INFO">${output} = 2020-10-24 13:07:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:52 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201024 13:07:52.763" starttime="20201024 13:07:51.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:07:52.764" level="INFO">2020-10-24 13:07:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:52 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:05 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-24 13:06 ofs://om/volume1/bucket1/ozone-10209
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-24 13:07 ofs://om/volume1/bucket1/ozone-40142
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:06 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:07 ofs://om/volume1/bucket1/wordcount-70.txt
2020-10-24 13:07:52 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201024 13:07:52.764" starttime="20201024 13:07:52.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:07:52.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:07:52.765" starttime="20201024 13:07:52.765"></status>
</kw>
<status status="PASS" endtime="20201024 13:07:52.765" starttime="20201024 13:07:51.054"></status>
</kw>
<msg timestamp="20201024 13:07:52.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:07:52.765" starttime="20201024 13:07:51.054"></status>
</kw>
<msg timestamp="20201024 13:07:52.766" level="INFO">${result} = 2020-10-24 13:07:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:52 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201024 13:07:52.766" starttime="20201024 13:07:51.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:07:52.766" starttime="20201024 13:07:52.766"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201024 13:07:52.766" critical="yes" starttime="20201024 13:07:47.790"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201024 13:07:52.767" starttime="20201024 13:07:47.746"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:06:19.423" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:06:19.423" starttime="20201024 13:06:19.423"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:06:19.424" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:06:19.424" starttime="20201024 13:06:19.423"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:19.424" starttime="20201024 13:06:19.422"></status>
</kw>
<msg timestamp="20201024 13:06:19.424" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:06:19.424" starttime="20201024 13:06:19.422"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:19.424" starttime="20201024 13:06:19.421"></status>
</kw>
<msg timestamp="20201024 13:06:19.424" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:06:19.424" starttime="20201024 13:06:19.421"></status>
</kw>
<msg timestamp="20201024 13:06:19.424" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:06:19.424" starttime="20201024 13:06:19.420"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201024 13:06:19.425" level="INFO">${random} = 10209</msg>
<status status="PASS" endtime="20201024 13:06:19.425" starttime="20201024 13:06:19.424"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:06:19.431" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-10209 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:06:22.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:06:22.916" level="INFO">${output} = 2020-10-24 13:06:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:20 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201024 13:06:22.916" starttime="20201024 13:06:19.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:06:22.917" level="INFO">2020-10-24 13:06:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:21 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-24 13:06:21 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:06:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-24 13:06:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-24 13:06:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:06:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F1D5F52B5B38-&gt;cf65f03e-2cb1-4a7b-9af0-a78834fd3772
2020-10-24 13:06:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-24 13:06:22 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201024 13:06:22.917" starttime="20201024 13:06:22.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:06:22.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:06:22.918" starttime="20201024 13:06:22.917"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:22.918" starttime="20201024 13:06:19.426"></status>
</kw>
<msg timestamp="20201024 13:06:22.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:06:22.918" starttime="20201024 13:06:19.425"></status>
</kw>
<msg timestamp="20201024 13:06:22.918" level="INFO">${result} = 2020-10-24 13:06:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:20 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201024 13:06:22.918" starttime="20201024 13:06:19.425"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:06:22.922" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:06:24.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:06:24.533" level="INFO">${output} = 2020-10-24 13:06:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:24 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201024 13:06:24.533" starttime="20201024 13:06:22.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:06:24.534" level="INFO">2020-10-24 13:06:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:24 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:05 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-24 13:06 o3fs://bucket1.volume1.om/ozone-10209
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:06 o3fs://bucket1.volume1.om/user
2020-10-24 13:06:24 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201024 13:06:24.534" starttime="20201024 13:06:24.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:06:24.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:06:24.535" starttime="20201024 13:06:24.534"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:24.535" starttime="20201024 13:06:22.919"></status>
</kw>
<msg timestamp="20201024 13:06:24.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:06:24.535" starttime="20201024 13:06:22.919"></status>
</kw>
<msg timestamp="20201024 13:06:24.535" level="INFO">${result} = 2020-10-24 13:06:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:24 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201024 13:06:24.535" starttime="20201024 13:06:22.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:06:24.536" starttime="20201024 13:06:24.536"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201024 13:06:24.536" critical="yes" starttime="20201024 13:06:19.419"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201024 13:06:24.537" starttime="20201024 13:06:19.372"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:07:57.295" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:07:57.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:07:57.301" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201024 13:07:57.301" starttime="20201024 13:07:57.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:07:57.302" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201024 13:07:57.302" starttime="20201024 13:07:57.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:07:57.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:07:57.303" starttime="20201024 13:07:57.302"></status>
</kw>
<status status="PASS" endtime="20201024 13:07:57.303" starttime="20201024 13:07:57.291"></status>
</kw>
<msg timestamp="20201024 13:07:57.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:07:57.303" starttime="20201024 13:07:57.290"></status>
</kw>
<msg timestamp="20201024 13:07:57.304" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201024 13:07:57.304" starttime="20201024 13:07:57.290"></status>
</kw>
<msg timestamp="20201024 13:07:57.304" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201024 13:07:57.304" starttime="20201024 13:07:57.290"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:07:57.307" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:07:57.307" starttime="20201024 13:07:57.306"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:07:57.307" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:07:57.307" starttime="20201024 13:07:57.307"></status>
</kw>
<status status="PASS" endtime="20201024 13:07:57.308" starttime="20201024 13:07:57.306"></status>
</kw>
<msg timestamp="20201024 13:07:57.308" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:07:57.308" starttime="20201024 13:07:57.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:07:57.308" starttime="20201024 13:07:57.308"></status>
</kw>
<msg timestamp="20201024 13:07:57.309" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201024 13:07:57.309" starttime="20201024 13:07:57.308"></status>
</kw>
<status status="PASS" endtime="20201024 13:07:57.309" starttime="20201024 13:07:57.305"></status>
</kw>
<msg timestamp="20201024 13:07:57.309" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:07:57.309" starttime="20201024 13:07:57.304"></status>
</kw>
<msg timestamp="20201024 13:07:57.309" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:07:57.309" starttime="20201024 13:07:57.304"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:07:57.313" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:08:33.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:08:33.888" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:07:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07...</msg>
<status status="PASS" endtime="20201024 13:08:33.888" starttime="20201024 13:07:57.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:08:33.889" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:07:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:59 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-24 13:07:59 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:07:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-24 13:07:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-24 13:07:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:07:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1F072E8F60BA-&gt;cf65f03e-2cb1-4a7b-9af0-a78834fd3772
2020-10-24 13:07:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-24 13:08:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:00 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.2:8032
2020-10-24 13:08:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:01 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-24 13:08:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:01 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-24 13:08:01 INFO  JobSubmitter:202 - number of splits:3
2020-10-24 13:08:01 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603544694465_0003
2020-10-24 13:08:01 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-24 13:08:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:01 INFO  Configuration:2752 - resource-types.xml not found
2020-10-24 13:08:01 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-24 13:08:01 INFO  YarnClientImpl:324 - Submitted application application_1603544694465_0003
2020-10-24 13:08:01 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603544694465_0003/
2020-10-24 13:08:01 INFO  Job:1619 - Running job: job_1603544694465_0003
2020-10-24 13:08:09 INFO  Job:1640 - Job job_1603544694465_0003 running in uber mode : false
2020-10-24 13:08:09 INFO  Job:1647 -  map 0% reduce 0%
2020-10-24 13:08:15 INFO  Job:1647 -  map 33% reduce 0%
2020-10-24 13:08:20 INFO  Job:1647 -  map 67% reduce 0%
2020-10-24 13:08:25 INFO  Job:1647 -  map 100% reduce 0%
2020-10-24 13:08:30 INFO  Job:1647 -  map 100% reduce 100%
2020-10-24 13:08:33 INFO  Job:1658 - Job job_1603544694465_0003 completed successfully
2020-10-24 13:08:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:33 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021325
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37848
		Total time spent by all reduces in occupied slots (ms)=13852
		Total time spent by all map tasks (ms)=9462
		Total time spent by all reduce tasks (ms)=3463
		Total vcore-milliseconds taken by all map tasks=9462
		Total vcore-milliseconds taken by all reduce tasks=3463
		Total megabyte-milliseconds taken by all map tasks=38756352
		Total megabyte-milliseconds taken by all reduce tasks=14184448
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=605
		CPU time spent (ms)=6970
		Physical memory (bytes) snapshot=1194860544
		Virtual memory (bytes) snapshot=16082112512
		Total committed heap usage (bytes)=1062207488
		Peak Map Physical memory (bytes)=302493696
		Peak Map Virtual memory (bytes)=4016820224
		Peak Reduce Physical memory (bytes)=302841856
		Peak Reduce Virtual memory (bytes)=4040257536
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.674 seconds
2020-10-24 13:08:33 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-24 13:08:33 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201024 13:08:33.890" starttime="20201024 13:08:33.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:08:33.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:08:33.890" starttime="20201024 13:08:33.890"></status>
</kw>
<status status="PASS" endtime="20201024 13:08:33.890" starttime="20201024 13:07:57.310"></status>
</kw>
<msg timestamp="20201024 13:08:33.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:08:33.891" starttime="20201024 13:07:57.310"></status>
</kw>
<msg timestamp="20201024 13:08:33.891" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:07:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07...</msg>
<status status="PASS" endtime="20201024 13:08:33.891" starttime="20201024 13:07:57.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201024 13:08:33.892" starttime="20201024 13:08:33.891"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201024 13:08:33.892" critical="yes" starttime="20201024 13:07:57.289"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:08:33.897" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:08:33.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:08:33.902" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201024 13:08:33.902" starttime="20201024 13:08:33.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:08:33.903" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201024 13:08:33.903" starttime="20201024 13:08:33.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:08:33.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:08:33.904" starttime="20201024 13:08:33.904"></status>
</kw>
<status status="PASS" endtime="20201024 13:08:33.904" starttime="20201024 13:08:33.894"></status>
</kw>
<msg timestamp="20201024 13:08:33.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:08:33.904" starttime="20201024 13:08:33.894"></status>
</kw>
<msg timestamp="20201024 13:08:33.905" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201024 13:08:33.905" starttime="20201024 13:08:33.894"></status>
</kw>
<msg timestamp="20201024 13:08:33.905" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201024 13:08:33.905" starttime="20201024 13:08:33.893"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201024 13:08:33.905" level="INFO">${random} = 55</msg>
<status status="PASS" endtime="20201024 13:08:33.905" starttime="20201024 13:08:33.905"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:08:33.909" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:08:33.909" starttime="20201024 13:08:33.908"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:08:33.909" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:08:33.909" starttime="20201024 13:08:33.909"></status>
</kw>
<status status="PASS" endtime="20201024 13:08:33.909" starttime="20201024 13:08:33.908"></status>
</kw>
<msg timestamp="20201024 13:08:33.910" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:08:33.910" starttime="20201024 13:08:33.907"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:08:33.911" starttime="20201024 13:08:33.910"></status>
</kw>
<msg timestamp="20201024 13:08:33.911" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201024 13:08:33.911" starttime="20201024 13:08:33.910"></status>
</kw>
<status status="PASS" endtime="20201024 13:08:33.911" starttime="20201024 13:08:33.907"></status>
</kw>
<msg timestamp="20201024 13:08:33.911" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:08:33.911" starttime="20201024 13:08:33.906"></status>
</kw>
<msg timestamp="20201024 13:08:33.911" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:08:33.911" starttime="20201024 13:08:33.905"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:08:33.914" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:08:33.914" starttime="20201024 13:08:33.914"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:08:33.915" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:08:33.915" starttime="20201024 13:08:33.914"></status>
</kw>
<status status="PASS" endtime="20201024 13:08:33.915" starttime="20201024 13:08:33.913"></status>
</kw>
<msg timestamp="20201024 13:08:33.915" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:08:33.915" starttime="20201024 13:08:33.913"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:08:33.916" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201024 13:08:33.916" starttime="20201024 13:08:33.916"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:08:33.917" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201024 13:08:33.917" starttime="20201024 13:08:33.917"></status>
</kw>
<status status="PASS" endtime="20201024 13:08:33.917" starttime="20201024 13:08:33.915"></status>
</kw>
<msg timestamp="20201024 13:08:33.917" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201024 13:08:33.917" starttime="20201024 13:08:33.915"></status>
</kw>
<status status="PASS" endtime="20201024 13:08:33.918" starttime="20201024 13:08:33.912"></status>
</kw>
<msg timestamp="20201024 13:08:33.918" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201024 13:08:33.918" starttime="20201024 13:08:33.912"></status>
</kw>
<msg timestamp="20201024 13:08:33.918" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201024 13:08:33.918" starttime="20201024 13:08:33.911"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:08:33.921" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:08:33.921" starttime="20201024 13:08:33.920"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:08:33.921" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:08:33.921" starttime="20201024 13:08:33.921"></status>
</kw>
<status status="PASS" endtime="20201024 13:08:33.921" starttime="20201024 13:08:33.920"></status>
</kw>
<msg timestamp="20201024 13:08:33.922" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:08:33.922" starttime="20201024 13:08:33.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:08:33.923" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201024 13:08:33.923" starttime="20201024 13:08:33.922"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:08:33.923" level="INFO">${result} = /wordcount-55.txt</msg>
<status status="PASS" endtime="20201024 13:08:33.923" starttime="20201024 13:08:33.923"></status>
</kw>
<status status="PASS" endtime="20201024 13:08:33.923" starttime="20201024 13:08:33.922"></status>
</kw>
<msg timestamp="20201024 13:08:33.924" level="INFO">${path_with_leading} = /wordcount-55.txt</msg>
<status status="PASS" endtime="20201024 13:08:33.924" starttime="20201024 13:08:33.922"></status>
</kw>
<status status="PASS" endtime="20201024 13:08:33.924" starttime="20201024 13:08:33.919"></status>
</kw>
<msg timestamp="20201024 13:08:33.924" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-55.txt</msg>
<status status="PASS" endtime="20201024 13:08:33.924" starttime="20201024 13:08:33.918"></status>
</kw>
<msg timestamp="20201024 13:08:33.924" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-55.txt</msg>
<status status="PASS" endtime="20201024 13:08:33.924" starttime="20201024 13:08:33.918"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:08:33.929" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-55.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:09:12.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:09:12.493" level="INFO">${output} = 2020-10-24 13:08:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:35 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201024 13:09:12.493" starttime="20201024 13:08:33.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:09:12.494" level="INFO">2020-10-24 13:08:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.2:8032
2020-10-24 13:08:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-24 13:08:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:36 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-24 13:08:36 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:08:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-24 13:08:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-24 13:08:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:08:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CB13D9423F9C-&gt;cf65f03e-2cb1-4a7b-9af0-a78834fd3772
2020-10-24 13:08:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-24 13:08:37 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-24 13:08:37 INFO  JobSubmitter:202 - number of splits:3
2020-10-24 13:08:40 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603544694465_0004
2020-10-24 13:08:40 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-24 13:08:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:40 INFO  Configuration:2752 - resource-types.xml not found
2020-10-24 13:08:40 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-24 13:08:40 INFO  YarnClientImpl:324 - Submitted application application_1603544694465_0004
2020-10-24 13:08:40 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603544694465_0004/
2020-10-24 13:08:40 INFO  Job:1619 - Running job: job_1603544694465_0004
2020-10-24 13:08:47 INFO  Job:1640 - Job job_1603544694465_0004 running in uber mode : false
2020-10-24 13:08:47 INFO  Job:1647 -  map 0% reduce 0%
2020-10-24 13:08:53 INFO  Job:1647 -  map 33% reduce 0%
2020-10-24 13:08:58 INFO  Job:1647 -  map 67% reduce 0%
2020-10-24 13:09:03 INFO  Job:1647 -  map 100% reduce 0%
2020-10-24 13:09:08 INFO  Job:1647 -  map 100% reduce 100%
2020-10-24 13:09:12 INFO  Job:1658 - Job job_1603544694465_0004 completed successfully
2020-10-24 13:09:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:09:12 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38356
		Total time spent by all reduces in occupied slots (ms)=15800
		Total time spent by all map tasks (ms)=9589
		Total time spent by all reduce tasks (ms)=3950
		Total vcore-milliseconds taken by all map tasks=9589
		Total vcore-milliseconds taken by all reduce tasks=3950
		Total megabyte-milliseconds taken by all map tasks=39276544
		Total megabyte-milliseconds taken by all reduce tasks=16179200
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=659
		CPU time spent (ms)=6500
		Physical memory (bytes) snapshot=1127858176
		Virtual memory (bytes) snapshot=16036581376
		Total committed heap usage (bytes)=1056964608
		Peak Map Physical memory (bytes)=292843520
		Peak Map Virtual memory (bytes)=4012093440
		Peak Reduce Physical memory (bytes)=274591744
		Peak Reduce Virtual memory (bytes)=4019548160
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-24 13:09:12 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201024 13:09:12.494" starttime="20201024 13:09:12.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:09:12.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:09:12.495" starttime="20201024 13:09:12.494"></status>
</kw>
<status status="PASS" endtime="20201024 13:09:12.495" starttime="20201024 13:08:33.925"></status>
</kw>
<msg timestamp="20201024 13:09:12.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:09:12.495" starttime="20201024 13:08:33.925"></status>
</kw>
<msg timestamp="20201024 13:09:12.496" level="INFO">${output} = 2020-10-24 13:08:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:08:35 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201024 13:09:12.496" starttime="20201024 13:08:33.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201024 13:09:12.496" starttime="20201024 13:09:12.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201024 13:09:12.497" starttime="20201024 13:09:12.497"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201024 13:09:12.497" critical="yes" starttime="20201024 13:08:33.893"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201024 13:09:12.498" starttime="20201024 13:07:57.245"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:06:29.109" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:06:29.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:06:29.114" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201024 13:06:29.114" starttime="20201024 13:06:29.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:06:29.115" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201024 13:06:29.115" starttime="20201024 13:06:29.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:06:29.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:06:29.115" starttime="20201024 13:06:29.115"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:29.116" starttime="20201024 13:06:29.104"></status>
</kw>
<msg timestamp="20201024 13:06:29.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:06:29.116" starttime="20201024 13:06:29.104"></status>
</kw>
<msg timestamp="20201024 13:06:29.116" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201024 13:06:29.116" starttime="20201024 13:06:29.104"></status>
</kw>
<msg timestamp="20201024 13:06:29.116" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201024 13:06:29.116" starttime="20201024 13:06:29.103"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:06:29.119" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:06:29.119" starttime="20201024 13:06:29.119"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:06:29.120" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:06:29.120" starttime="20201024 13:06:29.119"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:29.120" starttime="20201024 13:06:29.118"></status>
</kw>
<msg timestamp="20201024 13:06:29.120" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:06:29.120" starttime="20201024 13:06:29.118"></status>
</kw>
<status status="PASS" endtime="20201024 13:06:29.120" starttime="20201024 13:06:29.118"></status>
</kw>
<msg timestamp="20201024 13:06:29.120" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:06:29.121" starttime="20201024 13:06:29.117"></status>
</kw>
<msg timestamp="20201024 13:06:29.121" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:06:29.121" starttime="20201024 13:06:29.116"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:06:29.125" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:07:07.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:07:07.785" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:06:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06...</msg>
<status status="PASS" endtime="20201024 13:07:07.785" starttime="20201024 13:06:29.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:07:07.786" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:06:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:31 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-24 13:06:31 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:06:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-24 13:06:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-24 13:06:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:06:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-927A69D7BDD1-&gt;cf65f03e-2cb1-4a7b-9af0-a78834fd3772
2020-10-24 13:06:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-24 13:06:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:32 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.2:8032
2020-10-24 13:06:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:32 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-24 13:06:32 INFO  JobSubmitter:202 - number of splits:3
2020-10-24 13:06:33 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603544694465_0001
2020-10-24 13:06:33 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-24 13:06:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:33 INFO  Configuration:2752 - resource-types.xml not found
2020-10-24 13:06:33 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-24 13:06:33 INFO  YarnClientImpl:324 - Submitted application application_1603544694465_0001
2020-10-24 13:06:33 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603544694465_0001/
2020-10-24 13:06:33 INFO  Job:1619 - Running job: job_1603544694465_0001
2020-10-24 13:06:42 INFO  Job:1640 - Job job_1603544694465_0001 running in uber mode : false
2020-10-24 13:06:42 INFO  Job:1647 -  map 0% reduce 0%
2020-10-24 13:06:49 INFO  Job:1647 -  map 33% reduce 0%
2020-10-24 13:06:56 INFO  Job:1647 -  map 67% reduce 0%
2020-10-24 13:07:00 INFO  Job:1647 -  map 100% reduce 0%
2020-10-24 13:07:06 INFO  Job:1647 -  map 100% reduce 100%
2020-10-24 13:07:07 INFO  Job:1658 - Job job_1603544694465_0001 completed successfully
2020-10-24 13:07:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:07 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38884
		Total time spent by all reduces in occupied slots (ms)=18712
		Total time spent by all map tasks (ms)=9721
		Total time spent by all reduce tasks (ms)=4678
		Total vcore-milliseconds taken by all map tasks=9721
		Total vcore-milliseconds taken by all reduce tasks=4678
		Total megabyte-milliseconds taken by all map tasks=39817216
		Total megabyte-milliseconds taken by all reduce tasks=19161088
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=642
		CPU time spent (ms)=6240
		Physical memory (bytes) snapshot=1170137088
		Virtual memory (bytes) snapshot=16067395584
		Total committed heap usage (bytes)=1050673152
		Peak Map Physical memory (bytes)=294297600
		Peak Map Virtual memory (bytes)=4013654016
		Peak Reduce Physical memory (bytes)=302559232
		Peak Reduce Virtual memory (bytes)=4037390336
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.054 seconds
2020-10-24 13:07:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:07 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-24 13:07:07 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201024 13:07:07.787" starttime="20201024 13:07:07.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:07:07.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:07:07.787" starttime="20201024 13:07:07.787"></status>
</kw>
<status status="PASS" endtime="20201024 13:07:07.788" starttime="20201024 13:06:29.121"></status>
</kw>
<msg timestamp="20201024 13:07:07.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:07:07.788" starttime="20201024 13:06:29.121"></status>
</kw>
<msg timestamp="20201024 13:07:07.788" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:06:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:06...</msg>
<status status="PASS" endtime="20201024 13:07:07.788" starttime="20201024 13:06:29.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201024 13:07:07.789" starttime="20201024 13:07:07.789"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201024 13:07:07.789" critical="yes" starttime="20201024 13:06:29.103"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:07:07.793" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:07:07.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:07:07.799" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201024 13:07:07.799" starttime="20201024 13:07:07.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:07:07.800" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201024 13:07:07.800" starttime="20201024 13:07:07.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:07:07.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:07:07.801" starttime="20201024 13:07:07.800"></status>
</kw>
<status status="PASS" endtime="20201024 13:07:07.801" starttime="20201024 13:07:07.791"></status>
</kw>
<msg timestamp="20201024 13:07:07.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:07:07.801" starttime="20201024 13:07:07.791"></status>
</kw>
<msg timestamp="20201024 13:07:07.801" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201024 13:07:07.801" starttime="20201024 13:07:07.791"></status>
</kw>
<msg timestamp="20201024 13:07:07.801" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201024 13:07:07.801" starttime="20201024 13:07:07.790"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201024 13:07:07.802" level="INFO">${random} = 70</msg>
<status status="PASS" endtime="20201024 13:07:07.802" starttime="20201024 13:07:07.801"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:07:07.805" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:07:07.805" starttime="20201024 13:07:07.804"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:07:07.805" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:07:07.805" starttime="20201024 13:07:07.805"></status>
</kw>
<status status="PASS" endtime="20201024 13:07:07.805" starttime="20201024 13:07:07.804"></status>
</kw>
<msg timestamp="20201024 13:07:07.805" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:07:07.806" starttime="20201024 13:07:07.804"></status>
</kw>
<status status="PASS" endtime="20201024 13:07:07.806" starttime="20201024 13:07:07.803"></status>
</kw>
<msg timestamp="20201024 13:07:07.806" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:07:07.806" starttime="20201024 13:07:07.802"></status>
</kw>
<msg timestamp="20201024 13:07:07.806" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:07:07.806" starttime="20201024 13:07:07.802"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:07:07.809" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:07:07.809" starttime="20201024 13:07:07.808"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:07:07.809" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:07:07.809" starttime="20201024 13:07:07.809"></status>
</kw>
<status status="PASS" endtime="20201024 13:07:07.810" starttime="20201024 13:07:07.808"></status>
</kw>
<msg timestamp="20201024 13:07:07.810" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:07:07.810" starttime="20201024 13:07:07.808"></status>
</kw>
<status status="PASS" endtime="20201024 13:07:07.810" starttime="20201024 13:07:07.807"></status>
</kw>
<msg timestamp="20201024 13:07:07.810" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201024 13:07:07.810" starttime="20201024 13:07:07.807"></status>
</kw>
<msg timestamp="20201024 13:07:07.810" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201024 13:07:07.810" starttime="20201024 13:07:07.806"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:07:07.813" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:07:07.813" starttime="20201024 13:07:07.812"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:07:07.813" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:07:07.813" starttime="20201024 13:07:07.813"></status>
</kw>
<status status="PASS" endtime="20201024 13:07:07.813" starttime="20201024 13:07:07.812"></status>
</kw>
<msg timestamp="20201024 13:07:07.813" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:07:07.813" starttime="20201024 13:07:07.812"></status>
</kw>
<status status="PASS" endtime="20201024 13:07:07.814" starttime="20201024 13:07:07.811"></status>
</kw>
<msg timestamp="20201024 13:07:07.814" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-70.txt</msg>
<status status="PASS" endtime="20201024 13:07:07.814" starttime="20201024 13:07:07.811"></status>
</kw>
<msg timestamp="20201024 13:07:07.814" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-70.txt</msg>
<status status="PASS" endtime="20201024 13:07:07.814" starttime="20201024 13:07:07.810"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:07:07.818" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-70.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:07:43.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:07:43.181" level="INFO">${output} = 2020-10-24 13:07:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:09 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201024 13:07:43.181" starttime="20201024 13:07:07.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:07:43.182" level="INFO">2020-10-24 13:07:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:09 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.2:8032
2020-10-24 13:07:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:09 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-24 13:07:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:09 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-24 13:07:10 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-24 13:07:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-24 13:07:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-24 13:07:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:07:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4D459A311BA9-&gt;cf65f03e-2cb1-4a7b-9af0-a78834fd3772
2020-10-24 13:07:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-24 13:07:11 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-24 13:07:13 INFO  JobSubmitter:202 - number of splits:3
2020-10-24 13:07:14 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603544694465_0002
2020-10-24 13:07:14 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-24 13:07:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:14 INFO  Configuration:2752 - resource-types.xml not found
2020-10-24 13:07:14 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-24 13:07:14 INFO  YarnClientImpl:324 - Submitted application application_1603544694465_0002
2020-10-24 13:07:14 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603544694465_0002/
2020-10-24 13:07:14 INFO  Job:1619 - Running job: job_1603544694465_0002
2020-10-24 13:07:21 INFO  Job:1640 - Job job_1603544694465_0002 running in uber mode : false
2020-10-24 13:07:21 INFO  Job:1647 -  map 0% reduce 0%
2020-10-24 13:07:28 INFO  Job:1647 -  map 33% reduce 0%
2020-10-24 13:07:33 INFO  Job:1647 -  map 67% reduce 0%
2020-10-24 13:07:37 INFO  Job:1647 -  map 100% reduce 0%
2020-10-24 13:07:42 INFO  Job:1647 -  map 100% reduce 100%
2020-10-24 13:07:42 INFO  Job:1658 - Job job_1603544694465_0002 completed successfully
2020-10-24 13:07:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:42 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37436
		Total time spent by all reduces in occupied slots (ms)=13612
		Total time spent by all map tasks (ms)=9359
		Total time spent by all reduce tasks (ms)=3403
		Total vcore-milliseconds taken by all map tasks=9359
		Total vcore-milliseconds taken by all reduce tasks=3403
		Total megabyte-milliseconds taken by all map tasks=38334464
		Total megabyte-milliseconds taken by all reduce tasks=13938688
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=576
		CPU time spent (ms)=6270
		Physical memory (bytes) snapshot=1135276032
		Virtual memory (bytes) snapshot=16045232128
		Total committed heap usage (bytes)=1136656384
		Peak Map Physical memory (bytes)=291176448
		Peak Map Virtual memory (bytes)=4011339776
		Peak Reduce Physical memory (bytes)=292233216
		Peak Reduce Virtual memory (bytes)=4030025728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-24 13:07:42 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201024 13:07:43.182" starttime="20201024 13:07:43.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:07:43.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:07:43.183" starttime="20201024 13:07:43.182"></status>
</kw>
<status status="PASS" endtime="20201024 13:07:43.183" starttime="20201024 13:07:07.815"></status>
</kw>
<msg timestamp="20201024 13:07:43.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:07:43.183" starttime="20201024 13:07:07.814"></status>
</kw>
<msg timestamp="20201024 13:07:43.184" level="INFO">${output} = 2020-10-24 13:07:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-24 13:07:09 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201024 13:07:43.184" starttime="20201024 13:07:07.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201024 13:07:43.184" starttime="20201024 13:07:43.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201024 13:07:43.185" starttime="20201024 13:07:43.185"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201024 13:07:43.185" critical="yes" starttime="20201024 13:07:07.790"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201024 13:07:43.186" starttime="20201024 13:06:29.055"></status>
</suite>
<status status="PASS" elapsedtime="185753" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:10:26.691" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:10:30.695" level="INFO">${rc} = 255</msg>
<msg timestamp="20201024 13:10:30.695" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201024 13:10:30.695" starttime="20201024 13:10:26.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:10:30.696" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201024 13:10:30.696" starttime="20201024 13:10:30.695"></status>
</kw>
<msg timestamp="20201024 13:10:30.696" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201024 13:10:30.696" starttime="20201024 13:10:26.687"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:10:30.702" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:10:33.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:10:33.638" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:10:33.639" starttime="20201024 13:10:30.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:10:33.640" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:10:33.640" starttime="20201024 13:10:33.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:10:33.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:10:33.641" starttime="20201024 13:10:33.640"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:33.641" starttime="20201024 13:10:30.698"></status>
</kw>
<msg timestamp="20201024 13:10:33.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:10:33.642" starttime="20201024 13:10:30.698"></status>
</kw>
<msg timestamp="20201024 13:10:33.642" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201024 13:10:33.642" starttime="20201024 13:10:30.697"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201024 13:10:33.642" starttime="20201024 13:10:33.642"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:33.643" starttime="20201024 13:10:30.697"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:33.643" starttime="20201024 13:10:30.697"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:10:33.648" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:10:36.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:10:36.831" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:10:36.831" starttime="20201024 13:10:33.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:10:36.832" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:10:36.832" starttime="20201024 13:10:36.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:10:36.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:10:36.833" starttime="20201024 13:10:36.833"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:36.833" starttime="20201024 13:10:33.645"></status>
</kw>
<msg timestamp="20201024 13:10:36.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:10:36.834" starttime="20201024 13:10:33.645"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:36.834" starttime="20201024 13:10:33.644"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:36.834" starttime="20201024 13:10:33.643"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:36.834" starttime="20201024 13:10:33.643"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201024 13:10:36.834" starttime="20201024 13:10:36.834"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:10:36.840" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:10:39.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:10:39.759" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-24T13:10:36.697Z",
  "modificat...</msg>
<status status="PASS" endtime="20201024 13:10:39.759" starttime="20201024 13:10:36.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:10:39.760" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-24T13:10:36.697Z",
  "modificationTime" : "2020-10-24T13:10:36.697Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201024 13:10:39.760" starttime="20201024 13:10:39.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:10:39.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:10:39.761" starttime="20201024 13:10:39.760"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:39.761" starttime="20201024 13:10:36.838"></status>
</kw>
<msg timestamp="20201024 13:10:39.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:10:39.761" starttime="20201024 13:10:36.837"></status>
</kw>
<msg timestamp="20201024 13:10:39.761" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-24T13:10:36.697Z",
  "modificat...</msg>
<status status="PASS" endtime="20201024 13:10:39.761" starttime="20201024 13:10:36.835"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201024 13:10:39.762" starttime="20201024 13:10:39.762"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:10:39.766" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:10:39.766" starttime="20201024 13:10:39.765"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:10:39.766" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:10:39.766" starttime="20201024 13:10:39.766"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:39.766" starttime="20201024 13:10:39.765"></status>
</kw>
<msg timestamp="20201024 13:10:39.766" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:10:39.767" starttime="20201024 13:10:39.764"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:39.767" starttime="20201024 13:10:39.764"></status>
</kw>
<msg timestamp="20201024 13:10:39.767" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201024 13:10:39.767" starttime="20201024 13:10:39.763"></status>
</kw>
<msg timestamp="20201024 13:10:39.767" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201024 13:10:39.767" starttime="20201024 13:10:39.762"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:10:39.770" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:10:42.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:10:42.764" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:10:42.764" starttime="20201024 13:10:39.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:10:42.765" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:10:42.765" starttime="20201024 13:10:42.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:10:42.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:10:42.766" starttime="20201024 13:10:42.765"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:42.766" starttime="20201024 13:10:39.768"></status>
</kw>
<msg timestamp="20201024 13:10:42.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:10:42.766" starttime="20201024 13:10:39.768"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:42.767" starttime="20201024 13:10:39.767"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:10:42.770" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:10:49.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:10:49.284" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:10:49.284" starttime="20201024 13:10:42.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:10:49.285" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:10:49.285" starttime="20201024 13:10:49.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:10:49.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:10:49.286" starttime="20201024 13:10:49.286"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:49.286" starttime="20201024 13:10:42.768"></status>
</kw>
<msg timestamp="20201024 13:10:49.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:10:49.287" starttime="20201024 13:10:42.767"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:49.287" starttime="20201024 13:10:42.767"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:10:49.290" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:10:54.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:10:54.106" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:10:54.106" starttime="20201024 13:10:49.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:10:54.107" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:10:54.107" starttime="20201024 13:10:54.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:10:54.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:10:54.108" starttime="20201024 13:10:54.107"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:54.108" starttime="20201024 13:10:49.288"></status>
</kw>
<msg timestamp="20201024 13:10:54.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:10:54.108" starttime="20201024 13:10:49.288"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:54.109" starttime="20201024 13:10:49.287"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:10:54.112" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:10:58.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:10:58.846" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:10:58.847" starttime="20201024 13:10:54.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:10:58.848" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:10:58.848" starttime="20201024 13:10:58.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:10:58.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:10:58.848" starttime="20201024 13:10:58.848"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:58.849" starttime="20201024 13:10:54.109"></status>
</kw>
<msg timestamp="20201024 13:10:58.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:10:58.849" starttime="20201024 13:10:54.109"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:58.849" starttime="20201024 13:10:54.109"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201024 13:10:58.849" critical="yes" starttime="20201024 13:10:26.686"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:10:58.854" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:10:58.854" starttime="20201024 13:10:58.854"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:10:58.855" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:10:58.855" starttime="20201024 13:10:58.855"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:58.855" starttime="20201024 13:10:58.854"></status>
</kw>
<msg timestamp="20201024 13:10:58.855" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:10:58.855" starttime="20201024 13:10:58.853"></status>
</kw>
<status status="PASS" endtime="20201024 13:10:58.856" starttime="20201024 13:10:58.853"></status>
</kw>
<msg timestamp="20201024 13:10:58.856" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201024 13:10:58.856" starttime="20201024 13:10:58.852"></status>
</kw>
<msg timestamp="20201024 13:10:58.856" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201024 13:10:58.856" starttime="20201024 13:10:58.851"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:10:58.859" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:11:01.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:11:01.891" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:11:01.892" starttime="20201024 13:10:58.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:11:01.893" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:11:01.893" starttime="20201024 13:11:01.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:11:01.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:11:01.893" starttime="20201024 13:11:01.893"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:01.894" starttime="20201024 13:10:58.857"></status>
</kw>
<msg timestamp="20201024 13:11:01.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:11:01.894" starttime="20201024 13:10:58.856"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:01.894" starttime="20201024 13:10:58.856"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:11:01.897" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:11:04.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:11:04.879" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:11:04.879" starttime="20201024 13:11:01.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:11:04.880" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:11:04.880" starttime="20201024 13:11:04.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:11:04.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:11:04.881" starttime="20201024 13:11:04.880"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:04.881" starttime="20201024 13:11:01.895"></status>
</kw>
<msg timestamp="20201024 13:11:04.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:11:04.881" starttime="20201024 13:11:01.895"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:04.882" starttime="20201024 13:11:01.894"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201024 13:11:04.882" critical="yes" starttime="20201024 13:10:58.851"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201024 13:11:04.883" starttime="20201024 13:10:26.636"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:12:37.648" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:12:37.648" starttime="20201024 13:12:37.647"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:12:37.649" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:12:37.649" starttime="20201024 13:12:37.648"></status>
</kw>
<status status="PASS" endtime="20201024 13:12:37.649" starttime="20201024 13:12:37.646"></status>
</kw>
<msg timestamp="20201024 13:12:37.649" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:12:37.649" starttime="20201024 13:12:37.646"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:12:37.650" starttime="20201024 13:12:37.650"></status>
</kw>
<msg timestamp="20201024 13:12:37.650" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201024 13:12:37.650" starttime="20201024 13:12:37.649"></status>
</kw>
<status status="PASS" endtime="20201024 13:12:37.650" starttime="20201024 13:12:37.645"></status>
</kw>
<msg timestamp="20201024 13:12:37.650" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:12:37.650" starttime="20201024 13:12:37.644"></status>
</kw>
<msg timestamp="20201024 13:12:37.651" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:12:37.651" starttime="20201024 13:12:37.643"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201024 13:12:37.651" level="INFO">${random} = 18816</msg>
<status status="PASS" endtime="20201024 13:12:37.651" starttime="20201024 13:12:37.651"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:12:37.654" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-18816 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:12:40.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:12:40.953" level="INFO">${output} = 2020-10-24 13:12:39 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:12:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201024 13:12:40.953" starttime="20201024 13:12:37.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:12:40.954" level="INFO">2020-10-24 13:12:39 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:12:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-24 13:12:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-24 13:12:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:12:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B7D931D8A307-&gt;0a3dff36-5135-470a-a933-08d20a9ca00f
2020-10-24 13:12:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201024 13:12:40.954" starttime="20201024 13:12:40.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:12:40.954" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:12:40.955" starttime="20201024 13:12:40.954"></status>
</kw>
<status status="PASS" endtime="20201024 13:12:40.955" starttime="20201024 13:12:37.652"></status>
</kw>
<msg timestamp="20201024 13:12:40.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:12:40.955" starttime="20201024 13:12:37.652"></status>
</kw>
<msg timestamp="20201024 13:12:40.955" level="INFO">${result} = 2020-10-24 13:12:39 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:12:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201024 13:12:40.955" starttime="20201024 13:12:37.651"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:12:40.957" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:12:42.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:12:42.556" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:10 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-24 13:12 ofs://om/volume1/bucket1/ozone-18816
-rw-...</msg>
<status status="PASS" endtime="20201024 13:12:42.556" starttime="20201024 13:12:40.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:12:42.557" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:10 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-24 13:12 ofs://om/volume1/bucket1/ozone-18816
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-24 13:11 ofs://om/volume1/bucket1/ozone-28468
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:11 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:12 ofs://om/volume1/bucket1/wordcount-73.txt</msg>
<status status="PASS" endtime="20201024 13:12:42.557" starttime="20201024 13:12:42.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:12:42.558" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:12:42.558" starttime="20201024 13:12:42.558"></status>
</kw>
<status status="PASS" endtime="20201024 13:12:42.558" starttime="20201024 13:12:40.956"></status>
</kw>
<msg timestamp="20201024 13:12:42.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:12:42.558" starttime="20201024 13:12:40.956"></status>
</kw>
<msg timestamp="20201024 13:12:42.559" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:10 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-24 13:12 ofs://om/volume1/bucket1/ozone-18816
-rw-...</msg>
<status status="PASS" endtime="20201024 13:12:42.559" starttime="20201024 13:12:40.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:12:42.559" starttime="20201024 13:12:42.559"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201024 13:12:42.559" critical="yes" starttime="20201024 13:12:37.643"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201024 13:12:42.560" starttime="20201024 13:12:37.589"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:11:09.255" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:11:09.255" starttime="20201024 13:11:09.253"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:11:09.255" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:11:09.256" starttime="20201024 13:11:09.255"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:09.256" starttime="20201024 13:11:09.253"></status>
</kw>
<msg timestamp="20201024 13:11:09.256" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:11:09.256" starttime="20201024 13:11:09.252"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:09.256" starttime="20201024 13:11:09.252"></status>
</kw>
<msg timestamp="20201024 13:11:09.256" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:11:09.256" starttime="20201024 13:11:09.251"></status>
</kw>
<msg timestamp="20201024 13:11:09.256" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:11:09.256" starttime="20201024 13:11:09.250"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201024 13:11:09.257" level="INFO">${random} = 28468</msg>
<status status="PASS" endtime="20201024 13:11:09.257" starttime="20201024 13:11:09.257"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:11:09.260" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-28468 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:11:12.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:11:12.641" level="INFO">${output} = 2020-10-24 13:11:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:11:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201024 13:11:12.641" starttime="20201024 13:11:09.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:11:12.642" level="INFO">2020-10-24 13:11:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:11:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-24 13:11:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-24 13:11:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:11:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-03108DB7347A-&gt;0a3dff36-5135-470a-a933-08d20a9ca00f
2020-10-24 13:11:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201024 13:11:12.642" starttime="20201024 13:11:12.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:11:12.642" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:11:12.643" starttime="20201024 13:11:12.642"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:12.643" starttime="20201024 13:11:09.258"></status>
</kw>
<msg timestamp="20201024 13:11:12.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:11:12.643" starttime="20201024 13:11:09.258"></status>
</kw>
<msg timestamp="20201024 13:11:12.643" level="INFO">${result} = 2020-10-24 13:11:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:11:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201024 13:11:12.643" starttime="20201024 13:11:09.257"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:11:12.646" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:11:14.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:11:14.341" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:10 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-24 13:11 o3fs://bucket1.volume1.om/ozone-28468
dr...</msg>
<status status="PASS" endtime="20201024 13:11:14.341" starttime="20201024 13:11:12.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:11:14.342" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:10 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-24 13:11 o3fs://bucket1.volume1.om/ozone-28468
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:11 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201024 13:11:14.342" starttime="20201024 13:11:14.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:11:14.343" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:11:14.343" starttime="20201024 13:11:14.342"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:14.343" starttime="20201024 13:11:12.644"></status>
</kw>
<msg timestamp="20201024 13:11:14.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:11:14.343" starttime="20201024 13:11:12.644"></status>
</kw>
<msg timestamp="20201024 13:11:14.343" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:10 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-24 13:11 o3fs://bucket1.volume1.om/ozone-28468
dr...</msg>
<status status="PASS" endtime="20201024 13:11:14.343" starttime="20201024 13:11:12.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:11:14.344" starttime="20201024 13:11:14.344"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201024 13:11:14.344" critical="yes" starttime="20201024 13:11:09.250"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201024 13:11:14.345" starttime="20201024 13:11:09.207"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:12:46.948" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:12:46.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:12:46.956" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:12:46.956" starttime="20201024 13:12:46.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:12:46.957" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:12:46.957" starttime="20201024 13:12:46.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:12:46.957" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:12:46.958" starttime="20201024 13:12:46.957"></status>
</kw>
<status status="PASS" endtime="20201024 13:12:46.958" starttime="20201024 13:12:46.946"></status>
</kw>
<msg timestamp="20201024 13:12:46.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:12:46.958" starttime="20201024 13:12:46.946"></status>
</kw>
<msg timestamp="20201024 13:12:46.958" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:12:46.958" starttime="20201024 13:12:46.945"></status>
</kw>
<msg timestamp="20201024 13:12:46.958" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:12:46.958" starttime="20201024 13:12:46.945"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:12:46.961" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:12:46.961" starttime="20201024 13:12:46.961"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:12:46.962" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:12:46.962" starttime="20201024 13:12:46.961"></status>
</kw>
<status status="PASS" endtime="20201024 13:12:46.962" starttime="20201024 13:12:46.961"></status>
</kw>
<msg timestamp="20201024 13:12:46.962" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:12:46.962" starttime="20201024 13:12:46.960"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:12:46.963" starttime="20201024 13:12:46.963"></status>
</kw>
<msg timestamp="20201024 13:12:46.963" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201024 13:12:46.963" starttime="20201024 13:12:46.962"></status>
</kw>
<status status="PASS" endtime="20201024 13:12:46.964" starttime="20201024 13:12:46.960"></status>
</kw>
<msg timestamp="20201024 13:12:46.964" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:12:46.964" starttime="20201024 13:12:46.959"></status>
</kw>
<msg timestamp="20201024 13:12:46.964" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:12:46.964" starttime="20201024 13:12:46.958"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:12:46.966" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:13:22.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:13:22.420" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:12:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:12:48 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201024 13:13:22.420" starttime="20201024 13:12:46.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:13:22.421" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:12:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:12:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-24 13:12:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-24 13:12:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:12:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-056360B9B19A-&gt;0a3dff36-5135-470a-a933-08d20a9ca00f
2020-10-24 13:12:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-24 13:12:49 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-10-24 13:12:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-24 13:12:52 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-24 13:12:53 INFO  JobSubmitter:202 - number of splits:3
2020-10-24 13:12:53 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-24 13:12:53 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603545008235_0003
2020-10-24 13:12:53 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-24 13:12:53 INFO  Configuration:2752 - resource-types.xml not found
2020-10-24 13:12:53 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-24 13:12:53 INFO  YarnClientImpl:311 - Submitted application application_1603545008235_0003
2020-10-24 13:12:53 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603545008235_0003/
2020-10-24 13:12:53 INFO  Job:1619 - Running job: job_1603545008235_0003
2020-10-24 13:13:00 INFO  Job:1640 - Job job_1603545008235_0003 running in uber mode : false
2020-10-24 13:13:00 INFO  Job:1647 -  map 0% reduce 0%
2020-10-24 13:13:06 INFO  Job:1647 -  map 33% reduce 0%
2020-10-24 13:13:11 INFO  Job:1647 -  map 67% reduce 0%
2020-10-24 13:13:16 INFO  Job:1647 -  map 100% reduce 0%
2020-10-24 13:13:20 INFO  Job:1647 -  map 100% reduce 100%
2020-10-24 13:13:21 INFO  Job:1658 - Job job_1603545008235_0003 completed successfully
2020-10-24 13:13:21 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1044341
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36108
		Total time spent by all reduces in occupied slots (ms)=13260
		Total time spent by all map tasks (ms)=9027
		Total time spent by all reduce tasks (ms)=3315
		Total vcore-milliseconds taken by all map tasks=9027
		Total vcore-milliseconds taken by all reduce tasks=3315
		Total megabyte-milliseconds taken by all map tasks=36974592
		Total megabyte-milliseconds taken by all reduce tasks=13578240
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=504
		CPU time spent (ms)=5920
		Physical memory (bytes) snapshot=1343905792
		Virtual memory (bytes) snapshot=16031096832
		Total committed heap usage (bytes)=1473773568
		Peak Map Physical memory (bytes)=366419968
		Peak Map Virtual memory (bytes)=4010008576
		Peak Reduce Physical memory (bytes)=354910208
		Peak Reduce Virtual memory (bytes)=4008243200
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.022 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201024 13:13:22.421" starttime="20201024 13:13:22.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:13:22.422" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:13:22.422" starttime="20201024 13:13:22.421"></status>
</kw>
<status status="PASS" endtime="20201024 13:13:22.422" starttime="20201024 13:12:46.965"></status>
</kw>
<msg timestamp="20201024 13:13:22.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:13:22.422" starttime="20201024 13:12:46.965"></status>
</kw>
<msg timestamp="20201024 13:13:22.423" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:12:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:12:48 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201024 13:13:22.423" starttime="20201024 13:12:46.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201024 13:13:22.423" starttime="20201024 13:13:22.423"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201024 13:13:22.424" critical="yes" starttime="20201024 13:12:46.944"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:13:22.428" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:13:22.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:13:22.432" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:13:22.433" starttime="20201024 13:13:22.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:13:22.433" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:13:22.434" starttime="20201024 13:13:22.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:13:22.434" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:13:22.434" starttime="20201024 13:13:22.434"></status>
</kw>
<status status="PASS" endtime="20201024 13:13:22.434" starttime="20201024 13:13:22.426"></status>
</kw>
<msg timestamp="20201024 13:13:22.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:13:22.435" starttime="20201024 13:13:22.426"></status>
</kw>
<msg timestamp="20201024 13:13:22.435" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:13:22.435" starttime="20201024 13:13:22.425"></status>
</kw>
<msg timestamp="20201024 13:13:22.435" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:13:22.435" starttime="20201024 13:13:22.425"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201024 13:13:22.435" level="INFO">${random} = 23</msg>
<status status="PASS" endtime="20201024 13:13:22.436" starttime="20201024 13:13:22.435"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:13:22.439" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:13:22.439" starttime="20201024 13:13:22.438"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:13:22.439" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:13:22.439" starttime="20201024 13:13:22.439"></status>
</kw>
<status status="PASS" endtime="20201024 13:13:22.439" starttime="20201024 13:13:22.438"></status>
</kw>
<msg timestamp="20201024 13:13:22.439" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:13:22.439" starttime="20201024 13:13:22.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:13:22.440" starttime="20201024 13:13:22.440"></status>
</kw>
<msg timestamp="20201024 13:13:22.441" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201024 13:13:22.441" starttime="20201024 13:13:22.440"></status>
</kw>
<status status="PASS" endtime="20201024 13:13:22.441" starttime="20201024 13:13:22.437"></status>
</kw>
<msg timestamp="20201024 13:13:22.441" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:13:22.441" starttime="20201024 13:13:22.436"></status>
</kw>
<msg timestamp="20201024 13:13:22.441" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:13:22.441" starttime="20201024 13:13:22.436"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:13:22.444" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:13:22.444" starttime="20201024 13:13:22.444"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:13:22.445" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:13:22.445" starttime="20201024 13:13:22.444"></status>
</kw>
<status status="PASS" endtime="20201024 13:13:22.445" starttime="20201024 13:13:22.443"></status>
</kw>
<msg timestamp="20201024 13:13:22.445" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:13:22.445" starttime="20201024 13:13:22.443"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:13:22.446" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201024 13:13:22.446" starttime="20201024 13:13:22.446"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:13:22.447" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201024 13:13:22.447" starttime="20201024 13:13:22.447"></status>
</kw>
<status status="PASS" endtime="20201024 13:13:22.447" starttime="20201024 13:13:22.445"></status>
</kw>
<msg timestamp="20201024 13:13:22.447" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201024 13:13:22.447" starttime="20201024 13:13:22.445"></status>
</kw>
<status status="PASS" endtime="20201024 13:13:22.448" starttime="20201024 13:13:22.442"></status>
</kw>
<msg timestamp="20201024 13:13:22.448" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201024 13:13:22.448" starttime="20201024 13:13:22.442"></status>
</kw>
<msg timestamp="20201024 13:13:22.448" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201024 13:13:22.448" starttime="20201024 13:13:22.441"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:13:22.451" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:13:22.451" starttime="20201024 13:13:22.451"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:13:22.451" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:13:22.451" starttime="20201024 13:13:22.451"></status>
</kw>
<status status="PASS" endtime="20201024 13:13:22.452" starttime="20201024 13:13:22.450"></status>
</kw>
<msg timestamp="20201024 13:13:22.452" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:13:22.452" starttime="20201024 13:13:22.450"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:13:22.453" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201024 13:13:22.453" starttime="20201024 13:13:22.452"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:13:22.453" level="INFO">${result} = /wordcount-23.txt</msg>
<status status="PASS" endtime="20201024 13:13:22.453" starttime="20201024 13:13:22.453"></status>
</kw>
<status status="PASS" endtime="20201024 13:13:22.453" starttime="20201024 13:13:22.452"></status>
</kw>
<msg timestamp="20201024 13:13:22.454" level="INFO">${path_with_leading} = /wordcount-23.txt</msg>
<status status="PASS" endtime="20201024 13:13:22.454" starttime="20201024 13:13:22.452"></status>
</kw>
<status status="PASS" endtime="20201024 13:13:22.454" starttime="20201024 13:13:22.449"></status>
</kw>
<msg timestamp="20201024 13:13:22.454" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-23.txt</msg>
<status status="PASS" endtime="20201024 13:13:22.454" starttime="20201024 13:13:22.449"></status>
</kw>
<msg timestamp="20201024 13:13:22.454" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-23.txt</msg>
<status status="PASS" endtime="20201024 13:13:22.454" starttime="20201024 13:13:22.448"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:13:22.456" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-23.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:13:59.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:13:59.515" level="INFO">${output} = 2020-10-24 13:13:23 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-10-24 13:13:24 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201024 13:13:59.515" starttime="20201024 13:13:22.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:13:59.516" level="INFO">2020-10-24 13:13:23 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-10-24 13:13:24 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-24 13:13:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:13:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-24 13:13:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-24 13:13:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:13:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1B9DF22CC5B1-&gt;0a3dff36-5135-470a-a933-08d20a9ca00f
2020-10-24 13:13:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-24 13:13:28 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-24 13:13:28 INFO  JobSubmitter:202 - number of splits:3
2020-10-24 13:13:28 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-24 13:13:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603545008235_0004
2020-10-24 13:13:28 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-24 13:13:28 INFO  Configuration:2752 - resource-types.xml not found
2020-10-24 13:13:28 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-24 13:13:28 INFO  YarnClientImpl:311 - Submitted application application_1603545008235_0004
2020-10-24 13:13:28 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603545008235_0004/
2020-10-24 13:13:28 INFO  Job:1619 - Running job: job_1603545008235_0004
2020-10-24 13:13:35 INFO  Job:1640 - Job job_1603545008235_0004 running in uber mode : false
2020-10-24 13:13:35 INFO  Job:1647 -  map 0% reduce 0%
2020-10-24 13:13:41 INFO  Job:1647 -  map 33% reduce 0%
2020-10-24 13:13:46 INFO  Job:1647 -  map 67% reduce 0%
2020-10-24 13:13:51 INFO  Job:1647 -  map 100% reduce 0%
2020-10-24 13:13:59 INFO  Job:1647 -  map 100% reduce 100%
2020-10-24 13:13:59 INFO  Job:1658 - Job job_1603545008235_0004 completed successfully
2020-10-24 13:13:59 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1107013
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36708
		Total time spent by all reduces in occupied slots (ms)=23548
		Total time spent by all map tasks (ms)=9177
		Total time spent by all reduce tasks (ms)=5887
		Total vcore-milliseconds taken by all map tasks=9177
		Total vcore-milliseconds taken by all reduce tasks=5887
		Total megabyte-milliseconds taken by all map tasks=37588992
		Total megabyte-milliseconds taken by all reduce tasks=24113152
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=538
		CPU time spent (ms)=6500
		Physical memory (bytes) snapshot=1375051776
		Virtual memory (bytes) snapshot=16046866432
		Total committed heap usage (bytes)=1639448576
		Peak Map Physical memory (bytes)=366690304
		Peak Map Virtual memory (bytes)=4011749376
		Peak Reduce Physical memory (bytes)=288972800
		Peak Reduce Virtual memory (bytes)=4019257344
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201024 13:13:59.516" starttime="20201024 13:13:59.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:13:59.516" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:13:59.517" starttime="20201024 13:13:59.516"></status>
</kw>
<status status="PASS" endtime="20201024 13:13:59.517" starttime="20201024 13:13:22.455"></status>
</kw>
<msg timestamp="20201024 13:13:59.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:13:59.517" starttime="20201024 13:13:22.455"></status>
</kw>
<msg timestamp="20201024 13:13:59.518" level="INFO">${output} = 2020-10-24 13:13:23 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-10-24 13:13:24 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201024 13:13:59.518" starttime="20201024 13:13:22.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201024 13:13:59.518" starttime="20201024 13:13:59.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201024 13:13:59.519" starttime="20201024 13:13:59.519"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201024 13:13:59.519" critical="yes" starttime="20201024 13:13:22.424"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201024 13:13:59.520" starttime="20201024 13:12:46.905"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:11:18.570" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:11:18.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:11:18.577" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:11:18.577" starttime="20201024 13:11:18.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:11:18.578" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:11:18.578" starttime="20201024 13:11:18.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:11:18.578" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:11:18.578" starttime="20201024 13:11:18.578"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:18.579" starttime="20201024 13:11:18.568"></status>
</kw>
<msg timestamp="20201024 13:11:18.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:11:18.579" starttime="20201024 13:11:18.568"></status>
</kw>
<msg timestamp="20201024 13:11:18.579" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:11:18.579" starttime="20201024 13:11:18.568"></status>
</kw>
<msg timestamp="20201024 13:11:18.579" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:11:18.579" starttime="20201024 13:11:18.567"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:11:18.582" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:11:18.582" starttime="20201024 13:11:18.582"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:11:18.583" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:11:18.583" starttime="20201024 13:11:18.582"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:18.583" starttime="20201024 13:11:18.582"></status>
</kw>
<msg timestamp="20201024 13:11:18.583" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:11:18.583" starttime="20201024 13:11:18.581"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:18.583" starttime="20201024 13:11:18.581"></status>
</kw>
<msg timestamp="20201024 13:11:18.584" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:11:18.584" starttime="20201024 13:11:18.580"></status>
</kw>
<msg timestamp="20201024 13:11:18.584" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:11:18.584" starttime="20201024 13:11:18.579"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:11:18.586" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:11:57.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:11:57.298" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:11:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:11:20 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201024 13:11:57.298" starttime="20201024 13:11:18.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:11:57.299" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:11:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:11:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-24 13:11:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-24 13:11:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:11:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6012361D6A88-&gt;0a3dff36-5135-470a-a933-08d20a9ca00f
2020-10-24 13:11:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-24 13:11:21 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-10-24 13:11:22 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-24 13:11:22 INFO  JobSubmitter:202 - number of splits:3
2020-10-24 13:11:22 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-24 13:11:22 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603545008235_0001
2020-10-24 13:11:22 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-24 13:11:22 INFO  Configuration:2752 - resource-types.xml not found
2020-10-24 13:11:22 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-24 13:11:23 INFO  YarnClientImpl:311 - Submitted application application_1603545008235_0001
2020-10-24 13:11:23 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603545008235_0001/
2020-10-24 13:11:23 INFO  Job:1619 - Running job: job_1603545008235_0001
2020-10-24 13:11:32 INFO  Job:1640 - Job job_1603545008235_0001 running in uber mode : false
2020-10-24 13:11:32 INFO  Job:1647 -  map 0% reduce 0%
2020-10-24 13:11:39 INFO  Job:1647 -  map 33% reduce 0%
2020-10-24 13:11:43 INFO  Job:1647 -  map 67% reduce 0%
2020-10-24 13:11:48 INFO  Job:1647 -  map 100% reduce 0%
2020-10-24 13:11:53 INFO  Job:1647 -  map 100% reduce 100%
2020-10-24 13:11:56 INFO  Job:1658 - Job job_1603545008235_0001 completed successfully
2020-10-24 13:11:56 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1044553
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36872
		Total time spent by all reduces in occupied slots (ms)=14156
		Total time spent by all map tasks (ms)=9218
		Total time spent by all reduce tasks (ms)=3539
		Total vcore-milliseconds taken by all map tasks=9218
		Total vcore-milliseconds taken by all reduce tasks=3539
		Total megabyte-milliseconds taken by all map tasks=37756928
		Total megabyte-milliseconds taken by all reduce tasks=14495744
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=529
		CPU time spent (ms)=6540
		Physical memory (bytes) snapshot=1469091840
		Virtual memory (bytes) snapshot=16059449344
		Total committed heap usage (bytes)=1626341376
		Peak Map Physical memory (bytes)=369717248
		Peak Map Virtual memory (bytes)=4013998080
		Peak Reduce Physical memory (bytes)=378388480
		Peak Reduce Virtual memory (bytes)=4023934976
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.149 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201024 13:11:57.299" starttime="20201024 13:11:57.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:11:57.300" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:11:57.300" starttime="20201024 13:11:57.299"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:57.300" starttime="20201024 13:11:18.585"></status>
</kw>
<msg timestamp="20201024 13:11:57.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:11:57.300" starttime="20201024 13:11:18.584"></status>
</kw>
<msg timestamp="20201024 13:11:57.301" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:11:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:11:20 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201024 13:11:57.301" starttime="20201024 13:11:18.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201024 13:11:57.302" starttime="20201024 13:11:57.301"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201024 13:11:57.302" critical="yes" starttime="20201024 13:11:18.567"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:11:57.306" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:11:57.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:11:57.312" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:11:57.312" starttime="20201024 13:11:57.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:11:57.313" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:11:57.313" starttime="20201024 13:11:57.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:11:57.313" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:11:57.314" starttime="20201024 13:11:57.313"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:57.314" starttime="20201024 13:11:57.304"></status>
</kw>
<msg timestamp="20201024 13:11:57.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:11:57.314" starttime="20201024 13:11:57.304"></status>
</kw>
<msg timestamp="20201024 13:11:57.314" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:11:57.314" starttime="20201024 13:11:57.303"></status>
</kw>
<msg timestamp="20201024 13:11:57.314" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:11:57.314" starttime="20201024 13:11:57.303"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201024 13:11:57.315" level="INFO">${random} = 73</msg>
<status status="PASS" endtime="20201024 13:11:57.315" starttime="20201024 13:11:57.314"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:11:57.318" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:11:57.318" starttime="20201024 13:11:57.318"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:11:57.319" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:11:57.319" starttime="20201024 13:11:57.319"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:57.319" starttime="20201024 13:11:57.317"></status>
</kw>
<msg timestamp="20201024 13:11:57.319" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:11:57.319" starttime="20201024 13:11:57.317"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:57.320" starttime="20201024 13:11:57.316"></status>
</kw>
<msg timestamp="20201024 13:11:57.320" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:11:57.320" starttime="20201024 13:11:57.316"></status>
</kw>
<msg timestamp="20201024 13:11:57.320" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:11:57.320" starttime="20201024 13:11:57.315"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:11:57.323" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:11:57.323" starttime="20201024 13:11:57.323"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:11:57.324" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:11:57.324" starttime="20201024 13:11:57.323"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:57.324" starttime="20201024 13:11:57.322"></status>
</kw>
<msg timestamp="20201024 13:11:57.324" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:11:57.324" starttime="20201024 13:11:57.322"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:57.324" starttime="20201024 13:11:57.321"></status>
</kw>
<msg timestamp="20201024 13:11:57.324" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201024 13:11:57.324" starttime="20201024 13:11:57.321"></status>
</kw>
<msg timestamp="20201024 13:11:57.325" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201024 13:11:57.325" starttime="20201024 13:11:57.320"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:11:57.328" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:11:57.328" starttime="20201024 13:11:57.328"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:11:57.329" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:11:57.329" starttime="20201024 13:11:57.328"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:57.329" starttime="20201024 13:11:57.327"></status>
</kw>
<msg timestamp="20201024 13:11:57.329" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:11:57.329" starttime="20201024 13:11:57.326"></status>
</kw>
<status status="PASS" endtime="20201024 13:11:57.329" starttime="20201024 13:11:57.326"></status>
</kw>
<msg timestamp="20201024 13:11:57.329" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-73.txt</msg>
<status status="PASS" endtime="20201024 13:11:57.329" starttime="20201024 13:11:57.325"></status>
</kw>
<msg timestamp="20201024 13:11:57.329" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-73.txt</msg>
<status status="PASS" endtime="20201024 13:11:57.330" starttime="20201024 13:11:57.325"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:11:57.332" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-73.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:12:33.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:12:33.214" level="INFO">${output} = 2020-10-24 13:11:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-10-24 13:11:59 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201024 13:12:33.215" starttime="20201024 13:11:57.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:12:33.216" level="INFO">2020-10-24 13:11:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-10-24 13:11:59 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-24 13:11:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:11:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-24 13:11:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-24 13:11:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:11:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F6C50ABC2D43-&gt;0a3dff36-5135-470a-a933-08d20a9ca00f
2020-10-24 13:11:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-24 13:12:00 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-24 13:12:00 INFO  JobSubmitter:202 - number of splits:3
2020-10-24 13:12:00 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-24 13:12:01 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603545008235_0002
2020-10-24 13:12:01 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-24 13:12:01 INFO  Configuration:2752 - resource-types.xml not found
2020-10-24 13:12:01 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-24 13:12:01 INFO  YarnClientImpl:311 - Submitted application application_1603545008235_0002
2020-10-24 13:12:01 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603545008235_0002/
2020-10-24 13:12:01 INFO  Job:1619 - Running job: job_1603545008235_0002
2020-10-24 13:12:09 INFO  Job:1640 - Job job_1603545008235_0002 running in uber mode : false
2020-10-24 13:12:09 INFO  Job:1647 -  map 0% reduce 0%
2020-10-24 13:12:15 INFO  Job:1647 -  map 33% reduce 0%
2020-10-24 13:12:21 INFO  Job:1647 -  map 67% reduce 0%
2020-10-24 13:12:26 INFO  Job:1647 -  map 100% reduce 0%
2020-10-24 13:12:31 INFO  Job:1647 -  map 100% reduce 100%
2020-10-24 13:12:32 INFO  Job:1658 - Job job_1603545008235_0002 completed successfully
2020-10-24 13:12:32 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1107097
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38404
		Total time spent by all reduces in occupied slots (ms)=17456
		Total time spent by all map tasks (ms)=9601
		Total time spent by all reduce tasks (ms)=4364
		Total vcore-milliseconds taken by all map tasks=9601
		Total vcore-milliseconds taken by all reduce tasks=4364
		Total megabyte-milliseconds taken by all map tasks=39325696
		Total megabyte-milliseconds taken by all reduce tasks=17874944
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=539
		CPU time spent (ms)=6930
		Physical memory (bytes) snapshot=1358401536
		Virtual memory (bytes) snapshot=16048414720
		Total committed heap usage (bytes)=1453850624
		Peak Map Physical memory (bytes)=360169472
		Peak Map Virtual memory (bytes)=4012072960
		Peak Reduce Physical memory (bytes)=374890496
		Peak Reduce Virtual memory (bytes)=4029063168
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201024 13:12:33.216" starttime="20201024 13:12:33.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:12:33.216" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:12:33.217" starttime="20201024 13:12:33.216"></status>
</kw>
<status status="PASS" endtime="20201024 13:12:33.217" starttime="20201024 13:11:57.330"></status>
</kw>
<msg timestamp="20201024 13:12:33.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:12:33.217" starttime="20201024 13:11:57.330"></status>
</kw>
<msg timestamp="20201024 13:12:33.218" level="INFO">${output} = 2020-10-24 13:11:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-10-24 13:11:59 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201024 13:12:33.218" starttime="20201024 13:11:57.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201024 13:12:33.218" starttime="20201024 13:12:33.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201024 13:12:33.219" starttime="20201024 13:12:33.218"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201024 13:12:33.219" critical="yes" starttime="20201024 13:11:57.302"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201024 13:12:33.220" starttime="20201024 13:11:18.529"></status>
</suite>
<status status="PASS" elapsedtime="195662" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="561464" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
