<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201024 13:30:41.012" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:27:34.782" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:27:38.763" level="INFO">${rc} = 255</msg>
<msg timestamp="20201024 13:27:38.763" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201024 13:27:38.763" starttime="20201024 13:27:34.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:27:38.764" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201024 13:27:38.764" starttime="20201024 13:27:38.763"></status>
</kw>
<msg timestamp="20201024 13:27:38.764" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201024 13:27:38.764" starttime="20201024 13:27:34.777"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:27:38.770" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:27:42.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:27:42.276" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201024 13:27:42.276" starttime="20201024 13:27:38.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:27:42.277" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201024 13:27:42.277" starttime="20201024 13:27:42.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:27:42.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:27:42.278" starttime="20201024 13:27:42.278"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:42.278" starttime="20201024 13:27:38.766"></status>
</kw>
<msg timestamp="20201024 13:27:42.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:27:42.279" starttime="20201024 13:27:38.766"></status>
</kw>
<msg timestamp="20201024 13:27:42.279" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201024 13:27:42.279" starttime="20201024 13:27:38.765"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201024 13:27:42.279" starttime="20201024 13:27:42.279"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:42.280" starttime="20201024 13:27:38.765"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:42.280" starttime="20201024 13:27:38.765"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:27:42.284" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:27:45.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:27:45.616" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201024 13:27:45.616" starttime="20201024 13:27:42.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:27:45.617" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201024 13:27:45.617" starttime="20201024 13:27:45.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:27:45.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:27:45.618" starttime="20201024 13:27:45.617"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:45.618" starttime="20201024 13:27:42.281"></status>
</kw>
<msg timestamp="20201024 13:27:45.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:27:45.618" starttime="20201024 13:27:42.281"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:45.618" starttime="20201024 13:27:42.281"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:45.618" starttime="20201024 13:27:42.280"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:45.618" starttime="20201024 13:27:42.280"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201024 13:27:45.623" starttime="20201024 13:27:45.619"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:27:45.628" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:27:49.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:27:49.218" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201024 13:27:49.218" starttime="20201024 13:27:45.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:27:49.219" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-24T13:27:45.377Z",
  "modificationTime" : "2020-10-24T13:27:45.377Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201024 13:27:49.219" starttime="20201024 13:27:49.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:27:49.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:27:49.220" starttime="20201024 13:27:49.219"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:49.220" starttime="20201024 13:27:45.624"></status>
</kw>
<msg timestamp="20201024 13:27:49.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:27:49.220" starttime="20201024 13:27:45.624"></status>
</kw>
<msg timestamp="20201024 13:27:49.220" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201024 13:27:49.220" starttime="20201024 13:27:45.623"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201024 13:27:49.221" starttime="20201024 13:27:49.220"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:27:49.224" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:27:49.224" starttime="20201024 13:27:49.223"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:27:49.224" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:27:49.224" starttime="20201024 13:27:49.224"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:49.225" starttime="20201024 13:27:49.223"></status>
</kw>
<msg timestamp="20201024 13:27:49.225" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:27:49.225" starttime="20201024 13:27:49.223"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:49.225" starttime="20201024 13:27:49.222"></status>
</kw>
<msg timestamp="20201024 13:27:49.225" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201024 13:27:49.225" starttime="20201024 13:27:49.222"></status>
</kw>
<msg timestamp="20201024 13:27:49.225" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201024 13:27:49.225" starttime="20201024 13:27:49.221"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:27:49.228" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:27:52.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:27:52.247" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201024 13:27:52.247" starttime="20201024 13:27:49.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:27:52.248" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201024 13:27:52.248" starttime="20201024 13:27:52.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:27:52.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:27:52.249" starttime="20201024 13:27:52.248"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:52.249" starttime="20201024 13:27:49.226"></status>
</kw>
<msg timestamp="20201024 13:27:52.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:27:52.249" starttime="20201024 13:27:49.226"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:52.249" starttime="20201024 13:27:49.225"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:27:52.253" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:27:59.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:27:59.641" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201024 13:27:59.641" starttime="20201024 13:27:52.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:27:59.642" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201024 13:27:59.642" starttime="20201024 13:27:59.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:27:59.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:27:59.643" starttime="20201024 13:27:59.643"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:59.643" starttime="20201024 13:27:52.250"></status>
</kw>
<msg timestamp="20201024 13:27:59.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:27:59.644" starttime="20201024 13:27:52.250"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:59.644" starttime="20201024 13:27:52.250"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:27:59.647" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:28:04.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:28:04.601" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201024 13:28:04.601" starttime="20201024 13:27:59.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:28:04.602" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201024 13:28:04.602" starttime="20201024 13:28:04.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:28:04.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:28:04.603" starttime="20201024 13:28:04.603"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:04.603" starttime="20201024 13:27:59.645"></status>
</kw>
<msg timestamp="20201024 13:28:04.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:28:04.603" starttime="20201024 13:27:59.645"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:04.604" starttime="20201024 13:27:59.644"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:28:04.609" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:28:09.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:28:09.608" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201024 13:28:09.608" starttime="20201024 13:28:04.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:28:09.609" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201024 13:28:09.609" starttime="20201024 13:28:09.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:28:09.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:28:09.610" starttime="20201024 13:28:09.609"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:09.610" starttime="20201024 13:28:04.604"></status>
</kw>
<msg timestamp="20201024 13:28:09.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:28:09.610" starttime="20201024 13:28:04.604"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:09.610" starttime="20201024 13:28:04.604"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201024 13:28:09.611" critical="yes" starttime="20201024 13:27:34.776"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:28:09.615" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:28:09.615" starttime="20201024 13:28:09.614"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:28:09.615" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:28:09.615" starttime="20201024 13:28:09.615"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:09.616" starttime="20201024 13:28:09.614"></status>
</kw>
<msg timestamp="20201024 13:28:09.616" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:28:09.616" starttime="20201024 13:28:09.614"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:09.616" starttime="20201024 13:28:09.613"></status>
</kw>
<msg timestamp="20201024 13:28:09.616" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201024 13:28:09.616" starttime="20201024 13:28:09.613"></status>
</kw>
<msg timestamp="20201024 13:28:09.616" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201024 13:28:09.616" starttime="20201024 13:28:09.612"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:28:09.622" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:28:12.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:28:12.650" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201024 13:28:12.650" starttime="20201024 13:28:09.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:28:12.651" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201024 13:28:12.651" starttime="20201024 13:28:12.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:28:12.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:28:12.652" starttime="20201024 13:28:12.652"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:12.652" starttime="20201024 13:28:09.617"></status>
</kw>
<msg timestamp="20201024 13:28:12.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:28:12.653" starttime="20201024 13:28:09.617"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:12.653" starttime="20201024 13:28:09.616"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:28:12.657" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:28:15.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:28:15.832" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201024 13:28:15.832" starttime="20201024 13:28:12.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:28:15.833" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201024 13:28:15.834" starttime="20201024 13:28:15.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:28:15.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:28:15.834" starttime="20201024 13:28:15.834"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:15.834" starttime="20201024 13:28:12.654"></status>
</kw>
<msg timestamp="20201024 13:28:15.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:28:15.835" starttime="20201024 13:28:12.654"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:15.835" starttime="20201024 13:28:12.653"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201024 13:28:15.835" critical="yes" starttime="20201024 13:28:09.611"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201024 13:28:15.837" starttime="20201024 13:27:34.729"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:29:50.209" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:29:50.209" starttime="20201024 13:29:50.208"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:29:50.209" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:29:50.210" starttime="20201024 13:29:50.209"></status>
</kw>
<status status="PASS" endtime="20201024 13:29:50.210" starttime="20201024 13:29:50.207"></status>
</kw>
<msg timestamp="20201024 13:29:50.210" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:29:50.210" starttime="20201024 13:29:50.207"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:29:50.211" starttime="20201024 13:29:50.210"></status>
</kw>
<msg timestamp="20201024 13:29:50.211" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201024 13:29:50.211" starttime="20201024 13:29:50.210"></status>
</kw>
<status status="PASS" endtime="20201024 13:29:50.211" starttime="20201024 13:29:50.206"></status>
</kw>
<msg timestamp="20201024 13:29:50.211" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:29:50.211" starttime="20201024 13:29:50.206"></status>
</kw>
<msg timestamp="20201024 13:29:50.212" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:29:50.212" starttime="20201024 13:29:50.205"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201024 13:29:50.212" level="INFO">${random} = 36576</msg>
<status status="PASS" endtime="20201024 13:29:50.212" starttime="20201024 13:29:50.212"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:29:50.215" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-36576 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:29:53.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:29:53.861" level="INFO">${output} = 2020-10-24 13:29:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:29:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201024 13:29:53.861" starttime="20201024 13:29:50.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:29:53.862" level="INFO">2020-10-24 13:29:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:29:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-24 13:29:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-24 13:29:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:29:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-25398F37C7B5-&gt;bbfacf17-709b-40b0-aa40-ed7441a44310
2020-10-24 13:29:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201024 13:29:53.862" starttime="20201024 13:29:53.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:29:53.863" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:29:53.863" starttime="20201024 13:29:53.863"></status>
</kw>
<status status="PASS" endtime="20201024 13:29:53.863" starttime="20201024 13:29:50.213"></status>
</kw>
<msg timestamp="20201024 13:29:53.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:29:53.864" starttime="20201024 13:29:50.213"></status>
</kw>
<msg timestamp="20201024 13:29:53.864" level="INFO">${result} = 2020-10-24 13:29:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:29:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201024 13:29:53.864" starttime="20201024 13:29:50.212"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:29:53.867" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:29:55.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:29:55.728" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:27 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-24 13:28 ofs://om/volume1/bucket1/ozone-04403
-rw-...</msg>
<status status="PASS" endtime="20201024 13:29:55.728" starttime="20201024 13:29:53.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:29:55.729" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:27 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-24 13:28 ofs://om/volume1/bucket1/ozone-04403
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-24 13:29 ofs://om/volume1/bucket1/ozone-36576
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:28 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:29 ofs://om/volume1/bucket1/wordcount-81.txt</msg>
<status status="PASS" endtime="20201024 13:29:55.729" starttime="20201024 13:29:55.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:29:55.730" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:29:55.730" starttime="20201024 13:29:55.729"></status>
</kw>
<status status="PASS" endtime="20201024 13:29:55.730" starttime="20201024 13:29:53.865"></status>
</kw>
<msg timestamp="20201024 13:29:55.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:29:55.730" starttime="20201024 13:29:53.865"></status>
</kw>
<msg timestamp="20201024 13:29:55.730" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:27 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-24 13:28 ofs://om/volume1/bucket1/ozone-04403
-rw-...</msg>
<status status="PASS" endtime="20201024 13:29:55.730" starttime="20201024 13:29:53.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:29:55.731" starttime="20201024 13:29:55.731"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201024 13:29:55.731" critical="yes" starttime="20201024 13:29:50.205"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201024 13:29:55.732" starttime="20201024 13:29:50.165"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:28:25.472" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:28:25.472" starttime="20201024 13:28:25.470"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:28:25.472" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:28:25.473" starttime="20201024 13:28:25.472"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:25.473" starttime="20201024 13:28:25.470"></status>
</kw>
<msg timestamp="20201024 13:28:25.473" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:28:25.473" starttime="20201024 13:28:25.469"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:25.473" starttime="20201024 13:28:25.469"></status>
</kw>
<msg timestamp="20201024 13:28:25.473" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:28:25.473" starttime="20201024 13:28:25.468"></status>
</kw>
<msg timestamp="20201024 13:28:25.473" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:28:25.473" starttime="20201024 13:28:25.467"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201024 13:28:25.474" level="INFO">${random} = 04403</msg>
<status status="PASS" endtime="20201024 13:28:25.474" starttime="20201024 13:28:25.474"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:28:25.476" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-04403 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:28:29.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:28:29.296" level="INFO">${output} = 2020-10-24 13:28:27 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:28:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201024 13:28:29.296" starttime="20201024 13:28:25.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:28:29.297" level="INFO">2020-10-24 13:28:27 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:28:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-24 13:28:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-24 13:28:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:28:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8AECB66F0D5A-&gt;bbfacf17-709b-40b0-aa40-ed7441a44310
2020-10-24 13:28:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201024 13:28:29.297" starttime="20201024 13:28:29.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:28:29.297" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:28:29.297" starttime="20201024 13:28:29.297"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:29.297" starttime="20201024 13:28:25.475"></status>
</kw>
<msg timestamp="20201024 13:28:29.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:28:29.298" starttime="20201024 13:28:25.475"></status>
</kw>
<msg timestamp="20201024 13:28:29.298" level="INFO">${result} = 2020-10-24 13:28:27 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:28:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201024 13:28:29.298" starttime="20201024 13:28:25.474"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:28:29.300" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:28:31.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:28:31.147" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:27 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-24 13:28 o3fs://bucket1.volume1.om/ozone-04403
dr...</msg>
<status status="PASS" endtime="20201024 13:28:31.147" starttime="20201024 13:28:29.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:28:31.148" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:27 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-24 13:28 o3fs://bucket1.volume1.om/ozone-04403
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:28 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201024 13:28:31.148" starttime="20201024 13:28:31.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:28:31.149" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:28:31.149" starttime="20201024 13:28:31.148"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:31.149" starttime="20201024 13:28:29.298"></status>
</kw>
<msg timestamp="20201024 13:28:31.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:28:31.149" starttime="20201024 13:28:29.298"></status>
</kw>
<msg timestamp="20201024 13:28:31.149" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-24 13:27 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-24 13:28 o3fs://bucket1.volume1.om/ozone-04403
dr...</msg>
<status status="PASS" endtime="20201024 13:28:31.149" starttime="20201024 13:28:29.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:28:31.150" starttime="20201024 13:28:31.149"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201024 13:28:31.150" critical="yes" starttime="20201024 13:28:25.467"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201024 13:28:31.151" starttime="20201024 13:28:25.425"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:28:20.644" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:28:20.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:28:20.647" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201024 13:28:20.647" starttime="20201024 13:28:20.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:28:20.648" level="INFO">rm</msg>
<status status="PASS" endtime="20201024 13:28:20.648" starttime="20201024 13:28:20.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:28:20.648" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:28:20.648" starttime="20201024 13:28:20.648"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:20.648" starttime="20201024 13:28:20.642"></status>
</kw>
<msg timestamp="20201024 13:28:20.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:28:20.649" starttime="20201024 13:28:20.642"></status>
</kw>
<msg timestamp="20201024 13:28:20.649" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201024 13:28:20.649" starttime="20201024 13:28:20.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201024 13:28:20.650" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201024 13:28:20.650" starttime="20201024 13:28:20.649"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:28:20.653" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:28:20.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:28:20.674" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:28:20.674" starttime="20201024 13:28:20.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:28:20.675" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:28:20.677" starttime="20201024 13:28:20.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:28:20.677" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:28:20.678" starttime="20201024 13:28:20.677"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:20.678" starttime="20201024 13:28:20.652"></status>
</kw>
<msg timestamp="20201024 13:28:20.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:28:20.678" starttime="20201024 13:28:20.651"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:20.678" starttime="20201024 13:28:20.651"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:20.678" starttime="20201024 13:28:20.650"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:20.678" starttime="20201024 13:28:20.641"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201024 13:28:20.678" critical="yes" starttime="20201024 13:28:20.640"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201024 13:28:20.680" starttime="20201024 13:28:20.601"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:27:29.972" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:27:29.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:27:29.975" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201024 13:27:29.975" starttime="20201024 13:27:29.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:27:29.976" level="INFO">om</msg>
<status status="PASS" endtime="20201024 13:27:29.976" starttime="20201024 13:27:29.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:27:29.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:27:29.977" starttime="20201024 13:27:29.976"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:29.977" starttime="20201024 13:27:29.969"></status>
</kw>
<msg timestamp="20201024 13:27:29.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:27:29.977" starttime="20201024 13:27:29.968"></status>
</kw>
<msg timestamp="20201024 13:27:29.978" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201024 13:27:29.978" starttime="20201024 13:27:29.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201024 13:27:29.978" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201024 13:27:29.978" starttime="20201024 13:27:29.978"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:27:29.983" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:27:29.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:27:29.998" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:27:29.998" starttime="20201024 13:27:29.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:27:29.999" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:27:29.999" starttime="20201024 13:27:29.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:27:30.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:27:30.000" starttime="20201024 13:27:29.999"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:30.000" starttime="20201024 13:27:29.980"></status>
</kw>
<msg timestamp="20201024 13:27:30.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:27:30.000" starttime="20201024 13:27:29.979"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:30.000" starttime="20201024 13:27:29.979"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:30.000" starttime="20201024 13:27:29.978"></status>
</kw>
<status status="PASS" endtime="20201024 13:27:30.000" starttime="20201024 13:27:29.967"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201024 13:27:30.001" critical="yes" starttime="20201024 13:27:29.966"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201024 13:27:30.002" starttime="20201024 13:27:29.921"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:30:00.557" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:30:00.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:30:00.564" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:30:00.564" starttime="20201024 13:30:00.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:30:00.565" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:30:00.565" starttime="20201024 13:30:00.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:30:00.566" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:30:00.566" starttime="20201024 13:30:00.565"></status>
</kw>
<status status="PASS" endtime="20201024 13:30:00.566" starttime="20201024 13:30:00.555"></status>
</kw>
<msg timestamp="20201024 13:30:00.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:30:00.566" starttime="20201024 13:30:00.555"></status>
</kw>
<msg timestamp="20201024 13:30:00.566" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:30:00.566" starttime="20201024 13:30:00.554"></status>
</kw>
<msg timestamp="20201024 13:30:00.567" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:30:00.567" starttime="20201024 13:30:00.554"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:30:00.569" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:30:00.569" starttime="20201024 13:30:00.569"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:30:00.570" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:30:00.570" starttime="20201024 13:30:00.570"></status>
</kw>
<status status="PASS" endtime="20201024 13:30:00.570" starttime="20201024 13:30:00.569"></status>
</kw>
<msg timestamp="20201024 13:30:00.570" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:30:00.570" starttime="20201024 13:30:00.568"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:30:00.571" starttime="20201024 13:30:00.571"></status>
</kw>
<msg timestamp="20201024 13:30:00.571" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201024 13:30:00.571" starttime="20201024 13:30:00.570"></status>
</kw>
<status status="PASS" endtime="20201024 13:30:00.572" starttime="20201024 13:30:00.568"></status>
</kw>
<msg timestamp="20201024 13:30:00.572" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:30:00.572" starttime="20201024 13:30:00.567"></status>
</kw>
<msg timestamp="20201024 13:30:00.572" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:30:00.572" starttime="20201024 13:30:00.567"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:30:00.574" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:30:31.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:30:31.136" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:30:02 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:30:02 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201024 13:30:31.136" starttime="20201024 13:30:00.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:30:31.137" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:30:02 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:30:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-24 13:30:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-24 13:30:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:30:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6E370B3744A7-&gt;bbfacf17-709b-40b0-aa40-ed7441a44310
2020-10-24 13:30:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-24 13:30:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-10-24 13:30:04 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
2020-10-24 13:30:04 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603546204405, maxDate=1604151004405, sequenceNumber=3, masterKeyId=2))
2020-10-24 13:30:04 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a6 91 b5 d6 d5 2e 38 a6 99 e7 f6 d7 2e 40 03 48 01 5a 0d 32 36 30 35 30 35 39 31 36 31 39 34 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-24 13:30:04 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603546204405, maxDate=1604151004405, sequenceNumber=3, masterKeyId=2)
2020-10-24 13:30:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-24 13:30:04 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-24 13:30:04 INFO  JobSubmitter:202 - number of splits:3
2020-10-24 13:30:04 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-24 13:30:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603546015769_0003
2020-10-24 13:30:05 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603546204405, maxDate=1604151004405, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a6 91 b5 d6 d5 2e 38 a6 99 e7 f6 d7 2e 40 03 48 01 5a 0d 32 36 30 35 30 35 39 31 36 31 39 34 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-10-24 13:30:05 INFO  Configuration:2752 - resource-types.xml not found
2020-10-24 13:30:05 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-24 13:30:05 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-24 13:30:05 INFO  YarnClientImpl:311 - Submitted application application_1603546015769_0003
2020-10-24 13:30:06 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603546015769_0003/
2020-10-24 13:30:06 INFO  Job:1619 - Running job: job_1603546015769_0003
2020-10-24 13:30:13 INFO  Job:1640 - Job job_1603546015769_0003 running in uber mode : false
2020-10-24 13:30:13 INFO  Job:1647 -  map 0% reduce 0%
2020-10-24 13:30:23 INFO  Job:1647 -  map 33% reduce 0%
2020-10-24 13:30:25 INFO  Job:1647 -  map 67% reduce 0%
2020-10-24 13:30:26 INFO  Job:1647 -  map 100% reduce 0%
2020-10-24 13:30:30 INFO  Job:1647 -  map 100% reduce 100%
2020-10-24 13:30:30 INFO  Job:1658 - Job job_1603546015769_0003 completed successfully
2020-10-24 13:30:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1053849
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43644
		Total time spent by all reduces in occupied slots (ms)=6642
		Total time spent by all map tasks (ms)=21822
		Total time spent by all reduce tasks (ms)=3321
		Total vcore-milliseconds taken by all map tasks=21822
		Total vcore-milliseconds taken by all reduce tasks=3321
		Total megabyte-milliseconds taken by all map tasks=44691456
		Total megabyte-milliseconds taken by all reduce tasks=6801408
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1160
		CPU time spent (ms)=7280
		Physical memory (bytes) snapshot=1373052928
		Virtual memory (bytes) snapshot=14296649728
		Total committed heap usage (bytes)=1238368256
		Peak Map Physical memory (bytes)=505913344
		Peak Map Virtual memory (bytes)=3575726080
		Peak Reduce Physical memory (bytes)=293036032
		Peak Reduce Virtual memory (bytes)=3582361600
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 26.653 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201024 13:30:31.137" starttime="20201024 13:30:31.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:30:31.138" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:30:31.138" starttime="20201024 13:30:31.137"></status>
</kw>
<status status="PASS" endtime="20201024 13:30:31.138" starttime="20201024 13:30:00.573"></status>
</kw>
<msg timestamp="20201024 13:30:31.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:30:31.138" starttime="20201024 13:30:00.573"></status>
</kw>
<msg timestamp="20201024 13:30:31.139" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:30:02 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:30:02 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201024 13:30:31.139" starttime="20201024 13:30:00.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201024 13:30:31.140" starttime="20201024 13:30:31.139"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201024 13:30:31.140" critical="yes" starttime="20201024 13:30:00.553"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:30:31.144" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:30:31.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:30:31.150" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:30:31.150" starttime="20201024 13:30:31.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:30:31.150" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:30:31.151" starttime="20201024 13:30:31.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:30:31.151" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:30:31.151" starttime="20201024 13:30:31.151"></status>
</kw>
<status status="PASS" endtime="20201024 13:30:31.151" starttime="20201024 13:30:31.143"></status>
</kw>
<msg timestamp="20201024 13:30:31.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:30:31.152" starttime="20201024 13:30:31.142"></status>
</kw>
<msg timestamp="20201024 13:30:31.152" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:30:31.152" starttime="20201024 13:30:31.142"></status>
</kw>
<msg timestamp="20201024 13:30:31.152" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:30:31.152" starttime="20201024 13:30:31.141"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201024 13:30:31.153" level="INFO">${random} = 81</msg>
<status status="PASS" endtime="20201024 13:30:31.153" starttime="20201024 13:30:31.152"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:30:31.156" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:30:31.156" starttime="20201024 13:30:31.156"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:30:31.157" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:30:31.157" starttime="20201024 13:30:31.157"></status>
</kw>
<status status="PASS" endtime="20201024 13:30:31.157" starttime="20201024 13:30:31.155"></status>
</kw>
<msg timestamp="20201024 13:30:31.157" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:30:31.157" starttime="20201024 13:30:31.155"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201024 13:30:31.158" starttime="20201024 13:30:31.158"></status>
</kw>
<msg timestamp="20201024 13:30:31.158" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201024 13:30:31.158" starttime="20201024 13:30:31.157"></status>
</kw>
<status status="PASS" endtime="20201024 13:30:31.159" starttime="20201024 13:30:31.154"></status>
</kw>
<msg timestamp="20201024 13:30:31.159" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:30:31.159" starttime="20201024 13:30:31.154"></status>
</kw>
<msg timestamp="20201024 13:30:31.159" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201024 13:30:31.159" starttime="20201024 13:30:31.153"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:30:31.162" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:30:31.162" starttime="20201024 13:30:31.162"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:30:31.163" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:30:31.163" starttime="20201024 13:30:31.163"></status>
</kw>
<status status="PASS" endtime="20201024 13:30:31.163" starttime="20201024 13:30:31.162"></status>
</kw>
<msg timestamp="20201024 13:30:31.163" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:30:31.163" starttime="20201024 13:30:31.161"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:30:31.165" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201024 13:30:31.165" starttime="20201024 13:30:31.164"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:30:31.165" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201024 13:30:31.166" starttime="20201024 13:30:31.165"></status>
</kw>
<status status="PASS" endtime="20201024 13:30:31.166" starttime="20201024 13:30:31.164"></status>
</kw>
<msg timestamp="20201024 13:30:31.166" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201024 13:30:31.166" starttime="20201024 13:30:31.163"></status>
</kw>
<status status="PASS" endtime="20201024 13:30:31.166" starttime="20201024 13:30:31.160"></status>
</kw>
<msg timestamp="20201024 13:30:31.166" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201024 13:30:31.166" starttime="20201024 13:30:31.160"></status>
</kw>
<msg timestamp="20201024 13:30:31.166" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201024 13:30:31.166" starttime="20201024 13:30:31.159"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201024 13:30:31.169" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201024 13:30:31.169" starttime="20201024 13:30:31.169"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:30:31.170" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201024 13:30:31.170" starttime="20201024 13:30:31.169"></status>
</kw>
<status status="PASS" endtime="20201024 13:30:31.170" starttime="20201024 13:30:31.169"></status>
</kw>
<msg timestamp="20201024 13:30:31.170" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201024 13:30:31.170" starttime="20201024 13:30:31.168"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:30:31.172" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201024 13:30:31.172" starttime="20201024 13:30:31.171"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:30:31.172" level="INFO">${result} = /wordcount-81.txt</msg>
<status status="PASS" endtime="20201024 13:30:31.172" starttime="20201024 13:30:31.172"></status>
</kw>
<status status="PASS" endtime="20201024 13:30:31.173" starttime="20201024 13:30:31.171"></status>
</kw>
<msg timestamp="20201024 13:30:31.173" level="INFO">${path_with_leading} = /wordcount-81.txt</msg>
<status status="PASS" endtime="20201024 13:30:31.173" starttime="20201024 13:30:31.170"></status>
</kw>
<status status="PASS" endtime="20201024 13:30:31.173" starttime="20201024 13:30:31.168"></status>
</kw>
<msg timestamp="20201024 13:30:31.173" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-81.txt</msg>
<status status="PASS" endtime="20201024 13:30:31.173" starttime="20201024 13:30:31.167"></status>
</kw>
<msg timestamp="20201024 13:30:31.173" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-81.txt</msg>
<status status="PASS" endtime="20201024 13:30:31.173" starttime="20201024 13:30:31.166"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:30:31.176" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-81.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:30:33.599" level="INFO">${rc} = 255</msg>
<msg timestamp="20201024 13:30:33.599" level="INFO">${output} = 2020-10-24 13:30:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-10-24 13:30:33 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
202...</msg>
<status status="PASS" endtime="20201024 13:30:33.599" starttime="20201024 13:30:31.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:30:33.600" level="INFO">2020-10-24 13:30:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-10-24 13:30:33 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
2020-10-24 13:30:33 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603546233404, maxDate=1604151033404, sequenceNumber=4, masterKeyId=2))
2020-10-24 13:30:33 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ed f3 b6 d6 d5 2e 38 ed fb e8 f6 d7 2e 40 04 48 01 5a 0d 32 36 30 35 30 35 39 31 36 31 39 34 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-24 13:30:33 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603546233404, maxDate=1604151033404, sequenceNumber=4, masterKeyId=2)
org.apache.hadoop.mapred.FileAlreadyExistsException: Output directory ofs://om/volume1/bucket1/wordcount-81.txt already exists
	at org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.checkOutputSpecs(FileOutputFormat.java:164)
	at org.apache.hadoop.mapreduce.JobSubmitter.checkSpecs(JobSubmitter.java:277)
	at org.apache.hadoop.mapreduce.JobSubmitter.submitJobInternal(JobSubmitter.java:143)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1570)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1567)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1567)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1588)
	at org.apache.hadoop.examples.WordCount.main(WordCount.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)</msg>
<status status="PASS" endtime="20201024 13:30:33.600" starttime="20201024 13:30:33.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:30:33.600" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201024 13:30:33.601" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20201024 13:30:33.601" starttime="20201024 13:30:33.600"></status>
</kw>
<status status="FAIL" endtime="20201024 13:30:33.601" starttime="20201024 13:30:31.174"></status>
</kw>
<msg timestamp="20201024 13:30:33.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201024 13:30:33.601" starttime="20201024 13:30:31.174"></status>
</kw>
<status status="FAIL" endtime="20201024 13:30:33.601" starttime="20201024 13:30:31.173"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201024 13:30:33.602" critical="yes" starttime="20201024 13:30:31.141">255 != 0</status>
</test>
<doc>Execute MR jobs</doc>
<status status="FAIL" endtime="20201024 13:30:33.603" starttime="20201024 13:30:00.513"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:28:35.944" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:28:35.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:28:35.952" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:28:35.952" starttime="20201024 13:28:35.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:28:35.952" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:28:35.952" starttime="20201024 13:28:35.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:28:35.953" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:28:35.953" starttime="20201024 13:28:35.952"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:35.953" starttime="20201024 13:28:35.942"></status>
</kw>
<msg timestamp="20201024 13:28:35.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:28:35.953" starttime="20201024 13:28:35.941"></status>
</kw>
<msg timestamp="20201024 13:28:35.953" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:28:35.953" starttime="20201024 13:28:35.941"></status>
</kw>
<msg timestamp="20201024 13:28:35.954" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:28:35.954" starttime="20201024 13:28:35.941"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:28:35.956" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:28:35.956" starttime="20201024 13:28:35.956"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:28:35.957" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:28:35.957" starttime="20201024 13:28:35.957"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:35.957" starttime="20201024 13:28:35.956"></status>
</kw>
<msg timestamp="20201024 13:28:35.957" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:28:35.957" starttime="20201024 13:28:35.955"></status>
</kw>
<status status="PASS" endtime="20201024 13:28:35.958" starttime="20201024 13:28:35.955"></status>
</kw>
<msg timestamp="20201024 13:28:35.958" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:28:35.958" starttime="20201024 13:28:35.954"></status>
</kw>
<msg timestamp="20201024 13:28:35.958" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:28:35.958" starttime="20201024 13:28:35.954"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:28:35.960" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:29:12.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:29:12.689" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:28:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:28:38 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201024 13:29:12.689" starttime="20201024 13:28:35.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:29:12.690" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:28:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:28:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-24 13:28:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-24 13:28:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:28:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6F0E970F7176-&gt;bbfacf17-709b-40b0-aa40-ed7441a44310
2020-10-24 13:28:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-24 13:28:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-10-24 13:28:39 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
2020-10-24 13:28:40 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603546120050, maxDate=1604150920050, sequenceNumber=1, masterKeyId=2))
2020-10-24 13:28:40 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ff fc af d6 d5 2e 38 ff 84 e2 f6 d7 2e 40 01 48 01 5a 0d 32 36 30 35 30 35 39 31 36 31 39 34 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-24 13:28:40 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603546120050, maxDate=1604150920050, sequenceNumber=1, masterKeyId=2)
2020-10-24 13:28:40 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-24 13:28:40 INFO  JobSubmitter:202 - number of splits:3
2020-10-24 13:28:40 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-24 13:28:40 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603546015769_0001
2020-10-24 13:28:40 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603546120050, maxDate=1604150920050, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ff fc af d6 d5 2e 38 ff 84 e2 f6 d7 2e 40 01 48 01 5a 0d 32 36 30 35 30 35 39 31 36 31 39 34 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-10-24 13:28:41 INFO  Configuration:2752 - resource-types.xml not found
2020-10-24 13:28:41 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-24 13:28:41 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-24 13:28:42 INFO  YarnClientImpl:311 - Submitted application application_1603546015769_0001
2020-10-24 13:28:42 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603546015769_0001/
2020-10-24 13:28:42 INFO  Job:1619 - Running job: job_1603546015769_0001
2020-10-24 13:28:52 INFO  Job:1640 - Job job_1603546015769_0001 running in uber mode : false
2020-10-24 13:28:52 INFO  Job:1647 -  map 0% reduce 0%
2020-10-24 13:29:01 INFO  Job:1647 -  map 33% reduce 0%
2020-10-24 13:29:03 INFO  Job:1647 -  map 67% reduce 0%
2020-10-24 13:29:04 INFO  Job:1647 -  map 100% reduce 0%
2020-10-24 13:29:08 INFO  Job:1647 -  map 100% reduce 100%
2020-10-24 13:29:11 INFO  Job:1658 - Job job_1603546015769_0001 completed successfully
2020-10-24 13:29:12 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1054069
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44416
		Total time spent by all reduces in occupied slots (ms)=7984
		Total time spent by all map tasks (ms)=22208
		Total time spent by all reduce tasks (ms)=3992
		Total vcore-milliseconds taken by all map tasks=22208
		Total vcore-milliseconds taken by all reduce tasks=3992
		Total megabyte-milliseconds taken by all map tasks=45481984
		Total megabyte-milliseconds taken by all reduce tasks=8175616
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1414
		CPU time spent (ms)=7290
		Physical memory (bytes) snapshot=1438265344
		Virtual memory (bytes) snapshot=14282924032
		Total committed heap usage (bytes)=1262485504
		Peak Map Physical memory (bytes)=504184832
		Peak Map Virtual memory (bytes)=3569729536
		Peak Reduce Physical memory (bytes)=280236032
		Peak Reduce Virtual memory (bytes)=3576057856
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.667 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201024 13:29:12.690" starttime="20201024 13:29:12.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:29:12.690" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:29:12.691" starttime="20201024 13:29:12.690"></status>
</kw>
<status status="PASS" endtime="20201024 13:29:12.691" starttime="20201024 13:28:35.959"></status>
</kw>
<msg timestamp="20201024 13:29:12.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:29:12.691" starttime="20201024 13:28:35.959"></status>
</kw>
<msg timestamp="20201024 13:29:12.692" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-24 13:28:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:28:38 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201024 13:29:12.692" starttime="20201024 13:28:35.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201024 13:29:12.692" starttime="20201024 13:29:12.692"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201024 13:29:12.693" critical="yes" starttime="20201024 13:28:35.940"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:29:12.697" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:29:12.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:29:12.703" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:29:12.703" starttime="20201024 13:29:12.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:29:12.704" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:29:12.704" starttime="20201024 13:29:12.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:29:12.704" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:29:12.704" starttime="20201024 13:29:12.704"></status>
</kw>
<status status="PASS" endtime="20201024 13:29:12.705" starttime="20201024 13:29:12.695"></status>
</kw>
<msg timestamp="20201024 13:29:12.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:29:12.705" starttime="20201024 13:29:12.695"></status>
</kw>
<msg timestamp="20201024 13:29:12.705" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:29:12.705" starttime="20201024 13:29:12.694"></status>
</kw>
<msg timestamp="20201024 13:29:12.705" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201024 13:29:12.705" starttime="20201024 13:29:12.694"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201024 13:29:12.706" level="INFO">${random} = 81</msg>
<status status="PASS" endtime="20201024 13:29:12.706" starttime="20201024 13:29:12.705"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:29:12.709" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:29:12.709" starttime="20201024 13:29:12.709"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:29:12.710" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:29:12.710" starttime="20201024 13:29:12.709"></status>
</kw>
<status status="PASS" endtime="20201024 13:29:12.710" starttime="20201024 13:29:12.708"></status>
</kw>
<msg timestamp="20201024 13:29:12.710" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:29:12.710" starttime="20201024 13:29:12.708"></status>
</kw>
<status status="PASS" endtime="20201024 13:29:12.710" starttime="20201024 13:29:12.707"></status>
</kw>
<msg timestamp="20201024 13:29:12.710" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:29:12.710" starttime="20201024 13:29:12.706"></status>
</kw>
<msg timestamp="20201024 13:29:12.711" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201024 13:29:12.711" starttime="20201024 13:29:12.706"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:29:12.713" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:29:12.713" starttime="20201024 13:29:12.713"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:29:12.714" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:29:12.714" starttime="20201024 13:29:12.714"></status>
</kw>
<status status="PASS" endtime="20201024 13:29:12.714" starttime="20201024 13:29:12.713"></status>
</kw>
<msg timestamp="20201024 13:29:12.714" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:29:12.714" starttime="20201024 13:29:12.712"></status>
</kw>
<status status="PASS" endtime="20201024 13:29:12.715" starttime="20201024 13:29:12.712"></status>
</kw>
<msg timestamp="20201024 13:29:12.715" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201024 13:29:12.715" starttime="20201024 13:29:12.711"></status>
</kw>
<msg timestamp="20201024 13:29:12.715" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201024 13:29:12.715" starttime="20201024 13:29:12.711"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201024 13:29:12.718" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201024 13:29:12.718" starttime="20201024 13:29:12.718"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201024 13:29:12.719" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201024 13:29:12.719" starttime="20201024 13:29:12.718"></status>
</kw>
<status status="PASS" endtime="20201024 13:29:12.719" starttime="20201024 13:29:12.717"></status>
</kw>
<msg timestamp="20201024 13:29:12.719" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201024 13:29:12.719" starttime="20201024 13:29:12.717"></status>
</kw>
<status status="PASS" endtime="20201024 13:29:12.719" starttime="20201024 13:29:12.716"></status>
</kw>
<msg timestamp="20201024 13:29:12.720" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-81.txt</msg>
<status status="PASS" endtime="20201024 13:29:12.720" starttime="20201024 13:29:12.716"></status>
</kw>
<msg timestamp="20201024 13:29:12.720" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-81.txt</msg>
<status status="PASS" endtime="20201024 13:29:12.720" starttime="20201024 13:29:12.715"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:29:12.722" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-81.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:29:45.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:29:45.128" level="INFO">${output} = 2020-10-24 13:29:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-10-24 13:29:14 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
202...</msg>
<status status="PASS" endtime="20201024 13:29:45.128" starttime="20201024 13:29:12.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:29:45.129" level="INFO">2020-10-24 13:29:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-10-24 13:29:14 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
2020-10-24 13:29:15 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603546155005, maxDate=1604150955005, sequenceNumber=2, masterKeyId=2))
2020-10-24 13:29:15 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a4 8f b2 d6 d5 2e 38 a4 97 e4 f6 d7 2e 40 02 48 01 5a 0d 32 36 30 35 30 35 39 31 36 31 39 34 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-24 13:29:15 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603546155005, maxDate=1604150955005, sequenceNumber=2, masterKeyId=2)
2020-10-24 13:29:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-24 13:29:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-24 13:29:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-24 13:29:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-24 13:29:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:29:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CBEB38CC6F39-&gt;bbfacf17-709b-40b0-aa40-ed7441a44310
2020-10-24 13:29:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-24 13:29:16 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-24 13:29:16 INFO  JobSubmitter:202 - number of splits:3
2020-10-24 13:29:16 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-24 13:29:17 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603546015769_0002
2020-10-24 13:29:17 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603546155005, maxDate=1604150955005, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a4 8f b2 d6 d5 2e 38 a4 97 e4 f6 d7 2e 40 02 48 01 5a 0d 32 36 30 35 30 35 39 31 36 31 39 34 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-10-24 13:29:17 INFO  Configuration:2752 - resource-types.xml not found
2020-10-24 13:29:17 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-24 13:29:17 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-24 13:29:18 INFO  YarnClientImpl:311 - Submitted application application_1603546015769_0002
2020-10-24 13:29:18 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603546015769_0002/
2020-10-24 13:29:18 INFO  Job:1619 - Running job: job_1603546015769_0002
2020-10-24 13:29:26 INFO  Job:1640 - Job job_1603546015769_0002 running in uber mode : false
2020-10-24 13:29:26 INFO  Job:1647 -  map 0% reduce 0%
2020-10-24 13:29:35 INFO  Job:1647 -  map 33% reduce 0%
2020-10-24 13:29:37 INFO  Job:1647 -  map 67% reduce 0%
2020-10-24 13:29:38 INFO  Job:1647 -  map 100% reduce 0%
2020-10-24 13:29:41 INFO  Job:1647 -  map 100% reduce 100%
2020-10-24 13:29:44 INFO  Job:1658 - Job job_1603546015769_0002 completed successfully
2020-10-24 13:29:44 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1116597
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41434
		Total time spent by all reduces in occupied slots (ms)=7132
		Total time spent by all map tasks (ms)=20717
		Total time spent by all reduce tasks (ms)=3566
		Total vcore-milliseconds taken by all map tasks=20717
		Total vcore-milliseconds taken by all reduce tasks=3566
		Total megabyte-milliseconds taken by all map tasks=42428416
		Total megabyte-milliseconds taken by all reduce tasks=7303168
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=989
		CPU time spent (ms)=7430
		Physical memory (bytes) snapshot=1244581888
		Virtual memory (bytes) snapshot=14288510976
		Total committed heap usage (bytes)=1092091904
		Peak Map Physical memory (bytes)=377090048
		Peak Map Virtual memory (bytes)=3574157312
		Peak Reduce Physical memory (bytes)=283688960
		Peak Reduce Virtual memory (bytes)=3572322304
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201024 13:29:45.129" starttime="20201024 13:29:45.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:29:45.130" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:29:45.130" starttime="20201024 13:29:45.129"></status>
</kw>
<status status="PASS" endtime="20201024 13:29:45.130" starttime="20201024 13:29:12.721"></status>
</kw>
<msg timestamp="20201024 13:29:45.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:29:45.130" starttime="20201024 13:29:12.720"></status>
</kw>
<msg timestamp="20201024 13:29:45.131" level="INFO">${output} = 2020-10-24 13:29:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-10-24 13:29:14 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
202...</msg>
<status status="PASS" endtime="20201024 13:29:45.131" starttime="20201024 13:29:12.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201024 13:29:45.131" starttime="20201024 13:29:45.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201024 13:29:45.132" starttime="20201024 13:29:45.132"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201024 13:29:45.132" critical="yes" starttime="20201024 13:29:12.693"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201024 13:29:45.133" starttime="20201024 13:28:35.900"></status>
</suite>
<status status="FAIL" elapsedtime="154884" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="9">Critical Tests</stat>
<stat fail="1" pass="9">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="ozonesecure-mr" pass="9">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="1" id="s1-s6" name="mapreduce-ofs" pass="1">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
