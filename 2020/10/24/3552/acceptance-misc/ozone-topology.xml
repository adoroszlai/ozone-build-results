<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201024 13:24:08.844" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20201024 13:21:18.713" starttime="20201024 13:21:18.712"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:21:18.718" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:21:18.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:21:18.823" level="INFO">${output} = HTTP/1.1 200 OK
Date: Sat, 24 Oct 2020 13:21:18 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Sat, 24 Oct 2020 12:46:02 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201024 13:21:18.823" starttime="20201024 13:21:18.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:21:18.824" level="INFO">HTTP/1.1 200 OK
Date: Sat, 24 Oct 2020 13:21:18 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Sat, 24 Oct 2020 12:46:02 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20201024 13:21:18.824" starttime="20201024 13:21:18.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:21:18.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:21:18.825" starttime="20201024 13:21:18.824"></status>
</kw>
<status status="PASS" endtime="20201024 13:21:18.825" starttime="20201024 13:21:18.713"></status>
</kw>
<msg timestamp="20201024 13:21:18.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:21:18.825" starttime="20201024 13:21:18.713"></status>
</kw>
<msg timestamp="20201024 13:21:18.825" level="INFO">${result} = HTTP/1.1 200 OK
Date: Sat, 24 Oct 2020 13:21:18 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Sat, 24 Oct 2020 12:46:02 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201024 13:21:18.826" starttime="20201024 13:21:18.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20201024 13:21:18.826" starttime="20201024 13:21:18.826"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201024 13:21:18.826" critical="yes" starttime="20201024 13:21:18.711"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201024 13:21:18.829" starttime="20201024 13:21:18.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:21:18.837" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:22:26.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:22:26.299" level="INFO">${output} = 2020-10-24 13:21:20,348 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-24 13:21:20,534 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201024 13:22:26.299" starttime="20201024 13:21:18.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:22:26.300" level="INFO">2020-10-24 13:21:20,348 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-24 13:21:20,534 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-24 13:21:20,534 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-24 13:21:22,404 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-24 13:21:22,405 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-10-24 13:21:22,405 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-10-24 13:21:22,405 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-10-24 13:21:22,405 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-24 13:21:22,405 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-24 13:21:22,405 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-10-24 13:21:22,411 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-10-24 13:21:22,413 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-24 13:21:22,422 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-10-24 13:21:22,462 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-70511, with hadoop as owner.
2020-10-24 13:21:22,787 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-20108, with hadoop as owner.
2020-10-24 13:21:22,807 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-84537, with hadoop as owner.
2020-10-24 13:21:22,819 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-95054, with hadoop as owner.
2020-10-24 13:21:22,827 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-15454, with hadoop as owner.
2020-10-24 13:21:22,862 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-70511/bucket-0-23917, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:22,945 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-20108/bucket-0-52792, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:22,957 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-84537/bucket-0-80374, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:22,965 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-95054/bucket-0-86736, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:22,971 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-15454/bucket-0-54996, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:22,977 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-70511/bucket-1-51021, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:22,987 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-20108/bucket-1-42855, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:22,995 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-84537/bucket-1-16971, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:23,000 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-95054/bucket-1-59962, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:23,007 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-15454/bucket-1-14637, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:23,013 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-70511/bucket-2-83766, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:23,019 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-20108/bucket-2-55406, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:23,026 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-84537/bucket-2-51258, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:23,031 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-95054/bucket-2-41230, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:23,038 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-15454/bucket-2-01839, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:23,043 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-70511/bucket-3-16364, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:23,050 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-20108/bucket-3-39451, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:23,057 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-84537/bucket-3-19194, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:23,064 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-95054/bucket-3-42996, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:23,069 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-15454/bucket-3-13616, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:23,075 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-70511/bucket-4-78182, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:23,082 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-20108/bucket-4-22281, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:23,090 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-84537/bucket-4-24663, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:23,099 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-95054/bucket-4-55134, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:23,104 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-15454/bucket-4-53422, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-24 13:21:23,427 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-10-24 13:21:24,137 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-24 13:21:24,427 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-10-24 13:21:24,435 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-24 13:21:24,436 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-5304B687C39C-&gt;06c5b9a2-55ee-468a-9267-ce7e32b7a4e1
2020-10-24 13:21:24,437 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-24 13:21:25,428 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-10-24 13:21:26,428 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-10-24 13:21:27,114 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-97344D451BB4-&gt;33dea922-c248-4fdf-ad3d-268cfbf3c0e5
2020-10-24 13:21:27,116 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-24 13:21:27,430 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-10-24 13:21:28,431 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-10-24 13:21:29,433 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-10-24 13:21:30,433 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-10-24 13:21:31,434 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-10-24 13:21:32,434 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-10-24 13:21:33,435 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-10-24 13:21:34,435 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-10-24 13:21:35,436 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-10-24 13:21:36,436 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-10-24 13:21:37,437 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-10-24 13:21:38,437 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-10-24 13:21:39,438 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-10-24 13:21:40,439 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-10-24 13:21:41,439 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-10-24 13:21:42,440 [Thread-7] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-10-24 13:21:43,441 [Thread-7] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-10-24 13:21:44,441 [Thread-7] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-10-24 13:21:45,441 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-10-24 13:21:46,442 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-10-24 13:21:47,442 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-10-24 13:21:48,444 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-10-24 13:21:49,445 [Thread-7] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-10-24 13:21:50,445 [Thread-7] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-10-24 13:21:51,446 [Thread-7] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-10-24 13:21:52,446 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-10-24 13:21:53,447 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-10-24 13:21:54,447 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-10-24 13:21:55,448 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-10-24 13:21:56,448 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-10-24 13:21:57,449 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-10-24 13:21:58,449 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-10-24 13:21:59,450 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-10-24 13:22:00,450 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-10-24 13:22:01,451 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-10-24 13:22:02,451 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-10-24 13:22:03,452 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-10-24 13:22:04,452 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-10-24 13:22:05,452 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-10-24 13:22:06,453 [Thread-7] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-10-24 13:22:07,453 [Thread-7] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-10-24 13:22:08,454 [Thread-7] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-10-24 13:22:09,454 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-10-24 13:22:10,455 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-10-24 13:22:11,455 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-10-24 13:22:12,456 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-10-24 13:22:13,456 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-10-24 13:22:14,457 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-10-24 13:22:15,458 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-10-24 13:22:16,458 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-10-24 13:22:17,459 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-10-24 13:22:18,459 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-10-24 13:22:19,460 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-10-24 13:22:20,460 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-10-24 13:22:21,461 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,374
Average Time spent in bucket creation: 00:00:00,182
Average Time spent in key creation: 00:00:02,012
Average Time spent in key write: 00:00:00,802
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:05,261
***************************************************</msg>
<status status="PASS" endtime="20201024 13:22:26.300" starttime="20201024 13:22:26.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:22:26.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:22:26.301" starttime="20201024 13:22:26.300"></status>
</kw>
<status status="PASS" endtime="20201024 13:22:26.301" starttime="20201024 13:21:18.831"></status>
</kw>
<msg timestamp="20201024 13:22:26.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:22:26.301" starttime="20201024 13:21:18.830"></status>
</kw>
<msg timestamp="20201024 13:22:26.302" level="INFO">${result} = 2020-10-24 13:21:20,348 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-24 13:21:20,534 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201024 13:22:26.302" starttime="20201024 13:21:18.829"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20201024 13:22:26.302" starttime="20201024 13:22:26.302"></status>
</kw>
<status status="PASS" endtime="20201024 13:22:26.303" starttime="20201024 13:22:26.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20201024 13:22:26.303" starttime="20201024 13:22:26.303"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201024 13:22:26.303" critical="yes" starttime="20201024 13:21:18.828"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201024 13:22:26.304" starttime="20201024 13:21:18.666"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:22:30.489" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:22:32.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:22:32.765" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201024 13:22:32.765" starttime="20201024 13:22:30.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:22:32.766" level="INFO">State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2</msg>
<status status="PASS" endtime="20201024 13:22:32.766" starttime="20201024 13:22:32.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:22:32.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:22:32.767" starttime="20201024 13:22:32.767"></status>
</kw>
<status status="PASS" endtime="20201024 13:22:32.767" starttime="20201024 13:22:30.484"></status>
</kw>
<msg timestamp="20201024 13:22:32.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:22:32.768" starttime="20201024 13:22:30.484"></status>
</kw>
<msg timestamp="20201024 13:22:32.768" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201024 13:22:32.768" starttime="20201024 13:22:30.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20201024 13:22:32.768" starttime="20201024 13:22:32.768"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201024 13:22:32.769" critical="yes" starttime="20201024 13:22:30.483"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:22:32.774" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:22:35.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:22:35.109" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201024 13:22:35.109" starttime="20201024 13:22:32.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:22:35.110" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20201024 13:22:35.110" starttime="20201024 13:22:35.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:22:35.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:22:35.111" starttime="20201024 13:22:35.110"></status>
</kw>
<status status="PASS" endtime="20201024 13:22:35.111" starttime="20201024 13:22:32.771"></status>
</kw>
<msg timestamp="20201024 13:22:35.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:22:35.111" starttime="20201024 13:22:32.771"></status>
</kw>
<msg timestamp="20201024 13:22:35.112" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201024 13:22:35.112" starttime="20201024 13:22:32.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20201024 13:22:35.112" starttime="20201024 13:22:35.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20201024 13:22:35.113" starttime="20201024 13:22:35.112"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201024 13:22:35.113" critical="yes" starttime="20201024 13:22:32.769"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201024 13:22:35.114" starttime="20201024 13:22:30.438"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:22:39.403" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:22:41.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:22:41.996" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:22:41.996" starttime="20201024 13:22:39.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:22:41.998" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:22:41.998" starttime="20201024 13:22:41.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:22:41.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:22:41.998" starttime="20201024 13:22:41.998"></status>
</kw>
<status status="PASS" endtime="20201024 13:22:41.999" starttime="20201024 13:22:39.398"></status>
</kw>
<msg timestamp="20201024 13:22:41.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:22:41.999" starttime="20201024 13:22:39.398"></status>
</kw>
<msg timestamp="20201024 13:22:41.999" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:22:41.999" starttime="20201024 13:22:39.397"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201024 13:22:42.000" starttime="20201024 13:22:41.999"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:22:42.004" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:22:44.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:22:44.621" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:22:44.621" starttime="20201024 13:22:42.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:22:44.622" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:22:44.622" starttime="20201024 13:22:44.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:22:44.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:22:44.623" starttime="20201024 13:22:44.622"></status>
</kw>
<status status="PASS" endtime="20201024 13:22:44.623" starttime="20201024 13:22:42.000"></status>
</kw>
<msg timestamp="20201024 13:22:44.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:22:44.623" starttime="20201024 13:22:42.000"></status>
</kw>
<msg timestamp="20201024 13:22:44.624" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:22:44.624" starttime="20201024 13:22:42.000"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201024 13:22:44.624" starttime="20201024 13:22:44.624"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:22:44.629" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:22:49.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:22:49.420" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:22:49.420" starttime="20201024 13:22:44.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:22:49.421" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:22:49.421" starttime="20201024 13:22:49.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:22:49.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:22:49.421" starttime="20201024 13:22:49.421"></status>
</kw>
<status status="PASS" endtime="20201024 13:22:49.422" starttime="20201024 13:22:44.625"></status>
</kw>
<msg timestamp="20201024 13:22:49.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:22:49.422" starttime="20201024 13:22:44.625"></status>
</kw>
<msg timestamp="20201024 13:22:49.422" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:22:49.422" starttime="20201024 13:22:44.624"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201024 13:22:49.423" starttime="20201024 13:22:49.422"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201024 13:22:49.423" critical="yes" starttime="20201024 13:22:39.397"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201024 13:22:49.424" starttime="20201024 13:22:39.354"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201024 13:23:58.443" level="INFO">${random} = 67819</msg>
<status status="PASS" endtime="20201024 13:23:58.443" starttime="20201024 13:23:58.443"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:23:58.449" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-67819 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:24:02.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:24:02.883" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:24:02.883" starttime="20201024 13:23:58.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:24:02.884" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:24:02.884" starttime="20201024 13:24:02.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:24:02.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:24:02.885" starttime="20201024 13:24:02.884"></status>
</kw>
<status status="PASS" endtime="20201024 13:24:02.885" starttime="20201024 13:23:58.444"></status>
</kw>
<msg timestamp="20201024 13:24:02.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:24:02.885" starttime="20201024 13:23:58.444"></status>
</kw>
<msg timestamp="20201024 13:24:02.886" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:24:02.886" starttime="20201024 13:23:58.443"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201024 13:24:02.886" starttime="20201024 13:24:02.886"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201024 13:24:02.886" critical="yes" starttime="20201024 13:23:58.442"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201024 13:24:02.887" starttime="20201024 13:23:58.398"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201024 13:22:55.429" level="INFO">${random} = 46015</msg>
<status status="PASS" endtime="20201024 13:22:55.429" starttime="20201024 13:22:55.428"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201024 13:22:55.435" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-46015 2&gt;&amp;1'.</msg>
<msg timestamp="20201024 13:23:29.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20201024 13:23:29.706" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:23:29.706" starttime="20201024 13:22:55.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201024 13:23:29.708" level="INFO"></msg>
<status status="PASS" endtime="20201024 13:23:29.708" starttime="20201024 13:23:29.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201024 13:23:29.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201024 13:23:29.708" starttime="20201024 13:23:29.708"></status>
</kw>
<status status="PASS" endtime="20201024 13:23:29.709" starttime="20201024 13:22:55.430"></status>
</kw>
<msg timestamp="20201024 13:23:29.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201024 13:23:29.709" starttime="20201024 13:22:55.429"></status>
</kw>
<msg timestamp="20201024 13:23:29.709" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201024 13:23:29.709" starttime="20201024 13:22:55.429"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201024 13:23:29.710" starttime="20201024 13:23:29.709"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201024 13:23:29.710" critical="yes" starttime="20201024 13:22:55.427"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201024 13:23:29.711" starttime="20201024 13:22:55.386"></status>
</suite>
<status status="PASS" elapsedtime="121198" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
