<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201026 21:03:22.907" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="upgrade">
<suite source="/opt/ozone/smoketest/topology/loaddata.robot" id="s1-s1" name="Loaddata">
<test id="s1-s1-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 21:02:13.648" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 21:02:15.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 21:02:15.954" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 21:02:15.954" starttime="20201026 21:02:13.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 21:02:15.955" level="INFO"></msg>
<status status="PASS" endtime="20201026 21:02:15.955" starttime="20201026 21:02:15.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 21:02:15.956" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 21:02:15.956" starttime="20201026 21:02:15.955"></status>
</kw>
<status status="PASS" endtime="20201026 21:02:15.956" starttime="20201026 21:02:13.646"></status>
</kw>
<msg timestamp="20201026 21:02:15.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 21:02:15.956" starttime="20201026 21:02:13.646"></status>
</kw>
<msg timestamp="20201026 21:02:15.956" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 21:02:15.956" starttime="20201026 21:02:13.646"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201026 21:02:15.957" starttime="20201026 21:02:15.956"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 21:02:15.959" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 21:02:17.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 21:02:17.907" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 21:02:17.907" starttime="20201026 21:02:15.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 21:02:17.908" level="INFO"></msg>
<status status="PASS" endtime="20201026 21:02:17.908" starttime="20201026 21:02:17.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 21:02:17.909" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 21:02:17.909" starttime="20201026 21:02:17.909"></status>
</kw>
<status status="PASS" endtime="20201026 21:02:17.909" starttime="20201026 21:02:15.958"></status>
</kw>
<msg timestamp="20201026 21:02:17.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 21:02:17.910" starttime="20201026 21:02:15.957"></status>
</kw>
<msg timestamp="20201026 21:02:17.910" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 21:02:17.910" starttime="20201026 21:02:15.957"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201026 21:02:17.910" starttime="20201026 21:02:17.910"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 21:02:17.912" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 21:02:21.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 21:02:21.746" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 21:02:21.746" starttime="20201026 21:02:17.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 21:02:21.747" level="INFO"></msg>
<status status="PASS" endtime="20201026 21:02:21.747" starttime="20201026 21:02:21.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 21:02:21.747" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 21:02:21.748" starttime="20201026 21:02:21.747"></status>
</kw>
<status status="PASS" endtime="20201026 21:02:21.748" starttime="20201026 21:02:17.911"></status>
</kw>
<msg timestamp="20201026 21:02:21.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 21:02:21.748" starttime="20201026 21:02:17.911"></status>
</kw>
<msg timestamp="20201026 21:02:21.748" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 21:02:21.748" starttime="20201026 21:02:17.910"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201026 21:02:21.749" starttime="20201026 21:02:21.748"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201026 21:02:21.749" critical="yes" starttime="20201026 21:02:13.645"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201026 21:02:21.751" starttime="20201026 21:02:13.607"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s2" name="Readdata">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201026 21:03:12.260" level="INFO">${random} = 21480</msg>
<status status="PASS" endtime="20201026 21:03:12.260" starttime="20201026 21:03:12.259"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 21:03:12.265" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-21480 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 21:03:16.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 21:03:16.217" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 21:03:16.217" starttime="20201026 21:03:12.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 21:03:16.218" level="INFO"></msg>
<status status="PASS" endtime="20201026 21:03:16.218" starttime="20201026 21:03:16.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 21:03:16.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 21:03:16.219" starttime="20201026 21:03:16.218"></status>
</kw>
<status status="PASS" endtime="20201026 21:03:16.219" starttime="20201026 21:03:12.260"></status>
</kw>
<msg timestamp="20201026 21:03:16.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 21:03:16.219" starttime="20201026 21:03:12.260"></status>
</kw>
<msg timestamp="20201026 21:03:16.219" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 21:03:16.219" starttime="20201026 21:03:12.260"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201026 21:03:16.220" starttime="20201026 21:03:16.219"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201026 21:03:16.220" critical="yes" starttime="20201026 21:03:12.258"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201026 21:03:16.221" starttime="20201026 21:03:12.214"></status>
</suite>
<status status="PASS" elapsedtime="12151" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="upgrade" pass="2">upgrade</stat>
<stat fail="0" id="s1-s1" name="Loaddata" pass="1">upgrade.Loaddata</stat>
<stat fail="0" id="s1-s2" name="Readdata" pass="1">upgrade.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
