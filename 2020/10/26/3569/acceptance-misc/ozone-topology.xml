<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201026 20:41:15.688" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20201026 20:38:36.919" starttime="20201026 20:38:36.918"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:38:36.924" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:38:37.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:38:37.021" level="INFO">${output} = HTTP/1.1 200 OK
Date: Mon, 26 Oct 2020 20:38:37 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 26 Oct 2020 20:05:28 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201026 20:38:37.021" starttime="20201026 20:38:36.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:38:37.022" level="INFO">HTTP/1.1 200 OK
Date: Mon, 26 Oct 2020 20:38:37 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 26 Oct 2020 20:05:28 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20201026 20:38:37.022" starttime="20201026 20:38:37.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:38:37.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:38:37.023" starttime="20201026 20:38:37.022"></status>
</kw>
<status status="PASS" endtime="20201026 20:38:37.023" starttime="20201026 20:38:36.919"></status>
</kw>
<msg timestamp="20201026 20:38:37.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:38:37.023" starttime="20201026 20:38:36.919"></status>
</kw>
<msg timestamp="20201026 20:38:37.024" level="INFO">${result} = HTTP/1.1 200 OK
Date: Mon, 26 Oct 2020 20:38:37 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 26 Oct 2020 20:05:28 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201026 20:38:37.024" starttime="20201026 20:38:36.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20201026 20:38:37.024" starttime="20201026 20:38:37.024"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201026 20:38:37.024" critical="yes" starttime="20201026 20:38:36.918"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201026 20:38:37.027" starttime="20201026 20:38:37.026"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:38:37.030" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:39:44.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:39:44.560" level="INFO">${output} = 2020-10-26 20:38:38,647 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-26 20:38:38,789 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201026 20:39:44.560" starttime="20201026 20:38:37.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:39:44.562" level="INFO">2020-10-26 20:38:38,647 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-26 20:38:38,789 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-26 20:38:38,789 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-26 20:38:40,673 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-26 20:38:40,673 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-10-26 20:38:40,673 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-10-26 20:38:40,673 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-10-26 20:38:40,674 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-26 20:38:40,674 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-26 20:38:40,674 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-10-26 20:38:40,683 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-10-26 20:38:40,684 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-26 20:38:40,697 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-10-26 20:38:40,743 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-65860, with hadoop as owner.
2020-10-26 20:38:41,019 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-16050, with hadoop as owner.
2020-10-26 20:38:41,026 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-57179, with hadoop as owner.
2020-10-26 20:38:41,031 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-51236, with hadoop as owner.
2020-10-26 20:38:41,036 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-49234, with hadoop as owner.
2020-10-26 20:38:41,049 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-65860/bucket-0-39415, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,108 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-16050/bucket-0-22657, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,118 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-57179/bucket-0-27076, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,125 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-51236/bucket-0-42547, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,130 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-49234/bucket-0-29493, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,134 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-65860/bucket-1-74154, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,138 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-16050/bucket-1-29350, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,142 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-57179/bucket-1-51619, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,146 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-51236/bucket-1-19563, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,152 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-49234/bucket-1-57654, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,158 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-65860/bucket-2-03133, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,161 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-16050/bucket-2-00976, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,165 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-57179/bucket-2-40860, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,168 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-51236/bucket-2-67678, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,172 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-49234/bucket-2-08040, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,175 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-65860/bucket-3-34734, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,178 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-16050/bucket-3-13691, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,184 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-57179/bucket-3-64011, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,189 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-51236/bucket-3-94265, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,194 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-49234/bucket-3-07771, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,198 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-65860/bucket-4-38112, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,204 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-16050/bucket-4-24916, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,209 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-57179/bucket-4-08263, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,212 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-51236/bucket-4-80508, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,216 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-49234/bucket-4-52771, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-26 20:38:41,700 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-10-26 20:38:42,489 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-26 20:38:42,703 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-10-26 20:38:42,819 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:38:42,819 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-15B3A43FD1F9-&gt;16be4d3e-78f1-489a-aeac-db337b49303b
2020-10-26 20:38:42,820 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-26 20:38:43,703 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-10-26 20:38:44,703 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-10-26 20:38:45,499 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-289AB41D664A-&gt;e0942973-54bd-4755-a10c-9e6f7b6db335
2020-10-26 20:38:45,499 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-26 20:38:45,704 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-10-26 20:38:46,704 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-10-26 20:38:47,705 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-10-26 20:38:48,706 [Thread-7] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-10-26 20:38:49,709 [Thread-7] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-10-26 20:38:50,710 [Thread-7] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-10-26 20:38:51,711 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-10-26 20:38:52,711 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-10-26 20:38:53,712 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-10-26 20:38:54,712 [Thread-7] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-10-26 20:38:55,713 [Thread-7] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-10-26 20:38:56,713 [Thread-7] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-10-26 20:38:57,714 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-10-26 20:38:58,715 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-10-26 20:38:59,716 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-10-26 20:39:00,717 [Thread-7] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2020-10-26 20:39:01,717 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-10-26 20:39:02,718 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-10-26 20:39:03,718 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-10-26 20:39:04,723 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-10-26 20:39:05,724 [Thread-7] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-10-26 20:39:06,724 [Thread-7] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-10-26 20:39:07,725 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-10-26 20:39:08,726 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-10-26 20:39:09,726 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-10-26 20:39:10,729 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-10-26 20:39:11,729 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-10-26 20:39:12,730 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-10-26 20:39:13,730 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-10-26 20:39:14,731 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-10-26 20:39:15,731 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-10-26 20:39:16,732 [Thread-7] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-10-26 20:39:17,732 [Thread-7] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-10-26 20:39:18,733 [Thread-7] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-10-26 20:39:19,733 [Thread-7] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-10-26 20:39:20,734 [Thread-7] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-10-26 20:39:21,738 [Thread-7] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-10-26 20:39:22,738 [Thread-7] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-10-26 20:39:23,738 [Thread-7] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-10-26 20:39:24,739 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-10-26 20:39:25,739 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-10-26 20:39:26,740 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-10-26 20:39:27,740 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-10-26 20:39:28,741 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-10-26 20:39:29,741 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-10-26 20:39:30,742 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-10-26 20:39:31,743 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-10-26 20:39:32,743 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-10-26 20:39:33,745 [Thread-7] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-10-26 20:39:34,746 [Thread-7] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-10-26 20:39:35,746 [Thread-7] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-10-26 20:39:36,746 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-10-26 20:39:37,747 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-10-26 20:39:38,747 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-10-26 20:39:39,748 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,306
Average Time spent in bucket creation: 00:00:00,130
Average Time spent in key creation: 00:00:01,976
Average Time spent in key write: 00:00:01,009
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:05,228
***************************************************</msg>
<status status="PASS" endtime="20201026 20:39:44.562" starttime="20201026 20:39:44.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:39:44.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:39:44.562" starttime="20201026 20:39:44.562"></status>
</kw>
<status status="PASS" endtime="20201026 20:39:44.563" starttime="20201026 20:38:37.027"></status>
</kw>
<msg timestamp="20201026 20:39:44.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:39:44.563" starttime="20201026 20:38:37.027"></status>
</kw>
<msg timestamp="20201026 20:39:44.563" level="INFO">${result} = 2020-10-26 20:38:38,647 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-26 20:38:38,789 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201026 20:39:44.563" starttime="20201026 20:38:37.027"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20201026 20:39:44.564" starttime="20201026 20:39:44.564"></status>
</kw>
<status status="PASS" endtime="20201026 20:39:44.564" starttime="20201026 20:39:44.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20201026 20:39:44.565" starttime="20201026 20:39:44.564"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201026 20:39:44.565" critical="yes" starttime="20201026 20:38:37.025"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201026 20:39:44.566" starttime="20201026 20:38:36.871"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:39:48.777" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:39:50.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:39:50.957" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201026 20:39:50.957" starttime="20201026 20:39:48.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:39:50.958" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2</msg>
<status status="PASS" endtime="20201026 20:39:50.958" starttime="20201026 20:39:50.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:39:50.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:39:50.959" starttime="20201026 20:39:50.958"></status>
</kw>
<status status="PASS" endtime="20201026 20:39:50.959" starttime="20201026 20:39:48.772"></status>
</kw>
<msg timestamp="20201026 20:39:50.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:39:50.959" starttime="20201026 20:39:48.771"></status>
</kw>
<msg timestamp="20201026 20:39:50.959" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201026 20:39:50.959" starttime="20201026 20:39:48.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20201026 20:39:50.960" starttime="20201026 20:39:50.959"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201026 20:39:50.960" critical="yes" starttime="20201026 20:39:48.770"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:39:50.966" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:39:53.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:39:53.252" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201026 20:39:53.253" starttime="20201026 20:39:50.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:39:53.254" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20201026 20:39:53.254" starttime="20201026 20:39:53.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:39:53.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:39:53.254" starttime="20201026 20:39:53.254"></status>
</kw>
<status status="PASS" endtime="20201026 20:39:53.255" starttime="20201026 20:39:50.963"></status>
</kw>
<msg timestamp="20201026 20:39:53.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:39:53.255" starttime="20201026 20:39:50.962"></status>
</kw>
<msg timestamp="20201026 20:39:53.255" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201026 20:39:53.255" starttime="20201026 20:39:50.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20201026 20:39:53.256" starttime="20201026 20:39:53.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20201026 20:39:53.256" starttime="20201026 20:39:53.256"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201026 20:39:53.256" critical="yes" starttime="20201026 20:39:50.961"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201026 20:39:53.258" starttime="20201026 20:39:48.725"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:39:57.555" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:40:00.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:40:00.114" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:40:00.114" starttime="20201026 20:39:57.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:40:00.115" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:40:00.115" starttime="20201026 20:40:00.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:40:00.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:40:00.116" starttime="20201026 20:40:00.115"></status>
</kw>
<status status="PASS" endtime="20201026 20:40:00.116" starttime="20201026 20:39:57.550"></status>
</kw>
<msg timestamp="20201026 20:40:00.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:40:00.116" starttime="20201026 20:39:57.550"></status>
</kw>
<msg timestamp="20201026 20:40:00.117" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:40:00.117" starttime="20201026 20:39:57.549"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201026 20:40:00.117" starttime="20201026 20:40:00.117"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:40:00.122" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:40:02.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:40:02.862" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:40:02.862" starttime="20201026 20:40:00.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:40:02.863" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:40:02.863" starttime="20201026 20:40:02.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:40:02.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:40:02.864" starttime="20201026 20:40:02.864"></status>
</kw>
<status status="PASS" endtime="20201026 20:40:02.864" starttime="20201026 20:40:00.118"></status>
</kw>
<msg timestamp="20201026 20:40:02.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:40:02.865" starttime="20201026 20:40:00.118"></status>
</kw>
<msg timestamp="20201026 20:40:02.865" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:40:02.865" starttime="20201026 20:40:00.117"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201026 20:40:02.865" starttime="20201026 20:40:02.865"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:40:02.869" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:40:07.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:40:07.629" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:40:07.629" starttime="20201026 20:40:02.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:40:07.630" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:40:07.630" starttime="20201026 20:40:07.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:40:07.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:40:07.631" starttime="20201026 20:40:07.630"></status>
</kw>
<status status="PASS" endtime="20201026 20:40:07.631" starttime="20201026 20:40:02.866"></status>
</kw>
<msg timestamp="20201026 20:40:07.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:40:07.631" starttime="20201026 20:40:02.866"></status>
</kw>
<msg timestamp="20201026 20:40:07.631" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:40:07.631" starttime="20201026 20:40:02.865"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201026 20:40:07.632" starttime="20201026 20:40:07.631"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201026 20:40:07.632" critical="yes" starttime="20201026 20:39:57.548"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201026 20:40:07.633" starttime="20201026 20:39:57.502"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201026 20:40:46.549" level="INFO">${random} = 69514</msg>
<status status="PASS" endtime="20201026 20:40:46.549" starttime="20201026 20:40:46.548"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:40:46.556" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-69514 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:41:09.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:41:09.882" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:41:09.882" starttime="20201026 20:40:46.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:41:09.883" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:41:09.883" starttime="20201026 20:41:09.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:41:09.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:41:09.884" starttime="20201026 20:41:09.883"></status>
</kw>
<status status="PASS" endtime="20201026 20:41:09.884" starttime="20201026 20:40:46.550"></status>
</kw>
<msg timestamp="20201026 20:41:09.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:41:09.884" starttime="20201026 20:40:46.550"></status>
</kw>
<msg timestamp="20201026 20:41:09.884" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:41:09.884" starttime="20201026 20:40:46.549"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201026 20:41:09.885" starttime="20201026 20:41:09.884"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201026 20:41:09.885" critical="yes" starttime="20201026 20:40:46.547"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201026 20:41:09.886" starttime="20201026 20:40:46.504"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201026 20:40:13.739" level="INFO">${random} = 52988</msg>
<status status="PASS" endtime="20201026 20:40:13.739" starttime="20201026 20:40:13.739"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:40:13.747" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-52988 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:40:18.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:40:18.013" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:40:18.013" starttime="20201026 20:40:13.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:40:18.014" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:40:18.014" starttime="20201026 20:40:18.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:40:18.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:40:18.015" starttime="20201026 20:40:18.014"></status>
</kw>
<status status="PASS" endtime="20201026 20:40:18.015" starttime="20201026 20:40:13.740"></status>
</kw>
<msg timestamp="20201026 20:40:18.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:40:18.015" starttime="20201026 20:40:13.740"></status>
</kw>
<msg timestamp="20201026 20:40:18.016" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:40:18.016" starttime="20201026 20:40:13.739"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201026 20:40:18.016" starttime="20201026 20:40:18.016"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201026 20:40:18.016" critical="yes" starttime="20201026 20:40:13.738"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201026 20:40:18.017" starttime="20201026 20:40:13.693"></status>
</suite>
<status status="PASS" elapsedtime="110065" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
