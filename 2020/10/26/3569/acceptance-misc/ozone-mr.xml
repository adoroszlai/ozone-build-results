<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201026 20:31:51.382" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:19:42.784" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:19:44.826" level="INFO">${rc} = 255</msg>
<msg timestamp="20201026 20:19:44.826" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201026 20:19:44.826" starttime="20201026 20:19:42.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:19:44.828" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201026 20:19:44.828" starttime="20201026 20:19:44.827"></status>
</kw>
<msg timestamp="20201026 20:19:44.828" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201026 20:19:44.828" starttime="20201026 20:19:42.780"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:19:44.834" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:19:46.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:19:46.556" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:19:46.556" starttime="20201026 20:19:44.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:19:46.557" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:19:46.558" starttime="20201026 20:19:46.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:19:46.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:19:46.558" starttime="20201026 20:19:46.558"></status>
</kw>
<status status="PASS" endtime="20201026 20:19:46.558" starttime="20201026 20:19:44.831"></status>
</kw>
<msg timestamp="20201026 20:19:46.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:19:46.559" starttime="20201026 20:19:44.830"></status>
</kw>
<msg timestamp="20201026 20:19:46.559" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201026 20:19:46.559" starttime="20201026 20:19:44.830"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201026 20:19:46.559" starttime="20201026 20:19:46.559"></status>
</kw>
<status status="PASS" endtime="20201026 20:19:46.559" starttime="20201026 20:19:44.829"></status>
</kw>
<status status="PASS" endtime="20201026 20:19:46.559" starttime="20201026 20:19:44.828"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:19:46.563" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:19:48.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:19:48.450" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:19:48.450" starttime="20201026 20:19:46.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:19:48.451" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:19:48.451" starttime="20201026 20:19:48.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:19:48.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:19:48.452" starttime="20201026 20:19:48.451"></status>
</kw>
<status status="PASS" endtime="20201026 20:19:48.452" starttime="20201026 20:19:46.561"></status>
</kw>
<msg timestamp="20201026 20:19:48.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:19:48.452" starttime="20201026 20:19:46.561"></status>
</kw>
<status status="PASS" endtime="20201026 20:19:48.452" starttime="20201026 20:19:46.560"></status>
</kw>
<status status="PASS" endtime="20201026 20:19:48.452" starttime="20201026 20:19:46.560"></status>
</kw>
<status status="PASS" endtime="20201026 20:19:48.452" starttime="20201026 20:19:46.559"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201026 20:19:48.453" starttime="20201026 20:19:48.453"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:19:48.457" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:19:50.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:19:50.551" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-26T20:19:48.327Z",
  "modificat...</msg>
<status status="PASS" endtime="20201026 20:19:50.551" starttime="20201026 20:19:48.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:19:50.552" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-26T20:19:48.327Z",
  "modificationTime" : "2020-10-26T20:19:48.327Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201026 20:19:50.552" starttime="20201026 20:19:50.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:19:50.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:19:50.553" starttime="20201026 20:19:50.552"></status>
</kw>
<status status="PASS" endtime="20201026 20:19:50.553" starttime="20201026 20:19:48.454"></status>
</kw>
<msg timestamp="20201026 20:19:50.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:19:50.553" starttime="20201026 20:19:48.454"></status>
</kw>
<msg timestamp="20201026 20:19:50.553" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-26T20:19:48.327Z",
  "modificat...</msg>
<status status="PASS" endtime="20201026 20:19:50.553" starttime="20201026 20:19:48.453"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201026 20:19:50.554" starttime="20201026 20:19:50.554"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:19:50.558" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:19:50.558" starttime="20201026 20:19:50.557"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:19:50.558" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:19:50.558" starttime="20201026 20:19:50.558"></status>
</kw>
<status status="PASS" endtime="20201026 20:19:50.558" starttime="20201026 20:19:50.557"></status>
</kw>
<msg timestamp="20201026 20:19:50.558" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:19:50.558" starttime="20201026 20:19:50.556"></status>
</kw>
<status status="PASS" endtime="20201026 20:19:50.559" starttime="20201026 20:19:50.555"></status>
</kw>
<msg timestamp="20201026 20:19:50.559" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201026 20:19:50.559" starttime="20201026 20:19:50.555"></status>
</kw>
<msg timestamp="20201026 20:19:50.559" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201026 20:19:50.559" starttime="20201026 20:19:50.554"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:19:50.563" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:19:52.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:19:52.663" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:19:52.663" starttime="20201026 20:19:50.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:19:52.664" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:19:52.665" starttime="20201026 20:19:52.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:19:52.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:19:52.665" starttime="20201026 20:19:52.665"></status>
</kw>
<status status="PASS" endtime="20201026 20:19:52.665" starttime="20201026 20:19:50.560"></status>
</kw>
<msg timestamp="20201026 20:19:52.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:19:52.666" starttime="20201026 20:19:50.560"></status>
</kw>
<status status="PASS" endtime="20201026 20:19:52.666" starttime="20201026 20:19:50.559"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:19:52.669" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:19:58.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:19:58.096" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:19:58.096" starttime="20201026 20:19:52.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:19:58.097" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:19:58.098" starttime="20201026 20:19:58.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:19:58.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:19:58.098" starttime="20201026 20:19:58.098"></status>
</kw>
<status status="PASS" endtime="20201026 20:19:58.098" starttime="20201026 20:19:52.667"></status>
</kw>
<msg timestamp="20201026 20:19:58.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:19:58.099" starttime="20201026 20:19:52.666"></status>
</kw>
<status status="PASS" endtime="20201026 20:19:58.099" starttime="20201026 20:19:52.666"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:19:58.107" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:20:02.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:20:02.711" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:20:02.711" starttime="20201026 20:19:58.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:20:02.712" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:20:02.712" starttime="20201026 20:20:02.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:20:02.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:20:02.713" starttime="20201026 20:20:02.712"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:02.713" starttime="20201026 20:19:58.100"></status>
</kw>
<msg timestamp="20201026 20:20:02.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:20:02.713" starttime="20201026 20:19:58.100"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:02.714" starttime="20201026 20:19:58.099"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:20:02.718" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:20:06.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:20:06.230" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:20:06.230" starttime="20201026 20:20:02.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:20:06.231" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:20:06.231" starttime="20201026 20:20:06.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:20:06.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:20:06.232" starttime="20201026 20:20:06.231"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:06.232" starttime="20201026 20:20:02.715"></status>
</kw>
<msg timestamp="20201026 20:20:06.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:20:06.232" starttime="20201026 20:20:02.714"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:06.232" starttime="20201026 20:20:02.714"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201026 20:20:06.232" critical="yes" starttime="20201026 20:19:42.778"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:20:06.237" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:20:06.237" starttime="20201026 20:20:06.237"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:20:06.238" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:20:06.238" starttime="20201026 20:20:06.237"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:06.238" starttime="20201026 20:20:06.236"></status>
</kw>
<msg timestamp="20201026 20:20:06.238" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:20:06.238" starttime="20201026 20:20:06.236"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:06.238" starttime="20201026 20:20:06.235"></status>
</kw>
<msg timestamp="20201026 20:20:06.238" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201026 20:20:06.238" starttime="20201026 20:20:06.235"></status>
</kw>
<msg timestamp="20201026 20:20:06.238" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201026 20:20:06.239" starttime="20201026 20:20:06.234"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:20:06.242" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:20:08.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:20:08.217" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:20:08.217" starttime="20201026 20:20:06.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:20:08.219" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:20:08.219" starttime="20201026 20:20:08.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:20:08.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:20:08.219" starttime="20201026 20:20:08.219"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:08.220" starttime="20201026 20:20:06.239"></status>
</kw>
<msg timestamp="20201026 20:20:08.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:20:08.220" starttime="20201026 20:20:06.239"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:08.220" starttime="20201026 20:20:06.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:20:08.224" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:20:10.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:20:10.220" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:20:10.220" starttime="20201026 20:20:08.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:20:10.221" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:20:10.221" starttime="20201026 20:20:10.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:20:10.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:20:10.222" starttime="20201026 20:20:10.222"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:10.222" starttime="20201026 20:20:08.221"></status>
</kw>
<msg timestamp="20201026 20:20:10.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:20:10.222" starttime="20201026 20:20:08.221"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:10.223" starttime="20201026 20:20:08.220"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201026 20:20:10.223" critical="yes" starttime="20201026 20:20:06.233"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201026 20:20:10.224" starttime="20201026 20:19:42.729"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201026 20:21:36.090" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201026 20:21:36.090" starttime="20201026 20:21:36.090"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:21:36.091" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201026 20:21:36.091" starttime="20201026 20:21:36.091"></status>
</kw>
<status status="PASS" endtime="20201026 20:21:36.091" starttime="20201026 20:21:36.090"></status>
</kw>
<msg timestamp="20201026 20:21:36.091" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201026 20:21:36.091" starttime="20201026 20:21:36.089"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201026 20:21:36.092" starttime="20201026 20:21:36.092"></status>
</kw>
<msg timestamp="20201026 20:21:36.092" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201026 20:21:36.092" starttime="20201026 20:21:36.091"></status>
</kw>
<status status="PASS" endtime="20201026 20:21:36.092" starttime="20201026 20:21:36.089"></status>
</kw>
<msg timestamp="20201026 20:21:36.092" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201026 20:21:36.092" starttime="20201026 20:21:36.088"></status>
</kw>
<msg timestamp="20201026 20:21:36.092" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201026 20:21:36.093" starttime="20201026 20:21:36.087"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201026 20:21:36.093" level="INFO">${random} = 54331</msg>
<status status="PASS" endtime="20201026 20:21:36.093" starttime="20201026 20:21:36.093"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:21:36.097" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-54331 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:21:39.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:21:39.321" level="INFO">${output} = 2020-10-26 20:21:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:21:38 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-26 ...</msg>
<status status="PASS" endtime="20201026 20:21:39.321" starttime="20201026 20:21:36.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:21:39.322" level="INFO">2020-10-26 20:21:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:21:38 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-26 20:21:38 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-26 20:21:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:21:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-00A4B23787BF-&gt;229d8180-8bdf-4cb6-8dc0-a6e7ce9a58ce
2020-10-26 20:21:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201026 20:21:39.322" starttime="20201026 20:21:39.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:21:39.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:21:39.323" starttime="20201026 20:21:39.323"></status>
</kw>
<status status="PASS" endtime="20201026 20:21:39.323" starttime="20201026 20:21:36.094"></status>
</kw>
<msg timestamp="20201026 20:21:39.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:21:39.324" starttime="20201026 20:21:36.094"></status>
</kw>
<msg timestamp="20201026 20:21:39.324" level="INFO">${result} = 2020-10-26 20:21:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:21:38 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-26 ...</msg>
<status status="PASS" endtime="20201026 20:21:39.324" starttime="20201026 20:21:36.093"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:21:39.327" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:21:40.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:21:40.895" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:19 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-26 20:21 ofs://om/volume1/bucket1/ozone-54331
-rw-...</msg>
<status status="PASS" endtime="20201026 20:21:40.895" starttime="20201026 20:21:39.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:21:40.896" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:19 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-26 20:21 ofs://om/volume1/bucket1/ozone-54331
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-26 20:20 ofs://om/volume1/bucket1/ozone-57009
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:20 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:21 ofs://om/volume1/bucket1/wordcount-90.txt</msg>
<status status="PASS" endtime="20201026 20:21:40.896" starttime="20201026 20:21:40.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:21:40.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:21:40.896" starttime="20201026 20:21:40.896"></status>
</kw>
<status status="PASS" endtime="20201026 20:21:40.897" starttime="20201026 20:21:39.325"></status>
</kw>
<msg timestamp="20201026 20:21:40.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:21:40.897" starttime="20201026 20:21:39.324"></status>
</kw>
<msg timestamp="20201026 20:21:40.897" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:19 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-26 20:21 ofs://om/volume1/bucket1/ozone-54331
-rw-...</msg>
<status status="PASS" endtime="20201026 20:21:40.897" starttime="20201026 20:21:39.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201026 20:21:40.898" starttime="20201026 20:21:40.897"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201026 20:21:40.898" critical="yes" starttime="20201026 20:21:36.087"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201026 20:21:40.899" starttime="20201026 20:21:36.044"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:20:14.649" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:20:14.649" starttime="20201026 20:20:14.648"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:20:14.649" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:20:14.649" starttime="20201026 20:20:14.649"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:14.649" starttime="20201026 20:20:14.648"></status>
</kw>
<msg timestamp="20201026 20:20:14.650" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:20:14.650" starttime="20201026 20:20:14.647"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:14.650" starttime="20201026 20:20:14.647"></status>
</kw>
<msg timestamp="20201026 20:20:14.650" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201026 20:20:14.650" starttime="20201026 20:20:14.647"></status>
</kw>
<msg timestamp="20201026 20:20:14.650" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201026 20:20:14.650" starttime="20201026 20:20:14.645"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201026 20:20:14.651" level="INFO">${random} = 57009</msg>
<status status="PASS" endtime="20201026 20:20:14.651" starttime="20201026 20:20:14.650"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:20:14.655" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-57009 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:20:17.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:20:17.801" level="INFO">${output} = 2020-10-26 20:20:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:20:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-26 ...</msg>
<status status="PASS" endtime="20201026 20:20:17.801" starttime="20201026 20:20:14.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:20:17.802" level="INFO">2020-10-26 20:20:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:20:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-26 20:20:16 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-26 20:20:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:20:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-94570E1C5813-&gt;229d8180-8bdf-4cb6-8dc0-a6e7ce9a58ce
2020-10-26 20:20:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201026 20:20:17.802" starttime="20201026 20:20:17.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:20:17.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:20:17.803" starttime="20201026 20:20:17.803"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:17.804" starttime="20201026 20:20:14.651"></status>
</kw>
<msg timestamp="20201026 20:20:17.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:20:17.804" starttime="20201026 20:20:14.651"></status>
</kw>
<msg timestamp="20201026 20:20:17.804" level="INFO">${result} = 2020-10-26 20:20:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:20:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-26 ...</msg>
<status status="PASS" endtime="20201026 20:20:17.804" starttime="20201026 20:20:14.651"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:20:17.807" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:20:19.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:20:19.600" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:19 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-26 20:20 o3fs://bucket1.volume1.om/ozone-57009
dr...</msg>
<status status="PASS" endtime="20201026 20:20:19.600" starttime="20201026 20:20:17.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:20:19.601" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:19 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-26 20:20 o3fs://bucket1.volume1.om/ozone-57009
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:20 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201026 20:20:19.601" starttime="20201026 20:20:19.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:20:19.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:20:19.602" starttime="20201026 20:20:19.602"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:19.602" starttime="20201026 20:20:17.805"></status>
</kw>
<msg timestamp="20201026 20:20:19.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:20:19.603" starttime="20201026 20:20:17.804"></status>
</kw>
<msg timestamp="20201026 20:20:19.603" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:19 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-26 20:20 o3fs://bucket1.volume1.om/ozone-57009
dr...</msg>
<status status="PASS" endtime="20201026 20:20:19.603" starttime="20201026 20:20:17.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201026 20:20:19.603" starttime="20201026 20:20:19.603"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201026 20:20:19.603" critical="yes" starttime="20201026 20:20:14.645"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201026 20:20:19.604" starttime="20201026 20:20:14.600"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:21:45.231" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:21:45.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:21:45.236" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201026 20:21:45.236" starttime="20201026 20:21:45.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:21:45.237" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201026 20:21:45.237" starttime="20201026 20:21:45.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:21:45.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:21:45.238" starttime="20201026 20:21:45.237"></status>
</kw>
<status status="PASS" endtime="20201026 20:21:45.238" starttime="20201026 20:21:45.226"></status>
</kw>
<msg timestamp="20201026 20:21:45.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:21:45.238" starttime="20201026 20:21:45.226"></status>
</kw>
<msg timestamp="20201026 20:21:45.238" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201026 20:21:45.238" starttime="20201026 20:21:45.226"></status>
</kw>
<msg timestamp="20201026 20:21:45.238" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201026 20:21:45.238" starttime="20201026 20:21:45.225"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201026 20:21:45.241" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201026 20:21:45.241" starttime="20201026 20:21:45.241"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:21:45.242" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201026 20:21:45.242" starttime="20201026 20:21:45.242"></status>
</kw>
<status status="PASS" endtime="20201026 20:21:45.242" starttime="20201026 20:21:45.241"></status>
</kw>
<msg timestamp="20201026 20:21:45.242" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201026 20:21:45.242" starttime="20201026 20:21:45.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201026 20:21:45.243" starttime="20201026 20:21:45.243"></status>
</kw>
<msg timestamp="20201026 20:21:45.243" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201026 20:21:45.243" starttime="20201026 20:21:45.242"></status>
</kw>
<status status="PASS" endtime="20201026 20:21:45.244" starttime="20201026 20:21:45.240"></status>
</kw>
<msg timestamp="20201026 20:21:45.244" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201026 20:21:45.244" starttime="20201026 20:21:45.239"></status>
</kw>
<msg timestamp="20201026 20:21:45.244" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201026 20:21:45.244" starttime="20201026 20:21:45.238"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:21:45.248" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:22:17.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:22:17.861" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-26 20:21:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:21:47 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201026 20:22:17.861" starttime="20201026 20:21:45.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:22:17.862" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-26 20:21:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:21:47 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-26 20:21:47 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-26 20:21:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:21:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5D7B062861C0-&gt;229d8180-8bdf-4cb6-8dc0-a6e7ce9a58ce
2020-10-26 20:21:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-26 20:21:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-26 20:21:50 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-26 20:21:51 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-26 20:21:51 INFO  JobSubmitter:198 - number of splits:3
2020-10-26 20:21:51 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603743554686_0003
2020-10-26 20:21:51 INFO  YarnClientImpl:273 - Submitted application application_1603743554686_0003
2020-10-26 20:21:51 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603743554686_0003/
2020-10-26 20:21:51 INFO  Job:1339 - Running job: job_1603743554686_0003
2020-10-26 20:21:57 INFO  Job:1360 - Job job_1603743554686_0003 running in uber mode : false
2020-10-26 20:21:57 INFO  Job:1367 -  map 0% reduce 0%
2020-10-26 20:22:03 INFO  Job:1367 -  map 33% reduce 0%
2020-10-26 20:22:08 INFO  Job:1367 -  map 67% reduce 0%
2020-10-26 20:22:12 INFO  Job:1367 -  map 100% reduce 0%
2020-10-26 20:22:15 INFO  Job:1367 -  map 100% reduce 100%
2020-10-26 20:22:16 INFO  Job:1378 - Job job_1603743554686_0003 completed successfully
2020-10-26 20:22:16 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615237
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34960
		Total time spent by all reduces in occupied slots (ms)=13200
		Total time spent by all map tasks (ms)=8740
		Total time spent by all reduce tasks (ms)=3300
		Total vcore-milliseconds taken by all map tasks=8740
		Total vcore-milliseconds taken by all reduce tasks=3300
		Total megabyte-milliseconds taken by all map tasks=35799040
		Total megabyte-milliseconds taken by all reduce tasks=13516800
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=567
		CPU time spent (ms)=6070
		Physical memory (bytes) snapshot=1107402752
		Virtual memory (bytes) snapshot=16014217216
		Total committed heap usage (bytes)=1057488896
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 26.289 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201026 20:22:17.863" starttime="20201026 20:22:17.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:22:17.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:22:17.863" starttime="20201026 20:22:17.863"></status>
</kw>
<status status="PASS" endtime="20201026 20:22:17.863" starttime="20201026 20:21:45.245"></status>
</kw>
<msg timestamp="20201026 20:22:17.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:22:17.863" starttime="20201026 20:21:45.244"></status>
</kw>
<msg timestamp="20201026 20:22:17.864" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-26 20:21:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:21:47 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201026 20:22:17.864" starttime="20201026 20:21:45.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201026 20:22:17.864" starttime="20201026 20:22:17.864"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201026 20:22:17.864" critical="yes" starttime="20201026 20:21:45.225"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:22:17.869" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:22:17.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:22:17.874" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201026 20:22:17.874" starttime="20201026 20:22:17.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:22:17.875" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201026 20:22:17.875" starttime="20201026 20:22:17.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:22:17.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:22:17.875" starttime="20201026 20:22:17.875"></status>
</kw>
<status status="PASS" endtime="20201026 20:22:17.876" starttime="20201026 20:22:17.866"></status>
</kw>
<msg timestamp="20201026 20:22:17.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:22:17.876" starttime="20201026 20:22:17.866"></status>
</kw>
<msg timestamp="20201026 20:22:17.876" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201026 20:22:17.876" starttime="20201026 20:22:17.866"></status>
</kw>
<msg timestamp="20201026 20:22:17.876" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201026 20:22:17.876" starttime="20201026 20:22:17.865"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201026 20:22:17.877" level="INFO">${random} = 35</msg>
<status status="PASS" endtime="20201026 20:22:17.877" starttime="20201026 20:22:17.876"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201026 20:22:17.880" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201026 20:22:17.880" starttime="20201026 20:22:17.880"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:22:17.880" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201026 20:22:17.880" starttime="20201026 20:22:17.880"></status>
</kw>
<status status="PASS" endtime="20201026 20:22:17.880" starttime="20201026 20:22:17.879"></status>
</kw>
<msg timestamp="20201026 20:22:17.881" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201026 20:22:17.881" starttime="20201026 20:22:17.879"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201026 20:22:17.881" starttime="20201026 20:22:17.881"></status>
</kw>
<msg timestamp="20201026 20:22:17.881" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201026 20:22:17.882" starttime="20201026 20:22:17.881"></status>
</kw>
<status status="PASS" endtime="20201026 20:22:17.882" starttime="20201026 20:22:17.878"></status>
</kw>
<msg timestamp="20201026 20:22:17.882" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201026 20:22:17.882" starttime="20201026 20:22:17.878"></status>
</kw>
<msg timestamp="20201026 20:22:17.882" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201026 20:22:17.882" starttime="20201026 20:22:17.877"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201026 20:22:17.884" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201026 20:22:17.884" starttime="20201026 20:22:17.884"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:22:17.885" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201026 20:22:17.885" starttime="20201026 20:22:17.884"></status>
</kw>
<status status="PASS" endtime="20201026 20:22:17.885" starttime="20201026 20:22:17.884"></status>
</kw>
<msg timestamp="20201026 20:22:17.885" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201026 20:22:17.885" starttime="20201026 20:22:17.883"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:22:17.886" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201026 20:22:17.886" starttime="20201026 20:22:17.886"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:22:17.887" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201026 20:22:17.887" starttime="20201026 20:22:17.886"></status>
</kw>
<status status="PASS" endtime="20201026 20:22:17.887" starttime="20201026 20:22:17.886"></status>
</kw>
<msg timestamp="20201026 20:22:17.887" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201026 20:22:17.887" starttime="20201026 20:22:17.885"></status>
</kw>
<status status="PASS" endtime="20201026 20:22:17.887" starttime="20201026 20:22:17.883"></status>
</kw>
<msg timestamp="20201026 20:22:17.887" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201026 20:22:17.887" starttime="20201026 20:22:17.883"></status>
</kw>
<msg timestamp="20201026 20:22:17.887" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201026 20:22:17.887" starttime="20201026 20:22:17.882"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201026 20:22:17.890" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201026 20:22:17.890" starttime="20201026 20:22:17.889"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:22:17.890" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201026 20:22:17.890" starttime="20201026 20:22:17.890"></status>
</kw>
<status status="PASS" endtime="20201026 20:22:17.890" starttime="20201026 20:22:17.889"></status>
</kw>
<msg timestamp="20201026 20:22:17.890" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201026 20:22:17.890" starttime="20201026 20:22:17.889"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:22:17.892" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201026 20:22:17.892" starttime="20201026 20:22:17.891"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:22:17.892" level="INFO">${result} = /wordcount-35.txt</msg>
<status status="PASS" endtime="20201026 20:22:17.892" starttime="20201026 20:22:17.892"></status>
</kw>
<status status="PASS" endtime="20201026 20:22:17.892" starttime="20201026 20:22:17.891"></status>
</kw>
<msg timestamp="20201026 20:22:17.892" level="INFO">${path_with_leading} = /wordcount-35.txt</msg>
<status status="PASS" endtime="20201026 20:22:17.892" starttime="20201026 20:22:17.891"></status>
</kw>
<status status="PASS" endtime="20201026 20:22:17.892" starttime="20201026 20:22:17.888"></status>
</kw>
<msg timestamp="20201026 20:22:17.892" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-35.txt</msg>
<status status="PASS" endtime="20201026 20:22:17.892" starttime="20201026 20:22:17.888"></status>
</kw>
<msg timestamp="20201026 20:22:17.893" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-35.txt</msg>
<status status="PASS" endtime="20201026 20:22:17.893" starttime="20201026 20:22:17.887"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:22:17.895" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-35.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:22:49.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:22:49.099" level="INFO">${output} = 2020-10-26 20:22:19 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-26 20:22:19 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201026 20:22:49.099" starttime="20201026 20:22:17.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:22:49.100" level="INFO">2020-10-26 20:22:19 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-26 20:22:19 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-26 20:22:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:22:19 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-26 20:22:19 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-26 20:22:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:22:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-63D7FF96BC2D-&gt;229d8180-8bdf-4cb6-8dc0-a6e7ce9a58ce
2020-10-26 20:22:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-26 20:22:20 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-26 20:22:20 INFO  JobSubmitter:198 - number of splits:3
2020-10-26 20:22:21 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603743554686_0004
2020-10-26 20:22:21 INFO  YarnClientImpl:273 - Submitted application application_1603743554686_0004
2020-10-26 20:22:21 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603743554686_0004/
2020-10-26 20:22:21 INFO  Job:1339 - Running job: job_1603743554686_0004
2020-10-26 20:22:29 INFO  Job:1360 - Job job_1603743554686_0004 running in uber mode : false
2020-10-26 20:22:29 INFO  Job:1367 -  map 0% reduce 0%
2020-10-26 20:22:35 INFO  Job:1367 -  map 33% reduce 0%
2020-10-26 20:22:40 INFO  Job:1367 -  map 67% reduce 0%
2020-10-26 20:22:44 INFO  Job:1367 -  map 100% reduce 0%
2020-10-26 20:22:47 INFO  Job:1367 -  map 100% reduce 100%
2020-10-26 20:22:48 INFO  Job:1378 - Job job_1603743554686_0004 completed successfully
2020-10-26 20:22:48 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35484
		Total time spent by all reduces in occupied slots (ms)=13748
		Total time spent by all map tasks (ms)=8871
		Total time spent by all reduce tasks (ms)=3437
		Total vcore-milliseconds taken by all map tasks=8871
		Total vcore-milliseconds taken by all reduce tasks=3437
		Total megabyte-milliseconds taken by all map tasks=36335616
		Total megabyte-milliseconds taken by all reduce tasks=14077952
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=568
		CPU time spent (ms)=6630
		Physical memory (bytes) snapshot=1114972160
		Virtual memory (bytes) snapshot=16044773376
		Total committed heap usage (bytes)=1050673152
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201026 20:22:49.100" starttime="20201026 20:22:49.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:22:49.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:22:49.101" starttime="20201026 20:22:49.100"></status>
</kw>
<status status="PASS" endtime="20201026 20:22:49.101" starttime="20201026 20:22:17.893"></status>
</kw>
<msg timestamp="20201026 20:22:49.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:22:49.101" starttime="20201026 20:22:17.893"></status>
</kw>
<msg timestamp="20201026 20:22:49.102" level="INFO">${output} = 2020-10-26 20:22:19 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-26 20:22:19 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201026 20:22:49.102" starttime="20201026 20:22:17.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201026 20:22:49.102" starttime="20201026 20:22:49.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201026 20:22:49.103" starttime="20201026 20:22:49.102"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201026 20:22:49.103" critical="yes" starttime="20201026 20:22:17.865"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201026 20:22:49.104" starttime="20201026 20:21:45.180"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:20:24.081" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:20:24.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:20:24.086" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201026 20:20:24.086" starttime="20201026 20:20:24.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:20:24.087" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201026 20:20:24.087" starttime="20201026 20:20:24.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:20:24.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:20:24.087" starttime="20201026 20:20:24.087"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:24.087" starttime="20201026 20:20:24.076"></status>
</kw>
<msg timestamp="20201026 20:20:24.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:20:24.088" starttime="20201026 20:20:24.075"></status>
</kw>
<msg timestamp="20201026 20:20:24.088" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201026 20:20:24.088" starttime="20201026 20:20:24.075"></status>
</kw>
<msg timestamp="20201026 20:20:24.088" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201026 20:20:24.088" starttime="20201026 20:20:24.075"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:20:24.091" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:20:24.091" starttime="20201026 20:20:24.090"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:20:24.091" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:20:24.091" starttime="20201026 20:20:24.091"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:24.092" starttime="20201026 20:20:24.090"></status>
</kw>
<msg timestamp="20201026 20:20:24.092" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:20:24.092" starttime="20201026 20:20:24.090"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:24.092" starttime="20201026 20:20:24.089"></status>
</kw>
<msg timestamp="20201026 20:20:24.092" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201026 20:20:24.092" starttime="20201026 20:20:24.089"></status>
</kw>
<msg timestamp="20201026 20:20:24.092" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201026 20:20:24.092" starttime="20201026 20:20:24.088"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:20:24.096" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:20:59.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:20:59.404" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-26 20:20:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:20:25 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201026 20:20:59.405" starttime="20201026 20:20:24.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:20:59.406" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-26 20:20:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:20:25 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-26 20:20:25 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-26 20:20:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:20:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BA653E68C827-&gt;229d8180-8bdf-4cb6-8dc0-a6e7ce9a58ce
2020-10-26 20:20:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-26 20:20:27 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-26 20:20:27 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-26 20:20:27 INFO  JobSubmitter:198 - number of splits:3
2020-10-26 20:20:27 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603743554686_0001
2020-10-26 20:20:28 INFO  YarnClientImpl:273 - Submitted application application_1603743554686_0001
2020-10-26 20:20:28 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603743554686_0001/
2020-10-26 20:20:28 INFO  Job:1339 - Running job: job_1603743554686_0001
2020-10-26 20:20:37 INFO  Job:1360 - Job job_1603743554686_0001 running in uber mode : false
2020-10-26 20:20:37 INFO  Job:1367 -  map 0% reduce 0%
2020-10-26 20:20:43 INFO  Job:1367 -  map 33% reduce 0%
2020-10-26 20:20:48 INFO  Job:1367 -  map 67% reduce 0%
2020-10-26 20:20:52 INFO  Job:1367 -  map 100% reduce 0%
2020-10-26 20:20:58 INFO  Job:1367 -  map 100% reduce 100%
2020-10-26 20:20:58 INFO  Job:1378 - Job job_1603743554686_0001 completed successfully
2020-10-26 20:20:58 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615465
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35268
		Total time spent by all reduces in occupied slots (ms)=23104
		Total time spent by all map tasks (ms)=8817
		Total time spent by all reduce tasks (ms)=5776
		Total vcore-milliseconds taken by all map tasks=8817
		Total vcore-milliseconds taken by all reduce tasks=5776
		Total megabyte-milliseconds taken by all map tasks=36114432
		Total megabyte-milliseconds taken by all reduce tasks=23658496
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=572
		CPU time spent (ms)=6420
		Physical memory (bytes) snapshot=1129644032
		Virtual memory (bytes) snapshot=16056356864
		Total committed heap usage (bytes)=1044381696
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.728 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201026 20:20:59.406" starttime="20201026 20:20:59.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:20:59.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:20:59.407" starttime="20201026 20:20:59.406"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:59.407" starttime="20201026 20:20:24.093"></status>
</kw>
<msg timestamp="20201026 20:20:59.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:20:59.407" starttime="20201026 20:20:24.093"></status>
</kw>
<msg timestamp="20201026 20:20:59.407" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-26 20:20:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:20:25 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201026 20:20:59.407" starttime="20201026 20:20:24.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201026 20:20:59.408" starttime="20201026 20:20:59.408"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201026 20:20:59.408" critical="yes" starttime="20201026 20:20:24.074"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:20:59.412" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:20:59.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:20:59.418" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201026 20:20:59.418" starttime="20201026 20:20:59.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:20:59.419" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201026 20:20:59.419" starttime="20201026 20:20:59.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:20:59.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:20:59.419" starttime="20201026 20:20:59.419"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:59.419" starttime="20201026 20:20:59.410"></status>
</kw>
<msg timestamp="20201026 20:20:59.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:20:59.420" starttime="20201026 20:20:59.410"></status>
</kw>
<msg timestamp="20201026 20:20:59.420" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201026 20:20:59.420" starttime="20201026 20:20:59.409"></status>
</kw>
<msg timestamp="20201026 20:20:59.420" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201026 20:20:59.420" starttime="20201026 20:20:59.409"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201026 20:20:59.420" level="INFO">${random} = 90</msg>
<status status="PASS" endtime="20201026 20:20:59.421" starttime="20201026 20:20:59.420"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:20:59.423" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:20:59.423" starttime="20201026 20:20:59.423"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:20:59.424" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:20:59.424" starttime="20201026 20:20:59.423"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:59.424" starttime="20201026 20:20:59.423"></status>
</kw>
<msg timestamp="20201026 20:20:59.424" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:20:59.424" starttime="20201026 20:20:59.422"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:59.424" starttime="20201026 20:20:59.422"></status>
</kw>
<msg timestamp="20201026 20:20:59.424" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201026 20:20:59.424" starttime="20201026 20:20:59.421"></status>
</kw>
<msg timestamp="20201026 20:20:59.424" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201026 20:20:59.424" starttime="20201026 20:20:59.421"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:20:59.427" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:20:59.427" starttime="20201026 20:20:59.426"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:20:59.427" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:20:59.427" starttime="20201026 20:20:59.427"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:59.427" starttime="20201026 20:20:59.426"></status>
</kw>
<msg timestamp="20201026 20:20:59.427" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:20:59.427" starttime="20201026 20:20:59.426"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:59.428" starttime="20201026 20:20:59.425"></status>
</kw>
<msg timestamp="20201026 20:20:59.428" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201026 20:20:59.428" starttime="20201026 20:20:59.425"></status>
</kw>
<msg timestamp="20201026 20:20:59.428" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201026 20:20:59.428" starttime="20201026 20:20:59.424"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:20:59.431" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:20:59.431" starttime="20201026 20:20:59.430"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:20:59.431" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:20:59.431" starttime="20201026 20:20:59.431"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:59.432" starttime="20201026 20:20:59.430"></status>
</kw>
<msg timestamp="20201026 20:20:59.432" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:20:59.432" starttime="20201026 20:20:59.430"></status>
</kw>
<status status="PASS" endtime="20201026 20:20:59.432" starttime="20201026 20:20:59.429"></status>
</kw>
<msg timestamp="20201026 20:20:59.432" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-90.txt</msg>
<status status="PASS" endtime="20201026 20:20:59.432" starttime="20201026 20:20:59.428"></status>
</kw>
<msg timestamp="20201026 20:20:59.432" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-90.txt</msg>
<status status="PASS" endtime="20201026 20:20:59.432" starttime="20201026 20:20:59.428"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:20:59.437" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-90.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:21:31.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:21:31.725" level="INFO">${output} = 2020-10-26 20:21:01 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-26 20:21:01 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201026 20:21:31.725" starttime="20201026 20:20:59.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:21:31.726" level="INFO">2020-10-26 20:21:01 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-26 20:21:01 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-26 20:21:01 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:21:01 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-26 20:21:01 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-26 20:21:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:21:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F088D4517C2B-&gt;229d8180-8bdf-4cb6-8dc0-a6e7ce9a58ce
2020-10-26 20:21:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-26 20:21:02 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-26 20:21:02 INFO  JobSubmitter:198 - number of splits:3
2020-10-26 20:21:02 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603743554686_0002
2020-10-26 20:21:02 INFO  YarnClientImpl:273 - Submitted application application_1603743554686_0002
2020-10-26 20:21:02 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603743554686_0002/
2020-10-26 20:21:02 INFO  Job:1339 - Running job: job_1603743554686_0002
2020-10-26 20:21:12 INFO  Job:1360 - Job job_1603743554686_0002 running in uber mode : false
2020-10-26 20:21:12 INFO  Job:1367 -  map 0% reduce 0%
2020-10-26 20:21:18 INFO  Job:1367 -  map 33% reduce 0%
2020-10-26 20:21:23 INFO  Job:1367 -  map 67% reduce 0%
2020-10-26 20:21:27 INFO  Job:1367 -  map 100% reduce 0%
2020-10-26 20:21:31 INFO  Job:1367 -  map 100% reduce 100%
2020-10-26 20:21:31 INFO  Job:1378 - Job job_1603743554686_0002 completed successfully
2020-10-26 20:21:31 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35740
		Total time spent by all reduces in occupied slots (ms)=13072
		Total time spent by all map tasks (ms)=8935
		Total time spent by all reduce tasks (ms)=3268
		Total vcore-milliseconds taken by all map tasks=8935
		Total vcore-milliseconds taken by all reduce tasks=3268
		Total megabyte-milliseconds taken by all map tasks=36597760
		Total megabyte-milliseconds taken by all reduce tasks=13385728
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=537
		CPU time spent (ms)=6400
		Physical memory (bytes) snapshot=1133146112
		Virtual memory (bytes) snapshot=16058847232
		Total committed heap usage (bytes)=1044905984
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201026 20:21:31.726" starttime="20201026 20:21:31.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:21:31.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:21:31.727" starttime="20201026 20:21:31.726"></status>
</kw>
<status status="PASS" endtime="20201026 20:21:31.727" starttime="20201026 20:20:59.433"></status>
</kw>
<msg timestamp="20201026 20:21:31.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:21:31.727" starttime="20201026 20:20:59.433"></status>
</kw>
<msg timestamp="20201026 20:21:31.728" level="INFO">${output} = 2020-10-26 20:21:01 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-26 20:21:01 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201026 20:21:31.728" starttime="20201026 20:20:59.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201026 20:21:31.728" starttime="20201026 20:21:31.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201026 20:21:31.729" starttime="20201026 20:21:31.729"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201026 20:21:31.729" critical="yes" starttime="20201026 20:20:59.408"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201026 20:21:31.730" starttime="20201026 20:20:24.029"></status>
</suite>
<status status="PASS" elapsedtime="168979" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:23:51.423" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:23:53.373" level="INFO">${rc} = 255</msg>
<msg timestamp="20201026 20:23:53.373" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201026 20:23:53.373" starttime="20201026 20:23:51.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:23:53.374" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201026 20:23:53.374" starttime="20201026 20:23:53.373"></status>
</kw>
<msg timestamp="20201026 20:23:53.374" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201026 20:23:53.374" starttime="20201026 20:23:51.419"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:23:53.380" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:23:55.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:23:55.444" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:23:55.444" starttime="20201026 20:23:53.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:23:55.445" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:23:55.445" starttime="20201026 20:23:55.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:23:55.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:23:55.445" starttime="20201026 20:23:55.445"></status>
</kw>
<status status="PASS" endtime="20201026 20:23:55.446" starttime="20201026 20:23:53.376"></status>
</kw>
<msg timestamp="20201026 20:23:55.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:23:55.446" starttime="20201026 20:23:53.376"></status>
</kw>
<msg timestamp="20201026 20:23:55.446" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201026 20:23:55.446" starttime="20201026 20:23:53.375"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201026 20:23:55.447" starttime="20201026 20:23:55.446"></status>
</kw>
<status status="PASS" endtime="20201026 20:23:55.447" starttime="20201026 20:23:53.375"></status>
</kw>
<status status="PASS" endtime="20201026 20:23:55.447" starttime="20201026 20:23:53.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:23:55.452" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:23:57.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:23:57.301" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:23:57.301" starttime="20201026 20:23:55.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:23:57.302" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:23:57.302" starttime="20201026 20:23:57.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:23:57.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:23:57.303" starttime="20201026 20:23:57.303"></status>
</kw>
<status status="PASS" endtime="20201026 20:23:57.303" starttime="20201026 20:23:55.448"></status>
</kw>
<msg timestamp="20201026 20:23:57.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:23:57.303" starttime="20201026 20:23:55.448"></status>
</kw>
<status status="PASS" endtime="20201026 20:23:57.304" starttime="20201026 20:23:55.448"></status>
</kw>
<status status="PASS" endtime="20201026 20:23:57.304" starttime="20201026 20:23:55.447"></status>
</kw>
<status status="PASS" endtime="20201026 20:23:57.304" starttime="20201026 20:23:55.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201026 20:23:57.304" starttime="20201026 20:23:57.304"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:23:57.309" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:23:59.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:23:59.236" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-26T20:23:57.174Z",
  "modificat...</msg>
<status status="PASS" endtime="20201026 20:23:59.236" starttime="20201026 20:23:57.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:23:59.237" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-26T20:23:57.174Z",
  "modificationTime" : "2020-10-26T20:23:57.174Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201026 20:23:59.238" starttime="20201026 20:23:59.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:23:59.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:23:59.238" starttime="20201026 20:23:59.238"></status>
</kw>
<status status="PASS" endtime="20201026 20:23:59.238" starttime="20201026 20:23:57.305"></status>
</kw>
<msg timestamp="20201026 20:23:59.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:23:59.239" starttime="20201026 20:23:57.305"></status>
</kw>
<msg timestamp="20201026 20:23:59.239" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-26T20:23:57.174Z",
  "modificat...</msg>
<status status="PASS" endtime="20201026 20:23:59.239" starttime="20201026 20:23:57.304"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201026 20:23:59.239" starttime="20201026 20:23:59.239"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:23:59.243" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:23:59.243" starttime="20201026 20:23:59.242"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:23:59.243" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:23:59.244" starttime="20201026 20:23:59.243"></status>
</kw>
<status status="PASS" endtime="20201026 20:23:59.244" starttime="20201026 20:23:59.242"></status>
</kw>
<msg timestamp="20201026 20:23:59.244" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:23:59.244" starttime="20201026 20:23:59.242"></status>
</kw>
<status status="PASS" endtime="20201026 20:23:59.244" starttime="20201026 20:23:59.241"></status>
</kw>
<msg timestamp="20201026 20:23:59.244" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201026 20:23:59.244" starttime="20201026 20:23:59.240"></status>
</kw>
<msg timestamp="20201026 20:23:59.244" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201026 20:23:59.244" starttime="20201026 20:23:59.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:23:59.248" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:24:01.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:24:01.084" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:24:01.084" starttime="20201026 20:23:59.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:24:01.085" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:24:01.085" starttime="20201026 20:24:01.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:24:01.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:24:01.086" starttime="20201026 20:24:01.086"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:01.086" starttime="20201026 20:23:59.245"></status>
</kw>
<msg timestamp="20201026 20:24:01.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:24:01.087" starttime="20201026 20:23:59.245"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:01.087" starttime="20201026 20:23:59.245"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:24:01.090" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:24:06.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:24:06.165" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:24:06.165" starttime="20201026 20:24:01.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:24:06.166" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:24:06.166" starttime="20201026 20:24:06.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:24:06.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:24:06.167" starttime="20201026 20:24:06.166"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:06.167" starttime="20201026 20:24:01.088"></status>
</kw>
<msg timestamp="20201026 20:24:06.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:24:06.167" starttime="20201026 20:24:01.088"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:06.167" starttime="20201026 20:24:01.087"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:24:06.171" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:24:09.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:24:09.690" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:24:09.690" starttime="20201026 20:24:06.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:24:09.691" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:24:09.691" starttime="20201026 20:24:09.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:24:09.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:24:09.692" starttime="20201026 20:24:09.691"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:09.692" starttime="20201026 20:24:06.168"></status>
</kw>
<msg timestamp="20201026 20:24:09.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:24:09.692" starttime="20201026 20:24:06.168"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:09.692" starttime="20201026 20:24:06.167"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:24:09.697" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:24:13.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:24:13.258" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:24:13.258" starttime="20201026 20:24:09.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:24:13.259" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:24:13.259" starttime="20201026 20:24:13.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:24:13.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:24:13.259" starttime="20201026 20:24:13.259"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:13.260" starttime="20201026 20:24:09.693"></status>
</kw>
<msg timestamp="20201026 20:24:13.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:24:13.260" starttime="20201026 20:24:09.693"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:13.260" starttime="20201026 20:24:09.693"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201026 20:24:13.260" critical="yes" starttime="20201026 20:23:51.418"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:24:13.265" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:24:13.265" starttime="20201026 20:24:13.264"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:24:13.266" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:24:13.266" starttime="20201026 20:24:13.265"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:13.266" starttime="20201026 20:24:13.264"></status>
</kw>
<msg timestamp="20201026 20:24:13.266" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:24:13.266" starttime="20201026 20:24:13.264"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:13.266" starttime="20201026 20:24:13.263"></status>
</kw>
<msg timestamp="20201026 20:24:13.266" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201026 20:24:13.266" starttime="20201026 20:24:13.262"></status>
</kw>
<msg timestamp="20201026 20:24:13.266" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201026 20:24:13.266" starttime="20201026 20:24:13.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:24:13.269" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:24:15.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:24:15.304" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:24:15.304" starttime="20201026 20:24:13.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:24:15.305" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:24:15.306" starttime="20201026 20:24:15.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:24:15.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:24:15.306" starttime="20201026 20:24:15.306"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:15.307" starttime="20201026 20:24:13.267"></status>
</kw>
<msg timestamp="20201026 20:24:15.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:24:15.307" starttime="20201026 20:24:13.267"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:15.307" starttime="20201026 20:24:13.267"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:24:15.310" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:24:17.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:24:17.257" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:24:17.257" starttime="20201026 20:24:15.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:24:17.258" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:24:17.259" starttime="20201026 20:24:17.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:24:17.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:24:17.259" starttime="20201026 20:24:17.259"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:17.259" starttime="20201026 20:24:15.308"></status>
</kw>
<msg timestamp="20201026 20:24:17.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:24:17.260" starttime="20201026 20:24:15.308"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:17.260" starttime="20201026 20:24:15.307"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201026 20:24:17.260" critical="yes" starttime="20201026 20:24:13.261"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201026 20:24:17.261" starttime="20201026 20:23:51.368"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201026 20:25:53.391" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201026 20:25:53.391" starttime="20201026 20:25:53.391"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:25:53.391" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201026 20:25:53.391" starttime="20201026 20:25:53.391"></status>
</kw>
<status status="PASS" endtime="20201026 20:25:53.391" starttime="20201026 20:25:53.390"></status>
</kw>
<msg timestamp="20201026 20:25:53.391" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201026 20:25:53.392" starttime="20201026 20:25:53.390"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201026 20:25:53.392" starttime="20201026 20:25:53.392"></status>
</kw>
<msg timestamp="20201026 20:25:53.392" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201026 20:25:53.392" starttime="20201026 20:25:53.392"></status>
</kw>
<status status="PASS" endtime="20201026 20:25:53.393" starttime="20201026 20:25:53.389"></status>
</kw>
<msg timestamp="20201026 20:25:53.393" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201026 20:25:53.393" starttime="20201026 20:25:53.389"></status>
</kw>
<msg timestamp="20201026 20:25:53.393" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201026 20:25:53.393" starttime="20201026 20:25:53.388"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201026 20:25:53.393" level="INFO">${random} = 25554</msg>
<status status="PASS" endtime="20201026 20:25:53.393" starttime="20201026 20:25:53.393"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:25:53.399" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-25554 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:25:56.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:25:56.693" level="INFO">${output} = 2020-10-26 20:25:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:54 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201026 20:25:56.693" starttime="20201026 20:25:53.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:25:56.694" level="INFO">2020-10-26 20:25:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:55 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-26 20:25:55 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:25:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-26 20:25:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-26 20:25:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:25:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DCD49D408271-&gt;b7a050f7-35cc-4634-8b52-58ce135b21a8
2020-10-26 20:25:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-26 20:25:56 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201026 20:25:56.694" starttime="20201026 20:25:56.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:25:56.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:25:56.695" starttime="20201026 20:25:56.695"></status>
</kw>
<status status="PASS" endtime="20201026 20:25:56.695" starttime="20201026 20:25:53.394"></status>
</kw>
<msg timestamp="20201026 20:25:56.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:25:56.696" starttime="20201026 20:25:53.394"></status>
</kw>
<msg timestamp="20201026 20:25:56.696" level="INFO">${result} = 2020-10-26 20:25:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:54 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201026 20:25:56.696" starttime="20201026 20:25:53.393"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:25:56.700" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:25:58.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:25:58.297" level="INFO">${output} = 2020-10-26 20:25:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:58 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201026 20:25:58.297" starttime="20201026 20:25:56.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:25:58.298" level="INFO">2020-10-26 20:25:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:58 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:24 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-26 20:25 ofs://om/volume1/bucket1/ozone-25554
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-26 20:24 ofs://om/volume1/bucket1/ozone-70658
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:24 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:25 ofs://om/volume1/bucket1/wordcount-74.txt
2020-10-26 20:25:58 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201026 20:25:58.298" starttime="20201026 20:25:58.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:25:58.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:25:58.299" starttime="20201026 20:25:58.299"></status>
</kw>
<status status="PASS" endtime="20201026 20:25:58.299" starttime="20201026 20:25:56.697"></status>
</kw>
<msg timestamp="20201026 20:25:58.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:25:58.299" starttime="20201026 20:25:56.697"></status>
</kw>
<msg timestamp="20201026 20:25:58.300" level="INFO">${result} = 2020-10-26 20:25:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:58 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201026 20:25:58.300" starttime="20201026 20:25:56.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201026 20:25:58.300" starttime="20201026 20:25:58.300"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201026 20:25:58.300" critical="yes" starttime="20201026 20:25:53.387"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201026 20:25:58.301" starttime="20201026 20:25:53.344"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:24:21.570" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:24:21.570" starttime="20201026 20:24:21.569"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:24:21.570" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:24:21.570" starttime="20201026 20:24:21.570"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:21.570" starttime="20201026 20:24:21.569"></status>
</kw>
<msg timestamp="20201026 20:24:21.570" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:24:21.570" starttime="20201026 20:24:21.569"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:21.571" starttime="20201026 20:24:21.568"></status>
</kw>
<msg timestamp="20201026 20:24:21.571" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201026 20:24:21.571" starttime="20201026 20:24:21.568"></status>
</kw>
<msg timestamp="20201026 20:24:21.571" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201026 20:24:21.571" starttime="20201026 20:24:21.566"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201026 20:24:21.571" level="INFO">${random} = 70658</msg>
<status status="PASS" endtime="20201026 20:24:21.571" starttime="20201026 20:24:21.571"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:24:21.576" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-70658 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:24:27.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:24:27.386" level="INFO">${output} = 2020-10-26 20:24:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:23 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201026 20:24:27.387" starttime="20201026 20:24:21.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:24:27.387" level="INFO">2020-10-26 20:24:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:23 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-26 20:24:23 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:24:23 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-26 20:24:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-26 20:24:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:24:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BEB8B2791B5F-&gt;b7a050f7-35cc-4634-8b52-58ce135b21a8
2020-10-26 20:24:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-26 20:24:27 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201026 20:24:27.388" starttime="20201026 20:24:27.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:24:27.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:24:27.388" starttime="20201026 20:24:27.388"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:27.388" starttime="20201026 20:24:21.572"></status>
</kw>
<msg timestamp="20201026 20:24:27.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:24:27.388" starttime="20201026 20:24:21.572"></status>
</kw>
<msg timestamp="20201026 20:24:27.389" level="INFO">${result} = 2020-10-26 20:24:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:23 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201026 20:24:27.389" starttime="20201026 20:24:21.572"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:24:27.392" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:24:29.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:24:29.068" level="INFO">${output} = 2020-10-26 20:24:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:28 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201026 20:24:29.069" starttime="20201026 20:24:27.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:24:29.070" level="INFO">2020-10-26 20:24:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:28 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:24 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-26 20:24 o3fs://bucket1.volume1.om/ozone-70658
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:24 o3fs://bucket1.volume1.om/user
2020-10-26 20:24:29 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201026 20:24:29.070" starttime="20201026 20:24:29.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:24:29.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:24:29.070" starttime="20201026 20:24:29.070"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:29.071" starttime="20201026 20:24:27.389"></status>
</kw>
<msg timestamp="20201026 20:24:29.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:24:29.071" starttime="20201026 20:24:27.389"></status>
</kw>
<msg timestamp="20201026 20:24:29.071" level="INFO">${result} = 2020-10-26 20:24:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:28 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201026 20:24:29.071" starttime="20201026 20:24:27.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201026 20:24:29.072" starttime="20201026 20:24:29.071"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201026 20:24:29.072" critical="yes" starttime="20201026 20:24:21.566"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201026 20:24:29.073" starttime="20201026 20:24:21.522"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:26:02.591" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:26:02.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:26:02.596" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201026 20:26:02.596" starttime="20201026 20:26:02.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:26:02.597" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201026 20:26:02.597" starttime="20201026 20:26:02.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:26:02.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:26:02.598" starttime="20201026 20:26:02.597"></status>
</kw>
<status status="PASS" endtime="20201026 20:26:02.598" starttime="20201026 20:26:02.586"></status>
</kw>
<msg timestamp="20201026 20:26:02.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:26:02.598" starttime="20201026 20:26:02.586"></status>
</kw>
<msg timestamp="20201026 20:26:02.598" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201026 20:26:02.598" starttime="20201026 20:26:02.585"></status>
</kw>
<msg timestamp="20201026 20:26:02.599" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201026 20:26:02.599" starttime="20201026 20:26:02.585"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201026 20:26:02.602" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201026 20:26:02.602" starttime="20201026 20:26:02.601"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:26:02.602" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201026 20:26:02.602" starttime="20201026 20:26:02.602"></status>
</kw>
<status status="PASS" endtime="20201026 20:26:02.603" starttime="20201026 20:26:02.601"></status>
</kw>
<msg timestamp="20201026 20:26:02.603" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201026 20:26:02.603" starttime="20201026 20:26:02.601"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201026 20:26:02.604" starttime="20201026 20:26:02.603"></status>
</kw>
<msg timestamp="20201026 20:26:02.604" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201026 20:26:02.604" starttime="20201026 20:26:02.603"></status>
</kw>
<status status="PASS" endtime="20201026 20:26:02.604" starttime="20201026 20:26:02.600"></status>
</kw>
<msg timestamp="20201026 20:26:02.604" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201026 20:26:02.604" starttime="20201026 20:26:02.599"></status>
</kw>
<msg timestamp="20201026 20:26:02.604" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201026 20:26:02.604" starttime="20201026 20:26:02.599"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:26:02.608" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:26:35.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:26:35.833" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-26 20:26:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26...</msg>
<status status="PASS" endtime="20201026 20:26:35.833" starttime="20201026 20:26:02.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:26:35.835" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-26 20:26:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:04 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-26 20:26:04 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:26:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-26 20:26:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-26 20:26:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:26:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E2FAA3B562C6-&gt;b7a050f7-35cc-4634-8b52-58ce135b21a8
2020-10-26 20:26:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-26 20:26:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:05 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-10-26 20:26:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:05 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-26 20:26:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:06 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-26 20:26:06 INFO  JobSubmitter:202 - number of splits:3
2020-10-26 20:26:06 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603743811649_0003
2020-10-26 20:26:06 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-26 20:26:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:06 INFO  Configuration:2752 - resource-types.xml not found
2020-10-26 20:26:06 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-26 20:26:06 INFO  YarnClientImpl:324 - Submitted application application_1603743811649_0003
2020-10-26 20:26:06 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603743811649_0003/
2020-10-26 20:26:06 INFO  Job:1619 - Running job: job_1603743811649_0003
2020-10-26 20:26:13 INFO  Job:1640 - Job job_1603743811649_0003 running in uber mode : false
2020-10-26 20:26:13 INFO  Job:1647 -  map 0% reduce 0%
2020-10-26 20:26:20 INFO  Job:1647 -  map 33% reduce 0%
2020-10-26 20:26:25 INFO  Job:1647 -  map 67% reduce 0%
2020-10-26 20:26:30 INFO  Job:1647 -  map 100% reduce 0%
2020-10-26 20:26:35 INFO  Job:1647 -  map 100% reduce 100%
2020-10-26 20:26:35 INFO  Job:1658 - Job job_1603743811649_0003 completed successfully
2020-10-26 20:26:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:35 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021325
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35568
		Total time spent by all reduces in occupied slots (ms)=13388
		Total time spent by all map tasks (ms)=8892
		Total time spent by all reduce tasks (ms)=3347
		Total vcore-milliseconds taken by all map tasks=8892
		Total vcore-milliseconds taken by all reduce tasks=3347
		Total megabyte-milliseconds taken by all map tasks=36421632
		Total megabyte-milliseconds taken by all reduce tasks=13709312
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=564
		CPU time spent (ms)=6020
		Physical memory (bytes) snapshot=1147191296
		Virtual memory (bytes) snapshot=16052486144
		Total committed heap usage (bytes)=1061683200
		Peak Map Physical memory (bytes)=292085760
		Peak Map Virtual memory (bytes)=4014043136
		Peak Reduce Physical memory (bytes)=276582400
		Peak Reduce Virtual memory (bytes)=4019048448
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.713 seconds
2020-10-26 20:26:35 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-26 20:26:35 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201026 20:26:35.835" starttime="20201026 20:26:35.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:26:35.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:26:35.835" starttime="20201026 20:26:35.835"></status>
</kw>
<status status="PASS" endtime="20201026 20:26:35.835" starttime="20201026 20:26:02.605"></status>
</kw>
<msg timestamp="20201026 20:26:35.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:26:35.836" starttime="20201026 20:26:02.605"></status>
</kw>
<msg timestamp="20201026 20:26:35.836" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-26 20:26:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26...</msg>
<status status="PASS" endtime="20201026 20:26:35.836" starttime="20201026 20:26:02.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201026 20:26:35.837" starttime="20201026 20:26:35.836"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201026 20:26:35.837" critical="yes" starttime="20201026 20:26:02.584"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:26:35.842" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:26:35.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:26:35.846" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201026 20:26:35.846" starttime="20201026 20:26:35.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:26:35.847" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201026 20:26:35.847" starttime="20201026 20:26:35.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:26:35.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:26:35.848" starttime="20201026 20:26:35.847"></status>
</kw>
<status status="PASS" endtime="20201026 20:26:35.848" starttime="20201026 20:26:35.839"></status>
</kw>
<msg timestamp="20201026 20:26:35.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:26:35.848" starttime="20201026 20:26:35.839"></status>
</kw>
<msg timestamp="20201026 20:26:35.848" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201026 20:26:35.848" starttime="20201026 20:26:35.839"></status>
</kw>
<msg timestamp="20201026 20:26:35.848" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201026 20:26:35.849" starttime="20201026 20:26:35.838"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201026 20:26:35.849" level="INFO">${random} = 20</msg>
<status status="PASS" endtime="20201026 20:26:35.849" starttime="20201026 20:26:35.849"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201026 20:26:35.852" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201026 20:26:35.852" starttime="20201026 20:26:35.851"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:26:35.852" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201026 20:26:35.852" starttime="20201026 20:26:35.852"></status>
</kw>
<status status="PASS" endtime="20201026 20:26:35.852" starttime="20201026 20:26:35.851"></status>
</kw>
<msg timestamp="20201026 20:26:35.852" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201026 20:26:35.852" starttime="20201026 20:26:35.851"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201026 20:26:35.853" starttime="20201026 20:26:35.853"></status>
</kw>
<msg timestamp="20201026 20:26:35.853" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201026 20:26:35.853" starttime="20201026 20:26:35.852"></status>
</kw>
<status status="PASS" endtime="20201026 20:26:35.853" starttime="20201026 20:26:35.850"></status>
</kw>
<msg timestamp="20201026 20:26:35.853" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201026 20:26:35.853" starttime="20201026 20:26:35.850"></status>
</kw>
<msg timestamp="20201026 20:26:35.854" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201026 20:26:35.854" starttime="20201026 20:26:35.849"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201026 20:26:35.856" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201026 20:26:35.856" starttime="20201026 20:26:35.856"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:26:35.857" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201026 20:26:35.857" starttime="20201026 20:26:35.856"></status>
</kw>
<status status="PASS" endtime="20201026 20:26:35.857" starttime="20201026 20:26:35.856"></status>
</kw>
<msg timestamp="20201026 20:26:35.857" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201026 20:26:35.857" starttime="20201026 20:26:35.855"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:26:35.858" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201026 20:26:35.858" starttime="20201026 20:26:35.858"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:26:35.859" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201026 20:26:35.859" starttime="20201026 20:26:35.858"></status>
</kw>
<status status="PASS" endtime="20201026 20:26:35.859" starttime="20201026 20:26:35.858"></status>
</kw>
<msg timestamp="20201026 20:26:35.859" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201026 20:26:35.859" starttime="20201026 20:26:35.857"></status>
</kw>
<status status="PASS" endtime="20201026 20:26:35.859" starttime="20201026 20:26:35.855"></status>
</kw>
<msg timestamp="20201026 20:26:35.859" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201026 20:26:35.859" starttime="20201026 20:26:35.854"></status>
</kw>
<msg timestamp="20201026 20:26:35.859" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201026 20:26:35.860" starttime="20201026 20:26:35.854"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201026 20:26:35.862" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201026 20:26:35.862" starttime="20201026 20:26:35.862"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:26:35.863" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201026 20:26:35.863" starttime="20201026 20:26:35.862"></status>
</kw>
<status status="PASS" endtime="20201026 20:26:35.863" starttime="20201026 20:26:35.861"></status>
</kw>
<msg timestamp="20201026 20:26:35.863" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201026 20:26:35.863" starttime="20201026 20:26:35.861"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:26:35.864" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201026 20:26:35.864" starttime="20201026 20:26:35.864"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:26:35.864" level="INFO">${result} = /wordcount-20.txt</msg>
<status status="PASS" endtime="20201026 20:26:35.865" starttime="20201026 20:26:35.864"></status>
</kw>
<status status="PASS" endtime="20201026 20:26:35.865" starttime="20201026 20:26:35.863"></status>
</kw>
<msg timestamp="20201026 20:26:35.865" level="INFO">${path_with_leading} = /wordcount-20.txt</msg>
<status status="PASS" endtime="20201026 20:26:35.865" starttime="20201026 20:26:35.863"></status>
</kw>
<status status="PASS" endtime="20201026 20:26:35.865" starttime="20201026 20:26:35.860"></status>
</kw>
<msg timestamp="20201026 20:26:35.865" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-20.txt</msg>
<status status="PASS" endtime="20201026 20:26:35.865" starttime="20201026 20:26:35.860"></status>
</kw>
<msg timestamp="20201026 20:26:35.865" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-20.txt</msg>
<status status="PASS" endtime="20201026 20:26:35.865" starttime="20201026 20:26:35.860"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:26:35.869" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-20.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:27:11.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:27:11.059" level="INFO">${output} = 2020-10-26 20:26:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201026 20:27:11.059" starttime="20201026 20:26:35.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:27:11.060" level="INFO">2020-10-26 20:26:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:37 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-10-26 20:26:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:37 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-26 20:26:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:38 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-26 20:26:38 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:26:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-26 20:26:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-26 20:26:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:26:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DC57F76062F4-&gt;b7a050f7-35cc-4634-8b52-58ce135b21a8
2020-10-26 20:26:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-26 20:26:39 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-26 20:26:39 INFO  JobSubmitter:202 - number of splits:3
2020-10-26 20:26:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603743811649_0004
2020-10-26 20:26:41 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-26 20:26:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:42 INFO  Configuration:2752 - resource-types.xml not found
2020-10-26 20:26:42 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-26 20:26:42 INFO  YarnClientImpl:324 - Submitted application application_1603743811649_0004
2020-10-26 20:26:42 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603743811649_0004/
2020-10-26 20:26:42 INFO  Job:1619 - Running job: job_1603743811649_0004
2020-10-26 20:26:49 INFO  Job:1640 - Job job_1603743811649_0004 running in uber mode : false
2020-10-26 20:26:49 INFO  Job:1647 -  map 0% reduce 0%
2020-10-26 20:26:56 INFO  Job:1647 -  map 33% reduce 0%
2020-10-26 20:27:01 INFO  Job:1647 -  map 67% reduce 0%
2020-10-26 20:27:05 INFO  Job:1647 -  map 100% reduce 0%
2020-10-26 20:27:10 INFO  Job:1647 -  map 100% reduce 100%
2020-10-26 20:27:10 INFO  Job:1658 - Job job_1603743811649_0004 completed successfully
2020-10-26 20:27:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:27:10 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36700
		Total time spent by all reduces in occupied slots (ms)=13360
		Total time spent by all map tasks (ms)=9175
		Total time spent by all reduce tasks (ms)=3340
		Total vcore-milliseconds taken by all map tasks=9175
		Total vcore-milliseconds taken by all reduce tasks=3340
		Total megabyte-milliseconds taken by all map tasks=37580800
		Total megabyte-milliseconds taken by all reduce tasks=13680640
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=587
		CPU time spent (ms)=6970
		Physical memory (bytes) snapshot=1173323776
		Virtual memory (bytes) snapshot=16066686976
		Total committed heap usage (bytes)=1062207488
		Peak Map Physical memory (bytes)=294731776
		Peak Map Virtual memory (bytes)=4013498368
		Peak Reduce Physical memory (bytes)=292986880
		Peak Reduce Virtual memory (bytes)=4032512000
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-26 20:27:10 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201026 20:27:11.060" starttime="20201026 20:27:11.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:27:11.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:27:11.061" starttime="20201026 20:27:11.060"></status>
</kw>
<status status="PASS" endtime="20201026 20:27:11.061" starttime="20201026 20:26:35.866"></status>
</kw>
<msg timestamp="20201026 20:27:11.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:27:11.061" starttime="20201026 20:26:35.866"></status>
</kw>
<msg timestamp="20201026 20:27:11.062" level="INFO">${output} = 2020-10-26 20:26:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:26:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201026 20:27:11.062" starttime="20201026 20:26:35.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201026 20:27:11.062" starttime="20201026 20:27:11.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201026 20:27:11.063" starttime="20201026 20:27:11.062"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201026 20:27:11.063" critical="yes" starttime="20201026 20:26:35.838"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201026 20:27:11.064" starttime="20201026 20:26:02.542"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:24:33.492" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:24:33.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:24:33.495" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201026 20:24:33.496" starttime="20201026 20:24:33.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:24:33.496" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201026 20:24:33.496" starttime="20201026 20:24:33.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:24:33.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:24:33.497" starttime="20201026 20:24:33.496"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:33.497" starttime="20201026 20:24:33.487"></status>
</kw>
<msg timestamp="20201026 20:24:33.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:24:33.497" starttime="20201026 20:24:33.487"></status>
</kw>
<msg timestamp="20201026 20:24:33.497" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201026 20:24:33.497" starttime="20201026 20:24:33.487"></status>
</kw>
<msg timestamp="20201026 20:24:33.498" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201026 20:24:33.498" starttime="20201026 20:24:33.486"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:24:33.500" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:24:33.500" starttime="20201026 20:24:33.500"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:24:33.501" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:24:33.501" starttime="20201026 20:24:33.500"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:33.501" starttime="20201026 20:24:33.500"></status>
</kw>
<msg timestamp="20201026 20:24:33.501" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:24:33.501" starttime="20201026 20:24:33.499"></status>
</kw>
<status status="PASS" endtime="20201026 20:24:33.501" starttime="20201026 20:24:33.499"></status>
</kw>
<msg timestamp="20201026 20:24:33.501" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201026 20:24:33.501" starttime="20201026 20:24:33.498"></status>
</kw>
<msg timestamp="20201026 20:24:33.502" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201026 20:24:33.502" starttime="20201026 20:24:33.498"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:24:33.505" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:25:11.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:25:11.713" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-26 20:24:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24...</msg>
<status status="PASS" endtime="20201026 20:25:11.713" starttime="20201026 20:24:33.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:25:11.714" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-26 20:24:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:35 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-26 20:24:35 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:24:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-26 20:24:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-26 20:24:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:24:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-98445411C214-&gt;b7a050f7-35cc-4634-8b52-58ce135b21a8
2020-10-26 20:24:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-26 20:24:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-10-26 20:24:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:39 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-26 20:24:39 INFO  JobSubmitter:202 - number of splits:3
2020-10-26 20:24:39 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603743811649_0001
2020-10-26 20:24:39 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-26 20:24:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:40 INFO  Configuration:2752 - resource-types.xml not found
2020-10-26 20:24:40 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-26 20:24:40 INFO  YarnClientImpl:324 - Submitted application application_1603743811649_0001
2020-10-26 20:24:40 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603743811649_0001/
2020-10-26 20:24:40 INFO  Job:1619 - Running job: job_1603743811649_0001
2020-10-26 20:24:49 INFO  Job:1640 - Job job_1603743811649_0001 running in uber mode : false
2020-10-26 20:24:49 INFO  Job:1647 -  map 0% reduce 0%
2020-10-26 20:24:55 INFO  Job:1647 -  map 33% reduce 0%
2020-10-26 20:25:00 INFO  Job:1647 -  map 67% reduce 0%
2020-10-26 20:25:06 INFO  Job:1647 -  map 100% reduce 0%
2020-10-26 20:25:11 INFO  Job:1647 -  map 100% reduce 100%
2020-10-26 20:25:11 INFO  Job:1658 - Job job_1603743811649_0001 completed successfully
2020-10-26 20:25:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:11 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36240
		Total time spent by all reduces in occupied slots (ms)=14108
		Total time spent by all map tasks (ms)=9060
		Total time spent by all reduce tasks (ms)=3527
		Total vcore-milliseconds taken by all map tasks=9060
		Total vcore-milliseconds taken by all reduce tasks=3527
		Total megabyte-milliseconds taken by all map tasks=37109760
		Total megabyte-milliseconds taken by all reduce tasks=14446592
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=587
		CPU time spent (ms)=5690
		Physical memory (bytes) snapshot=1140269056
		Virtual memory (bytes) snapshot=16051970048
		Total committed heap usage (bytes)=1137704960
		Peak Map Physical memory (bytes)=290250752
		Peak Map Virtual memory (bytes)=4008808448
		Peak Reduce Physical memory (bytes)=299048960
		Peak Reduce Virtual memory (bytes)=4036624384
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.185 seconds
2020-10-26 20:25:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:11 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-26 20:25:11 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201026 20:25:11.714" starttime="20201026 20:25:11.713"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:25:11.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:25:11.715" starttime="20201026 20:25:11.714"></status>
</kw>
<status status="PASS" endtime="20201026 20:25:11.715" starttime="20201026 20:24:33.502"></status>
</kw>
<msg timestamp="20201026 20:25:11.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:25:11.715" starttime="20201026 20:24:33.502"></status>
</kw>
<msg timestamp="20201026 20:25:11.716" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-26 20:24:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:24...</msg>
<status status="PASS" endtime="20201026 20:25:11.716" starttime="20201026 20:24:33.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201026 20:25:11.716" starttime="20201026 20:25:11.716"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201026 20:25:11.716" critical="yes" starttime="20201026 20:24:33.486"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:25:11.722" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:25:11.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:25:11.726" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201026 20:25:11.726" starttime="20201026 20:25:11.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:25:11.727" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201026 20:25:11.727" starttime="20201026 20:25:11.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:25:11.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:25:11.727" starttime="20201026 20:25:11.727"></status>
</kw>
<status status="PASS" endtime="20201026 20:25:11.728" starttime="20201026 20:25:11.718"></status>
</kw>
<msg timestamp="20201026 20:25:11.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:25:11.728" starttime="20201026 20:25:11.718"></status>
</kw>
<msg timestamp="20201026 20:25:11.728" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201026 20:25:11.728" starttime="20201026 20:25:11.718"></status>
</kw>
<msg timestamp="20201026 20:25:11.728" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201026 20:25:11.728" starttime="20201026 20:25:11.717"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201026 20:25:11.729" level="INFO">${random} = 74</msg>
<status status="PASS" endtime="20201026 20:25:11.729" starttime="20201026 20:25:11.728"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:25:11.732" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:25:11.732" starttime="20201026 20:25:11.732"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:25:11.732" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:25:11.732" starttime="20201026 20:25:11.732"></status>
</kw>
<status status="PASS" endtime="20201026 20:25:11.733" starttime="20201026 20:25:11.731"></status>
</kw>
<msg timestamp="20201026 20:25:11.733" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:25:11.733" starttime="20201026 20:25:11.731"></status>
</kw>
<status status="PASS" endtime="20201026 20:25:11.733" starttime="20201026 20:25:11.730"></status>
</kw>
<msg timestamp="20201026 20:25:11.733" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201026 20:25:11.733" starttime="20201026 20:25:11.730"></status>
</kw>
<msg timestamp="20201026 20:25:11.733" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201026 20:25:11.733" starttime="20201026 20:25:11.729"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:25:11.736" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:25:11.736" starttime="20201026 20:25:11.736"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:25:11.736" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:25:11.736" starttime="20201026 20:25:11.736"></status>
</kw>
<status status="PASS" endtime="20201026 20:25:11.737" starttime="20201026 20:25:11.735"></status>
</kw>
<msg timestamp="20201026 20:25:11.737" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:25:11.737" starttime="20201026 20:25:11.735"></status>
</kw>
<status status="PASS" endtime="20201026 20:25:11.737" starttime="20201026 20:25:11.734"></status>
</kw>
<msg timestamp="20201026 20:25:11.737" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201026 20:25:11.737" starttime="20201026 20:25:11.734"></status>
</kw>
<msg timestamp="20201026 20:25:11.737" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201026 20:25:11.737" starttime="20201026 20:25:11.733"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:25:11.739" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:25:11.739" starttime="20201026 20:25:11.739"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:25:11.740" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:25:11.740" starttime="20201026 20:25:11.740"></status>
</kw>
<status status="PASS" endtime="20201026 20:25:11.740" starttime="20201026 20:25:11.739"></status>
</kw>
<msg timestamp="20201026 20:25:11.740" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:25:11.740" starttime="20201026 20:25:11.739"></status>
</kw>
<status status="PASS" endtime="20201026 20:25:11.740" starttime="20201026 20:25:11.738"></status>
</kw>
<msg timestamp="20201026 20:25:11.740" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-74.txt</msg>
<status status="PASS" endtime="20201026 20:25:11.740" starttime="20201026 20:25:11.738"></status>
</kw>
<msg timestamp="20201026 20:25:11.740" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-74.txt</msg>
<status status="PASS" endtime="20201026 20:25:11.740" starttime="20201026 20:25:11.737"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:25:11.744" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-74.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:25:49.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:25:49.011" level="INFO">${output} = 2020-10-26 20:25:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201026 20:25:49.011" starttime="20201026 20:25:11.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:25:49.012" level="INFO">2020-10-26 20:25:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-10-26 20:25:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-26 20:25:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:13 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-26 20:25:13 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-26 20:25:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-26 20:25:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-26 20:25:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:25:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-01FB38BD8C34-&gt;b7a050f7-35cc-4634-8b52-58ce135b21a8
2020-10-26 20:25:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-26 20:25:15 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-26 20:25:17 INFO  JobSubmitter:202 - number of splits:3
2020-10-26 20:25:17 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603743811649_0002
2020-10-26 20:25:17 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-26 20:25:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:18 INFO  Configuration:2752 - resource-types.xml not found
2020-10-26 20:25:18 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-26 20:25:18 INFO  YarnClientImpl:324 - Submitted application application_1603743811649_0002
2020-10-26 20:25:18 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603743811649_0002/
2020-10-26 20:25:18 INFO  Job:1619 - Running job: job_1603743811649_0002
2020-10-26 20:25:25 INFO  Job:1640 - Job job_1603743811649_0002 running in uber mode : false
2020-10-26 20:25:25 INFO  Job:1647 -  map 0% reduce 0%
2020-10-26 20:25:31 INFO  Job:1647 -  map 33% reduce 0%
2020-10-26 20:25:36 INFO  Job:1647 -  map 67% reduce 0%
2020-10-26 20:25:41 INFO  Job:1647 -  map 100% reduce 0%
2020-10-26 20:25:47 INFO  Job:1647 -  map 100% reduce 100%
2020-10-26 20:25:48 INFO  Job:1658 - Job job_1603743811649_0002 completed successfully
2020-10-26 20:25:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:48 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36600
		Total time spent by all reduces in occupied slots (ms)=22840
		Total time spent by all map tasks (ms)=9150
		Total time spent by all reduce tasks (ms)=5710
		Total vcore-milliseconds taken by all map tasks=9150
		Total vcore-milliseconds taken by all reduce tasks=5710
		Total megabyte-milliseconds taken by all map tasks=37478400
		Total megabyte-milliseconds taken by all reduce tasks=23388160
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=583
		CPU time spent (ms)=6450
		Physical memory (bytes) snapshot=1183256576
		Virtual memory (bytes) snapshot=16047697920
		Total committed heap usage (bytes)=1055391744
		Peak Map Physical memory (bytes)=298086400
		Peak Map Virtual memory (bytes)=4013981696
		Peak Reduce Physical memory (bytes)=295981056
		Peak Reduce Virtual memory (bytes)=4034056192
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-26 20:25:48 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201026 20:25:49.012" starttime="20201026 20:25:49.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:25:49.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:25:49.013" starttime="20201026 20:25:49.013"></status>
</kw>
<status status="PASS" endtime="20201026 20:25:49.014" starttime="20201026 20:25:11.741"></status>
</kw>
<msg timestamp="20201026 20:25:49.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:25:49.014" starttime="20201026 20:25:11.741"></status>
</kw>
<msg timestamp="20201026 20:25:49.014" level="INFO">${output} = 2020-10-26 20:25:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-26 20:25:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201026 20:25:49.014" starttime="20201026 20:25:11.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201026 20:25:49.015" starttime="20201026 20:25:49.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201026 20:25:49.015" starttime="20201026 20:25:49.015"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201026 20:25:49.015" critical="yes" starttime="20201026 20:25:11.717"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201026 20:25:49.016" starttime="20201026 20:24:33.441"></status>
</suite>
<status status="PASS" elapsedtime="182498" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:28:11.847" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:28:15.377" level="INFO">${rc} = 255</msg>
<msg timestamp="20201026 20:28:15.377" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201026 20:28:15.377" starttime="20201026 20:28:11.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:28:15.378" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201026 20:28:15.378" starttime="20201026 20:28:15.377"></status>
</kw>
<msg timestamp="20201026 20:28:15.378" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201026 20:28:15.379" starttime="20201026 20:28:11.838"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:28:15.384" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:28:18.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:28:18.402" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:28:18.402" starttime="20201026 20:28:15.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:28:18.403" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:28:18.403" starttime="20201026 20:28:18.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:28:18.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:28:18.404" starttime="20201026 20:28:18.403"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:18.404" starttime="20201026 20:28:15.380"></status>
</kw>
<msg timestamp="20201026 20:28:18.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:28:18.404" starttime="20201026 20:28:15.380"></status>
</kw>
<msg timestamp="20201026 20:28:18.404" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201026 20:28:18.405" starttime="20201026 20:28:15.380"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201026 20:28:18.405" starttime="20201026 20:28:18.405"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:18.405" starttime="20201026 20:28:15.379"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:18.405" starttime="20201026 20:28:15.379"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:28:18.410" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:28:21.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:28:21.239" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:28:21.239" starttime="20201026 20:28:18.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:28:21.240" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:28:21.240" starttime="20201026 20:28:21.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:28:21.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:28:21.240" starttime="20201026 20:28:21.240"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:21.241" starttime="20201026 20:28:18.407"></status>
</kw>
<msg timestamp="20201026 20:28:21.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:28:21.241" starttime="20201026 20:28:18.407"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:21.241" starttime="20201026 20:28:18.406"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:21.241" starttime="20201026 20:28:18.406"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:21.241" starttime="20201026 20:28:18.405"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201026 20:28:21.242" starttime="20201026 20:28:21.241"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:28:21.245" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:28:24.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:28:24.342" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-26T20:28:21.032Z",
  "modificat...</msg>
<status status="PASS" endtime="20201026 20:28:24.342" starttime="20201026 20:28:21.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:28:24.343" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-26T20:28:21.032Z",
  "modificationTime" : "2020-10-26T20:28:21.032Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201026 20:28:24.344" starttime="20201026 20:28:24.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:28:24.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:28:24.344" starttime="20201026 20:28:24.344"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:24.344" starttime="20201026 20:28:21.243"></status>
</kw>
<msg timestamp="20201026 20:28:24.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:28:24.345" starttime="20201026 20:28:21.242"></status>
</kw>
<msg timestamp="20201026 20:28:24.345" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-26T20:28:21.032Z",
  "modificat...</msg>
<status status="PASS" endtime="20201026 20:28:24.345" starttime="20201026 20:28:21.242"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201026 20:28:24.345" starttime="20201026 20:28:24.345"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:28:24.349" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:28:24.349" starttime="20201026 20:28:24.349"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:28:24.350" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:28:24.350" starttime="20201026 20:28:24.349"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:24.350" starttime="20201026 20:28:24.348"></status>
</kw>
<msg timestamp="20201026 20:28:24.350" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:28:24.350" starttime="20201026 20:28:24.348"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:24.351" starttime="20201026 20:28:24.347"></status>
</kw>
<msg timestamp="20201026 20:28:24.351" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201026 20:28:24.351" starttime="20201026 20:28:24.346"></status>
</kw>
<msg timestamp="20201026 20:28:24.351" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201026 20:28:24.351" starttime="20201026 20:28:24.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:28:24.354" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:28:27.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:28:27.027" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:28:27.028" starttime="20201026 20:28:24.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:28:27.029" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:28:27.029" starttime="20201026 20:28:27.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:28:27.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:28:27.029" starttime="20201026 20:28:27.029"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:27.030" starttime="20201026 20:28:24.352"></status>
</kw>
<msg timestamp="20201026 20:28:27.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:28:27.030" starttime="20201026 20:28:24.351"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:27.030" starttime="20201026 20:28:24.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:28:27.034" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:28:36.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:28:36.183" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:28:36.183" starttime="20201026 20:28:27.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:28:36.184" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:28:36.184" starttime="20201026 20:28:36.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:28:36.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:28:36.184" starttime="20201026 20:28:36.184"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:36.185" starttime="20201026 20:28:27.031"></status>
</kw>
<msg timestamp="20201026 20:28:36.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:28:36.185" starttime="20201026 20:28:27.031"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:36.185" starttime="20201026 20:28:27.030"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:28:36.189" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:28:41.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:28:41.271" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:28:41.271" starttime="20201026 20:28:36.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:28:41.272" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:28:41.272" starttime="20201026 20:28:41.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:28:41.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:28:41.273" starttime="20201026 20:28:41.272"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:41.273" starttime="20201026 20:28:36.186"></status>
</kw>
<msg timestamp="20201026 20:28:41.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:28:41.273" starttime="20201026 20:28:36.186"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:41.273" starttime="20201026 20:28:36.185"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:28:41.277" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:28:46.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:28:46.123" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:28:46.123" starttime="20201026 20:28:41.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:28:46.124" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:28:46.124" starttime="20201026 20:28:46.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:28:46.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:28:46.125" starttime="20201026 20:28:46.125"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:46.125" starttime="20201026 20:28:41.274"></status>
</kw>
<msg timestamp="20201026 20:28:46.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:28:46.126" starttime="20201026 20:28:41.274"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:46.126" starttime="20201026 20:28:41.274"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201026 20:28:46.126" critical="yes" starttime="20201026 20:28:11.837"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:28:46.131" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:28:46.131" starttime="20201026 20:28:46.130"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:28:46.131" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:28:46.131" starttime="20201026 20:28:46.131"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:46.132" starttime="20201026 20:28:46.130"></status>
</kw>
<msg timestamp="20201026 20:28:46.132" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:28:46.132" starttime="20201026 20:28:46.129"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:46.132" starttime="20201026 20:28:46.129"></status>
</kw>
<msg timestamp="20201026 20:28:46.132" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201026 20:28:46.132" starttime="20201026 20:28:46.128"></status>
</kw>
<msg timestamp="20201026 20:28:46.132" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201026 20:28:46.132" starttime="20201026 20:28:46.127"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:28:46.135" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:28:49.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:28:49.066" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:28:49.066" starttime="20201026 20:28:46.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:28:49.067" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:28:49.067" starttime="20201026 20:28:49.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:28:49.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:28:49.068" starttime="20201026 20:28:49.067"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:49.068" starttime="20201026 20:28:46.133"></status>
</kw>
<msg timestamp="20201026 20:28:49.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:28:49.068" starttime="20201026 20:28:46.133"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:49.068" starttime="20201026 20:28:46.132"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:28:49.073" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:28:51.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:28:51.746" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201026 20:28:51.746" starttime="20201026 20:28:49.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:28:51.747" level="INFO"></msg>
<status status="PASS" endtime="20201026 20:28:51.747" starttime="20201026 20:28:51.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:28:51.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:28:51.748" starttime="20201026 20:28:51.748"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:51.748" starttime="20201026 20:28:49.069"></status>
</kw>
<msg timestamp="20201026 20:28:51.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:28:51.749" starttime="20201026 20:28:49.069"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:51.749" starttime="20201026 20:28:49.068"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201026 20:28:51.749" critical="yes" starttime="20201026 20:28:46.127"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201026 20:28:51.750" starttime="20201026 20:28:11.783"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201026 20:30:23.059" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201026 20:30:23.059" starttime="20201026 20:30:23.059"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:30:23.060" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201026 20:30:23.060" starttime="20201026 20:30:23.060"></status>
</kw>
<status status="PASS" endtime="20201026 20:30:23.060" starttime="20201026 20:30:23.059"></status>
</kw>
<msg timestamp="20201026 20:30:23.060" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201026 20:30:23.060" starttime="20201026 20:30:23.058"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201026 20:30:23.061" starttime="20201026 20:30:23.061"></status>
</kw>
<msg timestamp="20201026 20:30:23.061" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201026 20:30:23.061" starttime="20201026 20:30:23.060"></status>
</kw>
<status status="PASS" endtime="20201026 20:30:23.061" starttime="20201026 20:30:23.058"></status>
</kw>
<msg timestamp="20201026 20:30:23.061" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201026 20:30:23.061" starttime="20201026 20:30:23.058"></status>
</kw>
<msg timestamp="20201026 20:30:23.061" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201026 20:30:23.061" starttime="20201026 20:30:23.056"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201026 20:30:23.062" level="INFO">${random} = 50664</msg>
<status status="PASS" endtime="20201026 20:30:23.062" starttime="20201026 20:30:23.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:30:23.067" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-50664 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:30:28.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:30:28.816" level="INFO">${output} = 2020-10-26 20:30:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-26 20:30:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201026 20:30:28.816" starttime="20201026 20:30:23.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:30:28.817" level="INFO">2020-10-26 20:30:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-26 20:30:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-26 20:30:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-26 20:30:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:30:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-27089A1D6E6F-&gt;600a3c1d-178c-4a6f-abbc-ea5e7478142d
2020-10-26 20:30:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201026 20:30:28.817" starttime="20201026 20:30:28.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:30:28.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:30:28.817" starttime="20201026 20:30:28.817"></status>
</kw>
<status status="PASS" endtime="20201026 20:30:28.818" starttime="20201026 20:30:23.063"></status>
</kw>
<msg timestamp="20201026 20:30:28.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:30:28.818" starttime="20201026 20:30:23.063"></status>
</kw>
<msg timestamp="20201026 20:30:28.818" level="INFO">${result} = 2020-10-26 20:30:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-26 20:30:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201026 20:30:28.818" starttime="20201026 20:30:23.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:30:28.821" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:30:30.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:30:30.422" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:28 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-26 20:28 ofs://om/volume1/bucket1/ozone-02313
-rw-...</msg>
<status status="PASS" endtime="20201026 20:30:30.422" starttime="20201026 20:30:28.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:30:30.423" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:28 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-26 20:28 ofs://om/volume1/bucket1/ozone-02313
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-26 20:30 ofs://om/volume1/bucket1/ozone-50664
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:28 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:29 ofs://om/volume1/bucket1/wordcount-17.txt</msg>
<status status="PASS" endtime="20201026 20:30:30.423" starttime="20201026 20:30:30.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:30:30.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:30:30.423" starttime="20201026 20:30:30.423"></status>
</kw>
<status status="PASS" endtime="20201026 20:30:30.424" starttime="20201026 20:30:28.819"></status>
</kw>
<msg timestamp="20201026 20:30:30.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:30:30.424" starttime="20201026 20:30:28.818"></status>
</kw>
<msg timestamp="20201026 20:30:30.424" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:28 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-26 20:28 ofs://om/volume1/bucket1/ozone-02313
-rw-...</msg>
<status status="PASS" endtime="20201026 20:30:30.424" starttime="20201026 20:30:28.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201026 20:30:30.425" starttime="20201026 20:30:30.424"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201026 20:30:30.425" critical="yes" starttime="20201026 20:30:23.056"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201026 20:30:30.426" starttime="20201026 20:30:23.011"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:28:56.163" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:28:56.163" starttime="20201026 20:28:56.163"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:28:56.164" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:28:56.164" starttime="20201026 20:28:56.163"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:56.164" starttime="20201026 20:28:56.162"></status>
</kw>
<msg timestamp="20201026 20:28:56.164" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:28:56.164" starttime="20201026 20:28:56.162"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:56.164" starttime="20201026 20:28:56.162"></status>
</kw>
<msg timestamp="20201026 20:28:56.164" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201026 20:28:56.164" starttime="20201026 20:28:56.161"></status>
</kw>
<msg timestamp="20201026 20:28:56.164" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201026 20:28:56.164" starttime="20201026 20:28:56.160"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201026 20:28:56.165" level="INFO">${random} = 02313</msg>
<status status="PASS" endtime="20201026 20:28:56.165" starttime="20201026 20:28:56.164"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:28:56.169" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-02313 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:28:59.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:28:59.633" level="INFO">${output} = 2020-10-26 20:28:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-26 20:28:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201026 20:28:59.633" starttime="20201026 20:28:56.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:28:59.634" level="INFO">2020-10-26 20:28:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-26 20:28:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-26 20:28:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-26 20:28:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:28:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9FA941C8313C-&gt;600a3c1d-178c-4a6f-abbc-ea5e7478142d
2020-10-26 20:28:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201026 20:28:59.634" starttime="20201026 20:28:59.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:28:59.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:28:59.635" starttime="20201026 20:28:59.635"></status>
</kw>
<status status="PASS" endtime="20201026 20:28:59.635" starttime="20201026 20:28:56.165"></status>
</kw>
<msg timestamp="20201026 20:28:59.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:28:59.636" starttime="20201026 20:28:56.165"></status>
</kw>
<msg timestamp="20201026 20:28:59.636" level="INFO">${result} = 2020-10-26 20:28:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-26 20:28:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201026 20:28:59.636" starttime="20201026 20:28:56.165"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:28:59.639" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:29:01.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:29:01.368" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:28 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-26 20:28 o3fs://bucket1.volume1.om/ozone-02313
dr...</msg>
<status status="PASS" endtime="20201026 20:29:01.368" starttime="20201026 20:28:59.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:29:01.369" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:28 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-26 20:28 o3fs://bucket1.volume1.om/ozone-02313
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:28 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201026 20:29:01.369" starttime="20201026 20:29:01.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:29:01.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:29:01.370" starttime="20201026 20:29:01.370"></status>
</kw>
<status status="PASS" endtime="20201026 20:29:01.370" starttime="20201026 20:28:59.636"></status>
</kw>
<msg timestamp="20201026 20:29:01.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:29:01.370" starttime="20201026 20:28:59.636"></status>
</kw>
<msg timestamp="20201026 20:29:01.371" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-26 20:28 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-26 20:28 o3fs://bucket1.volume1.om/ozone-02313
dr...</msg>
<status status="PASS" endtime="20201026 20:29:01.371" starttime="20201026 20:28:59.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201026 20:29:01.371" starttime="20201026 20:29:01.371"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201026 20:29:01.371" critical="yes" starttime="20201026 20:28:56.159"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201026 20:29:01.372" starttime="20201026 20:28:56.113"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:30:34.796" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:30:34.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:30:34.800" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201026 20:30:34.800" starttime="20201026 20:30:34.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:30:34.801" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201026 20:30:34.801" starttime="20201026 20:30:34.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:30:34.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:30:34.802" starttime="20201026 20:30:34.801"></status>
</kw>
<status status="PASS" endtime="20201026 20:30:34.802" starttime="20201026 20:30:34.791"></status>
</kw>
<msg timestamp="20201026 20:30:34.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:30:34.802" starttime="20201026 20:30:34.790"></status>
</kw>
<msg timestamp="20201026 20:30:34.802" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201026 20:30:34.802" starttime="20201026 20:30:34.790"></status>
</kw>
<msg timestamp="20201026 20:30:34.802" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201026 20:30:34.802" starttime="20201026 20:30:34.790"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201026 20:30:34.805" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201026 20:30:34.805" starttime="20201026 20:30:34.805"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:30:34.806" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201026 20:30:34.806" starttime="20201026 20:30:34.805"></status>
</kw>
<status status="PASS" endtime="20201026 20:30:34.806" starttime="20201026 20:30:34.804"></status>
</kw>
<msg timestamp="20201026 20:30:34.806" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201026 20:30:34.806" starttime="20201026 20:30:34.804"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201026 20:30:34.807" starttime="20201026 20:30:34.806"></status>
</kw>
<msg timestamp="20201026 20:30:34.807" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201026 20:30:34.807" starttime="20201026 20:30:34.806"></status>
</kw>
<status status="PASS" endtime="20201026 20:30:34.807" starttime="20201026 20:30:34.804"></status>
</kw>
<msg timestamp="20201026 20:30:34.807" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201026 20:30:34.807" starttime="20201026 20:30:34.803"></status>
</kw>
<msg timestamp="20201026 20:30:34.807" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201026 20:30:34.807" starttime="20201026 20:30:34.803"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:30:34.811" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:31:09.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:31:09.355" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-26 20:30:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-26 20:30:36 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201026 20:31:09.355" starttime="20201026 20:30:34.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:31:09.356" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-26 20:30:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-26 20:30:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-26 20:30:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-26 20:30:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:30:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7CA8A193A082-&gt;600a3c1d-178c-4a6f-abbc-ea5e7478142d
2020-10-26 20:30:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-26 20:30:37 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-26 20:30:38 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-26 20:30:38 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-26 20:30:40 INFO  JobSubmitter:202 - number of splits:3
2020-10-26 20:30:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603744073720_0003
2020-10-26 20:30:41 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-26 20:30:41 INFO  Configuration:2795 - resource-types.xml not found
2020-10-26 20:30:41 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-26 20:30:41 INFO  YarnClientImpl:329 - Submitted application application_1603744073720_0003
2020-10-26 20:30:41 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603744073720_0003/
2020-10-26 20:30:41 INFO  Job:1619 - Running job: job_1603744073720_0003
2020-10-26 20:30:48 INFO  Job:1640 - Job job_1603744073720_0003 running in uber mode : false
2020-10-26 20:30:48 INFO  Job:1647 -  map 0% reduce 0%
2020-10-26 20:30:53 INFO  Job:1647 -  map 33% reduce 0%
2020-10-26 20:30:58 INFO  Job:1647 -  map 67% reduce 0%
2020-10-26 20:31:03 INFO  Job:1647 -  map 100% reduce 0%
2020-10-26 20:31:07 INFO  Job:1647 -  map 100% reduce 100%
2020-10-26 20:31:08 INFO  Job:1658 - Job job_1603744073720_0003 completed successfully
2020-10-26 20:31:08 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36724
		Total time spent by all reduces in occupied slots (ms)=13512
		Total time spent by all map tasks (ms)=9181
		Total time spent by all reduce tasks (ms)=3378
		Total vcore-milliseconds taken by all map tasks=9181
		Total vcore-milliseconds taken by all reduce tasks=3378
		Total megabyte-milliseconds taken by all map tasks=37605376
		Total megabyte-milliseconds taken by all reduce tasks=13836288
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=581
		CPU time spent (ms)=6580
		Physical memory (bytes) snapshot=1465745408
		Virtual memory (bytes) snapshot=16067739648
		Total committed heap usage (bytes)=1707081728
		Peak Map Physical memory (bytes)=369172480
		Peak Map Virtual memory (bytes)=4018651136
		Peak Reduce Physical memory (bytes)=369627136
		Peak Reduce Virtual memory (bytes)=4033994752
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.086 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201026 20:31:09.356" starttime="20201026 20:31:09.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:31:09.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:31:09.357" starttime="20201026 20:31:09.357"></status>
</kw>
<status status="PASS" endtime="20201026 20:31:09.357" starttime="20201026 20:30:34.808"></status>
</kw>
<msg timestamp="20201026 20:31:09.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:31:09.357" starttime="20201026 20:30:34.808"></status>
</kw>
<msg timestamp="20201026 20:31:09.358" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-26 20:30:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-26 20:30:36 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201026 20:31:09.358" starttime="20201026 20:30:34.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201026 20:31:09.358" starttime="20201026 20:31:09.358"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201026 20:31:09.359" critical="yes" starttime="20201026 20:30:34.789"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:31:09.363" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:31:09.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:31:09.368" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201026 20:31:09.368" starttime="20201026 20:31:09.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:31:09.369" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201026 20:31:09.369" starttime="20201026 20:31:09.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:31:09.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:31:09.370" starttime="20201026 20:31:09.370"></status>
</kw>
<status status="PASS" endtime="20201026 20:31:09.370" starttime="20201026 20:31:09.360"></status>
</kw>
<msg timestamp="20201026 20:31:09.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:31:09.370" starttime="20201026 20:31:09.360"></status>
</kw>
<msg timestamp="20201026 20:31:09.371" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201026 20:31:09.371" starttime="20201026 20:31:09.360"></status>
</kw>
<msg timestamp="20201026 20:31:09.371" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201026 20:31:09.371" starttime="20201026 20:31:09.359"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201026 20:31:09.371" level="INFO">${random} = 34</msg>
<status status="PASS" endtime="20201026 20:31:09.371" starttime="20201026 20:31:09.371"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201026 20:31:09.374" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201026 20:31:09.374" starttime="20201026 20:31:09.374"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:31:09.375" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201026 20:31:09.375" starttime="20201026 20:31:09.374"></status>
</kw>
<status status="PASS" endtime="20201026 20:31:09.375" starttime="20201026 20:31:09.374"></status>
</kw>
<msg timestamp="20201026 20:31:09.375" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201026 20:31:09.375" starttime="20201026 20:31:09.373"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201026 20:31:09.376" starttime="20201026 20:31:09.376"></status>
</kw>
<msg timestamp="20201026 20:31:09.376" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201026 20:31:09.376" starttime="20201026 20:31:09.375"></status>
</kw>
<status status="PASS" endtime="20201026 20:31:09.376" starttime="20201026 20:31:09.372"></status>
</kw>
<msg timestamp="20201026 20:31:09.376" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201026 20:31:09.376" starttime="20201026 20:31:09.372"></status>
</kw>
<msg timestamp="20201026 20:31:09.376" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201026 20:31:09.376" starttime="20201026 20:31:09.371"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201026 20:31:09.379" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201026 20:31:09.379" starttime="20201026 20:31:09.379"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:31:09.379" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201026 20:31:09.379" starttime="20201026 20:31:09.379"></status>
</kw>
<status status="PASS" endtime="20201026 20:31:09.380" starttime="20201026 20:31:09.378"></status>
</kw>
<msg timestamp="20201026 20:31:09.380" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201026 20:31:09.380" starttime="20201026 20:31:09.378"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:31:09.381" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201026 20:31:09.381" starttime="20201026 20:31:09.380"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:31:09.381" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201026 20:31:09.381" starttime="20201026 20:31:09.381"></status>
</kw>
<status status="PASS" endtime="20201026 20:31:09.382" starttime="20201026 20:31:09.380"></status>
</kw>
<msg timestamp="20201026 20:31:09.382" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201026 20:31:09.382" starttime="20201026 20:31:09.380"></status>
</kw>
<status status="PASS" endtime="20201026 20:31:09.382" starttime="20201026 20:31:09.377"></status>
</kw>
<msg timestamp="20201026 20:31:09.382" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201026 20:31:09.382" starttime="20201026 20:31:09.377"></status>
</kw>
<msg timestamp="20201026 20:31:09.382" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201026 20:31:09.382" starttime="20201026 20:31:09.377"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201026 20:31:09.385" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201026 20:31:09.385" starttime="20201026 20:31:09.384"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:31:09.385" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201026 20:31:09.385" starttime="20201026 20:31:09.385"></status>
</kw>
<status status="PASS" endtime="20201026 20:31:09.385" starttime="20201026 20:31:09.384"></status>
</kw>
<msg timestamp="20201026 20:31:09.385" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201026 20:31:09.386" starttime="20201026 20:31:09.384"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:31:09.387" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201026 20:31:09.387" starttime="20201026 20:31:09.386"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:31:09.387" level="INFO">${result} = /wordcount-34.txt</msg>
<status status="PASS" endtime="20201026 20:31:09.387" starttime="20201026 20:31:09.387"></status>
</kw>
<status status="PASS" endtime="20201026 20:31:09.387" starttime="20201026 20:31:09.386"></status>
</kw>
<msg timestamp="20201026 20:31:09.387" level="INFO">${path_with_leading} = /wordcount-34.txt</msg>
<status status="PASS" endtime="20201026 20:31:09.387" starttime="20201026 20:31:09.386"></status>
</kw>
<status status="PASS" endtime="20201026 20:31:09.388" starttime="20201026 20:31:09.383"></status>
</kw>
<msg timestamp="20201026 20:31:09.388" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-34.txt</msg>
<status status="PASS" endtime="20201026 20:31:09.388" starttime="20201026 20:31:09.383"></status>
</kw>
<msg timestamp="20201026 20:31:09.388" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-34.txt</msg>
<status status="PASS" endtime="20201026 20:31:09.388" starttime="20201026 20:31:09.382"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:31:09.392" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-34.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:31:44.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:31:44.629" level="INFO">${output} = 2020-10-26 20:31:11 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-26 20:31:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201026 20:31:44.630" starttime="20201026 20:31:09.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:31:44.631" level="INFO">2020-10-26 20:31:11 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-26 20:31:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-26 20:31:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-26 20:31:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-26 20:31:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-26 20:31:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:31:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3873B303C760-&gt;600a3c1d-178c-4a6f-abbc-ea5e7478142d
2020-10-26 20:31:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-26 20:31:12 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-26 20:31:15 INFO  JobSubmitter:202 - number of splits:3
2020-10-26 20:31:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603744073720_0004
2020-10-26 20:31:15 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-26 20:31:15 INFO  Configuration:2795 - resource-types.xml not found
2020-10-26 20:31:15 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-26 20:31:15 INFO  YarnClientImpl:329 - Submitted application application_1603744073720_0004
2020-10-26 20:31:15 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603744073720_0004/
2020-10-26 20:31:15 INFO  Job:1619 - Running job: job_1603744073720_0004
2020-10-26 20:31:23 INFO  Job:1640 - Job job_1603744073720_0004 running in uber mode : false
2020-10-26 20:31:23 INFO  Job:1647 -  map 0% reduce 0%
2020-10-26 20:31:29 INFO  Job:1647 -  map 33% reduce 0%
2020-10-26 20:31:34 INFO  Job:1647 -  map 67% reduce 0%
2020-10-26 20:31:39 INFO  Job:1647 -  map 100% reduce 0%
2020-10-26 20:31:44 INFO  Job:1647 -  map 100% reduce 100%
2020-10-26 20:31:44 INFO  Job:1658 - Job job_1603744073720_0004 completed successfully
2020-10-26 20:31:44 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36756
		Total time spent by all reduces in occupied slots (ms)=13512
		Total time spent by all map tasks (ms)=9189
		Total time spent by all reduce tasks (ms)=3378
		Total vcore-milliseconds taken by all map tasks=9189
		Total vcore-milliseconds taken by all reduce tasks=3378
		Total megabyte-milliseconds taken by all map tasks=37638144
		Total megabyte-milliseconds taken by all reduce tasks=13836288
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=621
		CPU time spent (ms)=7290
		Physical memory (bytes) snapshot=1472860160
		Virtual memory (bytes) snapshot=16083623936
		Total committed heap usage (bytes)=1688207360
		Peak Map Physical memory (bytes)=371249152
		Peak Map Virtual memory (bytes)=4016988160
		Peak Reduce Physical memory (bytes)=369090560
		Peak Reduce Virtual memory (bytes)=4035686400
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201026 20:31:44.631" starttime="20201026 20:31:44.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:31:44.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:31:44.631" starttime="20201026 20:31:44.631"></status>
</kw>
<status status="PASS" endtime="20201026 20:31:44.632" starttime="20201026 20:31:09.389"></status>
</kw>
<msg timestamp="20201026 20:31:44.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:31:44.632" starttime="20201026 20:31:09.388"></status>
</kw>
<msg timestamp="20201026 20:31:44.632" level="INFO">${output} = 2020-10-26 20:31:11 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-26 20:31:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201026 20:31:44.632" starttime="20201026 20:31:09.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201026 20:31:44.633" starttime="20201026 20:31:44.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201026 20:31:44.633" starttime="20201026 20:31:44.633"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201026 20:31:44.633" critical="yes" starttime="20201026 20:31:09.359"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201026 20:31:44.635" starttime="20201026 20:30:34.744"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:29:05.941" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:29:05.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:29:05.947" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201026 20:29:05.947" starttime="20201026 20:29:05.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:29:05.948" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201026 20:29:05.948" starttime="20201026 20:29:05.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:29:05.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:29:05.948" starttime="20201026 20:29:05.948"></status>
</kw>
<status status="PASS" endtime="20201026 20:29:05.949" starttime="20201026 20:29:05.937"></status>
</kw>
<msg timestamp="20201026 20:29:05.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:29:05.949" starttime="20201026 20:29:05.936"></status>
</kw>
<msg timestamp="20201026 20:29:05.949" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201026 20:29:05.949" starttime="20201026 20:29:05.936"></status>
</kw>
<msg timestamp="20201026 20:29:05.949" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201026 20:29:05.949" starttime="20201026 20:29:05.936"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:29:05.952" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:29:05.952" starttime="20201026 20:29:05.952"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:29:05.953" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:29:05.953" starttime="20201026 20:29:05.952"></status>
</kw>
<status status="PASS" endtime="20201026 20:29:05.953" starttime="20201026 20:29:05.951"></status>
</kw>
<msg timestamp="20201026 20:29:05.953" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:29:05.953" starttime="20201026 20:29:05.951"></status>
</kw>
<status status="PASS" endtime="20201026 20:29:05.953" starttime="20201026 20:29:05.950"></status>
</kw>
<msg timestamp="20201026 20:29:05.953" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201026 20:29:05.953" starttime="20201026 20:29:05.950"></status>
</kw>
<msg timestamp="20201026 20:29:05.954" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201026 20:29:05.954" starttime="20201026 20:29:05.949"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:29:05.956" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:29:44.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:29:44.613" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-26 20:29:07 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-26 20:29:07 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201026 20:29:44.613" starttime="20201026 20:29:05.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:29:44.614" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-26 20:29:07 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-26 20:29:07 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-26 20:29:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-26 20:29:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:29:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A564B12ACA01-&gt;600a3c1d-178c-4a6f-abbc-ea5e7478142d
2020-10-26 20:29:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-26 20:29:09 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-26 20:29:09 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-26 20:29:09 INFO  JobSubmitter:202 - number of splits:3
2020-10-26 20:29:09 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603744073720_0001
2020-10-26 20:29:09 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-26 20:29:10 INFO  Configuration:2795 - resource-types.xml not found
2020-10-26 20:29:10 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-26 20:29:10 INFO  YarnClientImpl:329 - Submitted application application_1603744073720_0001
2020-10-26 20:29:10 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603744073720_0001/
2020-10-26 20:29:10 INFO  Job:1619 - Running job: job_1603744073720_0001
2020-10-26 20:29:19 INFO  Job:1640 - Job job_1603744073720_0001 running in uber mode : false
2020-10-26 20:29:19 INFO  Job:1647 -  map 0% reduce 0%
2020-10-26 20:29:25 INFO  Job:1647 -  map 33% reduce 0%
2020-10-26 20:29:30 INFO  Job:1647 -  map 67% reduce 0%
2020-10-26 20:29:35 INFO  Job:1647 -  map 100% reduce 0%
2020-10-26 20:29:39 INFO  Job:1647 -  map 100% reduce 100%
2020-10-26 20:29:43 INFO  Job:1658 - Job job_1603744073720_0001 completed successfully
2020-10-26 20:29:44 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061649
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36740
		Total time spent by all reduces in occupied slots (ms)=14456
		Total time spent by all map tasks (ms)=9185
		Total time spent by all reduce tasks (ms)=3614
		Total vcore-milliseconds taken by all map tasks=9185
		Total vcore-milliseconds taken by all reduce tasks=3614
		Total megabyte-milliseconds taken by all map tasks=37621760
		Total megabyte-milliseconds taken by all reduce tasks=14802944
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=596
		CPU time spent (ms)=6550
		Physical memory (bytes) snapshot=1452482560
		Virtual memory (bytes) snapshot=16058802176
		Total committed heap usage (bytes)=1719664640
		Peak Map Physical memory (bytes)=369303552
		Peak Map Virtual memory (bytes)=4015529984
		Peak Reduce Physical memory (bytes)=379850752
		Peak Reduce Virtual memory (bytes)=4035293184
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.053 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201026 20:29:44.615" starttime="20201026 20:29:44.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:29:44.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:29:44.615" starttime="20201026 20:29:44.615"></status>
</kw>
<status status="PASS" endtime="20201026 20:29:44.615" starttime="20201026 20:29:05.954"></status>
</kw>
<msg timestamp="20201026 20:29:44.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:29:44.616" starttime="20201026 20:29:05.954"></status>
</kw>
<msg timestamp="20201026 20:29:44.616" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-26 20:29:07 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-26 20:29:07 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201026 20:29:44.616" starttime="20201026 20:29:05.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201026 20:29:44.617" starttime="20201026 20:29:44.616"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201026 20:29:44.617" critical="yes" starttime="20201026 20:29:05.935"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:29:44.621" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:29:44.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:29:44.627" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201026 20:29:44.627" starttime="20201026 20:29:44.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:29:44.628" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201026 20:29:44.628" starttime="20201026 20:29:44.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:29:44.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:29:44.629" starttime="20201026 20:29:44.628"></status>
</kw>
<status status="PASS" endtime="20201026 20:29:44.629" starttime="20201026 20:29:44.619"></status>
</kw>
<msg timestamp="20201026 20:29:44.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:29:44.629" starttime="20201026 20:29:44.619"></status>
</kw>
<msg timestamp="20201026 20:29:44.629" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201026 20:29:44.629" starttime="20201026 20:29:44.618"></status>
</kw>
<msg timestamp="20201026 20:29:44.630" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201026 20:29:44.630" starttime="20201026 20:29:44.618"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201026 20:29:44.630" level="INFO">${random} = 17</msg>
<status status="PASS" endtime="20201026 20:29:44.630" starttime="20201026 20:29:44.630"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:29:44.633" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:29:44.633" starttime="20201026 20:29:44.633"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:29:44.633" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:29:44.634" starttime="20201026 20:29:44.633"></status>
</kw>
<status status="PASS" endtime="20201026 20:29:44.634" starttime="20201026 20:29:44.632"></status>
</kw>
<msg timestamp="20201026 20:29:44.634" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:29:44.634" starttime="20201026 20:29:44.632"></status>
</kw>
<status status="PASS" endtime="20201026 20:29:44.634" starttime="20201026 20:29:44.631"></status>
</kw>
<msg timestamp="20201026 20:29:44.634" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201026 20:29:44.634" starttime="20201026 20:29:44.631"></status>
</kw>
<msg timestamp="20201026 20:29:44.634" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201026 20:29:44.634" starttime="20201026 20:29:44.630"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:29:44.637" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:29:44.637" starttime="20201026 20:29:44.636"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:29:44.637" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:29:44.637" starttime="20201026 20:29:44.637"></status>
</kw>
<status status="PASS" endtime="20201026 20:29:44.637" starttime="20201026 20:29:44.636"></status>
</kw>
<msg timestamp="20201026 20:29:44.638" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:29:44.638" starttime="20201026 20:29:44.636"></status>
</kw>
<status status="PASS" endtime="20201026 20:29:44.638" starttime="20201026 20:29:44.635"></status>
</kw>
<msg timestamp="20201026 20:29:44.638" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201026 20:29:44.638" starttime="20201026 20:29:44.635"></status>
</kw>
<msg timestamp="20201026 20:29:44.638" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201026 20:29:44.638" starttime="20201026 20:29:44.634"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201026 20:29:44.640" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201026 20:29:44.641" starttime="20201026 20:29:44.640"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201026 20:29:44.641" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201026 20:29:44.641" starttime="20201026 20:29:44.641"></status>
</kw>
<status status="PASS" endtime="20201026 20:29:44.641" starttime="20201026 20:29:44.640"></status>
</kw>
<msg timestamp="20201026 20:29:44.641" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201026 20:29:44.641" starttime="20201026 20:29:44.640"></status>
</kw>
<status status="PASS" endtime="20201026 20:29:44.641" starttime="20201026 20:29:44.639"></status>
</kw>
<msg timestamp="20201026 20:29:44.642" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-17.txt</msg>
<status status="PASS" endtime="20201026 20:29:44.642" starttime="20201026 20:29:44.639"></status>
</kw>
<msg timestamp="20201026 20:29:44.642" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-17.txt</msg>
<status status="PASS" endtime="20201026 20:29:44.642" starttime="20201026 20:29:44.638"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201026 20:29:44.645" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-17.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201026 20:30:18.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20201026 20:30:18.545" level="INFO">${output} = 2020-10-26 20:29:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-26 20:29:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201026 20:30:18.545" starttime="20201026 20:29:44.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201026 20:30:18.546" level="INFO">2020-10-26 20:29:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-26 20:29:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-26 20:29:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-26 20:29:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-26 20:29:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-26 20:29:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-26 20:29:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0B439FA0E63A-&gt;600a3c1d-178c-4a6f-abbc-ea5e7478142d
2020-10-26 20:29:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-26 20:29:47 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-26 20:29:48 INFO  JobSubmitter:202 - number of splits:3
2020-10-26 20:29:48 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603744073720_0002
2020-10-26 20:29:48 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-26 20:29:48 INFO  Configuration:2795 - resource-types.xml not found
2020-10-26 20:29:48 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-26 20:29:48 INFO  YarnClientImpl:329 - Submitted application application_1603744073720_0002
2020-10-26 20:29:48 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603744073720_0002/
2020-10-26 20:29:48 INFO  Job:1619 - Running job: job_1603744073720_0002
2020-10-26 20:29:56 INFO  Job:1640 - Job job_1603744073720_0002 running in uber mode : false
2020-10-26 20:29:56 INFO  Job:1647 -  map 0% reduce 0%
2020-10-26 20:30:02 INFO  Job:1647 -  map 33% reduce 0%
2020-10-26 20:30:08 INFO  Job:1647 -  map 67% reduce 0%
2020-10-26 20:30:13 INFO  Job:1647 -  map 100% reduce 0%
2020-10-26 20:30:17 INFO  Job:1647 -  map 100% reduce 100%
2020-10-26 20:30:18 INFO  Job:1658 - Job job_1603744073720_0002 completed successfully
2020-10-26 20:30:18 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124185
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37460
		Total time spent by all reduces in occupied slots (ms)=13824
		Total time spent by all map tasks (ms)=9365
		Total time spent by all reduce tasks (ms)=3456
		Total vcore-milliseconds taken by all map tasks=9365
		Total vcore-milliseconds taken by all reduce tasks=3456
		Total megabyte-milliseconds taken by all map tasks=38359040
		Total megabyte-milliseconds taken by all reduce tasks=14155776
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=591
		CPU time spent (ms)=6580
		Physical memory (bytes) snapshot=1445883904
		Virtual memory (bytes) snapshot=16058507264
		Total committed heap usage (bytes)=1685061632
		Peak Map Physical memory (bytes)=367927296
		Peak Map Virtual memory (bytes)=4016746496
		Peak Reduce Physical memory (bytes)=351203328
		Peak Reduce Virtual memory (bytes)=4019929088
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201026 20:30:18.546" starttime="20201026 20:30:18.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201026 20:30:18.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201026 20:30:18.547" starttime="20201026 20:30:18.546"></status>
</kw>
<status status="PASS" endtime="20201026 20:30:18.547" starttime="20201026 20:29:44.643"></status>
</kw>
<msg timestamp="20201026 20:30:18.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201026 20:30:18.547" starttime="20201026 20:29:44.642"></status>
</kw>
<msg timestamp="20201026 20:30:18.548" level="INFO">${output} = 2020-10-26 20:29:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-26 20:29:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201026 20:30:18.548" starttime="20201026 20:29:44.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201026 20:30:18.548" starttime="20201026 20:30:18.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201026 20:30:18.549" starttime="20201026 20:30:18.549"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201026 20:30:18.549" critical="yes" starttime="20201026 20:29:44.618"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201026 20:30:18.550" starttime="20201026 20:29:05.890"></status>
</suite>
<status status="PASS" elapsedtime="195192" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="546669" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
