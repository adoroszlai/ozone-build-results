<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201005 12:39:33.199" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:35:23.223" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:35:34.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:35:34.642" level="INFO">${output} = 2020-10-05 12:35:25,201 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-05 12:35:25,404 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201005 12:35:34.642" starttime="20201005 12:35:23.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:35:34.643" level="INFO">2020-10-05 12:35:25,201 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-05 12:35:25,404 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-05 12:35:25,404 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-05 12:35:28,694 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-05 12:35:28,695 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-10-05 12:35:28,695 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-10-05 12:35:28,695 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-10-05 12:35:28,695 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-05 12:35:28,695 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-05 12:35:28,695 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-10-05 12:35:28,700 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-05 12:35:28,709 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-05 12:35:28,751 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-29800, with testuser/scm@EXAMPLE.COM as owner.
2020-10-05 12:35:29,341 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-29800/bucket-0-92830, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-05 12:35:29,713 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-05 12:35:30,713 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-05 12:35:31,714 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-05 12:35:32,337 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-05 12:35:32,715 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,551
Average Time spent in bucket creation: 00:00:00,236
Average Time spent in key creation: 00:00:01,377
Average Time spent in key write: 00:00:01,738
Total bytes written: 10240
Total Execution time: 00:00:08,730
***************************************************</msg>
<status status="PASS" endtime="20201005 12:35:34.643" starttime="20201005 12:35:34.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:35:34.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:35:34.644" starttime="20201005 12:35:34.643"></status>
</kw>
<status status="PASS" endtime="20201005 12:35:34.644" starttime="20201005 12:35:23.218"></status>
</kw>
<msg timestamp="20201005 12:35:34.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:35:34.644" starttime="20201005 12:35:23.218"></status>
</kw>
<msg timestamp="20201005 12:35:34.645" level="INFO">${result} = 2020-10-05 12:35:25,201 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-05 12:35:25,404 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201005 12:35:34.645" starttime="20201005 12:35:23.217"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201005 12:35:34.646" starttime="20201005 12:35:34.645"></status>
</kw>
<status status="PASS" endtime="20201005 12:35:34.646" starttime="20201005 12:35:34.645"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201005 12:35:34.646" critical="yes" starttime="20201005 12:35:23.216"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:35:34.651" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:35:43.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:35:43.609" level="INFO">${output} = 2020-10-05 12:35:36,551 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-05 12:35:36,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201005 12:35:43.609" starttime="20201005 12:35:34.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:35:43.612" level="INFO">2020-10-05 12:35:36,551 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-05 12:35:36,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-05 12:35:36,716 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-05 12:35:36,864 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ejdqfytlsy
2020-10-05 12:35:36,887 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-05 12:35:37,888 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-05 12:35:38,551 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-10-05 12:35:38,615 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-05 12:35:38,889 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-05 12:35:39,280 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-05 12:35:39,637 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 12:35:39,638 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-4E697D2FDF1B-&gt;6766703c-e433-4c53-a6dc-e88cd6b51ec7
2020-10-05 12:35:39,640 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-05 12:35:39,889 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-05 12:35:40,890 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-05 12:35:41,890 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-05 12:35:42,891 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-05 12:35:43,073 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3400.469112, max=3400.469112, mean=3400.469112, stddev=0.0, median=3400.469112, p75=3400.469112, p95=3400.469112, p98=3400.469112, p99=3400.469112, p999=3400.469112, mean_rate=0.22733347325678302, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-05 12:35:43,076 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-10-05 12:35:43,077 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-05 12:35:43,077 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201005 12:35:43.612" starttime="20201005 12:35:43.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:35:43.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:35:43.613" starttime="20201005 12:35:43.613"></status>
</kw>
<status status="PASS" endtime="20201005 12:35:43.613" starttime="20201005 12:35:34.649"></status>
</kw>
<msg timestamp="20201005 12:35:43.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:35:43.614" starttime="20201005 12:35:34.648"></status>
</kw>
<msg timestamp="20201005 12:35:43.614" level="INFO">${result} = 2020-10-05 12:35:36,551 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-05 12:35:36,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201005 12:35:43.614" starttime="20201005 12:35:34.647"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201005 12:35:43.615" starttime="20201005 12:35:43.614"></status>
</kw>
<status status="PASS" endtime="20201005 12:35:43.615" starttime="20201005 12:35:43.614"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201005 12:35:43.615" critical="yes" starttime="20201005 12:35:34.647"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:35:43.622" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:35:49.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:35:49.958" level="INFO">${output} = 2020-10-05 12:35:46,703 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-05 12:35:46,994 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201005 12:35:49.958" starttime="20201005 12:35:43.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:35:49.959" level="INFO">2020-10-05 12:35:46,703 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-05 12:35:46,994 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-05 12:35:46,995 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-05 12:35:47,150 [main] INFO freon.BaseFreonGenerator: Executing test with prefix szh79uxtl1
2020-10-05 12:35:47,173 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-05 12:35:48,175 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-05 12:35:49,181 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-05 12:35:49,860 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=347.26079, max=347.26079, mean=347.26079, stddev=0.0, median=347.26079, p75=347.26079, p95=347.26079, p98=347.26079, p99=347.26079, p999=347.26079, mean_rate=0.8697714122091894, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-05 12:35:49,861 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-05 12:35:49,861 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-05 12:35:49,861 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201005 12:35:49.960" starttime="20201005 12:35:49.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:35:49.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:35:49.960" starttime="20201005 12:35:49.960"></status>
</kw>
<status status="PASS" endtime="20201005 12:35:49.960" starttime="20201005 12:35:43.617"></status>
</kw>
<msg timestamp="20201005 12:35:49.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:35:49.961" starttime="20201005 12:35:43.617"></status>
</kw>
<msg timestamp="20201005 12:35:49.961" level="INFO">${result} = 2020-10-05 12:35:46,703 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-05 12:35:46,994 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201005 12:35:49.961" starttime="20201005 12:35:43.616"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201005 12:35:49.962" starttime="20201005 12:35:49.962"></status>
</kw>
<status status="PASS" endtime="20201005 12:35:49.962" starttime="20201005 12:35:49.961"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201005 12:35:49.963" critical="yes" starttime="20201005 12:35:43.616"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:35:49.970" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:35:54.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:35:54.738" level="INFO">${output} = 2020-10-05 12:35:51,675 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-05 12:35:51,878 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201005 12:35:54.738" starttime="20201005 12:35:49.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:35:54.739" level="INFO">2020-10-05 12:35:51,675 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-05 12:35:51,878 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-05 12:35:51,878 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-05 12:35:52,022 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zfd6gsrmk8
2020-10-05 12:35:52,035 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-05 12:35:53,040 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-05 12:35:54,041 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-05 12:35:54,693 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=90.273923, max=90.273923, mean=90.273923, stddev=0.0, median=90.273923, p75=90.273923, p95=90.273923, p98=90.273923, p99=90.273923, p999=90.273923, mean_rate=0.8890238521925727, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-05 12:35:54,694 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-05 12:35:54,706 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-05 12:35:54,707 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201005 12:35:54.739" starttime="20201005 12:35:54.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:35:54.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:35:54.740" starttime="20201005 12:35:54.739"></status>
</kw>
<status status="PASS" endtime="20201005 12:35:54.740" starttime="20201005 12:35:49.966"></status>
</kw>
<msg timestamp="20201005 12:35:54.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:35:54.740" starttime="20201005 12:35:49.966"></status>
</kw>
<msg timestamp="20201005 12:35:54.741" level="INFO">${result} = 2020-10-05 12:35:51,675 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-05 12:35:51,878 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201005 12:35:54.741" starttime="20201005 12:35:49.965"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201005 12:35:54.742" starttime="20201005 12:35:54.741"></status>
</kw>
<status status="PASS" endtime="20201005 12:35:54.742" starttime="20201005 12:35:54.741"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201005 12:35:54.742" critical="yes" starttime="20201005 12:35:49.964"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201005 12:35:54.744" starttime="20201005 12:35:23.188"></status>
</suite>
<status status="PASS" endtime="20201005 12:35:54.747" starttime="20201005 12:35:23.162"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:35:17.025" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:35:17.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:35:17.027" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:35:17.027" starttime="20201005 12:35:17.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:35:17.028" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:35:17.028" starttime="20201005 12:35:17.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:35:17.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:35:17.029" starttime="20201005 12:35:17.029"></status>
</kw>
<status status="PASS" endtime="20201005 12:35:17.029" starttime="20201005 12:35:17.019"></status>
</kw>
<msg timestamp="20201005 12:35:17.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:35:17.030" starttime="20201005 12:35:17.019"></status>
</kw>
<msg timestamp="20201005 12:35:17.030" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:35:17.030" starttime="20201005 12:35:17.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:35:17.030" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:35:17.030" starttime="20201005 12:35:17.030"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:35:17.036" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:35:17.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:35:17.047" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:35:17.047" starttime="20201005 12:35:17.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:35:17.049" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:35:17.049" starttime="20201005 12:35:17.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:35:17.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:35:17.050" starttime="20201005 12:35:17.049"></status>
</kw>
<status status="PASS" endtime="20201005 12:35:17.050" starttime="20201005 12:35:17.033"></status>
</kw>
<msg timestamp="20201005 12:35:17.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:35:17.050" starttime="20201005 12:35:17.032"></status>
</kw>
<status status="PASS" endtime="20201005 12:35:17.050" starttime="20201005 12:35:17.031"></status>
</kw>
<status status="PASS" endtime="20201005 12:35:17.050" starttime="20201005 12:35:17.031"></status>
</kw>
<status status="PASS" endtime="20201005 12:35:17.050" starttime="20201005 12:35:17.018"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:35:17.051" critical="yes" starttime="20201005 12:35:17.017"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201005 12:35:17.052" starttime="20201005 12:35:16.965"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201005 12:36:00.537" level="INFO">${random} = 66867</msg>
<status status="PASS" endtime="20201005 12:36:00.537" starttime="20201005 12:36:00.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201005 12:36:00.538" level="INFO">${source} = 66867-source</msg>
<status status="PASS" endtime="20201005 12:36:00.538" starttime="20201005 12:36:00.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201005 12:36:00.540" level="INFO">${target} = 66867-target</msg>
<status status="PASS" endtime="20201005 12:36:00.540" starttime="20201005 12:36:00.539"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:00.545" level="INFO">Running command 'ozone sh volume create 66867-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:04.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:36:04.048" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:36:04.049" starttime="20201005 12:36:00.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:04.050" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:36:04.050" starttime="20201005 12:36:04.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:36:04.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:36:04.050" starttime="20201005 12:36:04.050"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:04.051" starttime="20201005 12:36:00.541"></status>
</kw>
<msg timestamp="20201005 12:36:04.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:36:04.051" starttime="20201005 12:36:00.540"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:04.051" starttime="20201005 12:36:00.540"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:04.061" level="INFO">Running command 'ozone sh volume create 66867-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:07.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:36:07.663" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:36:07.663" starttime="20201005 12:36:04.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:07.664" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:36:07.665" starttime="20201005 12:36:07.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:36:07.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:36:07.666" starttime="20201005 12:36:07.665"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:07.666" starttime="20201005 12:36:04.052"></status>
</kw>
<msg timestamp="20201005 12:36:07.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:36:07.666" starttime="20201005 12:36:04.052"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:07.666" starttime="20201005 12:36:04.051"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:07.673" level="INFO">Running command 'ozone sh bucket create 66867-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:11.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:36:11.406" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:36:11.406" starttime="20201005 12:36:07.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:11.407" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:36:11.407" starttime="20201005 12:36:11.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:36:11.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:36:11.408" starttime="20201005 12:36:11.407"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:11.408" starttime="20201005 12:36:07.668"></status>
</kw>
<msg timestamp="20201005 12:36:11.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:36:11.408" starttime="20201005 12:36:07.668"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:11.409" starttime="20201005 12:36:07.667"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:11.414" level="INFO">Running command 'ozone sh key put 66867-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:17.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:36:17.267" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:36:17.267" starttime="20201005 12:36:11.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:17.268" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:36:17.268" starttime="20201005 12:36:17.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:36:17.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:36:17.269" starttime="20201005 12:36:17.268"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:17.269" starttime="20201005 12:36:11.410"></status>
</kw>
<msg timestamp="20201005 12:36:17.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:36:17.269" starttime="20201005 12:36:11.409"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:17.269" starttime="20201005 12:36:11.409"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:17.274" level="INFO">Running command 'ozone sh bucket create 66867-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:21.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:36:21.014" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:36:21.014" starttime="20201005 12:36:17.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:21.015" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:36:21.017" starttime="20201005 12:36:21.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:36:21.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:36:21.017" starttime="20201005 12:36:21.017"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:21.018" starttime="20201005 12:36:17.271"></status>
</kw>
<msg timestamp="20201005 12:36:21.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:36:21.018" starttime="20201005 12:36:17.270"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:21.018" starttime="20201005 12:36:17.270"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:21.022" level="INFO">Running command 'ozone sh bucket link 66867-source/readable-bucket 66867-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:24.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:36:24.743" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:36:24.743" starttime="20201005 12:36:21.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:24.745" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:36:24.746" starttime="20201005 12:36:24.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:36:24.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:36:24.746" starttime="20201005 12:36:24.746"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:24.747" starttime="20201005 12:36:21.019"></status>
</kw>
<msg timestamp="20201005 12:36:24.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:36:24.747" starttime="20201005 12:36:21.019"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:24.747" starttime="20201005 12:36:21.018"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:24.753" level="INFO">Running command 'ozone sh bucket link 66867-source/readable-bucket 66867-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:28.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:36:28.485" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:36:28.485" starttime="20201005 12:36:24.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:28.486" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:36:28.486" starttime="20201005 12:36:28.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:36:28.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:36:28.487" starttime="20201005 12:36:28.487"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:28.488" starttime="20201005 12:36:24.749"></status>
</kw>
<msg timestamp="20201005 12:36:28.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:36:28.488" starttime="20201005 12:36:24.748"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:28.489" starttime="20201005 12:36:24.747"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:28.494" level="INFO">Running command 'ozone sh bucket link 66867-source/unreadable-bucket 66867-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:32.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:36:32.234" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:36:32.234" starttime="20201005 12:36:28.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:32.235" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:36:32.235" starttime="20201005 12:36:32.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:36:32.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:36:32.236" starttime="20201005 12:36:32.235"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:32.236" starttime="20201005 12:36:28.490"></status>
</kw>
<msg timestamp="20201005 12:36:32.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:36:32.237" starttime="20201005 12:36:28.490"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:32.237" starttime="20201005 12:36:28.489"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:32.242" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 66867-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:35.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:36:35.935" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:36:35.935" starttime="20201005 12:36:32.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:35.936" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201005 12:36:35.936" starttime="20201005 12:36:35.936"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:36:35.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:36:35.937" starttime="20201005 12:36:35.937"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:35.937" starttime="20201005 12:36:32.238"></status>
</kw>
<msg timestamp="20201005 12:36:35.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:36:35.937" starttime="20201005 12:36:32.237"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:35.938" starttime="20201005 12:36:32.237"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:35.945" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 66867-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:39.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:36:39.448" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:36:39.448" starttime="20201005 12:36:35.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:39.449" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201005 12:36:39.449" starttime="20201005 12:36:39.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:36:39.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:36:39.450" starttime="20201005 12:36:39.449"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:39.450" starttime="20201005 12:36:35.939"></status>
</kw>
<msg timestamp="20201005 12:36:39.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:36:39.450" starttime="20201005 12:36:35.938"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:39.450" starttime="20201005 12:36:35.938"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:39.454" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 66867-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:43.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:36:43.217" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:36:43.217" starttime="20201005 12:36:39.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:43.218" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201005 12:36:43.218" starttime="20201005 12:36:43.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:36:43.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:36:43.219" starttime="20201005 12:36:43.218"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:43.219" starttime="20201005 12:36:39.451"></status>
</kw>
<msg timestamp="20201005 12:36:43.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:36:43.219" starttime="20201005 12:36:39.451"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:43.219" starttime="20201005 12:36:39.451"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:43.223" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 66867-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:46.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:36:46.958" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:36:46.958" starttime="20201005 12:36:43.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:46.959" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201005 12:36:46.959" starttime="20201005 12:36:46.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:36:46.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:36:46.960" starttime="20201005 12:36:46.959"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:46.960" starttime="20201005 12:36:43.220"></status>
</kw>
<msg timestamp="20201005 12:36:46.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:36:46.961" starttime="20201005 12:36:43.220"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:46.961" starttime="20201005 12:36:43.219"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:46.967" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 66867-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:50.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:36:50.637" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:36:50.637" starttime="20201005 12:36:46.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:50.638" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201005 12:36:50.638" starttime="20201005 12:36:50.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:36:50.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:36:50.639" starttime="20201005 12:36:50.638"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:50.639" starttime="20201005 12:36:46.962"></status>
</kw>
<msg timestamp="20201005 12:36:50.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:36:50.639" starttime="20201005 12:36:46.961"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:50.640" starttime="20201005 12:36:46.961"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:50.640" starttime="20201005 12:36:07.667"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:50.640" starttime="20201005 12:36:07.666"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:50.640" starttime="20201005 12:36:00.536"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:50.646" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:50.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:36:50.649" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:36:50.649" starttime="20201005 12:36:50.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:50.650" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:36:50.650" starttime="20201005 12:36:50.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:36:50.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:36:50.651" starttime="20201005 12:36:50.650"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:50.651" starttime="20201005 12:36:50.644"></status>
</kw>
<msg timestamp="20201005 12:36:50.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:36:50.651" starttime="20201005 12:36:50.643"></status>
</kw>
<msg timestamp="20201005 12:36:50.652" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:36:50.652" starttime="20201005 12:36:50.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:36:50.653" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:36:50.653" starttime="20201005 12:36:50.652"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:50.658" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:50.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:36:50.680" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:36:50.680" starttime="20201005 12:36:50.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:50.681" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:36:50.681" starttime="20201005 12:36:50.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:36:50.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:36:50.682" starttime="20201005 12:36:50.681"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:50.682" starttime="20201005 12:36:50.654"></status>
</kw>
<msg timestamp="20201005 12:36:50.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:36:50.682" starttime="20201005 12:36:50.654"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:50.682" starttime="20201005 12:36:50.653"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:50.683" starttime="20201005 12:36:50.653"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:50.683" starttime="20201005 12:36:50.642"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:50.683" starttime="20201005 12:36:50.642"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:50.688" level="INFO">Running command 'ozone sh bucket link 66867-source/no-such-bucket 66867-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:54.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:36:54.282" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:36:54.282" starttime="20201005 12:36:50.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:54.283" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:36:54.284" starttime="20201005 12:36:54.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:36:54.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:36:54.284" starttime="20201005 12:36:54.284"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:54.284" starttime="20201005 12:36:50.684"></status>
</kw>
<msg timestamp="20201005 12:36:54.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:36:54.285" starttime="20201005 12:36:50.684"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:54.285" starttime="20201005 12:36:50.683"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:54.289" level="INFO">Running command 'ozone sh key list 66867-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:57.879" level="INFO">${rc} = 255</msg>
<msg timestamp="20201005 12:36:57.879" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:36:57.879" starttime="20201005 12:36:54.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:57.880" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201005 12:36:57.880" starttime="20201005 12:36:57.879"></status>
</kw>
<msg timestamp="20201005 12:36:57.881" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:36:57.881" starttime="20201005 12:36:54.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201005 12:36:57.881" starttime="20201005 12:36:57.881"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:36:57.881" critical="yes" starttime="20201005 12:36:50.640"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:57.891" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:57.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:36:57.892" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:36:57.892" starttime="20201005 12:36:57.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:57.893" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:36:57.893" starttime="20201005 12:36:57.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:36:57.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:36:57.894" starttime="20201005 12:36:57.894"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:57.894" starttime="20201005 12:36:57.886"></status>
</kw>
<msg timestamp="20201005 12:36:57.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:36:57.894" starttime="20201005 12:36:57.885"></status>
</kw>
<msg timestamp="20201005 12:36:57.895" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:36:57.895" starttime="20201005 12:36:57.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:36:57.895" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:36:57.896" starttime="20201005 12:36:57.895"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:57.901" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:36:57.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:36:57.917" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:36:57.917" starttime="20201005 12:36:57.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:36:57.918" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:36:57.918" starttime="20201005 12:36:57.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:36:57.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:36:57.919" starttime="20201005 12:36:57.919"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:57.920" starttime="20201005 12:36:57.897"></status>
</kw>
<msg timestamp="20201005 12:36:57.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:36:57.920" starttime="20201005 12:36:57.897"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:57.920" starttime="20201005 12:36:57.896"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:57.920" starttime="20201005 12:36:57.896"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:57.920" starttime="20201005 12:36:57.884"></status>
</kw>
<status status="PASS" endtime="20201005 12:36:57.920" starttime="20201005 12:36:57.883"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:36:57.926" level="INFO">Running command 'ozone sh bucket link 66867-source/bucket1 66867-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:01.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:01.745" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:37:01.745" starttime="20201005 12:36:57.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:01.746" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:37:01.746" starttime="20201005 12:37:01.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:01.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:01.747" starttime="20201005 12:37:01.746"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:01.747" starttime="20201005 12:36:57.921"></status>
</kw>
<msg timestamp="20201005 12:37:01.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:01.747" starttime="20201005 12:36:57.921"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:01.747" starttime="20201005 12:36:57.920"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:01.751" level="INFO">Running command 'ozone sh bucket create 66867-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:05.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:05.268" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:37:05.268" starttime="20201005 12:37:01.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:05.269" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:37:05.269" starttime="20201005 12:37:05.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:05.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:05.270" starttime="20201005 12:37:05.270"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:05.270" starttime="20201005 12:37:01.749"></status>
</kw>
<msg timestamp="20201005 12:37:05.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:05.271" starttime="20201005 12:37:01.748"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:05.271" starttime="20201005 12:37:01.748"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:05.275" level="INFO">Running command 'ozone sh key put 66867-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:11.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:11.537" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:37:11.537" starttime="20201005 12:37:05.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:11.538" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:37:11.538" starttime="20201005 12:37:11.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:11.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:11.539" starttime="20201005 12:37:11.539"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:11.539" starttime="20201005 12:37:05.272"></status>
</kw>
<msg timestamp="20201005 12:37:11.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:11.540" starttime="20201005 12:37:05.272"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:11.540" starttime="20201005 12:37:05.271"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201005 12:37:11.542" level="INFO">${postfix} = 64504</msg>
<status status="PASS" endtime="20201005 12:37:11.542" starttime="20201005 12:37:11.541"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201005 12:37:11.542" level="INFO">${tmpfile} = /tmp/tempkey-64504</msg>
<status status="PASS" endtime="20201005 12:37:11.542" starttime="20201005 12:37:11.542"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:11.546" level="INFO">Running command 'ozone sh key get -f 66867-target/link1/key1 /tmp/tempkey-64504 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:17.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:17.650" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:37:17.650" starttime="20201005 12:37:11.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:17.651" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:37:17.651" starttime="20201005 12:37:17.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:17.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:17.652" starttime="20201005 12:37:17.651"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:17.652" starttime="20201005 12:37:11.543"></status>
</kw>
<msg timestamp="20201005 12:37:17.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:17.652" starttime="20201005 12:37:11.543"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:17.653" starttime="20201005 12:37:11.543"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201005 12:37:17.656" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-64504 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:17.659" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201005 12:37:17.659" starttime="20201005 12:37:17.653"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:17.664" level="INFO">Running command 'rm -f /tmp/tempkey-64504 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:17.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:17.666" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:37:17.666" starttime="20201005 12:37:17.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:17.667" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:37:17.667" starttime="20201005 12:37:17.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:17.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:17.668" starttime="20201005 12:37:17.668"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:17.668" starttime="20201005 12:37:17.660"></status>
</kw>
<msg timestamp="20201005 12:37:17.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:17.669" starttime="20201005 12:37:17.660"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:17.669" starttime="20201005 12:37:17.659"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:37:17.669" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201005 12:37:17.669" starttime="20201005 12:37:17.669"></status>
</kw>
<msg timestamp="20201005 12:37:17.670" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201005 12:37:17.670" starttime="20201005 12:37:11.541"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:37:17.670" starttime="20201005 12:37:17.670"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:17.670" starttime="20201005 12:37:11.540"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:37:17.670" critical="yes" starttime="20201005 12:36:57.882"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:17.677" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:17.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:17.679" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:37:17.679" starttime="20201005 12:37:17.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:17.680" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:37:17.680" starttime="20201005 12:37:17.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:17.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:17.681" starttime="20201005 12:37:17.680"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:17.681" starttime="20201005 12:37:17.674"></status>
</kw>
<msg timestamp="20201005 12:37:17.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:17.681" starttime="20201005 12:37:17.673"></status>
</kw>
<msg timestamp="20201005 12:37:17.681" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:37:17.681" starttime="20201005 12:37:17.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:37:17.682" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:37:17.682" starttime="20201005 12:37:17.682"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:17.687" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:17.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:17.700" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:37:17.700" starttime="20201005 12:37:17.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:17.704" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:37:17.704" starttime="20201005 12:37:17.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:17.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:17.705" starttime="20201005 12:37:17.704"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:17.705" starttime="20201005 12:37:17.684"></status>
</kw>
<msg timestamp="20201005 12:37:17.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:17.706" starttime="20201005 12:37:17.683"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:17.706" starttime="20201005 12:37:17.683"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:17.706" starttime="20201005 12:37:17.682"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:17.706" starttime="20201005 12:37:17.672"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:17.706" starttime="20201005 12:37:17.672"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:17.713" level="INFO">Running command 'ozone sh key put 66867-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:23.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:23.977" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:37:23.977" starttime="20201005 12:37:17.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:23.978" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:37:23.978" starttime="20201005 12:37:23.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:23.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:23.979" starttime="20201005 12:37:23.978"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:23.980" starttime="20201005 12:37:17.708"></status>
</kw>
<msg timestamp="20201005 12:37:23.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:23.980" starttime="20201005 12:37:17.707"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:23.980" starttime="20201005 12:37:17.706"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201005 12:37:23.982" level="INFO">${postfix} = 39804</msg>
<status status="PASS" endtime="20201005 12:37:23.982" starttime="20201005 12:37:23.981"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201005 12:37:23.982" level="INFO">${tmpfile} = /tmp/tempkey-39804</msg>
<status status="PASS" endtime="20201005 12:37:23.982" starttime="20201005 12:37:23.982"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:23.987" level="INFO">Running command 'ozone sh key get -f 66867-source/bucket1/key2 /tmp/tempkey-39804 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:30.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:30.278" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:37:30.278" starttime="20201005 12:37:23.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:30.279" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:37:30.279" starttime="20201005 12:37:30.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:30.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:30.280" starttime="20201005 12:37:30.279"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:30.280" starttime="20201005 12:37:23.983"></status>
</kw>
<msg timestamp="20201005 12:37:30.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:30.280" starttime="20201005 12:37:23.983"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:30.281" starttime="20201005 12:37:23.982"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201005 12:37:30.283" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-39804 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:30.286" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201005 12:37:30.286" starttime="20201005 12:37:30.281"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:30.292" level="INFO">Running command 'rm -f /tmp/tempkey-39804 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:30.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:30.293" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:37:30.293" starttime="20201005 12:37:30.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:30.294" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:37:30.294" starttime="20201005 12:37:30.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:30.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:30.295" starttime="20201005 12:37:30.295"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:30.295" starttime="20201005 12:37:30.288"></status>
</kw>
<msg timestamp="20201005 12:37:30.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:30.295" starttime="20201005 12:37:30.287"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:30.296" starttime="20201005 12:37:30.286"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:37:30.296" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201005 12:37:30.296" starttime="20201005 12:37:30.296"></status>
</kw>
<msg timestamp="20201005 12:37:30.297" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201005 12:37:30.297" starttime="20201005 12:37:23.981"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:37:30.297" starttime="20201005 12:37:30.297"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:30.297" starttime="20201005 12:37:23.980"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:37:30.298" critical="yes" starttime="20201005 12:37:17.671"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:30.305" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:30.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:30.307" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:37:30.307" starttime="20201005 12:37:30.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:30.308" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:37:30.308" starttime="20201005 12:37:30.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:30.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:30.309" starttime="20201005 12:37:30.308"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:30.309" starttime="20201005 12:37:30.301"></status>
</kw>
<msg timestamp="20201005 12:37:30.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:30.309" starttime="20201005 12:37:30.301"></status>
</kw>
<msg timestamp="20201005 12:37:30.309" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:37:30.309" starttime="20201005 12:37:30.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:37:30.310" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:37:30.310" starttime="20201005 12:37:30.309"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:30.315" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:30.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:30.326" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:37:30.326" starttime="20201005 12:37:30.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:30.327" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:37:30.327" starttime="20201005 12:37:30.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:30.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:30.328" starttime="20201005 12:37:30.327"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:30.328" starttime="20201005 12:37:30.311"></status>
</kw>
<msg timestamp="20201005 12:37:30.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:30.328" starttime="20201005 12:37:30.311"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:30.329" starttime="20201005 12:37:30.311"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:30.329" starttime="20201005 12:37:30.310"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:30.329" starttime="20201005 12:37:30.300"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:30.329" starttime="20201005 12:37:30.299"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:30.334" level="INFO">Running command 'ozone sh key list 66867-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:34.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:34.664" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201005 12:37:34.664" starttime="20201005 12:37:30.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:34.665" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201005 12:37:34.665" starttime="20201005 12:37:34.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:34.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:34.666" starttime="20201005 12:37:34.665"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:34.666" starttime="20201005 12:37:30.330"></status>
</kw>
<msg timestamp="20201005 12:37:34.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:34.667" starttime="20201005 12:37:30.330"></status>
</kw>
<msg timestamp="20201005 12:37:34.667" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201005 12:37:34.667" starttime="20201005 12:37:30.329"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:34.673" level="INFO">Running command 'ozone sh key list 66867-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:38.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:38.619" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201005 12:37:38.619" starttime="20201005 12:37:34.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:38.620" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201005 12:37:38.621" starttime="20201005 12:37:38.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:38.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:38.621" starttime="20201005 12:37:38.621"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:38.622" starttime="20201005 12:37:34.668"></status>
</kw>
<msg timestamp="20201005 12:37:38.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:38.622" starttime="20201005 12:37:34.668"></status>
</kw>
<msg timestamp="20201005 12:37:38.622" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201005 12:37:38.622" starttime="20201005 12:37:34.667"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:37:38.623" starttime="20201005 12:37:38.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201005 12:37:38.623" starttime="20201005 12:37:38.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201005 12:37:38.624" starttime="20201005 12:37:38.623"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:37:38.624" critical="yes" starttime="20201005 12:37:30.298"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:38.630" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:38.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:38.633" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:37:38.633" starttime="20201005 12:37:38.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:38.634" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:37:38.634" starttime="20201005 12:37:38.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:38.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:38.634" starttime="20201005 12:37:38.634"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:38.635" starttime="20201005 12:37:38.627"></status>
</kw>
<msg timestamp="20201005 12:37:38.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:38.635" starttime="20201005 12:37:38.627"></status>
</kw>
<msg timestamp="20201005 12:37:38.635" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:37:38.635" starttime="20201005 12:37:38.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:37:38.636" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:37:38.636" starttime="20201005 12:37:38.635"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:38.642" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:38.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:38.653" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:37:38.653" starttime="20201005 12:37:38.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:38.654" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:37:38.654" starttime="20201005 12:37:38.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:38.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:38.655" starttime="20201005 12:37:38.654"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:38.655" starttime="20201005 12:37:38.638"></status>
</kw>
<msg timestamp="20201005 12:37:38.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:38.655" starttime="20201005 12:37:38.638"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:38.656" starttime="20201005 12:37:38.637"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:38.656" starttime="20201005 12:37:38.637"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:38.656" starttime="20201005 12:37:38.626"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:38.656" starttime="20201005 12:37:38.626"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:38.661" level="INFO">Running command 'ozone sh key delete 66867-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:42.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:42.424" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:37:42.424" starttime="20201005 12:37:38.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:42.425" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:37:42.425" starttime="20201005 12:37:42.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:42.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:42.426" starttime="20201005 12:37:42.425"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:42.426" starttime="20201005 12:37:38.657"></status>
</kw>
<msg timestamp="20201005 12:37:42.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:42.426" starttime="20201005 12:37:38.657"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:42.427" starttime="20201005 12:37:38.656"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:42.437" level="INFO">Running command 'ozone sh key list 66867-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:46.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:46.823" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201005 12:37:46.823" starttime="20201005 12:37:42.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:46.825" level="INFO">key1</msg>
<status status="PASS" endtime="20201005 12:37:46.826" starttime="20201005 12:37:46.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:46.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:46.827" starttime="20201005 12:37:46.827"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:46.828" starttime="20201005 12:37:42.428"></status>
</kw>
<msg timestamp="20201005 12:37:46.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:46.828" starttime="20201005 12:37:42.428"></status>
</kw>
<msg timestamp="20201005 12:37:46.828" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201005 12:37:46.828" starttime="20201005 12:37:42.427"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201005 12:37:46.829" starttime="20201005 12:37:46.828"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:37:46.829" critical="yes" starttime="20201005 12:37:38.625"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:46.836" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:46.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:46.837" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:37:46.837" starttime="20201005 12:37:46.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:46.838" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:37:46.838" starttime="20201005 12:37:46.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:46.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:46.839" starttime="20201005 12:37:46.839"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:46.840" starttime="20201005 12:37:46.832"></status>
</kw>
<msg timestamp="20201005 12:37:46.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:46.840" starttime="20201005 12:37:46.832"></status>
</kw>
<msg timestamp="20201005 12:37:46.840" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:37:46.840" starttime="20201005 12:37:46.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:37:46.841" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:37:46.841" starttime="20201005 12:37:46.840"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:46.848" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:46.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:46.860" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:37:46.860" starttime="20201005 12:37:46.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:46.861" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:37:46.861" starttime="20201005 12:37:46.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:46.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:46.861" starttime="20201005 12:37:46.861"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:46.861" starttime="20201005 12:37:46.842"></status>
</kw>
<msg timestamp="20201005 12:37:46.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:46.862" starttime="20201005 12:37:46.842"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:46.862" starttime="20201005 12:37:46.841"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:46.862" starttime="20201005 12:37:46.841"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:46.862" starttime="20201005 12:37:46.831"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:46.862" starttime="20201005 12:37:46.830"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:46.867" level="INFO">Running command 'ozone sh bucket list 66867-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:51.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:51.263" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:37:51.263" starttime="20201005 12:37:46.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:51.264" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "66867-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:36:54.040Z",
  "modificationTime" : "2020-10-05T12:36:54.040Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "66867-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "66867-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:36:32.110Z",
  "modificationTime" : "2020-10-05T12:36:32.110Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "66867-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "66867-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:37:01.587Z",
  "modificationTime" : "2020-10-05T12:37:01.587Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "66867-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "66867-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:36:24.656Z",
  "modificationTime" : "2020-10-05T12:36:24.656Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "66867-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "66867-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:36:28.311Z",
  "modificationTime" : "2020-10-05T12:36:28.311Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "66867-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201005 12:37:51.265" starttime="20201005 12:37:51.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:51.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:51.265" starttime="20201005 12:37:51.265"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:51.266" starttime="20201005 12:37:46.863"></status>
</kw>
<msg timestamp="20201005 12:37:51.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:51.266" starttime="20201005 12:37:46.863"></status>
</kw>
<msg timestamp="20201005 12:37:51.266" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:37:51.266" starttime="20201005 12:37:46.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201005 12:37:51.267" starttime="20201005 12:37:51.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201005 12:37:51.268" starttime="20201005 12:37:51.267"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:37:51.268" critical="yes" starttime="20201005 12:37:46.829"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:51.275" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:51.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:51.279" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:37:51.279" starttime="20201005 12:37:51.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:51.280" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:37:51.280" starttime="20201005 12:37:51.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:51.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:51.281" starttime="20201005 12:37:51.280"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:51.281" starttime="20201005 12:37:51.272"></status>
</kw>
<msg timestamp="20201005 12:37:51.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:51.281" starttime="20201005 12:37:51.272"></status>
</kw>
<msg timestamp="20201005 12:37:51.281" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:37:51.281" starttime="20201005 12:37:51.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:37:51.282" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:37:51.282" starttime="20201005 12:37:51.282"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:51.287" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:51.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:51.300" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:37:51.300" starttime="20201005 12:37:51.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:51.301" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:37:51.301" starttime="20201005 12:37:51.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:51.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:51.302" starttime="20201005 12:37:51.301"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:51.302" starttime="20201005 12:37:51.284"></status>
</kw>
<msg timestamp="20201005 12:37:51.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:51.302" starttime="20201005 12:37:51.283"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:51.303" starttime="20201005 12:37:51.283"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:51.303" starttime="20201005 12:37:51.282"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:51.303" starttime="20201005 12:37:51.271"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:51.303" starttime="20201005 12:37:51.270"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:51.307" level="INFO">Running command 'ozone sh bucket info 66867-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:54.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:54.884" level="INFO">${output} = 66867-source bucket1</msg>
<status status="PASS" endtime="20201005 12:37:54.884" starttime="20201005 12:37:51.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:54.886" level="INFO">66867-source bucket1</msg>
<status status="PASS" endtime="20201005 12:37:54.886" starttime="20201005 12:37:54.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:54.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:54.887" starttime="20201005 12:37:54.886"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:54.887" starttime="20201005 12:37:51.304"></status>
</kw>
<msg timestamp="20201005 12:37:54.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:54.887" starttime="20201005 12:37:51.304"></status>
</kw>
<msg timestamp="20201005 12:37:54.887" level="INFO">${result} = 66867-source bucket1</msg>
<status status="PASS" endtime="20201005 12:37:54.888" starttime="20201005 12:37:51.303"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201005 12:37:54.888" starttime="20201005 12:37:54.888"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:37:54.888" critical="yes" starttime="20201005 12:37:51.269"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:54.896" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:54.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:54.898" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:37:54.898" starttime="20201005 12:37:54.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:54.899" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:37:54.899" starttime="20201005 12:37:54.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:54.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:54.899" starttime="20201005 12:37:54.899"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:54.900" starttime="20201005 12:37:54.892"></status>
</kw>
<msg timestamp="20201005 12:37:54.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:54.900" starttime="20201005 12:37:54.892"></status>
</kw>
<msg timestamp="20201005 12:37:54.900" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:37:54.900" starttime="20201005 12:37:54.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:37:54.901" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:37:54.901" starttime="20201005 12:37:54.900"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:54.906" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:55.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:55.018" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:37:55.018" starttime="20201005 12:37:54.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:55.019" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:37:55.019" starttime="20201005 12:37:55.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:55.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:55.020" starttime="20201005 12:37:55.020"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:55.021" starttime="20201005 12:37:54.903"></status>
</kw>
<msg timestamp="20201005 12:37:55.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:55.021" starttime="20201005 12:37:54.902"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:55.021" starttime="20201005 12:37:54.902"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:55.021" starttime="20201005 12:37:54.901"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:55.021" starttime="20201005 12:37:54.891"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:55.021" starttime="20201005 12:37:54.890"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:55.027" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 66867-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:37:58.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:37:58.410" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:37:58.410" starttime="20201005 12:37:55.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:37:58.412" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201005 12:37:58.412" starttime="20201005 12:37:58.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:37:58.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:37:58.412" starttime="20201005 12:37:58.412"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:58.413" starttime="20201005 12:37:55.023"></status>
</kw>
<msg timestamp="20201005 12:37:58.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:37:58.413" starttime="20201005 12:37:55.022"></status>
</kw>
<status status="PASS" endtime="20201005 12:37:58.413" starttime="20201005 12:37:55.022"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:37:58.419" level="INFO">Running command 'ozone sh bucket getacl 66867-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:02.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:02.407" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201005 12:38:02.407" starttime="20201005 12:37:58.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:02.408" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201005 12:38:02.408" starttime="20201005 12:38:02.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:02.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:02.409" starttime="20201005 12:38:02.408"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:02.409" starttime="20201005 12:37:58.415"></status>
</kw>
<msg timestamp="20201005 12:38:02.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:02.410" starttime="20201005 12:37:58.415"></status>
</kw>
<msg timestamp="20201005 12:38:02.410" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201005 12:38:02.410" starttime="20201005 12:37:58.414"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:38:02.411" starttime="20201005 12:38:02.410"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:02.411" starttime="20201005 12:37:58.413"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:02.416" level="INFO">Running command 'ozone sh bucket getacl 66867-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:05.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:05.944" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:38:05.944" starttime="20201005 12:38:02.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:05.945" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:38:05.945" starttime="20201005 12:38:05.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:05.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:05.946" starttime="20201005 12:38:05.945"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:05.946" starttime="20201005 12:38:02.413"></status>
</kw>
<msg timestamp="20201005 12:38:05.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:05.947" starttime="20201005 12:38:02.413"></status>
</kw>
<msg timestamp="20201005 12:38:05.947" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201005 12:38:05.947" starttime="20201005 12:38:02.412"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:38:05.948" starttime="20201005 12:38:05.947"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:05.948" starttime="20201005 12:38:02.411"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:05.958" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 66867-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:09.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:09.353" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:09.353" starttime="20201005 12:38:05.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:09.354" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201005 12:38:09.354" starttime="20201005 12:38:09.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:09.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:09.355" starttime="20201005 12:38:09.354"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:09.355" starttime="20201005 12:38:05.949"></status>
</kw>
<msg timestamp="20201005 12:38:09.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:09.356" starttime="20201005 12:38:05.949"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:09.356" starttime="20201005 12:38:05.948"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:09.360" level="INFO">Running command 'ozone sh bucket getacl 66867-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:13.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:13.735" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:38:13.735" starttime="20201005 12:38:09.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:13.737" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:38:13.737" starttime="20201005 12:38:13.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:13.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:13.738" starttime="20201005 12:38:13.737"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:13.738" starttime="20201005 12:38:09.358"></status>
</kw>
<msg timestamp="20201005 12:38:13.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:13.739" starttime="20201005 12:38:09.357"></status>
</kw>
<msg timestamp="20201005 12:38:13.739" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201005 12:38:13.739" starttime="20201005 12:38:09.357"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:38:13.740" starttime="20201005 12:38:13.739"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:13.740" starttime="20201005 12:38:09.356"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:13.746" level="INFO">Running command 'ozone sh bucket getacl 66867-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:17.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:17.393" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201005 12:38:17.393" starttime="20201005 12:38:13.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:17.395" level="INFO">READ</msg>
<status status="PASS" endtime="20201005 12:38:17.395" starttime="20201005 12:38:17.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:17.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:17.396" starttime="20201005 12:38:17.395"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:17.396" starttime="20201005 12:38:13.743"></status>
</kw>
<msg timestamp="20201005 12:38:17.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:17.396" starttime="20201005 12:38:13.742"></status>
</kw>
<msg timestamp="20201005 12:38:17.396" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201005 12:38:17.396" starttime="20201005 12:38:13.742"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:38:17.397" starttime="20201005 12:38:17.397"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:17.397" starttime="20201005 12:38:13.741"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:38:17.397" critical="yes" starttime="20201005 12:37:54.889"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:17.406" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:17.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:17.407" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:38:17.407" starttime="20201005 12:38:17.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:17.408" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:38:17.408" starttime="20201005 12:38:17.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:17.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:17.409" starttime="20201005 12:38:17.408"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:17.409" starttime="20201005 12:38:17.401"></status>
</kw>
<msg timestamp="20201005 12:38:17.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:17.409" starttime="20201005 12:38:17.401"></status>
</kw>
<msg timestamp="20201005 12:38:17.409" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:38:17.409" starttime="20201005 12:38:17.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:38:17.410" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:38:17.410" starttime="20201005 12:38:17.410"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:17.415" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:17.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:17.433" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:38:17.433" starttime="20201005 12:38:17.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:17.434" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:38:17.434" starttime="20201005 12:38:17.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:17.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:17.435" starttime="20201005 12:38:17.435"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:17.436" starttime="20201005 12:38:17.412"></status>
</kw>
<msg timestamp="20201005 12:38:17.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:17.436" starttime="20201005 12:38:17.411"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:17.436" starttime="20201005 12:38:17.411"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:17.436" starttime="20201005 12:38:17.410"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:17.436" starttime="20201005 12:38:17.400"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:17.436" starttime="20201005 12:38:17.399"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:17.441" level="INFO">Running command 'ozone sh bucket link 66867-source/bucket2 66867-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:20.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:20.964" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:20.964" starttime="20201005 12:38:17.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:20.965" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:38:20.965" starttime="20201005 12:38:20.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:20.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:20.966" starttime="20201005 12:38:20.965"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:20.966" starttime="20201005 12:38:17.437"></status>
</kw>
<msg timestamp="20201005 12:38:20.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:20.966" starttime="20201005 12:38:17.437"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:20.966" starttime="20201005 12:38:17.436"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:20.969" level="INFO">Running command 'ozone sh bucket create 66867-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:24.466" level="INFO">${rc} = 255</msg>
<msg timestamp="20201005 12:38:24.466" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:24.466" starttime="20201005 12:38:20.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:24.468" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201005 12:38:24.468" starttime="20201005 12:38:24.467"></status>
</kw>
<msg timestamp="20201005 12:38:24.468" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:24.468" starttime="20201005 12:38:20.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201005 12:38:24.469" starttime="20201005 12:38:24.468"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:24.474" level="INFO">Running command 'ozone sh bucket create 66867-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:27.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:27.740" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:27.740" starttime="20201005 12:38:24.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:27.741" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:38:27.741" starttime="20201005 12:38:27.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:27.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:27.742" starttime="20201005 12:38:27.741"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:27.742" starttime="20201005 12:38:24.470"></status>
</kw>
<msg timestamp="20201005 12:38:27.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:27.742" starttime="20201005 12:38:24.470"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:27.743" starttime="20201005 12:38:24.469"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:27.747" level="INFO">Running command 'ozone sh bucket link 66867-source/bucket1 66867-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:30.944" level="INFO">${rc} = 255</msg>
<msg timestamp="20201005 12:38:30.944" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:30.944" starttime="20201005 12:38:27.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:30.945" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201005 12:38:30.945" starttime="20201005 12:38:30.944"></status>
</kw>
<msg timestamp="20201005 12:38:30.945" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:30.945" starttime="20201005 12:38:27.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201005 12:38:30.946" starttime="20201005 12:38:30.946"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:38:30.946" critical="yes" starttime="20201005 12:38:17.399"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:30.952" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:30.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:30.955" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:38:30.955" starttime="20201005 12:38:30.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:30.956" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:38:30.956" starttime="20201005 12:38:30.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:30.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:30.956" starttime="20201005 12:38:30.956"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:30.957" starttime="20201005 12:38:30.950"></status>
</kw>
<msg timestamp="20201005 12:38:30.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:30.957" starttime="20201005 12:38:30.949"></status>
</kw>
<msg timestamp="20201005 12:38:30.957" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:38:30.957" starttime="20201005 12:38:30.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:38:30.958" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:38:30.958" starttime="20201005 12:38:30.957"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:30.962" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:30.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:30.980" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:38:30.980" starttime="20201005 12:38:30.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:30.981" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:38:30.981" starttime="20201005 12:38:30.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:30.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:30.982" starttime="20201005 12:38:30.981"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:30.982" starttime="20201005 12:38:30.959"></status>
</kw>
<msg timestamp="20201005 12:38:30.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:30.982" starttime="20201005 12:38:30.959"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:30.982" starttime="20201005 12:38:30.958"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:30.983" starttime="20201005 12:38:30.958"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:30.983" starttime="20201005 12:38:30.948"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:30.983" starttime="20201005 12:38:30.948"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:30.989" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:30.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:30.993" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:38:30.993" starttime="20201005 12:38:30.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:30.993" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:38:30.994" starttime="20201005 12:38:30.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:30.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:30.994" starttime="20201005 12:38:30.994"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:30.994" starttime="20201005 12:38:30.985"></status>
</kw>
<msg timestamp="20201005 12:38:30.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:30.995" starttime="20201005 12:38:30.985"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:30.995" starttime="20201005 12:38:30.985"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:31.000" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:31.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:31.002" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:38:31.003" starttime="20201005 12:38:30.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:31.003" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:38:31.004" starttime="20201005 12:38:31.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:31.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:31.004" starttime="20201005 12:38:31.004"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:31.004" starttime="20201005 12:38:30.997"></status>
</kw>
<msg timestamp="20201005 12:38:31.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:31.005" starttime="20201005 12:38:30.996"></status>
</kw>
<msg timestamp="20201005 12:38:31.005" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:38:31.005" starttime="20201005 12:38:30.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:38:31.005" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:38:31.006" starttime="20201005 12:38:31.005"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:31.011" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:31.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:31.049" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:38:31.049" starttime="20201005 12:38:31.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:31.051" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:38:31.051" starttime="20201005 12:38:31.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:31.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:31.052" starttime="20201005 12:38:31.051"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:31.052" starttime="20201005 12:38:31.007"></status>
</kw>
<msg timestamp="20201005 12:38:31.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:31.052" starttime="20201005 12:38:31.007"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:31.053" starttime="20201005 12:38:31.006"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:31.053" starttime="20201005 12:38:31.006"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:31.053" starttime="20201005 12:38:30.995"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:31.053" starttime="20201005 12:38:30.995"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:31.057" level="INFO">Running command 'ozone sh key list 66867-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:34.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:34.848" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:34.848" starttime="20201005 12:38:31.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:34.849" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "66867-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-10-05T12:36:14.846Z",
  "modificationTime" : "2020-10-05T12:36:16.720Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201005 12:38:34.849" starttime="20201005 12:38:34.848"></status>
</kw>
<msg timestamp="20201005 12:38:34.849" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:34.849" starttime="20201005 12:38:31.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201005 12:38:34.850" starttime="20201005 12:38:34.849"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:34.850" starttime="20201005 12:38:30.984"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:34.850" starttime="20201005 12:38:30.984"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:38:34.850" critical="yes" starttime="20201005 12:38:30.947"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:34.859" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:34.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:34.861" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:38:34.861" starttime="20201005 12:38:34.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:34.861" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:38:34.862" starttime="20201005 12:38:34.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:34.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:34.862" starttime="20201005 12:38:34.862"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:34.862" starttime="20201005 12:38:34.855"></status>
</kw>
<msg timestamp="20201005 12:38:34.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:34.863" starttime="20201005 12:38:34.855"></status>
</kw>
<msg timestamp="20201005 12:38:34.863" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:38:34.863" starttime="20201005 12:38:34.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:38:34.863" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:38:34.864" starttime="20201005 12:38:34.863"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:34.868" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:34.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:34.884" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:38:34.884" starttime="20201005 12:38:34.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:34.885" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:38:34.885" starttime="20201005 12:38:34.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:34.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:34.886" starttime="20201005 12:38:34.886"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:34.887" starttime="20201005 12:38:34.865"></status>
</kw>
<msg timestamp="20201005 12:38:34.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:34.887" starttime="20201005 12:38:34.865"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:34.887" starttime="20201005 12:38:34.864"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:34.887" starttime="20201005 12:38:34.864"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:34.888" starttime="20201005 12:38:34.854"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:34.888" starttime="20201005 12:38:34.853"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:34.892" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:34.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:34.895" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:38:34.895" starttime="20201005 12:38:34.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:34.896" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:38:34.897" starttime="20201005 12:38:34.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:34.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:34.897" starttime="20201005 12:38:34.897"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:34.898" starttime="20201005 12:38:34.890"></status>
</kw>
<msg timestamp="20201005 12:38:34.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:34.898" starttime="20201005 12:38:34.889"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:34.898" starttime="20201005 12:38:34.889"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:34.903" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:34.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:34.905" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:38:34.905" starttime="20201005 12:38:34.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:34.906" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:38:34.906" starttime="20201005 12:38:34.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:34.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:34.907" starttime="20201005 12:38:34.906"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:34.907" starttime="20201005 12:38:34.900"></status>
</kw>
<msg timestamp="20201005 12:38:34.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:34.907" starttime="20201005 12:38:34.900"></status>
</kw>
<msg timestamp="20201005 12:38:34.908" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:38:34.908" starttime="20201005 12:38:34.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:38:34.908" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:38:34.908" starttime="20201005 12:38:34.908"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:34.913" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:34.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:34.929" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:38:34.929" starttime="20201005 12:38:34.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:34.930" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:38:34.930" starttime="20201005 12:38:34.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:34.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:34.931" starttime="20201005 12:38:34.930"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:34.931" starttime="20201005 12:38:34.910"></status>
</kw>
<msg timestamp="20201005 12:38:34.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:34.931" starttime="20201005 12:38:34.909"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:34.932" starttime="20201005 12:38:34.909"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:34.932" starttime="20201005 12:38:34.908"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:34.932" starttime="20201005 12:38:34.899"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:34.932" starttime="20201005 12:38:34.898"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:34.936" level="INFO">Running command 'ozone sh key list 66867-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:38.176" level="INFO">${rc} = 255</msg>
<msg timestamp="20201005 12:38:38.176" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:38.176" starttime="20201005 12:38:34.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:38.177" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201005 12:38:38.177" starttime="20201005 12:38:38.176"></status>
</kw>
<msg timestamp="20201005 12:38:38.177" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:38.177" starttime="20201005 12:38:34.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201005 12:38:38.178" starttime="20201005 12:38:38.178"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:38.178" starttime="20201005 12:38:34.888"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:38.178" starttime="20201005 12:38:34.888"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:38:38.179" critical="yes" starttime="20201005 12:38:34.852"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:38.185" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:38.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:38.188" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:38:38.188" starttime="20201005 12:38:38.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:38.189" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:38:38.189" starttime="20201005 12:38:38.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:38.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:38.190" starttime="20201005 12:38:38.189"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:38.190" starttime="20201005 12:38:38.182"></status>
</kw>
<msg timestamp="20201005 12:38:38.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:38.190" starttime="20201005 12:38:38.182"></status>
</kw>
<msg timestamp="20201005 12:38:38.190" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:38:38.190" starttime="20201005 12:38:38.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:38:38.191" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:38:38.191" starttime="20201005 12:38:38.191"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:38.195" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:38.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:38.208" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:38:38.208" starttime="20201005 12:38:38.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:38.209" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:38:38.209" starttime="20201005 12:38:38.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:38.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:38.210" starttime="20201005 12:38:38.210"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:38.210" starttime="20201005 12:38:38.192"></status>
</kw>
<msg timestamp="20201005 12:38:38.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:38.211" starttime="20201005 12:38:38.192"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:38.211" starttime="20201005 12:38:38.192"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:38.211" starttime="20201005 12:38:38.191"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:38.211" starttime="20201005 12:38:38.181"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:38.211" starttime="20201005 12:38:38.180"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:38.218" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:38.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:38.220" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:38:38.220" starttime="20201005 12:38:38.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:38.221" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:38:38.221" starttime="20201005 12:38:38.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:38.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:38.222" starttime="20201005 12:38:38.222"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:38.222" starttime="20201005 12:38:38.213"></status>
</kw>
<msg timestamp="20201005 12:38:38.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:38.223" starttime="20201005 12:38:38.213"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:38.223" starttime="20201005 12:38:38.212"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:38.229" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:38.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:38.230" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:38:38.230" starttime="20201005 12:38:38.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:38.232" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:38:38.232" starttime="20201005 12:38:38.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:38.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:38.232" starttime="20201005 12:38:38.232"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:38.232" starttime="20201005 12:38:38.225"></status>
</kw>
<msg timestamp="20201005 12:38:38.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:38.233" starttime="20201005 12:38:38.225"></status>
</kw>
<msg timestamp="20201005 12:38:38.233" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:38:38.233" starttime="20201005 12:38:38.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:38:38.234" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:38:38.234" starttime="20201005 12:38:38.233"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:38.239" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:38.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:38.255" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:38:38.255" starttime="20201005 12:38:38.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:38.256" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:38:38.256" starttime="20201005 12:38:38.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:38.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:38.257" starttime="20201005 12:38:38.256"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:38.257" starttime="20201005 12:38:38.235"></status>
</kw>
<msg timestamp="20201005 12:38:38.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:38.257" starttime="20201005 12:38:38.235"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:38.257" starttime="20201005 12:38:38.234"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:38.257" starttime="20201005 12:38:38.234"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:38.257" starttime="20201005 12:38:38.223"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:38.257" starttime="20201005 12:38:38.223"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:38.263" level="INFO">Running command 'ozone sh bucket info 66867-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:41.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:41.997" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:41.998" starttime="20201005 12:38:38.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:41.999" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "66867-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:36:32.110Z",
  "modificationTime" : "2020-10-05T12:36:32.110Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "66867-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201005 12:38:41.999" starttime="20201005 12:38:41.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:41.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:41.999" starttime="20201005 12:38:41.999"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:42.000" starttime="20201005 12:38:38.258"></status>
</kw>
<msg timestamp="20201005 12:38:42.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:42.000" starttime="20201005 12:38:38.258"></status>
</kw>
<msg timestamp="20201005 12:38:42.000" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:42.000" starttime="20201005 12:38:38.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201005 12:38:42.001" starttime="20201005 12:38:42.000"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201005 12:38:42.001" starttime="20201005 12:38:42.001"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:42.004" level="INFO">Running command 'ozone sh key list 66867-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:45.439" level="INFO">${rc} = 255</msg>
<msg timestamp="20201005 12:38:45.439" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:45.439" starttime="20201005 12:38:42.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:45.440" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201005 12:38:45.441" starttime="20201005 12:38:45.440"></status>
</kw>
<msg timestamp="20201005 12:38:45.441" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:45.441" starttime="20201005 12:38:42.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201005 12:38:45.441" starttime="20201005 12:38:45.441"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:45.442" starttime="20201005 12:38:38.212"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:45.442" starttime="20201005 12:38:38.212"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:38:45.442" critical="yes" starttime="20201005 12:38:38.179"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:45.448" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:45.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:45.452" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:38:45.452" starttime="20201005 12:38:45.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:45.453" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:38:45.453" starttime="20201005 12:38:45.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:45.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:45.453" starttime="20201005 12:38:45.453"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:45.454" starttime="20201005 12:38:45.445"></status>
</kw>
<msg timestamp="20201005 12:38:45.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:45.454" starttime="20201005 12:38:45.445"></status>
</kw>
<msg timestamp="20201005 12:38:45.454" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:38:45.454" starttime="20201005 12:38:45.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:38:45.455" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:38:45.455" starttime="20201005 12:38:45.454"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:45.459" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:45.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:45.470" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:38:45.470" starttime="20201005 12:38:45.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:45.471" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:38:45.471" starttime="20201005 12:38:45.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:45.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:45.472" starttime="20201005 12:38:45.471"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:45.472" starttime="20201005 12:38:45.456"></status>
</kw>
<msg timestamp="20201005 12:38:45.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:45.472" starttime="20201005 12:38:45.456"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:45.472" starttime="20201005 12:38:45.455"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:45.472" starttime="20201005 12:38:45.455"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:45.473" starttime="20201005 12:38:45.444"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:45.473" starttime="20201005 12:38:45.444"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:45.477" level="INFO">Running command 'ozone sh bucket link 66867-target/loop1 66867-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:48.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:48.893" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:48.893" starttime="20201005 12:38:45.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:48.894" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:38:48.894" starttime="20201005 12:38:48.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:48.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:48.895" starttime="20201005 12:38:48.894"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:48.895" starttime="20201005 12:38:45.474"></status>
</kw>
<msg timestamp="20201005 12:38:48.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:48.895" starttime="20201005 12:38:45.473"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:48.896" starttime="20201005 12:38:45.473"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:48.900" level="INFO">Running command 'ozone sh bucket link 66867-target/loop2 66867-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:52.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:52.362" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:52.362" starttime="20201005 12:38:48.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:52.363" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:38:52.363" starttime="20201005 12:38:52.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:52.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:52.364" starttime="20201005 12:38:52.363"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:52.364" starttime="20201005 12:38:48.897"></status>
</kw>
<msg timestamp="20201005 12:38:52.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:52.364" starttime="20201005 12:38:48.896"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:52.365" starttime="20201005 12:38:48.896"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:52.370" level="INFO">Running command 'ozone sh bucket link 66867-target/loop3 66867-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:55.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:55.863" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:55.863" starttime="20201005 12:38:52.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:55.864" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:38:55.864" starttime="20201005 12:38:55.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:55.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:55.865" starttime="20201005 12:38:55.865"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:55.865" starttime="20201005 12:38:52.366"></status>
</kw>
<msg timestamp="20201005 12:38:55.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:55.866" starttime="20201005 12:38:52.365"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:55.866" starttime="20201005 12:38:52.365"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:55.870" level="INFO">Running command 'ozone sh key list 66867-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:59.351" level="INFO">${rc} = 255</msg>
<msg timestamp="20201005 12:38:59.351" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:59.351" starttime="20201005 12:38:55.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:59.352" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201005 12:38:59.352" starttime="20201005 12:38:59.351"></status>
</kw>
<msg timestamp="20201005 12:38:59.352" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:38:59.352" starttime="20201005 12:38:55.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201005 12:38:59.353" starttime="20201005 12:38:59.353"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:38:59.353" critical="yes" starttime="20201005 12:38:45.443"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:59.360" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:59.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:59.364" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:38:59.364" starttime="20201005 12:38:59.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:59.365" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:38:59.365" starttime="20201005 12:38:59.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:59.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:59.365" starttime="20201005 12:38:59.365"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:59.365" starttime="20201005 12:38:59.358"></status>
</kw>
<msg timestamp="20201005 12:38:59.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:59.366" starttime="20201005 12:38:59.357"></status>
</kw>
<msg timestamp="20201005 12:38:59.366" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:38:59.366" starttime="20201005 12:38:59.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:38:59.366" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:38:59.367" starttime="20201005 12:38:59.366"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:59.371" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:38:59.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:38:59.383" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:38:59.383" starttime="20201005 12:38:59.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:38:59.384" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:38:59.384" starttime="20201005 12:38:59.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:38:59.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:38:59.385" starttime="20201005 12:38:59.385"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:59.385" starttime="20201005 12:38:59.368"></status>
</kw>
<msg timestamp="20201005 12:38:59.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:38:59.385" starttime="20201005 12:38:59.368"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:59.386" starttime="20201005 12:38:59.367"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:59.386" starttime="20201005 12:38:59.367"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:59.386" starttime="20201005 12:38:59.356"></status>
</kw>
<status status="PASS" endtime="20201005 12:38:59.386" starttime="20201005 12:38:59.356"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:38:59.391" level="INFO">Running command 'ozone sh bucket link 66867-source/bucket1 66867-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:39:02.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:39:02.832" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:39:02.832" starttime="20201005 12:38:59.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:39:02.833" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:39:02.833" starttime="20201005 12:39:02.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:39:02.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:39:02.834" starttime="20201005 12:39:02.833"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:02.834" starttime="20201005 12:38:59.387"></status>
</kw>
<msg timestamp="20201005 12:39:02.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:39:02.834" starttime="20201005 12:38:59.387"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:02.834" starttime="20201005 12:38:59.386"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:39:02.838" level="INFO">Running command 'ozone sh key put 66867-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:39:08.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:39:08.591" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:39:08.591" starttime="20201005 12:39:02.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:39:08.592" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:39:08.593" starttime="20201005 12:39:08.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:39:08.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:39:08.593" starttime="20201005 12:39:08.593"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:08.593" starttime="20201005 12:39:02.835"></status>
</kw>
<msg timestamp="20201005 12:39:08.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:39:08.594" starttime="20201005 12:39:02.835"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:08.594" starttime="20201005 12:39:02.834"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201005 12:39:08.596" level="INFO">${postfix} = 30506</msg>
<status status="PASS" endtime="20201005 12:39:08.596" starttime="20201005 12:39:08.595"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201005 12:39:08.596" level="INFO">${tmpfile} = /tmp/tempkey-30506</msg>
<status status="PASS" endtime="20201005 12:39:08.596" starttime="20201005 12:39:08.596"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:39:08.600" level="INFO">Running command 'ozone sh key get -f 66867-target/link1/key3 /tmp/tempkey-30506 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:39:14.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:39:14.103" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:39:14.104" starttime="20201005 12:39:08.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:39:14.105" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:39:14.105" starttime="20201005 12:39:14.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:39:14.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:39:14.106" starttime="20201005 12:39:14.105"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:14.106" starttime="20201005 12:39:08.597"></status>
</kw>
<msg timestamp="20201005 12:39:14.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:39:14.106" starttime="20201005 12:39:08.597"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:14.106" starttime="20201005 12:39:08.597"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201005 12:39:14.109" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-30506 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:39:14.112" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201005 12:39:14.112" starttime="20201005 12:39:14.107"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:39:14.116" level="INFO">Running command 'rm -f /tmp/tempkey-30506 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:39:14.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:39:14.118" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:39:14.118" starttime="20201005 12:39:14.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:39:14.119" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:39:14.119" starttime="20201005 12:39:14.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:39:14.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:39:14.120" starttime="20201005 12:39:14.120"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:14.120" starttime="20201005 12:39:14.113"></status>
</kw>
<msg timestamp="20201005 12:39:14.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:39:14.120" starttime="20201005 12:39:14.113"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:14.121" starttime="20201005 12:39:14.112"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:39:14.121" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201005 12:39:14.121" starttime="20201005 12:39:14.121"></status>
</kw>
<msg timestamp="20201005 12:39:14.122" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201005 12:39:14.122" starttime="20201005 12:39:08.595"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:39:14.122" starttime="20201005 12:39:14.122"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:14.122" starttime="20201005 12:39:08.594"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:39:14.123" critical="yes" starttime="20201005 12:38:59.354"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:39:14.129" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:39:14.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:39:14.131" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201005 12:39:14.131" starttime="20201005 12:39:14.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:39:14.132" level="INFO">scm</msg>
<status status="PASS" endtime="20201005 12:39:14.132" starttime="20201005 12:39:14.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:39:14.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:39:14.133" starttime="20201005 12:39:14.132"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:14.133" starttime="20201005 12:39:14.126"></status>
</kw>
<msg timestamp="20201005 12:39:14.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:39:14.133" starttime="20201005 12:39:14.126"></status>
</kw>
<msg timestamp="20201005 12:39:14.133" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201005 12:39:14.133" starttime="20201005 12:39:14.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:39:14.134" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:39:14.134" starttime="20201005 12:39:14.134"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:39:14.138" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:39:14.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:39:14.156" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:39:14.156" starttime="20201005 12:39:14.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:39:14.157" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:39:14.157" starttime="20201005 12:39:14.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:39:14.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:39:14.158" starttime="20201005 12:39:14.157"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:14.158" starttime="20201005 12:39:14.135"></status>
</kw>
<msg timestamp="20201005 12:39:14.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:39:14.158" starttime="20201005 12:39:14.135"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:14.158" starttime="20201005 12:39:14.135"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:14.158" starttime="20201005 12:39:14.134"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:14.159" starttime="20201005 12:39:14.124"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:14.159" starttime="20201005 12:39:14.124"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:39:14.163" level="INFO">Running command 'ozone sh bucket delete 66867-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:39:17.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:39:17.612" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:39:17.612" starttime="20201005 12:39:14.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:39:17.614" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:39:17.614" starttime="20201005 12:39:17.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:39:17.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:39:17.614" starttime="20201005 12:39:17.614"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:17.615" starttime="20201005 12:39:14.160"></status>
</kw>
<msg timestamp="20201005 12:39:17.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:39:17.615" starttime="20201005 12:39:14.159"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:17.615" starttime="20201005 12:39:14.159"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:39:17.619" level="INFO">Running command 'ozone sh bucket list 66867-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:39:21.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:39:21.058" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:39:21.058" starttime="20201005 12:39:17.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:39:21.060" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "66867-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:38:27.559Z",
  "modificationTime" : "2020-10-05T12:38:27.559Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "66867-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:36:54.040Z",
  "modificationTime" : "2020-10-05T12:36:54.040Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "66867-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "66867-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:36:32.110Z",
  "modificationTime" : "2020-10-05T12:36:32.110Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "66867-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "66867-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:38:20.883Z",
  "modificationTime" : "2020-10-05T12:38:20.883Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "66867-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "66867-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:39:02.764Z",
  "modificationTime" : "2020-10-05T12:39:02.764Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "66867-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "66867-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:38:55.676Z",
  "modificationTime" : "2020-10-05T12:38:55.676Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "66867-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "66867-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:38:48.735Z",
  "modificationTime" : "2020-10-05T12:38:48.735Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "66867-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "66867-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:38:52.182Z",
  "modificationTime" : "2020-10-05T12:38:52.182Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "66867-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "66867-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:36:24.656Z",
  "modificationTime" : "2020-10-05T12:36:24.656Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "66867-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "66867-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:36:28.311Z",
  "modificationTime" : "2020-10-05T12:36:28.311Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "66867-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201005 12:39:21.060" starttime="20201005 12:39:21.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:39:21.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:39:21.061" starttime="20201005 12:39:21.060"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:21.061" starttime="20201005 12:39:17.616"></status>
</kw>
<msg timestamp="20201005 12:39:21.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:39:21.061" starttime="20201005 12:39:17.616"></status>
</kw>
<msg timestamp="20201005 12:39:21.062" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:39:21.062" starttime="20201005 12:39:17.615"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201005 12:39:21.062" starttime="20201005 12:39:21.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:39:21.068" level="INFO">Running command 'ozone sh key list 66867-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:39:24.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:39:24.610" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201005 12:39:24.610" starttime="20201005 12:39:21.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:39:24.612" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201005 12:39:24.612" starttime="20201005 12:39:24.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:39:24.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:39:24.612" starttime="20201005 12:39:24.612"></status>
</kw>
<status status="PASS" endtime="20201005 12:39:24.613" starttime="20201005 12:39:21.063"></status>
</kw>
<msg timestamp="20201005 12:39:24.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:39:24.613" starttime="20201005 12:39:21.063"></status>
</kw>
<msg timestamp="20201005 12:39:24.613" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201005 12:39:24.613" starttime="20201005 12:39:21.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201005 12:39:24.614" starttime="20201005 12:39:24.613"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:39:24.614" critical="yes" starttime="20201005 12:39:14.123"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201005 12:39:24.617" starttime="20201005 12:36:00.480"></status>
</suite>
<status status="PASS" elapsedtime="235809" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
