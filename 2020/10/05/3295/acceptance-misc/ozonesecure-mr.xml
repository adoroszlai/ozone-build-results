<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201005 12:33:12.787" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:29:16.462" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:29:20.408" level="INFO">${rc} = 255</msg>
<msg timestamp="20201005 12:29:20.408" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:29:20.408" starttime="20201005 12:29:16.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:29:20.409" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201005 12:29:20.409" starttime="20201005 12:29:20.408"></status>
</kw>
<msg timestamp="20201005 12:29:20.409" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:29:20.409" starttime="20201005 12:29:16.456"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:29:20.415" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:29:24.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:29:24.131" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:29:24.131" starttime="20201005 12:29:20.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:29:24.132" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:29:24.132" starttime="20201005 12:29:24.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:29:24.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:29:24.133" starttime="20201005 12:29:24.133"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:24.133" starttime="20201005 12:29:20.411"></status>
</kw>
<msg timestamp="20201005 12:29:24.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:29:24.134" starttime="20201005 12:29:20.411"></status>
</kw>
<msg timestamp="20201005 12:29:24.134" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:29:24.134" starttime="20201005 12:29:20.410"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201005 12:29:24.134" starttime="20201005 12:29:24.134"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:24.135" starttime="20201005 12:29:20.410"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:24.135" starttime="20201005 12:29:20.410"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:29:24.139" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:29:27.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:29:27.558" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:29:27.558" starttime="20201005 12:29:24.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:29:27.560" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:29:27.560" starttime="20201005 12:29:27.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:29:27.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:29:27.561" starttime="20201005 12:29:27.560"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:27.561" starttime="20201005 12:29:24.136"></status>
</kw>
<msg timestamp="20201005 12:29:27.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:29:27.561" starttime="20201005 12:29:24.136"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:27.561" starttime="20201005 12:29:24.136"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:27.561" starttime="20201005 12:29:24.135"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:27.562" starttime="20201005 12:29:24.135"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201005 12:29:27.562" starttime="20201005 12:29:27.562"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:29:27.568" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:29:31.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:29:31.301" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:29:31.301" starttime="20201005 12:29:27.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:29:31.302" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:29:27.303Z",
  "modificationTime" : "2020-10-05T12:29:27.303Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201005 12:29:31.302" starttime="20201005 12:29:31.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:29:31.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:29:31.303" starttime="20201005 12:29:31.302"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:31.303" starttime="20201005 12:29:27.563"></status>
</kw>
<msg timestamp="20201005 12:29:31.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:29:31.303" starttime="20201005 12:29:27.563"></status>
</kw>
<msg timestamp="20201005 12:29:31.304" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:29:31.304" starttime="20201005 12:29:27.562"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201005 12:29:31.304" starttime="20201005 12:29:31.304"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:29:31.308" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 12:29:31.308" starttime="20201005 12:29:31.307"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:29:31.308" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 12:29:31.308" starttime="20201005 12:29:31.308"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:31.309" starttime="20201005 12:29:31.307"></status>
</kw>
<msg timestamp="20201005 12:29:31.309" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 12:29:31.309" starttime="20201005 12:29:31.306"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:31.309" starttime="20201005 12:29:31.306"></status>
</kw>
<msg timestamp="20201005 12:29:31.309" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201005 12:29:31.309" starttime="20201005 12:29:31.305"></status>
</kw>
<msg timestamp="20201005 12:29:31.309" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201005 12:29:31.309" starttime="20201005 12:29:31.304"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:29:31.313" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:29:34.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:29:34.553" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:29:34.553" starttime="20201005 12:29:31.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:29:34.554" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:29:34.554" starttime="20201005 12:29:34.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:29:34.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:29:34.555" starttime="20201005 12:29:34.554"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:34.555" starttime="20201005 12:29:31.310"></status>
</kw>
<msg timestamp="20201005 12:29:34.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:29:34.555" starttime="20201005 12:29:31.310"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:34.555" starttime="20201005 12:29:31.310"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:29:34.559" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:29:42.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:29:42.958" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:29:42.958" starttime="20201005 12:29:34.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:29:42.959" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:29:42.959" starttime="20201005 12:29:42.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:29:42.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:29:42.960" starttime="20201005 12:29:42.959"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:42.960" starttime="20201005 12:29:34.556"></status>
</kw>
<msg timestamp="20201005 12:29:42.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:29:42.960" starttime="20201005 12:29:34.556"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:42.961" starttime="20201005 12:29:34.555"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:29:42.964" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:29:48.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:29:48.555" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:29:48.556" starttime="20201005 12:29:42.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:29:48.557" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:29:48.557" starttime="20201005 12:29:48.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:29:48.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:29:48.558" starttime="20201005 12:29:48.557"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:48.558" starttime="20201005 12:29:42.962"></status>
</kw>
<msg timestamp="20201005 12:29:48.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:29:48.558" starttime="20201005 12:29:42.961"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:48.558" starttime="20201005 12:29:42.961"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:29:48.563" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:29:54.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:29:54.058" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:29:54.058" starttime="20201005 12:29:48.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:29:54.059" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:29:54.059" starttime="20201005 12:29:54.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:29:54.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:29:54.060" starttime="20201005 12:29:54.060"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:54.060" starttime="20201005 12:29:48.559"></status>
</kw>
<msg timestamp="20201005 12:29:54.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:29:54.060" starttime="20201005 12:29:48.559"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:54.061" starttime="20201005 12:29:48.558"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:29:54.061" critical="yes" starttime="20201005 12:29:16.455"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:29:54.067" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 12:29:54.067" starttime="20201005 12:29:54.066"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:29:54.068" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 12:29:54.068" starttime="20201005 12:29:54.067"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:54.068" starttime="20201005 12:29:54.066"></status>
</kw>
<msg timestamp="20201005 12:29:54.068" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 12:29:54.068" starttime="20201005 12:29:54.065"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:54.069" starttime="20201005 12:29:54.064"></status>
</kw>
<msg timestamp="20201005 12:29:54.069" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201005 12:29:54.069" starttime="20201005 12:29:54.063"></status>
</kw>
<msg timestamp="20201005 12:29:54.069" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201005 12:29:54.069" starttime="20201005 12:29:54.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:29:54.073" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:29:57.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:29:57.485" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:29:57.485" starttime="20201005 12:29:54.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:29:57.486" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:29:57.486" starttime="20201005 12:29:57.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:29:57.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:29:57.487" starttime="20201005 12:29:57.487"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:57.487" starttime="20201005 12:29:54.070"></status>
</kw>
<msg timestamp="20201005 12:29:57.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:29:57.488" starttime="20201005 12:29:54.070"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:57.488" starttime="20201005 12:29:54.069"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:29:57.492" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:30:00.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:30:00.874" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201005 12:30:00.874" starttime="20201005 12:29:57.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:30:00.875" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201005 12:30:00.875" starttime="20201005 12:30:00.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:30:00.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:30:00.876" starttime="20201005 12:30:00.875"></status>
</kw>
<status status="PASS" endtime="20201005 12:30:00.876" starttime="20201005 12:29:57.489"></status>
</kw>
<msg timestamp="20201005 12:30:00.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:30:00.876" starttime="20201005 12:29:57.489"></status>
</kw>
<status status="PASS" endtime="20201005 12:30:00.876" starttime="20201005 12:29:57.488"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:30:00.877" critical="yes" starttime="20201005 12:29:54.062"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201005 12:30:00.878" starttime="20201005 12:29:16.404"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 12:31:43.517" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 12:31:43.517" starttime="20201005 12:31:43.516"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:31:43.518" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 12:31:43.518" starttime="20201005 12:31:43.517"></status>
</kw>
<status status="PASS" endtime="20201005 12:31:43.518" starttime="20201005 12:31:43.514"></status>
</kw>
<msg timestamp="20201005 12:31:43.518" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 12:31:43.518" starttime="20201005 12:31:43.514"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:31:43.520" starttime="20201005 12:31:43.519"></status>
</kw>
<msg timestamp="20201005 12:31:43.520" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201005 12:31:43.520" starttime="20201005 12:31:43.519"></status>
</kw>
<status status="PASS" endtime="20201005 12:31:43.520" starttime="20201005 12:31:43.513"></status>
</kw>
<msg timestamp="20201005 12:31:43.520" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 12:31:43.520" starttime="20201005 12:31:43.513"></status>
</kw>
<msg timestamp="20201005 12:31:43.520" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 12:31:43.521" starttime="20201005 12:31:43.512"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201005 12:31:43.521" level="INFO">${random} = 66333</msg>
<status status="PASS" endtime="20201005 12:31:43.521" starttime="20201005 12:31:43.521"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:31:43.524" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-66333 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:31:47.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:31:47.632" level="INFO">${output} = 2020-10-05 12:31:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:31:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201005 12:31:47.632" starttime="20201005 12:31:43.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:31:47.633" level="INFO">2020-10-05 12:31:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:31:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-05 12:31:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-05 12:31:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 12:31:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EDBD615ADBB3-&gt;99eaada5-2906-4444-a344-bf56188cb58a
2020-10-05 12:31:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201005 12:31:47.633" starttime="20201005 12:31:47.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:31:47.634" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:31:47.634" starttime="20201005 12:31:47.633"></status>
</kw>
<status status="PASS" endtime="20201005 12:31:47.634" starttime="20201005 12:31:43.522"></status>
</kw>
<msg timestamp="20201005 12:31:47.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:31:47.634" starttime="20201005 12:31:43.522"></status>
</kw>
<msg timestamp="20201005 12:31:47.635" level="INFO">${result} = 2020-10-05 12:31:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:31:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201005 12:31:47.635" starttime="20201005 12:31:43.521"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:31:47.637" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:31:49.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:31:49.849" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 12:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-05 12:30 ofs://om/volume1/bucket1/ozone-17286
-rw-...</msg>
<status status="PASS" endtime="20201005 12:31:49.850" starttime="20201005 12:31:47.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:31:49.851" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 12:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-05 12:30 ofs://om/volume1/bucket1/ozone-17286
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-05 12:31 ofs://om/volume1/bucket1/ozone-66333
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 12:29 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 12:31 ofs://om/volume1/bucket1/wordcount-61.txt</msg>
<status status="PASS" endtime="20201005 12:31:49.851" starttime="20201005 12:31:49.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:31:49.851" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:31:49.851" starttime="20201005 12:31:49.851"></status>
</kw>
<status status="PASS" endtime="20201005 12:31:49.852" starttime="20201005 12:31:47.636"></status>
</kw>
<msg timestamp="20201005 12:31:49.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:31:49.852" starttime="20201005 12:31:47.635"></status>
</kw>
<msg timestamp="20201005 12:31:49.852" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 12:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-05 12:30 ofs://om/volume1/bucket1/ozone-17286
-rw-...</msg>
<status status="PASS" endtime="20201005 12:31:49.852" starttime="20201005 12:31:47.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:31:49.853" starttime="20201005 12:31:49.852"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201005 12:31:49.853" critical="yes" starttime="20201005 12:31:43.511"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201005 12:31:49.854" starttime="20201005 12:31:43.463"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:30:11.154" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 12:30:11.154" starttime="20201005 12:30:11.152"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:30:11.154" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 12:30:11.155" starttime="20201005 12:30:11.154"></status>
</kw>
<status status="PASS" endtime="20201005 12:30:11.155" starttime="20201005 12:30:11.152"></status>
</kw>
<msg timestamp="20201005 12:30:11.155" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 12:30:11.155" starttime="20201005 12:30:11.151"></status>
</kw>
<status status="PASS" endtime="20201005 12:30:11.155" starttime="20201005 12:30:11.151"></status>
</kw>
<msg timestamp="20201005 12:30:11.155" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 12:30:11.155" starttime="20201005 12:30:11.150"></status>
</kw>
<msg timestamp="20201005 12:30:11.156" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 12:30:11.156" starttime="20201005 12:30:11.150"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201005 12:30:11.156" level="INFO">${random} = 17286</msg>
<status status="PASS" endtime="20201005 12:30:11.156" starttime="20201005 12:30:11.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:30:11.159" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-17286 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:30:15.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:30:15.823" level="INFO">${output} = 2020-10-05 12:30:13 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:30:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201005 12:30:15.823" starttime="20201005 12:30:11.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:30:15.824" level="INFO">2020-10-05 12:30:13 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:30:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-05 12:30:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-05 12:30:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 12:30:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9211D72441FC-&gt;99eaada5-2906-4444-a344-bf56188cb58a
2020-10-05 12:30:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201005 12:30:15.824" starttime="20201005 12:30:15.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:30:15.825" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:30:15.825" starttime="20201005 12:30:15.824"></status>
</kw>
<status status="PASS" endtime="20201005 12:30:15.825" starttime="20201005 12:30:11.157"></status>
</kw>
<msg timestamp="20201005 12:30:15.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:30:15.826" starttime="20201005 12:30:11.157"></status>
</kw>
<msg timestamp="20201005 12:30:15.826" level="INFO">${result} = 2020-10-05 12:30:13 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:30:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201005 12:30:15.826" starttime="20201005 12:30:11.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:30:15.829" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:30:17.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:30:17.859" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 12:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-05 12:30 o3fs://bucket1.volume1.om/ozone-17286
dr...</msg>
<status status="PASS" endtime="20201005 12:30:17.859" starttime="20201005 12:30:15.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:30:17.860" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 12:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-05 12:30 o3fs://bucket1.volume1.om/ozone-17286
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 12:29 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201005 12:30:17.860" starttime="20201005 12:30:17.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:30:17.860" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:30:17.861" starttime="20201005 12:30:17.860"></status>
</kw>
<status status="PASS" endtime="20201005 12:30:17.861" starttime="20201005 12:30:15.827"></status>
</kw>
<msg timestamp="20201005 12:30:17.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:30:17.861" starttime="20201005 12:30:15.827"></status>
</kw>
<msg timestamp="20201005 12:30:17.861" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 12:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-05 12:30 o3fs://bucket1.volume1.om/ozone-17286
dr...</msg>
<status status="PASS" endtime="20201005 12:30:17.861" starttime="20201005 12:30:15.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:30:17.862" starttime="20201005 12:30:17.861"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201005 12:30:17.862" critical="yes" starttime="20201005 12:30:11.149"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201005 12:30:17.863" starttime="20201005 12:30:11.107"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:30:06.056" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:30:06.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:30:06.059" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201005 12:30:06.059" starttime="20201005 12:30:06.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:30:06.060" level="INFO">rm</msg>
<status status="PASS" endtime="20201005 12:30:06.060" starttime="20201005 12:30:06.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:30:06.061" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:30:06.061" starttime="20201005 12:30:06.060"></status>
</kw>
<status status="PASS" endtime="20201005 12:30:06.061" starttime="20201005 12:30:06.054"></status>
</kw>
<msg timestamp="20201005 12:30:06.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:30:06.061" starttime="20201005 12:30:06.054"></status>
</kw>
<msg timestamp="20201005 12:30:06.061" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201005 12:30:06.061" starttime="20201005 12:30:06.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:30:06.063" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:30:06.063" starttime="20201005 12:30:06.061"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:30:06.066" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:30:06.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:30:06.082" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:30:06.082" starttime="20201005 12:30:06.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:30:06.083" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:30:06.083" starttime="20201005 12:30:06.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:30:06.083" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:30:06.083" starttime="20201005 12:30:06.083"></status>
</kw>
<status status="PASS" endtime="20201005 12:30:06.084" starttime="20201005 12:30:06.064"></status>
</kw>
<msg timestamp="20201005 12:30:06.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:30:06.084" starttime="20201005 12:30:06.064"></status>
</kw>
<status status="PASS" endtime="20201005 12:30:06.084" starttime="20201005 12:30:06.063"></status>
</kw>
<status status="PASS" endtime="20201005 12:30:06.084" starttime="20201005 12:30:06.063"></status>
</kw>
<status status="PASS" endtime="20201005 12:30:06.084" starttime="20201005 12:30:06.053"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:30:06.084" critical="yes" starttime="20201005 12:30:06.052"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201005 12:30:06.085" starttime="20201005 12:30:06.010"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:29:11.214" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:29:11.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:29:11.215" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201005 12:29:11.215" starttime="20201005 12:29:11.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:29:11.216" level="INFO">om</msg>
<status status="PASS" endtime="20201005 12:29:11.216" starttime="20201005 12:29:11.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:29:11.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:29:11.217" starttime="20201005 12:29:11.216"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:11.217" starttime="20201005 12:29:11.208"></status>
</kw>
<msg timestamp="20201005 12:29:11.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:29:11.217" starttime="20201005 12:29:11.208"></status>
</kw>
<msg timestamp="20201005 12:29:11.217" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201005 12:29:11.217" starttime="20201005 12:29:11.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201005 12:29:11.218" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201005 12:29:11.218" starttime="20201005 12:29:11.218"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:29:11.223" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:29:11.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:29:11.234" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:29:11.234" starttime="20201005 12:29:11.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:29:11.235" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:29:11.235" starttime="20201005 12:29:11.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:29:11.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:29:11.236" starttime="20201005 12:29:11.236"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:11.237" starttime="20201005 12:29:11.219"></status>
</kw>
<msg timestamp="20201005 12:29:11.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:29:11.237" starttime="20201005 12:29:11.219"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:11.238" starttime="20201005 12:29:11.219"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:11.238" starttime="20201005 12:29:11.218"></status>
</kw>
<status status="PASS" endtime="20201005 12:29:11.238" starttime="20201005 12:29:11.207"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:29:11.238" critical="yes" starttime="20201005 12:29:11.206"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201005 12:29:11.239" starttime="20201005 12:29:11.162"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:31:55.249" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:31:55.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:31:55.257" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:31:55.257" starttime="20201005 12:31:55.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:31:55.258" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:31:55.258" starttime="20201005 12:31:55.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:31:55.259" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:31:55.259" starttime="20201005 12:31:55.258"></status>
</kw>
<status status="PASS" endtime="20201005 12:31:55.259" starttime="20201005 12:31:55.247"></status>
</kw>
<msg timestamp="20201005 12:31:55.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:31:55.259" starttime="20201005 12:31:55.246"></status>
</kw>
<msg timestamp="20201005 12:31:55.259" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:31:55.260" starttime="20201005 12:31:55.246"></status>
</kw>
<msg timestamp="20201005 12:31:55.260" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:31:55.260" starttime="20201005 12:31:55.246"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 12:31:55.263" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 12:31:55.263" starttime="20201005 12:31:55.262"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:31:55.263" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 12:31:55.263" starttime="20201005 12:31:55.263"></status>
</kw>
<status status="PASS" endtime="20201005 12:31:55.263" starttime="20201005 12:31:55.262"></status>
</kw>
<msg timestamp="20201005 12:31:55.264" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 12:31:55.264" starttime="20201005 12:31:55.262"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:31:55.264" starttime="20201005 12:31:55.264"></status>
</kw>
<msg timestamp="20201005 12:31:55.264" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201005 12:31:55.264" starttime="20201005 12:31:55.264"></status>
</kw>
<status status="PASS" endtime="20201005 12:31:55.265" starttime="20201005 12:31:55.261"></status>
</kw>
<msg timestamp="20201005 12:31:55.265" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 12:31:55.265" starttime="20201005 12:31:55.260"></status>
</kw>
<msg timestamp="20201005 12:31:55.265" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 12:31:55.265" starttime="20201005 12:31:55.260"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:31:55.268" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:32:30.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:32:30.660" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-05 12:31:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:31:57 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201005 12:32:30.660" starttime="20201005 12:31:55.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:32:30.662" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-05 12:31:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:31:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-05 12:31:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-05 12:31:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 12:31:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8D2477559A9D-&gt;99eaada5-2906-4444-a344-bf56188cb58a
2020-10-05 12:31:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-05 12:31:59 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-10-05 12:31:59 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-10-05 12:31:59 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601901119354, maxDate=1602505919354, sequenceNumber=3, masterKeyId=2))
2020-10-05 12:31:59 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a6 8e fd c5 cf 2e 38 a6 96 af e6 d1 2e 40 03 48 01 5a 0d 33 32 36 36 31 39 37 35 31 31 37 34 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-05 12:31:59 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601901119354, maxDate=1602505919354, sequenceNumber=3, masterKeyId=2)
2020-10-05 12:31:59 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-05 12:31:59 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-05 12:32:00 INFO  JobSubmitter:202 - number of splits:3
2020-10-05 12:32:00 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-05 12:32:00 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601900914666_0003
2020-10-05 12:32:00 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a6 8e fd c5 cf 2e 38 a6 96 af e6 d1 2e 40 03 48 01 5a 0d 33 32 36 36 31 39 37 35 31 31 37 34 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601901119354, maxDate=1602505919354, sequenceNumber=3, masterKeyId=2)]
2020-10-05 12:32:00 INFO  Configuration:2752 - resource-types.xml not found
2020-10-05 12:32:00 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-05 12:32:00 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-05 12:32:01 INFO  YarnClientImpl:311 - Submitted application application_1601900914666_0003
2020-10-05 12:32:01 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601900914666_0003/
2020-10-05 12:32:01 INFO  Job:1619 - Running job: job_1601900914666_0003
2020-10-05 12:32:09 INFO  Job:1640 - Job job_1601900914666_0003 running in uber mode : false
2020-10-05 12:32:09 INFO  Job:1647 -  map 0% reduce 0%
2020-10-05 12:32:22 INFO  Job:1647 -  map 33% reduce 0%
2020-10-05 12:32:23 INFO  Job:1647 -  map 100% reduce 0%
2020-10-05 12:32:28 INFO  Job:1647 -  map 100% reduce 100%
2020-10-05 12:32:29 INFO  Job:1658 - Job job_1601900914666_0003 completed successfully
2020-10-05 12:32:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1052629
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=55144
		Total time spent by all reduces in occupied slots (ms)=8136
		Total time spent by all map tasks (ms)=27572
		Total time spent by all reduce tasks (ms)=4068
		Total vcore-milliseconds taken by all map tasks=27572
		Total vcore-milliseconds taken by all reduce tasks=4068
		Total megabyte-milliseconds taken by all map tasks=56467456
		Total megabyte-milliseconds taken by all reduce tasks=8331264
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1149
		CPU time spent (ms)=8810
		Physical memory (bytes) snapshot=1322999808
		Virtual memory (bytes) snapshot=14298443776
		Total committed heap usage (bytes)=1282932736
		Peak Map Physical memory (bytes)=367202304
		Peak Map Virtual memory (bytes)=3574722560
		Peak Reduce Physical memory (bytes)=369192960
		Peak Reduce Virtual memory (bytes)=3575164928
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.212 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201005 12:32:30.662" starttime="20201005 12:32:30.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:32:30.663" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:32:30.663" starttime="20201005 12:32:30.663"></status>
</kw>
<status status="PASS" endtime="20201005 12:32:30.664" starttime="20201005 12:31:55.266"></status>
</kw>
<msg timestamp="20201005 12:32:30.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:32:30.664" starttime="20201005 12:31:55.266"></status>
</kw>
<msg timestamp="20201005 12:32:30.665" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-05 12:31:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:31:57 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201005 12:32:30.665" starttime="20201005 12:31:55.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201005 12:32:30.665" starttime="20201005 12:32:30.665"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201005 12:32:30.665" critical="yes" starttime="20201005 12:31:55.245"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:32:30.670" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:32:30.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:32:30.677" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:32:30.678" starttime="20201005 12:32:30.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:32:30.678" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:32:30.679" starttime="20201005 12:32:30.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:32:30.679" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:32:30.679" starttime="20201005 12:32:30.679"></status>
</kw>
<status status="PASS" endtime="20201005 12:32:30.680" starttime="20201005 12:32:30.668"></status>
</kw>
<msg timestamp="20201005 12:32:30.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:32:30.680" starttime="20201005 12:32:30.668"></status>
</kw>
<msg timestamp="20201005 12:32:30.680" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:32:30.680" starttime="20201005 12:32:30.667"></status>
</kw>
<msg timestamp="20201005 12:32:30.680" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:32:30.684" starttime="20201005 12:32:30.667"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201005 12:32:30.685" level="INFO">${random} = 21</msg>
<status status="PASS" endtime="20201005 12:32:30.685" starttime="20201005 12:32:30.684"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 12:32:30.688" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 12:32:30.688" starttime="20201005 12:32:30.688"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:32:30.689" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 12:32:30.689" starttime="20201005 12:32:30.689"></status>
</kw>
<status status="PASS" endtime="20201005 12:32:30.689" starttime="20201005 12:32:30.687"></status>
</kw>
<msg timestamp="20201005 12:32:30.689" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 12:32:30.689" starttime="20201005 12:32:30.687"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:32:30.691" starttime="20201005 12:32:30.690"></status>
</kw>
<msg timestamp="20201005 12:32:30.691" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201005 12:32:30.691" starttime="20201005 12:32:30.690"></status>
</kw>
<status status="PASS" endtime="20201005 12:32:30.691" starttime="20201005 12:32:30.686"></status>
</kw>
<msg timestamp="20201005 12:32:30.691" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 12:32:30.691" starttime="20201005 12:32:30.686"></status>
</kw>
<msg timestamp="20201005 12:32:30.691" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 12:32:30.691" starttime="20201005 12:32:30.685"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 12:32:30.695" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 12:32:30.695" starttime="20201005 12:32:30.694"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:32:30.695" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 12:32:30.696" starttime="20201005 12:32:30.695"></status>
</kw>
<status status="PASS" endtime="20201005 12:32:30.696" starttime="20201005 12:32:30.694"></status>
</kw>
<msg timestamp="20201005 12:32:30.696" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 12:32:30.696" starttime="20201005 12:32:30.693"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:32:30.697" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201005 12:32:30.697" starttime="20201005 12:32:30.697"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:32:30.698" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201005 12:32:30.698" starttime="20201005 12:32:30.698"></status>
</kw>
<status status="PASS" endtime="20201005 12:32:30.698" starttime="20201005 12:32:30.696"></status>
</kw>
<msg timestamp="20201005 12:32:30.698" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201005 12:32:30.698" starttime="20201005 12:32:30.696"></status>
</kw>
<status status="PASS" endtime="20201005 12:32:30.699" starttime="20201005 12:32:30.693"></status>
</kw>
<msg timestamp="20201005 12:32:30.699" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201005 12:32:30.699" starttime="20201005 12:32:30.692"></status>
</kw>
<msg timestamp="20201005 12:32:30.699" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201005 12:32:30.699" starttime="20201005 12:32:30.692"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 12:32:30.702" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 12:32:30.702" starttime="20201005 12:32:30.702"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:32:30.703" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 12:32:30.703" starttime="20201005 12:32:30.702"></status>
</kw>
<status status="PASS" endtime="20201005 12:32:30.703" starttime="20201005 12:32:30.701"></status>
</kw>
<msg timestamp="20201005 12:32:30.703" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 12:32:30.703" starttime="20201005 12:32:30.701"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:32:30.704" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201005 12:32:30.704" starttime="20201005 12:32:30.704"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:32:30.705" level="INFO">${result} = /wordcount-21.txt</msg>
<status status="PASS" endtime="20201005 12:32:30.705" starttime="20201005 12:32:30.704"></status>
</kw>
<status status="PASS" endtime="20201005 12:32:30.705" starttime="20201005 12:32:30.704"></status>
</kw>
<msg timestamp="20201005 12:32:30.705" level="INFO">${path_with_leading} = /wordcount-21.txt</msg>
<status status="PASS" endtime="20201005 12:32:30.705" starttime="20201005 12:32:30.703"></status>
</kw>
<status status="PASS" endtime="20201005 12:32:30.705" starttime="20201005 12:32:30.700"></status>
</kw>
<msg timestamp="20201005 12:32:30.706" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-21.txt</msg>
<status status="PASS" endtime="20201005 12:32:30.706" starttime="20201005 12:32:30.700"></status>
</kw>
<msg timestamp="20201005 12:32:30.706" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-21.txt</msg>
<status status="PASS" endtime="20201005 12:32:30.706" starttime="20201005 12:32:30.699"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:32:30.709" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-21.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:33:03.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:33:03.995" level="INFO">${output} = 2020-10-05 12:32:32 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-10-05 12:32:33 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
202...</msg>
<status status="PASS" endtime="20201005 12:33:03.995" starttime="20201005 12:32:30.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:33:03.996" level="INFO">2020-10-05 12:32:32 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-10-05 12:32:33 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-10-05 12:32:33 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601901153237, maxDate=1602505953237, sequenceNumber=4, masterKeyId=2))
2020-10-05 12:32:33 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ee 96 ff c5 cf 2e 38 ee 9e b1 e6 d1 2e 40 04 48 01 5a 0d 33 32 36 36 31 39 37 35 31 31 37 34 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-05 12:32:33 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601901153237, maxDate=1602505953237, sequenceNumber=4, masterKeyId=2)
2020-10-05 12:32:33 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-05 12:32:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:32:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-05 12:32:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-05 12:32:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 12:32:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1A1C0846E164-&gt;99eaada5-2906-4444-a344-bf56188cb58a
2020-10-05 12:32:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-05 12:32:35 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-05 12:32:35 INFO  JobSubmitter:202 - number of splits:3
2020-10-05 12:32:35 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-05 12:32:35 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601900914666_0004
2020-10-05 12:32:35 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ee 96 ff c5 cf 2e 38 ee 9e b1 e6 d1 2e 40 04 48 01 5a 0d 33 32 36 36 31 39 37 35 31 31 37 34 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601901153237, maxDate=1602505953237, sequenceNumber=4, masterKeyId=2)]
2020-10-05 12:32:35 INFO  Configuration:2752 - resource-types.xml not found
2020-10-05 12:32:35 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-05 12:32:36 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-05 12:32:37 INFO  YarnClientImpl:311 - Submitted application application_1601900914666_0004
2020-10-05 12:32:37 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601900914666_0004/
2020-10-05 12:32:37 INFO  Job:1619 - Running job: job_1601900914666_0004
2020-10-05 12:32:45 INFO  Job:1640 - Job job_1601900914666_0004 running in uber mode : false
2020-10-05 12:32:45 INFO  Job:1647 -  map 0% reduce 0%
2020-10-05 12:32:55 INFO  Job:1647 -  map 33% reduce 0%
2020-10-05 12:32:57 INFO  Job:1647 -  map 100% reduce 0%
2020-10-05 12:33:02 INFO  Job:1647 -  map 100% reduce 100%
2020-10-05 12:33:03 INFO  Job:1658 - Job job_1601900914666_0004 completed successfully
2020-10-05 12:33:03 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1115309
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47436
		Total time spent by all reduces in occupied slots (ms)=8364
		Total time spent by all map tasks (ms)=23718
		Total time spent by all reduce tasks (ms)=4182
		Total vcore-milliseconds taken by all map tasks=23718
		Total vcore-milliseconds taken by all reduce tasks=4182
		Total megabyte-milliseconds taken by all map tasks=48574464
		Total megabyte-milliseconds taken by all reduce tasks=8564736
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1128
		CPU time spent (ms)=8360
		Physical memory (bytes) snapshot=1266577408
		Virtual memory (bytes) snapshot=14257737728
		Total committed heap usage (bytes)=1343225856
		Peak Map Physical memory (bytes)=340840448
		Peak Map Virtual memory (bytes)=3570917376
		Peak Reduce Physical memory (bytes)=366551040
		Peak Reduce Virtual memory (bytes)=3578126336
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201005 12:33:03.997" starttime="20201005 12:33:03.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:33:03.997" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:33:03.997" starttime="20201005 12:33:03.997"></status>
</kw>
<status status="PASS" endtime="20201005 12:33:03.997" starttime="20201005 12:32:30.707"></status>
</kw>
<msg timestamp="20201005 12:33:03.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:33:03.998" starttime="20201005 12:32:30.706"></status>
</kw>
<msg timestamp="20201005 12:33:03.999" level="INFO">${output} = 2020-10-05 12:32:32 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-10-05 12:32:33 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
202...</msg>
<status status="PASS" endtime="20201005 12:33:03.999" starttime="20201005 12:32:30.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201005 12:33:03.999" starttime="20201005 12:33:03.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201005 12:33:04.000" starttime="20201005 12:33:03.999"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201005 12:33:04.000" critical="yes" starttime="20201005 12:32:30.666"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201005 12:33:04.001" starttime="20201005 12:31:55.203"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:30:22.960" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:30:22.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:30:22.967" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:30:22.967" starttime="20201005 12:30:22.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:30:22.968" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:30:22.968" starttime="20201005 12:30:22.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:30:22.968" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:30:22.968" starttime="20201005 12:30:22.968"></status>
</kw>
<status status="PASS" endtime="20201005 12:30:22.968" starttime="20201005 12:30:22.958"></status>
</kw>
<msg timestamp="20201005 12:30:22.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:30:22.969" starttime="20201005 12:30:22.958"></status>
</kw>
<msg timestamp="20201005 12:30:22.969" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:30:22.969" starttime="20201005 12:30:22.958"></status>
</kw>
<msg timestamp="20201005 12:30:22.969" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:30:22.969" starttime="20201005 12:30:22.957"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:30:22.972" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 12:30:22.973" starttime="20201005 12:30:22.972"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:30:22.973" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 12:30:22.973" starttime="20201005 12:30:22.973"></status>
</kw>
<status status="PASS" endtime="20201005 12:30:22.973" starttime="20201005 12:30:22.972"></status>
</kw>
<msg timestamp="20201005 12:30:22.973" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 12:30:22.973" starttime="20201005 12:30:22.971"></status>
</kw>
<status status="PASS" endtime="20201005 12:30:22.974" starttime="20201005 12:30:22.970"></status>
</kw>
<msg timestamp="20201005 12:30:22.974" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 12:30:22.974" starttime="20201005 12:30:22.970"></status>
</kw>
<msg timestamp="20201005 12:30:22.974" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 12:30:22.974" starttime="20201005 12:30:22.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:30:22.977" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:31:02.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:31:02.013" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-05 12:30:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:30:25 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201005 12:31:02.013" starttime="20201005 12:30:22.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:31:02.014" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-05 12:30:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:30:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-05 12:30:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-05 12:30:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 12:30:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-ED1D3E06D7A5-&gt;99eaada5-2906-4444-a344-bf56188cb58a
2020-10-05 12:30:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-05 12:30:29 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-10-05 12:30:29 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-10-05 12:30:29 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601901029743, maxDate=1602505829743, sequenceNumber=1, masterKeyId=2))
2020-10-05 12:30:29 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ef d0 f7 c5 cf 2e 38 ef d8 a9 e6 d1 2e 40 01 48 01 5a 0d 33 32 36 36 31 39 37 35 31 31 37 34 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-05 12:30:29 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601901029743, maxDate=1602505829743, sequenceNumber=1, masterKeyId=2)
2020-10-05 12:30:30 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-05 12:30:30 INFO  JobSubmitter:202 - number of splits:3
2020-10-05 12:30:30 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-05 12:30:30 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601900914666_0001
2020-10-05 12:30:30 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ef d0 f7 c5 cf 2e 38 ef d8 a9 e6 d1 2e 40 01 48 01 5a 0d 33 32 36 36 31 39 37 35 31 31 37 34 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601901029743, maxDate=1602505829743, sequenceNumber=1, masterKeyId=2)]
2020-10-05 12:30:31 INFO  Configuration:2752 - resource-types.xml not found
2020-10-05 12:30:31 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-05 12:30:31 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-05 12:30:32 INFO  YarnClientImpl:311 - Submitted application application_1601900914666_0001
2020-10-05 12:30:32 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601900914666_0001/
2020-10-05 12:30:32 INFO  Job:1619 - Running job: job_1601900914666_0001
2020-10-05 12:30:43 INFO  Job:1640 - Job job_1601900914666_0001 running in uber mode : false
2020-10-05 12:30:43 INFO  Job:1647 -  map 0% reduce 0%
2020-10-05 12:30:54 INFO  Job:1647 -  map 33% reduce 0%
2020-10-05 12:30:55 INFO  Job:1647 -  map 67% reduce 0%
2020-10-05 12:30:56 INFO  Job:1647 -  map 100% reduce 0%
2020-10-05 12:31:01 INFO  Job:1647 -  map 100% reduce 100%
2020-10-05 12:31:01 INFO  Job:1658 - Job job_1601900914666_0001 completed successfully
2020-10-05 12:31:01 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1052841
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47806
		Total time spent by all reduces in occupied slots (ms)=8672
		Total time spent by all map tasks (ms)=23903
		Total time spent by all reduce tasks (ms)=4336
		Total vcore-milliseconds taken by all map tasks=23903
		Total vcore-milliseconds taken by all reduce tasks=4336
		Total megabyte-milliseconds taken by all map tasks=48953344
		Total megabyte-milliseconds taken by all reduce tasks=8880128
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1102
		CPU time spent (ms)=7990
		Physical memory (bytes) snapshot=1380753408
		Virtual memory (bytes) snapshot=14295343104
		Total committed heap usage (bytes)=1406664704
		Peak Map Physical memory (bytes)=361127936
		Peak Map Virtual memory (bytes)=3574824960
		Peak Reduce Physical memory (bytes)=366927872
		Peak Reduce Virtual memory (bytes)=3573956608
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.331 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201005 12:31:02.015" starttime="20201005 12:31:02.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:31:02.015" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:31:02.016" starttime="20201005 12:31:02.015"></status>
</kw>
<status status="PASS" endtime="20201005 12:31:02.016" starttime="20201005 12:30:22.975"></status>
</kw>
<msg timestamp="20201005 12:31:02.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:31:02.016" starttime="20201005 12:30:22.975"></status>
</kw>
<msg timestamp="20201005 12:31:02.017" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-05 12:30:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:30:25 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201005 12:31:02.017" starttime="20201005 12:30:22.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201005 12:31:02.017" starttime="20201005 12:31:02.017"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201005 12:31:02.018" critical="yes" starttime="20201005 12:30:22.957"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:31:02.026" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:31:02.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:31:02.032" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:31:02.032" starttime="20201005 12:31:02.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:31:02.033" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:31:02.033" starttime="20201005 12:31:02.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:31:02.033" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:31:02.033" starttime="20201005 12:31:02.033"></status>
</kw>
<status status="PASS" endtime="20201005 12:31:02.033" starttime="20201005 12:31:02.023"></status>
</kw>
<msg timestamp="20201005 12:31:02.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:31:02.034" starttime="20201005 12:31:02.023"></status>
</kw>
<msg timestamp="20201005 12:31:02.034" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:31:02.034" starttime="20201005 12:31:02.023"></status>
</kw>
<msg timestamp="20201005 12:31:02.034" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:31:02.034" starttime="20201005 12:31:02.022"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201005 12:31:02.035" level="INFO">${random} = 61</msg>
<status status="PASS" endtime="20201005 12:31:02.035" starttime="20201005 12:31:02.034"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:31:02.039" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 12:31:02.039" starttime="20201005 12:31:02.038"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:31:02.039" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 12:31:02.039" starttime="20201005 12:31:02.039"></status>
</kw>
<status status="PASS" endtime="20201005 12:31:02.039" starttime="20201005 12:31:02.038"></status>
</kw>
<msg timestamp="20201005 12:31:02.039" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 12:31:02.039" starttime="20201005 12:31:02.037"></status>
</kw>
<status status="PASS" endtime="20201005 12:31:02.040" starttime="20201005 12:31:02.037"></status>
</kw>
<msg timestamp="20201005 12:31:02.040" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 12:31:02.040" starttime="20201005 12:31:02.036"></status>
</kw>
<msg timestamp="20201005 12:31:02.040" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 12:31:02.040" starttime="20201005 12:31:02.035"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:31:02.043" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 12:31:02.044" starttime="20201005 12:31:02.043"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:31:02.044" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 12:31:02.044" starttime="20201005 12:31:02.044"></status>
</kw>
<status status="PASS" endtime="20201005 12:31:02.044" starttime="20201005 12:31:02.042"></status>
</kw>
<msg timestamp="20201005 12:31:02.044" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 12:31:02.045" starttime="20201005 12:31:02.042"></status>
</kw>
<status status="PASS" endtime="20201005 12:31:02.045" starttime="20201005 12:31:02.041"></status>
</kw>
<msg timestamp="20201005 12:31:02.045" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201005 12:31:02.045" starttime="20201005 12:31:02.041"></status>
</kw>
<msg timestamp="20201005 12:31:02.045" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201005 12:31:02.045" starttime="20201005 12:31:02.040"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:31:02.048" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 12:31:02.048" starttime="20201005 12:31:02.048"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:31:02.049" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 12:31:02.049" starttime="20201005 12:31:02.049"></status>
</kw>
<status status="PASS" endtime="20201005 12:31:02.049" starttime="20201005 12:31:02.047"></status>
</kw>
<msg timestamp="20201005 12:31:02.049" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 12:31:02.049" starttime="20201005 12:31:02.047"></status>
</kw>
<status status="PASS" endtime="20201005 12:31:02.050" starttime="20201005 12:31:02.046"></status>
</kw>
<msg timestamp="20201005 12:31:02.050" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-61.txt</msg>
<status status="PASS" endtime="20201005 12:31:02.050" starttime="20201005 12:31:02.046"></status>
</kw>
<msg timestamp="20201005 12:31:02.050" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-61.txt</msg>
<status status="PASS" endtime="20201005 12:31:02.050" starttime="20201005 12:31:02.045"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:31:02.053" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-61.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:31:37.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:31:37.264" level="INFO">${output} = 2020-10-05 12:31:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-10-05 12:31:04 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
202...</msg>
<status status="PASS" endtime="20201005 12:31:37.264" starttime="20201005 12:31:02.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:31:37.266" level="INFO">2020-10-05 12:31:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-10-05 12:31:04 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-10-05 12:31:04 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601901064731, maxDate=1602505864731, sequenceNumber=2, masterKeyId=2))
2020-10-05 12:31:04 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 99 e3 f9 c5 cf 2e 38 99 eb ab e6 d1 2e 40 02 48 01 5a 0d 33 32 36 36 31 39 37 35 31 31 37 34 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-05 12:31:04 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601901064731, maxDate=1602505864731, sequenceNumber=2, masterKeyId=2)
2020-10-05 12:31:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-05 12:31:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:31:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-05 12:31:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-05 12:31:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 12:31:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-ABE467A4BF41-&gt;99eaada5-2906-4444-a344-bf56188cb58a
2020-10-05 12:31:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-05 12:31:06 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-05 12:31:06 INFO  JobSubmitter:202 - number of splits:3
2020-10-05 12:31:06 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-05 12:31:08 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601900914666_0002
2020-10-05 12:31:08 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 99 e3 f9 c5 cf 2e 38 99 eb ab e6 d1 2e 40 02 48 01 5a 0d 33 32 36 36 31 39 37 35 31 31 37 34 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601901064731, maxDate=1602505864731, sequenceNumber=2, masterKeyId=2)]
2020-10-05 12:31:08 INFO  Configuration:2752 - resource-types.xml not found
2020-10-05 12:31:08 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-05 12:31:08 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-05 12:31:09 INFO  YarnClientImpl:311 - Submitted application application_1601900914666_0002
2020-10-05 12:31:09 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601900914666_0002/
2020-10-05 12:31:09 INFO  Job:1619 - Running job: job_1601900914666_0002
2020-10-05 12:31:17 INFO  Job:1640 - Job job_1601900914666_0002 running in uber mode : false
2020-10-05 12:31:17 INFO  Job:1647 -  map 0% reduce 0%
2020-10-05 12:31:28 INFO  Job:1647 -  map 33% reduce 0%
2020-10-05 12:31:30 INFO  Job:1647 -  map 100% reduce 0%
2020-10-05 12:31:35 INFO  Job:1647 -  map 100% reduce 100%
2020-10-05 12:31:36 INFO  Job:1658 - Job job_1601900914666_0002 completed successfully
2020-10-05 12:31:36 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1115393
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50912
		Total time spent by all reduces in occupied slots (ms)=8330
		Total time spent by all map tasks (ms)=25456
		Total time spent by all reduce tasks (ms)=4165
		Total vcore-milliseconds taken by all map tasks=25456
		Total vcore-milliseconds taken by all reduce tasks=4165
		Total megabyte-milliseconds taken by all map tasks=52133888
		Total megabyte-milliseconds taken by all reduce tasks=8529920
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1204
		CPU time spent (ms)=8330
		Physical memory (bytes) snapshot=1304522752
		Virtual memory (bytes) snapshot=14285119488
		Total committed heap usage (bytes)=1368915968
		Peak Map Physical memory (bytes)=340406272
		Peak Map Virtual memory (bytes)=3573338112
		Peak Reduce Physical memory (bytes)=369774592
		Peak Reduce Virtual memory (bytes)=3576786944
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201005 12:31:37.266" starttime="20201005 12:31:37.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:31:37.266" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:31:37.267" starttime="20201005 12:31:37.266"></status>
</kw>
<status status="PASS" endtime="20201005 12:31:37.267" starttime="20201005 12:31:02.051"></status>
</kw>
<msg timestamp="20201005 12:31:37.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:31:37.267" starttime="20201005 12:31:02.051"></status>
</kw>
<msg timestamp="20201005 12:31:37.268" level="INFO">${output} = 2020-10-05 12:31:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-10-05 12:31:04 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
202...</msg>
<status status="PASS" endtime="20201005 12:31:37.268" starttime="20201005 12:31:02.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201005 12:31:37.268" starttime="20201005 12:31:37.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201005 12:31:37.269" starttime="20201005 12:31:37.269"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201005 12:31:37.269" critical="yes" starttime="20201005 12:31:02.018"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201005 12:31:37.271" starttime="20201005 12:30:22.914"></status>
</suite>
<status status="PASS" elapsedtime="200928" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
