<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201005 11:51:37.789" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1" name="ozone-ha">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201005 11:49:06.965" level="INFO">${random} = 02443</msg>
<status status="PASS" endtime="20201005 11:49:06.965" starttime="20201005 11:49:06.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201005 11:49:06.966" level="INFO">${prefix} = 02443</msg>
<status status="PASS" endtime="20201005 11:49:06.966" starttime="20201005 11:49:06.966"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:06.971" starttime="20201005 11:49:06.965"></status>
</kw>
<test id="s1-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:06.983" level="INFO">Running command 'ozone sh volume info /02443-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:13.295" level="INFO">${rc} = 255</msg>
<msg timestamp="20201005 11:49:13.295" level="INFO">${output} = VOLUME_NOT_FOUND Volume 02443-rpcbasic is not found</msg>
<status status="PASS" endtime="20201005 11:49:13.295" starttime="20201005 11:49:06.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:13.296" level="INFO">VOLUME_NOT_FOUND Volume 02443-rpcbasic is not found</msg>
<status status="PASS" endtime="20201005 11:49:13.296" starttime="20201005 11:49:13.295"></status>
</kw>
<msg timestamp="20201005 11:49:13.296" level="INFO">${result} = VOLUME_NOT_FOUND Volume 02443-rpcbasic is not found</msg>
<status status="PASS" endtime="20201005 11:49:13.296" starttime="20201005 11:49:06.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201005 11:49:13.297" starttime="20201005 11:49:13.297"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:13.301" level="INFO">Running command 'ozone sh volume create /02443-rpcbasic --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:16.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:16.278" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:49:16.278" starttime="20201005 11:49:13.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:16.279" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:49:16.279" starttime="20201005 11:49:16.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:16.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:16.280" starttime="20201005 11:49:16.279"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:16.292" starttime="20201005 11:49:13.298"></status>
</kw>
<msg timestamp="20201005 11:49:16.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:16.292" starttime="20201005 11:49:13.298"></status>
</kw>
<msg timestamp="20201005 11:49:16.296" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201005 11:49:16.296" starttime="20201005 11:49:13.297"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201005 11:49:16.297" starttime="20201005 11:49:16.296"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:16.303" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="02443-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:19.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:19.235" level="INFO">${output} = {
  "metadata": {},
  "name": "02443-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-05T11:49:15.905Z",
  "mo...</msg>
<status status="PASS" endtime="20201005 11:49:19.235" starttime="20201005 11:49:16.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:19.237" level="INFO">{
  "metadata": {},
  "name": "02443-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-05T11:49:15.905Z",
  "modificationTime": "2020-10-05T11:49:18.924460Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20201005 11:49:19.237" starttime="20201005 11:49:19.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:19.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:19.238" starttime="20201005 11:49:19.237"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:19.238" starttime="20201005 11:49:16.298"></status>
</kw>
<msg timestamp="20201005 11:49:19.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:19.238" starttime="20201005 11:49:16.298"></status>
</kw>
<msg timestamp="20201005 11:49:19.239" level="INFO">${result} = {
  "metadata": {},
  "name": "02443-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-05T11:49:15.905Z",
  "mo...</msg>
<status status="PASS" endtime="20201005 11:49:19.239" starttime="20201005 11:49:16.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201005 11:49:19.239" starttime="20201005 11:49:19.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:19.245" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="02443-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:21.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:21.555" level="INFO">${output} = {
  "metadata": {},
  "name": "02443-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-05T11:49:15.905Z",
  "mo...</msg>
<status status="PASS" endtime="20201005 11:49:21.555" starttime="20201005 11:49:19.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:21.556" level="INFO">{
  "metadata": {},
  "name": "02443-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-05T11:49:15.905Z",
  "modificationTime": "2020-10-05T11:49:21.303755Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20201005 11:49:21.556" starttime="20201005 11:49:21.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:21.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:21.557" starttime="20201005 11:49:21.556"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:21.557" starttime="20201005 11:49:19.240"></status>
</kw>
<msg timestamp="20201005 11:49:21.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:21.557" starttime="20201005 11:49:19.240"></status>
</kw>
<msg timestamp="20201005 11:49:21.557" level="INFO">${result} = {
  "metadata": {},
  "name": "02443-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-05T11:49:15.905Z",
  "mo...</msg>
<status status="PASS" endtime="20201005 11:49:21.557" starttime="20201005 11:49:19.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201005 11:49:21.558" starttime="20201005 11:49:21.557"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --count-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:21.562" level="INFO">Running command 'ozone sh volume setquota /02443-rpcbasic --space-quota 10TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:23.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:23.752" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:49:23.752" starttime="20201005 11:49:21.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:23.753" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:49:23.753" starttime="20201005 11:49:23.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:23.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:23.754" starttime="20201005 11:49:23.753"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:23.754" starttime="20201005 11:49:21.559"></status>
</kw>
<msg timestamp="20201005 11:49:23.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:23.754" starttime="20201005 11:49:21.559"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:23.755" starttime="20201005 11:49:21.558"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:23.759" level="INFO">Running command 'ozone sh volume info /02443-rpcbasic | jq -r '. | select(.name=="02443-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:25.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:25.954" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20201005 11:49:25.954" starttime="20201005 11:49:23.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:25.955" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20201005 11:49:25.955" starttime="20201005 11:49:25.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:25.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:25.956" starttime="20201005 11:49:25.955"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:25.956" starttime="20201005 11:49:23.756"></status>
</kw>
<msg timestamp="20201005 11:49:25.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:25.956" starttime="20201005 11:49:23.756"></status>
</kw>
<msg timestamp="20201005 11:49:25.956" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20201005 11:49:25.956" starttime="20201005 11:49:23.755"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20201005 11:49:25.957" starttime="20201005 11:49:25.957"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --count-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:25.962" level="INFO">Running command 'ozone sh bucket create /02443-rpcbasic/bb1 --space-quota 10TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:28.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:28.405" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:49:28.405" starttime="20201005 11:49:25.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:28.406" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:49:28.406" starttime="20201005 11:49:28.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:28.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:28.407" starttime="20201005 11:49:28.406"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:28.407" starttime="20201005 11:49:25.958"></status>
</kw>
<msg timestamp="20201005 11:49:28.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:28.407" starttime="20201005 11:49:25.958"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:28.407" starttime="20201005 11:49:25.957"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:28.412" level="INFO">Running command 'ozone sh bucket info /02443-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:30.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:30.715" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20201005 11:49:30.715" starttime="20201005 11:49:28.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:30.716" level="INFO">DISK</msg>
<status status="PASS" endtime="20201005 11:49:30.716" starttime="20201005 11:49:30.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:30.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:30.717" starttime="20201005 11:49:30.716"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:30.717" starttime="20201005 11:49:28.409"></status>
</kw>
<msg timestamp="20201005 11:49:30.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:30.717" starttime="20201005 11:49:28.408"></status>
</kw>
<msg timestamp="20201005 11:49:30.717" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20201005 11:49:30.717" starttime="20201005 11:49:28.408"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20201005 11:49:30.718" starttime="20201005 11:49:30.718"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:30.724" level="INFO">Running command 'ozone sh bucket info /02443-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:33.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:33.098" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20201005 11:49:33.098" starttime="20201005 11:49:30.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:33.099" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20201005 11:49:33.099" starttime="20201005 11:49:33.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:33.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:33.100" starttime="20201005 11:49:33.099"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:33.100" starttime="20201005 11:49:30.720"></status>
</kw>
<msg timestamp="20201005 11:49:33.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:33.101" starttime="20201005 11:49:30.720"></status>
</kw>
<msg timestamp="20201005 11:49:33.101" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20201005 11:49:33.101" starttime="20201005 11:49:30.718"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20201005 11:49:33.101" starttime="20201005 11:49:33.101"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:33.105" level="INFO">Running command 'ozone sh bucket info /02443-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:35.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:35.234" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20201005 11:49:35.234" starttime="20201005 11:49:33.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:35.235" level="INFO">100</msg>
<status status="PASS" endtime="20201005 11:49:35.236" starttime="20201005 11:49:35.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:35.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:35.236" starttime="20201005 11:49:35.236"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:35.237" starttime="20201005 11:49:33.103"></status>
</kw>
<msg timestamp="20201005 11:49:35.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:35.237" starttime="20201005 11:49:33.102"></status>
</kw>
<msg timestamp="20201005 11:49:35.237" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20201005 11:49:35.237" starttime="20201005 11:49:33.101"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20201005 11:49:35.238" starttime="20201005 11:49:35.237"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --count-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:35.243" level="INFO">Running command 'ozone sh bucket setquota /02443-rpcbasic/bb1 --space-quota 1TB --count-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:37.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:37.414" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:49:37.414" starttime="20201005 11:49:35.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:37.415" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:49:37.415" starttime="20201005 11:49:37.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:37.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:37.416" starttime="20201005 11:49:37.415"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:37.416" starttime="20201005 11:49:35.239"></status>
</kw>
<msg timestamp="20201005 11:49:37.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:37.416" starttime="20201005 11:49:35.239"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:37.416" starttime="20201005 11:49:35.238"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:37.422" level="INFO">Running command 'ozone sh bucket info /02443-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:39.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:39.585" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20201005 11:49:39.586" starttime="20201005 11:49:37.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:39.587" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20201005 11:49:39.587" starttime="20201005 11:49:39.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:39.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:39.587" starttime="20201005 11:49:39.587"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:39.588" starttime="20201005 11:49:37.418"></status>
</kw>
<msg timestamp="20201005 11:49:39.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:39.588" starttime="20201005 11:49:37.417"></status>
</kw>
<msg timestamp="20201005 11:49:39.588" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20201005 11:49:39.588" starttime="20201005 11:49:37.417"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20201005 11:49:39.589" starttime="20201005 11:49:39.588"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:39.594" level="INFO">Running command 'ozone sh bucket info /02443-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:41.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:41.826" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20201005 11:49:41.826" starttime="20201005 11:49:39.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:41.827" level="INFO">1000</msg>
<status status="PASS" endtime="20201005 11:49:41.827" starttime="20201005 11:49:41.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:41.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:41.828" starttime="20201005 11:49:41.827"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:41.828" starttime="20201005 11:49:39.590"></status>
</kw>
<msg timestamp="20201005 11:49:41.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:41.828" starttime="20201005 11:49:39.590"></status>
</kw>
<msg timestamp="20201005 11:49:41.829" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20201005 11:49:41.829" starttime="20201005 11:49:39.589"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20201005 11:49:41.829" starttime="20201005 11:49:41.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:41.833" level="INFO">Running command 'ozone sh bucket list /02443-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:43.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:43.980" level="INFO">${output} = 02443-rpcbasic</msg>
<status status="PASS" endtime="20201005 11:49:43.980" starttime="20201005 11:49:41.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:43.981" level="INFO">02443-rpcbasic</msg>
<status status="PASS" endtime="20201005 11:49:43.981" starttime="20201005 11:49:43.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:43.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:43.982" starttime="20201005 11:49:43.982"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:43.983" starttime="20201005 11:49:41.830"></status>
</kw>
<msg timestamp="20201005 11:49:43.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:43.983" starttime="20201005 11:49:41.830"></status>
</kw>
<msg timestamp="20201005 11:49:43.983" level="INFO">${result} = 02443-rpcbasic</msg>
<status status="PASS" endtime="20201005 11:49:43.983" starttime="20201005 11:49:41.829"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20201005 11:49:43.984" starttime="20201005 11:49:43.983"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:43.988" level="INFO">Running command 'ozone sh key put /02443-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:49.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:49.574" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:49:49.574" starttime="20201005 11:49:43.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:49.575" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:49:49.575" starttime="20201005 11:49:49.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:49.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:49.576" starttime="20201005 11:49:49.576"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:49.577" starttime="20201005 11:49:43.986"></status>
</kw>
<msg timestamp="20201005 11:49:49.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:49.577" starttime="20201005 11:49:43.985"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:49.577" starttime="20201005 11:49:43.985"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:49.582" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:49.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:49.583" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:49:49.583" starttime="20201005 11:49:49.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:49.584" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:49:49.584" starttime="20201005 11:49:49.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:49.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:49.585" starttime="20201005 11:49:49.584"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:49.585" starttime="20201005 11:49:49.578"></status>
</kw>
<msg timestamp="20201005 11:49:49.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:49.585" starttime="20201005 11:49:49.578"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:49.585" starttime="20201005 11:49:49.577"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:49.590" level="INFO">Running command 'ozone sh key get /02443-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:53.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:53.620" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:49:53.620" starttime="20201005 11:49:49.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:53.621" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:49:53.621" starttime="20201005 11:49:53.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:53.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:53.622" starttime="20201005 11:49:53.621"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:53.622" starttime="20201005 11:49:49.586"></status>
</kw>
<msg timestamp="20201005 11:49:53.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:53.622" starttime="20201005 11:49:49.586"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:53.623" starttime="20201005 11:49:49.585"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:53.626" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:53.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:53.629" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:49:53.629" starttime="20201005 11:49:53.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:53.630" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:49:53.630" starttime="20201005 11:49:53.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:53.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:53.631" starttime="20201005 11:49:53.630"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:53.631" starttime="20201005 11:49:53.624"></status>
</kw>
<msg timestamp="20201005 11:49:53.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:53.631" starttime="20201005 11:49:53.624"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:53.631" starttime="20201005 11:49:53.623"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:53.634" level="INFO">Running command 'ozone sh key put -t RATIS /02443-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:57.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:57.751" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:49:57.751" starttime="20201005 11:49:53.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:57.752" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:49:57.752" starttime="20201005 11:49:57.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:57.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:57.753" starttime="20201005 11:49:57.752"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:57.753" starttime="20201005 11:49:53.632"></status>
</kw>
<msg timestamp="20201005 11:49:57.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:57.753" starttime="20201005 11:49:53.632"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:57.753" starttime="20201005 11:49:53.631"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:57.757" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:49:57.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:49:57.765" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:49:57.765" starttime="20201005 11:49:57.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:49:57.766" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:49:57.766" starttime="20201005 11:49:57.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:49:57.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:49:57.767" starttime="20201005 11:49:57.766"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:57.767" starttime="20201005 11:49:57.754"></status>
</kw>
<msg timestamp="20201005 11:49:57.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:49:57.767" starttime="20201005 11:49:57.754"></status>
</kw>
<status status="PASS" endtime="20201005 11:49:57.768" starttime="20201005 11:49:57.754"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:49:57.771" level="INFO">Running command 'ozone sh key get /02443-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:01.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:01.449" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:50:01.449" starttime="20201005 11:49:57.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:01.451" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:50:01.451" starttime="20201005 11:50:01.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:01.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:01.452" starttime="20201005 11:50:01.451"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:01.452" starttime="20201005 11:49:57.769"></status>
</kw>
<msg timestamp="20201005 11:50:01.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:01.452" starttime="20201005 11:49:57.768"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:01.452" starttime="20201005 11:49:57.768"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:01.461" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:01.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:01.475" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:50:01.475" starttime="20201005 11:50:01.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:01.476" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:50:01.476" starttime="20201005 11:50:01.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:01.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:01.477" starttime="20201005 11:50:01.476"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:01.477" starttime="20201005 11:50:01.453"></status>
</kw>
<msg timestamp="20201005 11:50:01.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:01.477" starttime="20201005 11:50:01.453"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:01.477" starttime="20201005 11:50:01.452"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:01.484" level="INFO">Running command 'ozone sh key info /02443-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:03.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:03.908" level="INFO">${output} = {
  "volumeName": "02443-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-10-05T11:49:55.598Z",
  "modificationTime": "2020-10-05T11:49:57.379Z",
...</msg>
<status status="PASS" endtime="20201005 11:50:03.908" starttime="20201005 11:50:01.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:03.909" level="INFO">{
  "volumeName": "02443-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-10-05T11:49:55.598Z",
  "modificationTime": "2020-10-05T11:49:57.379Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 104982026360913920,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20201005 11:50:03.909" starttime="20201005 11:50:03.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:03.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:03.910" starttime="20201005 11:50:03.910"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:03.910" starttime="20201005 11:50:01.479"></status>
</kw>
<msg timestamp="20201005 11:50:03.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:03.910" starttime="20201005 11:50:01.478"></status>
</kw>
<msg timestamp="20201005 11:50:03.911" level="INFO">${result} = {
  "volumeName": "02443-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-10-05T11:49:55.598Z",
  "modificationTime": "2020-10-05T11:49:57.379Z",
...</msg>
<status status="PASS" endtime="20201005 11:50:03.911" starttime="20201005 11:50:01.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20201005 11:50:03.911" starttime="20201005 11:50:03.911"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:03.916" level="INFO">Running command 'ozone sh key delete /02443-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:06.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:06.051" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:50:06.051" starttime="20201005 11:50:03.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:06.052" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:50:06.052" starttime="20201005 11:50:06.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:06.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:06.053" starttime="20201005 11:50:06.052"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:06.053" starttime="20201005 11:50:03.912"></status>
</kw>
<msg timestamp="20201005 11:50:06.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:06.053" starttime="20201005 11:50:03.912"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:06.054" starttime="20201005 11:50:03.911"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:06.057" level="INFO">Running command 'ozone sh key cp /02443-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:10.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:10.625" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:50:10.625" starttime="20201005 11:50:06.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:10.626" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:50:10.626" starttime="20201005 11:50:10.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:10.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:10.626" starttime="20201005 11:50:10.626"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:10.627" starttime="20201005 11:50:06.055"></status>
</kw>
<msg timestamp="20201005 11:50:10.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:10.627" starttime="20201005 11:50:06.054"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:10.627" starttime="20201005 11:50:06.054"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:10.631" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:10.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:10.634" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:50:10.634" starttime="20201005 11:50:10.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:10.635" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:50:10.635" starttime="20201005 11:50:10.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:10.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:10.636" starttime="20201005 11:50:10.636"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:10.636" starttime="20201005 11:50:10.629"></status>
</kw>
<msg timestamp="20201005 11:50:10.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:10.637" starttime="20201005 11:50:10.628"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:10.637" starttime="20201005 11:50:10.627"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:10.642" level="INFO">Running command 'ozone sh key get /02443-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:14.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:14.723" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:50:14.723" starttime="20201005 11:50:10.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:14.725" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:50:14.725" starttime="20201005 11:50:14.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:14.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:14.725" starttime="20201005 11:50:14.725"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:14.726" starttime="20201005 11:50:10.638"></status>
</kw>
<msg timestamp="20201005 11:50:14.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:14.726" starttime="20201005 11:50:10.638"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:14.726" starttime="20201005 11:50:10.637"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:14.730" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:14.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:14.733" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:50:14.733" starttime="20201005 11:50:14.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:14.734" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:50:14.734" starttime="20201005 11:50:14.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:14.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:14.734" starttime="20201005 11:50:14.734"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:14.735" starttime="20201005 11:50:14.727"></status>
</kw>
<msg timestamp="20201005 11:50:14.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:14.735" starttime="20201005 11:50:14.727"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:14.735" starttime="20201005 11:50:14.726"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:14.739" level="INFO">Running command 'ozone sh key delete /02443-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:17.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:17.018" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:50:17.018" starttime="20201005 11:50:14.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:17.020" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:50:17.020" starttime="20201005 11:50:17.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:17.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:17.020" starttime="20201005 11:50:17.020"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:17.021" starttime="20201005 11:50:14.736"></status>
</kw>
<msg timestamp="20201005 11:50:17.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:17.021" starttime="20201005 11:50:14.736"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:17.021" starttime="20201005 11:50:14.735"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:17.025" level="INFO">Running command 'ozone sh key get /02443-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:19.178" level="INFO">${rc} = 255</msg>
<msg timestamp="20201005 11:50:19.178" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201005 11:50:19.178" starttime="20201005 11:50:17.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:19.180" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201005 11:50:19.180" starttime="20201005 11:50:19.179"></status>
</kw>
<msg timestamp="20201005 11:50:19.180" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201005 11:50:19.180" starttime="20201005 11:50:17.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20201005 11:50:19.180" starttime="20201005 11:50:19.180"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:19.185" level="INFO">Running command 'ozone sh key get --force /02443-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:23.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:23.209" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:50:23.209" starttime="20201005 11:50:19.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:23.210" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:50:23.210" starttime="20201005 11:50:23.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:23.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:23.211" starttime="20201005 11:50:23.210"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:23.211" starttime="20201005 11:50:19.182"></status>
</kw>
<msg timestamp="20201005 11:50:23.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:23.211" starttime="20201005 11:50:19.181"></status>
</kw>
<msg timestamp="20201005 11:50:23.211" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201005 11:50:23.211" starttime="20201005 11:50:19.181"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20201005 11:50:23.212" starttime="20201005 11:50:23.211"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:23.216" level="INFO">Running command 'ozone sh key info /02443-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:25.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:25.520" level="INFO">${output} = {
  "volumeName": "02443-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-10-05T11:49:46.040Z",
  "modificationTime": "2020-10-05T11:49:49.138Z",
  "rep...</msg>
<status status="PASS" endtime="20201005 11:50:25.521" starttime="20201005 11:50:23.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:25.522" level="INFO">{
  "volumeName": "02443-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-10-05T11:49:46.040Z",
  "modificationTime": "2020-10-05T11:49:49.138Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104982025730850820,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20201005 11:50:25.522" starttime="20201005 11:50:25.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:25.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:25.523" starttime="20201005 11:50:25.522"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:25.523" starttime="20201005 11:50:23.213"></status>
</kw>
<msg timestamp="20201005 11:50:25.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:25.523" starttime="20201005 11:50:23.213"></status>
</kw>
<msg timestamp="20201005 11:50:25.523" level="INFO">${result} = {
  "volumeName": "02443-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-10-05T11:49:46.040Z",
  "modificationTime": "2020-10-05T11:49:49.138Z",
  "rep...</msg>
<status status="PASS" endtime="20201005 11:50:25.523" starttime="20201005 11:50:23.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201005 11:50:25.524" starttime="20201005 11:50:25.524"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:25.529" level="INFO">Running command 'ozone sh key list /02443-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:27.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:27.934" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201005 11:50:27.934" starttime="20201005 11:50:25.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:27.935" level="INFO">key1</msg>
<status status="PASS" endtime="20201005 11:50:27.936" starttime="20201005 11:50:27.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:27.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:27.936" starttime="20201005 11:50:27.936"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:27.937" starttime="20201005 11:50:25.525"></status>
</kw>
<msg timestamp="20201005 11:50:27.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:27.937" starttime="20201005 11:50:25.525"></status>
</kw>
<msg timestamp="20201005 11:50:27.937" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20201005 11:50:27.937" starttime="20201005 11:50:25.524"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201005 11:50:27.938" starttime="20201005 11:50:27.937"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:27.942" level="INFO">Running command 'ozone sh key rename /02443-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:30.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:30.133" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:50:30.133" starttime="20201005 11:50:27.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:30.134" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:50:30.134" starttime="20201005 11:50:30.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:30.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:30.135" starttime="20201005 11:50:30.134"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:30.135" starttime="20201005 11:50:27.939"></status>
</kw>
<msg timestamp="20201005 11:50:30.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:30.135" starttime="20201005 11:50:27.938"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:30.136" starttime="20201005 11:50:27.938"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:30.140" level="INFO">Running command 'ozone sh key list /02443-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:32.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:32.567" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20201005 11:50:32.567" starttime="20201005 11:50:30.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:32.568" level="INFO">key2</msg>
<status status="PASS" endtime="20201005 11:50:32.568" starttime="20201005 11:50:32.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:32.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:32.569" starttime="20201005 11:50:32.568"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:32.569" starttime="20201005 11:50:30.137"></status>
</kw>
<msg timestamp="20201005 11:50:32.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:32.569" starttime="20201005 11:50:30.136"></status>
</kw>
<msg timestamp="20201005 11:50:32.569" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20201005 11:50:32.569" starttime="20201005 11:50:30.136"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201005 11:50:32.570" starttime="20201005 11:50:32.570"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:32.574" level="INFO">Running command 'ozone sh key delete /02443-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:34.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:34.696" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:50:34.696" starttime="20201005 11:50:32.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:34.697" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:50:34.698" starttime="20201005 11:50:34.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:34.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:34.698" starttime="20201005 11:50:34.698"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:34.699" starttime="20201005 11:50:32.571"></status>
</kw>
<msg timestamp="20201005 11:50:34.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:34.700" starttime="20201005 11:50:32.571"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:34.700" starttime="20201005 11:50:32.570"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:34.700" starttime="20201005 11:49:43.984"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:34.700" starttime="20201005 11:49:43.984"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:34.705" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /02443-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:36.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:36.766" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:50:36.766" starttime="20201005 11:50:34.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:36.768" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:50:36.768" starttime="20201005 11:50:36.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:36.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:36.769" starttime="20201005 11:50:36.768"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:36.769" starttime="20201005 11:50:34.701"></status>
</kw>
<msg timestamp="20201005 11:50:36.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:36.769" starttime="20201005 11:50:34.701"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:36.770" starttime="20201005 11:50:34.700"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:36.775" level="INFO">Running command 'ozone sh bucket info /02443-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:39.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:39.275" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201005 11:50:39.276" starttime="20201005 11:50:36.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:39.278" level="INFO">-1</msg>
<status status="PASS" endtime="20201005 11:50:39.278" starttime="20201005 11:50:39.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:39.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:39.278" starttime="20201005 11:50:39.278"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:39.279" starttime="20201005 11:50:36.771"></status>
</kw>
<msg timestamp="20201005 11:50:39.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:39.279" starttime="20201005 11:50:36.771"></status>
</kw>
<msg timestamp="20201005 11:50:39.279" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201005 11:50:39.279" starttime="20201005 11:50:36.770"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201005 11:50:39.280" starttime="20201005 11:50:39.280"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --count-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:39.284" level="INFO">Running command 'ozone sh bucket clrquota --count-quota /02443-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:41.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:41.444" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:50:41.444" starttime="20201005 11:50:39.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:41.445" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:50:41.445" starttime="20201005 11:50:41.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:41.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:41.446" starttime="20201005 11:50:41.445"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:41.446" starttime="20201005 11:50:39.281"></status>
</kw>
<msg timestamp="20201005 11:50:41.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:41.446" starttime="20201005 11:50:39.281"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:41.446" starttime="20201005 11:50:39.280"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:41.451" level="INFO">Running command 'ozone sh bucket info /02443-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:43.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:43.710" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201005 11:50:43.710" starttime="20201005 11:50:41.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:43.711" level="INFO">-1</msg>
<status status="PASS" endtime="20201005 11:50:43.711" starttime="20201005 11:50:43.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:43.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:43.712" starttime="20201005 11:50:43.711"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:43.712" starttime="20201005 11:50:41.448"></status>
</kw>
<msg timestamp="20201005 11:50:43.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:43.712" starttime="20201005 11:50:41.447"></status>
</kw>
<msg timestamp="20201005 11:50:43.713" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201005 11:50:43.713" starttime="20201005 11:50:41.447"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201005 11:50:43.713" starttime="20201005 11:50:43.713"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:43.718" level="INFO">Running command 'ozone sh volume clrquota --space-quota /02443-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:45.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:45.828" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:50:45.828" starttime="20201005 11:50:43.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:45.829" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:50:45.830" starttime="20201005 11:50:45.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:45.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:45.830" starttime="20201005 11:50:45.830"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:45.831" starttime="20201005 11:50:43.714"></status>
</kw>
<msg timestamp="20201005 11:50:45.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:45.831" starttime="20201005 11:50:43.714"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:45.831" starttime="20201005 11:50:43.713"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:45.837" level="INFO">Running command 'ozone sh volume info /02443-rpcbasic | jq -r '. | select(.name=="02443-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:48.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:48.425" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201005 11:50:48.425" starttime="20201005 11:50:45.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:48.426" level="INFO">-1</msg>
<status status="PASS" endtime="20201005 11:50:48.426" starttime="20201005 11:50:48.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:48.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:48.427" starttime="20201005 11:50:48.426"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:48.427" starttime="20201005 11:50:45.832"></status>
</kw>
<msg timestamp="20201005 11:50:48.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:48.427" starttime="20201005 11:50:45.832"></status>
</kw>
<msg timestamp="20201005 11:50:48.428" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201005 11:50:48.428" starttime="20201005 11:50:45.831"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201005 11:50:48.428" starttime="20201005 11:50:48.428"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --count-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:48.433" level="INFO">Running command 'ozone sh volume clrquota --count-quota /02443-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:50.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:50.774" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:50:50.774" starttime="20201005 11:50:48.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:50.775" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:50:50.775" starttime="20201005 11:50:50.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:50.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:50.776" starttime="20201005 11:50:50.776"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:50.777" starttime="20201005 11:50:48.429"></status>
</kw>
<msg timestamp="20201005 11:50:50.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:50.777" starttime="20201005 11:50:48.429"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:50.777" starttime="20201005 11:50:48.428"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:50.783" level="INFO">Running command 'ozone sh volume info /02443-rpcbasic | jq -r '. | select(.name=="02443-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:53.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:53.548" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201005 11:50:53.548" starttime="20201005 11:50:50.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:53.549" level="INFO">-1</msg>
<status status="PASS" endtime="20201005 11:50:53.549" starttime="20201005 11:50:53.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:53.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:53.550" starttime="20201005 11:50:53.549"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:53.550" starttime="20201005 11:50:50.779"></status>
</kw>
<msg timestamp="20201005 11:50:53.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:53.550" starttime="20201005 11:50:50.778"></status>
</kw>
<msg timestamp="20201005 11:50:53.551" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201005 11:50:53.551" starttime="20201005 11:50:50.777"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201005 11:50:53.551" starttime="20201005 11:50:53.551"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:53.555" level="INFO">Running command 'ozone sh bucket delete /02443-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:55.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:55.838" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:50:55.838" starttime="20201005 11:50:53.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:55.840" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:50:55.840" starttime="20201005 11:50:55.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:55.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:55.840" starttime="20201005 11:50:55.840"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:55.841" starttime="20201005 11:50:53.552"></status>
</kw>
<msg timestamp="20201005 11:50:55.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:55.841" starttime="20201005 11:50:53.552"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:55.841" starttime="20201005 11:50:53.551"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:55.847" level="INFO">Running command 'ozone sh volume delete /02443-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:50:58.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:50:58.045" level="INFO">${output} = Volume 02443-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201005 11:50:58.045" starttime="20201005 11:50:55.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:50:58.046" level="INFO">Volume 02443-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201005 11:50:58.046" starttime="20201005 11:50:58.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:50:58.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:50:58.048" starttime="20201005 11:50:58.047"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:58.048" starttime="20201005 11:50:55.842"></status>
</kw>
<msg timestamp="20201005 11:50:58.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:50:58.048" starttime="20201005 11:50:55.842"></status>
</kw>
<status status="PASS" endtime="20201005 11:50:58.048" starttime="20201005 11:50:55.841"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:50:58.052" level="INFO">Running command 'ozone sh volume create /02443-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:51:00.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:51:00.335" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:51:00.335" starttime="20201005 11:50:58.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:51:00.336" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:51:00.336" starttime="20201005 11:51:00.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:51:00.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:51:00.337" starttime="20201005 11:51:00.336"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:00.337" starttime="20201005 11:50:58.049"></status>
</kw>
<msg timestamp="20201005 11:51:00.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:51:00.337" starttime="20201005 11:50:58.049"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:00.338" starttime="20201005 11:50:58.048"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:51:00.343" level="INFO">Running command 'ozone sh volume info /02443-rpcbasic | jq -r '. | select(.name=="02443-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:51:02.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:51:02.710" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201005 11:51:02.710" starttime="20201005 11:51:00.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:51:02.712" level="INFO">-1</msg>
<status status="PASS" endtime="20201005 11:51:02.712" starttime="20201005 11:51:02.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:51:02.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:51:02.712" starttime="20201005 11:51:02.712"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:02.713" starttime="20201005 11:51:00.339"></status>
</kw>
<msg timestamp="20201005 11:51:02.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:51:02.713" starttime="20201005 11:51:00.339"></status>
</kw>
<msg timestamp="20201005 11:51:02.713" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201005 11:51:02.713" starttime="20201005 11:51:00.338"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201005 11:51:02.714" starttime="20201005 11:51:02.713"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:51:02.718" level="INFO">Running command 'ozone sh volume info /02443-rpcbasic | jq -r '. | select(.name=="02443-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:51:05.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:51:05.085" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201005 11:51:05.085" starttime="20201005 11:51:02.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:51:05.087" level="INFO">-1</msg>
<status status="PASS" endtime="20201005 11:51:05.087" starttime="20201005 11:51:05.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:51:05.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:51:05.087" starttime="20201005 11:51:05.087"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:05.088" starttime="20201005 11:51:02.715"></status>
</kw>
<msg timestamp="20201005 11:51:05.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:51:05.088" starttime="20201005 11:51:02.715"></status>
</kw>
<msg timestamp="20201005 11:51:05.088" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201005 11:51:05.088" starttime="20201005 11:51:02.714"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201005 11:51:05.089" starttime="20201005 11:51:05.088"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:51:05.093" level="INFO">Running command 'ozone sh bucket create /02443-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:51:07.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:51:07.348" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:51:07.348" starttime="20201005 11:51:05.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:51:07.349" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:51:07.349" starttime="20201005 11:51:07.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:51:07.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:51:07.350" starttime="20201005 11:51:07.349"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:07.350" starttime="20201005 11:51:05.090"></status>
</kw>
<msg timestamp="20201005 11:51:07.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:51:07.351" starttime="20201005 11:51:05.089"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:07.351" starttime="20201005 11:51:05.089"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:51:07.358" level="INFO">Running command 'ozone sh bucket info /02443-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:51:09.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:51:09.848" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201005 11:51:09.848" starttime="20201005 11:51:07.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:51:09.849" level="INFO">-1</msg>
<status status="PASS" endtime="20201005 11:51:09.849" starttime="20201005 11:51:09.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:51:09.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:51:09.850" starttime="20201005 11:51:09.849"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:09.850" starttime="20201005 11:51:07.352"></status>
</kw>
<msg timestamp="20201005 11:51:09.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:51:09.850" starttime="20201005 11:51:07.352"></status>
</kw>
<msg timestamp="20201005 11:51:09.851" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201005 11:51:09.851" starttime="20201005 11:51:07.351"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201005 11:51:09.851" starttime="20201005 11:51:09.851"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:51:09.856" level="INFO">Running command 'ozone sh bucket info /02443-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:51:12.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:51:12.382" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201005 11:51:12.382" starttime="20201005 11:51:09.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:51:12.383" level="INFO">-1</msg>
<status status="PASS" endtime="20201005 11:51:12.383" starttime="20201005 11:51:12.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:51:12.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:51:12.384" starttime="20201005 11:51:12.383"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:12.384" starttime="20201005 11:51:09.853"></status>
</kw>
<msg timestamp="20201005 11:51:12.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:51:12.384" starttime="20201005 11:51:09.852"></status>
</kw>
<msg timestamp="20201005 11:51:12.385" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201005 11:51:12.385" starttime="20201005 11:51:09.851"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201005 11:51:12.385" starttime="20201005 11:51:12.385"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 0TB --count-quota 0</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:51:12.391" level="INFO">Running command 'ozone sh volume setquota /02443-rpcbasic --space-quota 0TB --count-quota 0 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:51:14.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:51:14.531" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:51:14.531" starttime="20201005 11:51:12.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:51:14.532" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:51:14.533" starttime="20201005 11:51:14.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:51:14.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:51:14.533" starttime="20201005 11:51:14.533"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:14.533" starttime="20201005 11:51:12.386"></status>
</kw>
<msg timestamp="20201005 11:51:14.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:51:14.534" starttime="20201005 11:51:12.386"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:14.534" starttime="20201005 11:51:12.385"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:51:14.539" level="INFO">Running command 'ozone sh volume info /02443-rpcbasic | jq -r '. | select(.name=="02443-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:51:16.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:51:16.997" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201005 11:51:16.997" starttime="20201005 11:51:14.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:51:16.999" level="INFO">-1</msg>
<status status="PASS" endtime="20201005 11:51:16.999" starttime="20201005 11:51:16.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:51:16.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:51:17.000" starttime="20201005 11:51:16.999"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:17.000" starttime="20201005 11:51:14.535"></status>
</kw>
<msg timestamp="20201005 11:51:17.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:51:17.000" starttime="20201005 11:51:14.535"></status>
</kw>
<msg timestamp="20201005 11:51:17.000" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201005 11:51:17.000" starttime="20201005 11:51:14.534"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201005 11:51:17.001" starttime="20201005 11:51:17.001"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:51:17.006" level="INFO">Running command 'ozone sh volume info /02443-rpcbasic | jq -r '. | select(.name=="02443-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:51:19.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:51:19.458" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201005 11:51:19.458" starttime="20201005 11:51:17.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:51:19.459" level="INFO">-1</msg>
<status status="PASS" endtime="20201005 11:51:19.459" starttime="20201005 11:51:19.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:51:19.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:51:19.460" starttime="20201005 11:51:19.459"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:19.460" starttime="20201005 11:51:17.002"></status>
</kw>
<msg timestamp="20201005 11:51:19.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:51:19.460" starttime="20201005 11:51:17.002"></status>
</kw>
<msg timestamp="20201005 11:51:19.461" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201005 11:51:19.461" starttime="20201005 11:51:17.001"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201005 11:51:19.461" starttime="20201005 11:51:19.461"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 0TB --count-quota 0</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:51:19.469" level="INFO">Running command 'ozone sh bucket setquota /02443-rpcbasic/bb1 --space-quota 0TB --count-quota 0 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:51:21.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:51:21.487" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:51:21.487" starttime="20201005 11:51:19.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:51:21.488" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:51:21.488" starttime="20201005 11:51:21.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:51:21.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:51:21.489" starttime="20201005 11:51:21.488"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:21.489" starttime="20201005 11:51:19.462"></status>
</kw>
<msg timestamp="20201005 11:51:21.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:51:21.489" starttime="20201005 11:51:19.462"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:21.489" starttime="20201005 11:51:19.461"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:51:21.494" level="INFO">Running command 'ozone sh bucket info /02443-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:51:23.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:51:23.898" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201005 11:51:23.898" starttime="20201005 11:51:21.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:51:23.899" level="INFO">-1</msg>
<status status="PASS" endtime="20201005 11:51:23.899" starttime="20201005 11:51:23.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:51:23.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:51:23.900" starttime="20201005 11:51:23.899"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:23.900" starttime="20201005 11:51:21.490"></status>
</kw>
<msg timestamp="20201005 11:51:23.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:51:23.900" starttime="20201005 11:51:21.490"></status>
</kw>
<msg timestamp="20201005 11:51:23.901" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201005 11:51:23.901" starttime="20201005 11:51:21.489"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201005 11:51:23.901" starttime="20201005 11:51:23.901"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:51:23.907" level="INFO">Running command 'ozone sh bucket info /02443-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:51:26.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:51:26.202" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201005 11:51:26.202" starttime="20201005 11:51:23.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:51:26.204" level="INFO">-1</msg>
<status status="PASS" endtime="20201005 11:51:26.204" starttime="20201005 11:51:26.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:51:26.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:51:26.204" starttime="20201005 11:51:26.204"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:26.205" starttime="20201005 11:51:23.902"></status>
</kw>
<msg timestamp="20201005 11:51:26.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:51:26.205" starttime="20201005 11:51:23.902"></status>
</kw>
<msg timestamp="20201005 11:51:26.205" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201005 11:51:26.205" starttime="20201005 11:51:23.901"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201005 11:51:26.206" starttime="20201005 11:51:26.206"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:51:26.210" level="INFO">Running command 'ozone sh bucket delete /02443-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:51:28.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:51:28.425" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:51:28.425" starttime="20201005 11:51:26.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:51:28.426" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:51:28.426" starttime="20201005 11:51:28.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:51:28.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:51:28.427" starttime="20201005 11:51:28.426"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:28.427" starttime="20201005 11:51:26.207"></status>
</kw>
<msg timestamp="20201005 11:51:28.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:51:28.427" starttime="20201005 11:51:26.207"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:28.428" starttime="20201005 11:51:26.206"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:51:28.432" level="INFO">Running command 'ozone sh volume delete /02443-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:51:30.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:51:30.579" level="INFO">${output} = Volume 02443-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201005 11:51:30.579" starttime="20201005 11:51:28.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:51:30.581" level="INFO">Volume 02443-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201005 11:51:30.581" starttime="20201005 11:51:30.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:51:30.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:51:30.581" starttime="20201005 11:51:30.581"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:30.582" starttime="20201005 11:51:28.429"></status>
</kw>
<msg timestamp="20201005 11:51:30.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:51:30.582" starttime="20201005 11:51:28.428"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:30.582" starttime="20201005 11:51:28.428"></status>
</kw>
<status status="PASS" endtime="20201005 11:51:30.582" starttime="20201005 11:49:06.972"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201005 11:51:30.582" critical="yes" starttime="20201005 11:49:06.971"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20201005 11:51:30.583" starttime="20201005 11:49:06.817"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-ha" pass="1">ozone-ha</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
