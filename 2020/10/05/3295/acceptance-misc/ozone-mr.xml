<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201005 12:06:43.569" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:52:51.771" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:52:54.176" level="INFO">${rc} = 255</msg>
<msg timestamp="20201005 11:52:54.177" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201005 11:52:54.177" starttime="20201005 11:52:51.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:52:54.178" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201005 11:52:54.178" starttime="20201005 11:52:54.177"></status>
</kw>
<msg timestamp="20201005 11:52:54.178" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201005 11:52:54.178" starttime="20201005 11:52:51.766"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:52:54.184" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:52:56.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:52:56.495" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:52:56.495" starttime="20201005 11:52:54.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:52:56.497" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:52:56.497" starttime="20201005 11:52:56.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:52:56.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:52:56.497" starttime="20201005 11:52:56.497"></status>
</kw>
<status status="PASS" endtime="20201005 11:52:56.498" starttime="20201005 11:52:54.180"></status>
</kw>
<msg timestamp="20201005 11:52:56.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:52:56.498" starttime="20201005 11:52:54.180"></status>
</kw>
<msg timestamp="20201005 11:52:56.498" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201005 11:52:56.498" starttime="20201005 11:52:54.179"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201005 11:52:56.499" starttime="20201005 11:52:56.498"></status>
</kw>
<status status="PASS" endtime="20201005 11:52:56.499" starttime="20201005 11:52:54.179"></status>
</kw>
<status status="PASS" endtime="20201005 11:52:56.499" starttime="20201005 11:52:54.178"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:52:56.503" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:52:58.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:52:58.558" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:52:58.558" starttime="20201005 11:52:56.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:52:58.559" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:52:58.560" starttime="20201005 11:52:58.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:52:58.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:52:58.560" starttime="20201005 11:52:58.560"></status>
</kw>
<status status="PASS" endtime="20201005 11:52:58.561" starttime="20201005 11:52:56.501"></status>
</kw>
<msg timestamp="20201005 11:52:58.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:52:58.561" starttime="20201005 11:52:56.500"></status>
</kw>
<status status="PASS" endtime="20201005 11:52:58.561" starttime="20201005 11:52:56.500"></status>
</kw>
<status status="PASS" endtime="20201005 11:52:58.561" starttime="20201005 11:52:56.500"></status>
</kw>
<status status="PASS" endtime="20201005 11:52:58.561" starttime="20201005 11:52:56.499"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201005 11:52:58.562" starttime="20201005 11:52:58.562"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:52:58.566" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:53:00.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:53:00.790" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T11:52:58.525Z",
  "modificat...</msg>
<status status="PASS" endtime="20201005 11:53:00.790" starttime="20201005 11:52:58.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:53:00.791" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T11:52:58.525Z",
  "modificationTime" : "2020-10-05T11:52:58.525Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201005 11:53:00.791" starttime="20201005 11:53:00.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:53:00.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:53:00.792" starttime="20201005 11:53:00.791"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:00.792" starttime="20201005 11:52:58.563"></status>
</kw>
<msg timestamp="20201005 11:53:00.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:53:00.792" starttime="20201005 11:52:58.563"></status>
</kw>
<msg timestamp="20201005 11:53:00.792" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T11:52:58.525Z",
  "modificat...</msg>
<status status="PASS" endtime="20201005 11:53:00.792" starttime="20201005 11:52:58.562"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201005 11:53:00.793" starttime="20201005 11:53:00.793"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 11:53:00.797" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 11:53:00.797" starttime="20201005 11:53:00.796"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:53:00.797" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 11:53:00.798" starttime="20201005 11:53:00.797"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:00.798" starttime="20201005 11:53:00.796"></status>
</kw>
<msg timestamp="20201005 11:53:00.798" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 11:53:00.798" starttime="20201005 11:53:00.795"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:00.798" starttime="20201005 11:53:00.795"></status>
</kw>
<msg timestamp="20201005 11:53:00.798" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201005 11:53:00.798" starttime="20201005 11:53:00.794"></status>
</kw>
<msg timestamp="20201005 11:53:00.798" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201005 11:53:00.799" starttime="20201005 11:53:00.793"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:53:00.802" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:53:02.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:53:02.974" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:53:02.974" starttime="20201005 11:53:00.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:53:02.975" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:53:02.975" starttime="20201005 11:53:02.974"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:53:02.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:53:02.975" starttime="20201005 11:53:02.975"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:02.976" starttime="20201005 11:53:00.799"></status>
</kw>
<msg timestamp="20201005 11:53:02.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:53:02.976" starttime="20201005 11:53:00.799"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:02.976" starttime="20201005 11:53:00.799"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:53:02.980" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:53:08.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:53:08.442" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:53:08.442" starttime="20201005 11:53:02.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:53:08.443" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:53:08.443" starttime="20201005 11:53:08.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:53:08.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:53:08.444" starttime="20201005 11:53:08.444"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:08.445" starttime="20201005 11:53:02.977"></status>
</kw>
<msg timestamp="20201005 11:53:08.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:53:08.445" starttime="20201005 11:53:02.977"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:08.445" starttime="20201005 11:53:02.976"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:53:08.448" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:53:12.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:53:12.508" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:53:12.508" starttime="20201005 11:53:08.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:53:12.509" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:53:12.509" starttime="20201005 11:53:12.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:53:12.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:53:12.510" starttime="20201005 11:53:12.509"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:12.510" starttime="20201005 11:53:08.446"></status>
</kw>
<msg timestamp="20201005 11:53:12.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:53:12.510" starttime="20201005 11:53:08.446"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:12.511" starttime="20201005 11:53:08.445"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:53:12.515" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:53:16.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:53:16.727" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:53:16.727" starttime="20201005 11:53:12.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:53:16.728" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:53:16.728" starttime="20201005 11:53:16.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:53:16.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:53:16.729" starttime="20201005 11:53:16.729"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:16.730" starttime="20201005 11:53:12.512"></status>
</kw>
<msg timestamp="20201005 11:53:16.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:53:16.730" starttime="20201005 11:53:12.511"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:16.730" starttime="20201005 11:53:12.511"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 11:53:16.731" critical="yes" starttime="20201005 11:52:51.765"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 11:53:16.736" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 11:53:16.736" starttime="20201005 11:53:16.735"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:53:16.737" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 11:53:16.737" starttime="20201005 11:53:16.736"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:16.737" starttime="20201005 11:53:16.735"></status>
</kw>
<msg timestamp="20201005 11:53:16.737" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 11:53:16.737" starttime="20201005 11:53:16.734"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:16.737" starttime="20201005 11:53:16.734"></status>
</kw>
<msg timestamp="20201005 11:53:16.737" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201005 11:53:16.737" starttime="20201005 11:53:16.733"></status>
</kw>
<msg timestamp="20201005 11:53:16.738" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201005 11:53:16.738" starttime="20201005 11:53:16.732"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:53:16.741" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:53:18.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:53:18.995" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:53:18.995" starttime="20201005 11:53:16.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:53:18.996" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:53:18.996" starttime="20201005 11:53:18.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:53:18.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:53:18.997" starttime="20201005 11:53:18.996"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:18.997" starttime="20201005 11:53:16.738"></status>
</kw>
<msg timestamp="20201005 11:53:18.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:53:18.997" starttime="20201005 11:53:16.738"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:18.998" starttime="20201005 11:53:16.738"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:53:19.003" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:53:21.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:53:21.166" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:53:21.166" starttime="20201005 11:53:18.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:53:21.168" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:53:21.168" starttime="20201005 11:53:21.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:53:21.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:53:21.169" starttime="20201005 11:53:21.168"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:21.169" starttime="20201005 11:53:18.999"></status>
</kw>
<msg timestamp="20201005 11:53:21.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:53:21.169" starttime="20201005 11:53:18.998"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:21.169" starttime="20201005 11:53:18.998"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 11:53:21.169" critical="yes" starttime="20201005 11:53:16.731"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201005 11:53:21.171" starttime="20201005 11:52:51.711"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 11:54:56.824" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 11:54:56.824" starttime="20201005 11:54:56.824"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:54:56.825" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 11:54:56.825" starttime="20201005 11:54:56.825"></status>
</kw>
<status status="PASS" endtime="20201005 11:54:56.825" starttime="20201005 11:54:56.823"></status>
</kw>
<msg timestamp="20201005 11:54:56.825" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 11:54:56.825" starttime="20201005 11:54:56.823"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201005 11:54:56.826" starttime="20201005 11:54:56.826"></status>
</kw>
<msg timestamp="20201005 11:54:56.826" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201005 11:54:56.826" starttime="20201005 11:54:56.825"></status>
</kw>
<status status="PASS" endtime="20201005 11:54:56.827" starttime="20201005 11:54:56.823"></status>
</kw>
<msg timestamp="20201005 11:54:56.827" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 11:54:56.827" starttime="20201005 11:54:56.822"></status>
</kw>
<msg timestamp="20201005 11:54:56.827" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 11:54:56.827" starttime="20201005 11:54:56.821"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201005 11:54:56.828" level="INFO">${random} = 51840</msg>
<status status="PASS" endtime="20201005 11:54:56.828" starttime="20201005 11:54:56.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:54:56.834" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-51840 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:55:00.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:55:00.474" level="INFO">${output} = 2020-10-05 11:54:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:54:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-05 ...</msg>
<status status="PASS" endtime="20201005 11:55:00.474" starttime="20201005 11:54:56.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:55:00.475" level="INFO">2020-10-05 11:54:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:54:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-05 11:54:58 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-05 11:54:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 11:54:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5EAFA7151874-&gt;56d66921-fcea-43d7-b94c-b9f48c14c472
2020-10-05 11:54:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201005 11:55:00.476" starttime="20201005 11:55:00.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:55:00.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:55:00.476" starttime="20201005 11:55:00.476"></status>
</kw>
<status status="PASS" endtime="20201005 11:55:00.477" starttime="20201005 11:54:56.829"></status>
</kw>
<msg timestamp="20201005 11:55:00.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:55:00.477" starttime="20201005 11:54:56.828"></status>
</kw>
<msg timestamp="20201005 11:55:00.477" level="INFO">${result} = 2020-10-05 11:54:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:54:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-05 ...</msg>
<status status="PASS" endtime="20201005 11:55:00.477" starttime="20201005 11:54:56.828"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:55:00.481" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:55:02.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:55:02.406" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 11:53 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-05 11:55 ofs://om/volume1/bucket1/ozone-51840
-rw-...</msg>
<status status="PASS" endtime="20201005 11:55:02.406" starttime="20201005 11:55:00.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:55:02.407" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 11:53 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-05 11:55 ofs://om/volume1/bucket1/ozone-51840
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-05 11:53 ofs://om/volume1/bucket1/ozone-59071
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 11:53 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 11:54 ofs://om/volume1/bucket1/wordcount-73.txt</msg>
<status status="PASS" endtime="20201005 11:55:02.407" starttime="20201005 11:55:02.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:55:02.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:55:02.408" starttime="20201005 11:55:02.407"></status>
</kw>
<status status="PASS" endtime="20201005 11:55:02.408" starttime="20201005 11:55:00.478"></status>
</kw>
<msg timestamp="20201005 11:55:02.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:55:02.408" starttime="20201005 11:55:00.478"></status>
</kw>
<msg timestamp="20201005 11:55:02.409" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 11:53 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-05 11:55 ofs://om/volume1/bucket1/ozone-51840
-rw-...</msg>
<status status="PASS" endtime="20201005 11:55:02.409" starttime="20201005 11:55:00.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201005 11:55:02.409" starttime="20201005 11:55:02.409"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201005 11:55:02.409" critical="yes" starttime="20201005 11:54:56.819"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201005 11:55:02.410" starttime="20201005 11:54:56.766"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 11:53:26.231" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 11:53:26.231" starttime="20201005 11:53:26.231"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:53:26.232" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 11:53:26.232" starttime="20201005 11:53:26.232"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:26.232" starttime="20201005 11:53:26.231"></status>
</kw>
<msg timestamp="20201005 11:53:26.232" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 11:53:26.232" starttime="20201005 11:53:26.230"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:26.232" starttime="20201005 11:53:26.229"></status>
</kw>
<msg timestamp="20201005 11:53:26.232" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 11:53:26.232" starttime="20201005 11:53:26.228"></status>
</kw>
<msg timestamp="20201005 11:53:26.233" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 11:53:26.233" starttime="20201005 11:53:26.227"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201005 11:53:26.233" level="INFO">${random} = 59071</msg>
<status status="PASS" endtime="20201005 11:53:26.233" starttime="20201005 11:53:26.233"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:53:26.238" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-59071 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:53:29.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:53:29.813" level="INFO">${output} = 2020-10-05 11:53:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:53:28 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-05 ...</msg>
<status status="PASS" endtime="20201005 11:53:29.813" starttime="20201005 11:53:26.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:53:29.814" level="INFO">2020-10-05 11:53:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:53:28 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-05 11:53:28 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-05 11:53:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 11:53:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B697E1F85F68-&gt;56d66921-fcea-43d7-b94c-b9f48c14c472
2020-10-05 11:53:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201005 11:53:29.814" starttime="20201005 11:53:29.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:53:29.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:53:29.815" starttime="20201005 11:53:29.815"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:29.815" starttime="20201005 11:53:26.234"></status>
</kw>
<msg timestamp="20201005 11:53:29.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:53:29.816" starttime="20201005 11:53:26.234"></status>
</kw>
<msg timestamp="20201005 11:53:29.816" level="INFO">${result} = 2020-10-05 11:53:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:53:28 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-05 ...</msg>
<status status="PASS" endtime="20201005 11:53:29.816" starttime="20201005 11:53:26.233"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:53:29.819" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:53:31.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:53:31.814" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 11:53 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-05 11:53 o3fs://bucket1.volume1.om/ozone-59071
dr...</msg>
<status status="PASS" endtime="20201005 11:53:31.814" starttime="20201005 11:53:29.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:53:31.816" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 11:53 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-05 11:53 o3fs://bucket1.volume1.om/ozone-59071
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 11:53 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201005 11:53:31.816" starttime="20201005 11:53:31.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:53:31.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:53:31.816" starttime="20201005 11:53:31.816"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:31.817" starttime="20201005 11:53:29.817"></status>
</kw>
<msg timestamp="20201005 11:53:31.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:53:31.817" starttime="20201005 11:53:29.816"></status>
</kw>
<msg timestamp="20201005 11:53:31.817" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 11:53 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-05 11:53 o3fs://bucket1.volume1.om/ozone-59071
dr...</msg>
<status status="PASS" endtime="20201005 11:53:31.817" starttime="20201005 11:53:29.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201005 11:53:31.818" starttime="20201005 11:53:31.817"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201005 11:53:31.818" critical="yes" starttime="20201005 11:53:26.226"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201005 11:53:31.820" starttime="20201005 11:53:26.178"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:55:07.630" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:55:07.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:55:07.638" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201005 11:55:07.638" starttime="20201005 11:55:07.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:55:07.639" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201005 11:55:07.640" starttime="20201005 11:55:07.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:55:07.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:55:07.640" starttime="20201005 11:55:07.640"></status>
</kw>
<status status="PASS" endtime="20201005 11:55:07.640" starttime="20201005 11:55:07.626"></status>
</kw>
<msg timestamp="20201005 11:55:07.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:55:07.641" starttime="20201005 11:55:07.625"></status>
</kw>
<msg timestamp="20201005 11:55:07.641" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201005 11:55:07.641" starttime="20201005 11:55:07.625"></status>
</kw>
<msg timestamp="20201005 11:55:07.641" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201005 11:55:07.641" starttime="20201005 11:55:07.624"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 11:55:07.645" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 11:55:07.645" starttime="20201005 11:55:07.645"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:55:07.646" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 11:55:07.646" starttime="20201005 11:55:07.645"></status>
</kw>
<status status="PASS" endtime="20201005 11:55:07.646" starttime="20201005 11:55:07.644"></status>
</kw>
<msg timestamp="20201005 11:55:07.646" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 11:55:07.646" starttime="20201005 11:55:07.643"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201005 11:55:07.647" starttime="20201005 11:55:07.647"></status>
</kw>
<msg timestamp="20201005 11:55:07.647" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201005 11:55:07.647" starttime="20201005 11:55:07.646"></status>
</kw>
<status status="PASS" endtime="20201005 11:55:07.647" starttime="20201005 11:55:07.643"></status>
</kw>
<msg timestamp="20201005 11:55:07.647" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 11:55:07.647" starttime="20201005 11:55:07.642"></status>
</kw>
<msg timestamp="20201005 11:55:07.647" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 11:55:07.648" starttime="20201005 11:55:07.641"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:55:07.651" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:55:44.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:55:44.058" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-05 11:55:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:55:09 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201005 11:55:44.058" starttime="20201005 11:55:07.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:55:44.060" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-05 11:55:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:55:09 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-05 11:55:09 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-05 11:55:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 11:55:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6041F03FC271-&gt;56d66921-fcea-43d7-b94c-b9f48c14c472
2020-10-05 11:55:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-05 11:55:11 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-05 11:55:11 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-05 11:55:11 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-05 11:55:11 INFO  JobSubmitter:198 - number of splits:3
2020-10-05 11:55:11 INFO  JobSubmitter:287 - Submitting tokens for job: job_1601898739656_0003
2020-10-05 11:55:11 INFO  YarnClientImpl:273 - Submitted application application_1601898739656_0003
2020-10-05 11:55:12 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1601898739656_0003/
2020-10-05 11:55:12 INFO  Job:1339 - Running job: job_1601898739656_0003
2020-10-05 11:55:19 INFO  Job:1360 - Job job_1601898739656_0003 running in uber mode : false
2020-10-05 11:55:19 INFO  Job:1367 -  map 0% reduce 0%
2020-10-05 11:55:26 INFO  Job:1367 -  map 33% reduce 0%
2020-10-05 11:55:30 INFO  Job:1367 -  map 67% reduce 0%
2020-10-05 11:55:35 INFO  Job:1367 -  map 100% reduce 0%
2020-10-05 11:55:40 INFO  Job:1367 -  map 100% reduce 100%
2020-10-05 11:55:43 INFO  Job:1378 - Job job_1601898739656_0003 completed successfully
2020-10-05 11:55:43 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=614105
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42200
		Total time spent by all reduces in occupied slots (ms)=16500
		Total time spent by all map tasks (ms)=10550
		Total time spent by all reduce tasks (ms)=4125
		Total vcore-milliseconds taken by all map tasks=10550
		Total vcore-milliseconds taken by all reduce tasks=4125
		Total megabyte-milliseconds taken by all map tasks=43212800
		Total megabyte-milliseconds taken by all reduce tasks=16896000
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=646
		CPU time spent (ms)=7280
		Physical memory (bytes) snapshot=1090281472
		Virtual memory (bytes) snapshot=16038723584
		Total committed heap usage (bytes)=1014497280
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.543 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201005 11:55:44.060" starttime="20201005 11:55:44.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:55:44.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:55:44.060" starttime="20201005 11:55:44.060"></status>
</kw>
<status status="PASS" endtime="20201005 11:55:44.061" starttime="20201005 11:55:07.648"></status>
</kw>
<msg timestamp="20201005 11:55:44.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:55:44.061" starttime="20201005 11:55:07.648"></status>
</kw>
<msg timestamp="20201005 11:55:44.061" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-05 11:55:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:55:09 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201005 11:55:44.061" starttime="20201005 11:55:07.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201005 11:55:44.062" starttime="20201005 11:55:44.061"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201005 11:55:44.062" critical="yes" starttime="20201005 11:55:07.624"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:55:44.068" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:55:44.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:55:44.073" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201005 11:55:44.073" starttime="20201005 11:55:44.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:55:44.074" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201005 11:55:44.074" starttime="20201005 11:55:44.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:55:44.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:55:44.075" starttime="20201005 11:55:44.075"></status>
</kw>
<status status="PASS" endtime="20201005 11:55:44.075" starttime="20201005 11:55:44.065"></status>
</kw>
<msg timestamp="20201005 11:55:44.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:55:44.076" starttime="20201005 11:55:44.065"></status>
</kw>
<msg timestamp="20201005 11:55:44.076" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201005 11:55:44.076" starttime="20201005 11:55:44.064"></status>
</kw>
<msg timestamp="20201005 11:55:44.076" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201005 11:55:44.076" starttime="20201005 11:55:44.064"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201005 11:55:44.076" level="INFO">${random} = 77</msg>
<status status="PASS" endtime="20201005 11:55:44.077" starttime="20201005 11:55:44.076"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 11:55:44.081" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 11:55:44.081" starttime="20201005 11:55:44.080"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:55:44.081" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 11:55:44.081" starttime="20201005 11:55:44.081"></status>
</kw>
<status status="PASS" endtime="20201005 11:55:44.082" starttime="20201005 11:55:44.080"></status>
</kw>
<msg timestamp="20201005 11:55:44.082" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 11:55:44.082" starttime="20201005 11:55:44.080"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201005 11:55:44.083" starttime="20201005 11:55:44.082"></status>
</kw>
<msg timestamp="20201005 11:55:44.083" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201005 11:55:44.083" starttime="20201005 11:55:44.082"></status>
</kw>
<status status="PASS" endtime="20201005 11:55:44.083" starttime="20201005 11:55:44.078"></status>
</kw>
<msg timestamp="20201005 11:55:44.083" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 11:55:44.083" starttime="20201005 11:55:44.078"></status>
</kw>
<msg timestamp="20201005 11:55:44.083" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 11:55:44.083" starttime="20201005 11:55:44.077"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 11:55:44.086" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 11:55:44.086" starttime="20201005 11:55:44.086"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:55:44.087" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 11:55:44.087" starttime="20201005 11:55:44.086"></status>
</kw>
<status status="PASS" endtime="20201005 11:55:44.087" starttime="20201005 11:55:44.085"></status>
</kw>
<msg timestamp="20201005 11:55:44.087" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 11:55:44.087" starttime="20201005 11:55:44.085"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 11:55:44.088" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201005 11:55:44.088" starttime="20201005 11:55:44.088"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:55:44.089" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201005 11:55:44.089" starttime="20201005 11:55:44.089"></status>
</kw>
<status status="PASS" endtime="20201005 11:55:44.089" starttime="20201005 11:55:44.088"></status>
</kw>
<msg timestamp="20201005 11:55:44.089" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201005 11:55:44.089" starttime="20201005 11:55:44.087"></status>
</kw>
<status status="PASS" endtime="20201005 11:55:44.090" starttime="20201005 11:55:44.084"></status>
</kw>
<msg timestamp="20201005 11:55:44.090" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201005 11:55:44.090" starttime="20201005 11:55:44.084"></status>
</kw>
<msg timestamp="20201005 11:55:44.090" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201005 11:55:44.090" starttime="20201005 11:55:44.084"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 11:55:44.093" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 11:55:44.093" starttime="20201005 11:55:44.093"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:55:44.094" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 11:55:44.094" starttime="20201005 11:55:44.093"></status>
</kw>
<status status="PASS" endtime="20201005 11:55:44.094" starttime="20201005 11:55:44.092"></status>
</kw>
<msg timestamp="20201005 11:55:44.094" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 11:55:44.094" starttime="20201005 11:55:44.092"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 11:55:44.095" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201005 11:55:44.095" starttime="20201005 11:55:44.095"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:55:44.096" level="INFO">${result} = /wordcount-77.txt</msg>
<status status="PASS" endtime="20201005 11:55:44.096" starttime="20201005 11:55:44.096"></status>
</kw>
<status status="PASS" endtime="20201005 11:55:44.096" starttime="20201005 11:55:44.095"></status>
</kw>
<msg timestamp="20201005 11:55:44.096" level="INFO">${path_with_leading} = /wordcount-77.txt</msg>
<status status="PASS" endtime="20201005 11:55:44.096" starttime="20201005 11:55:44.094"></status>
</kw>
<status status="PASS" endtime="20201005 11:55:44.096" starttime="20201005 11:55:44.091"></status>
</kw>
<msg timestamp="20201005 11:55:44.096" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-77.txt</msg>
<status status="PASS" endtime="20201005 11:55:44.097" starttime="20201005 11:55:44.091"></status>
</kw>
<msg timestamp="20201005 11:55:44.097" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-77.txt</msg>
<status status="PASS" endtime="20201005 11:55:44.097" starttime="20201005 11:55:44.090"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:55:44.100" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-77.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:56:21.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:56:21.109" level="INFO">${output} = 2020-10-05 11:55:45 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-05 11:55:46 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201005 11:56:21.109" starttime="20201005 11:55:44.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:56:21.111" level="INFO">2020-10-05 11:55:45 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-05 11:55:46 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-05 11:55:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:55:46 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-05 11:55:46 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-05 11:55:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 11:55:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B0EED31C3CB1-&gt;56d66921-fcea-43d7-b94c-b9f48c14c472
2020-10-05 11:55:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-05 11:55:47 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-05 11:55:47 INFO  JobSubmitter:198 - number of splits:3
2020-10-05 11:55:47 INFO  JobSubmitter:287 - Submitting tokens for job: job_1601898739656_0004
2020-10-05 11:55:48 INFO  YarnClientImpl:273 - Submitted application application_1601898739656_0004
2020-10-05 11:55:48 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1601898739656_0004/
2020-10-05 11:55:48 INFO  Job:1339 - Running job: job_1601898739656_0004
2020-10-05 11:55:56 INFO  Job:1360 - Job job_1601898739656_0004 running in uber mode : false
2020-10-05 11:55:56 INFO  Job:1367 -  map 0% reduce 0%
2020-10-05 11:56:03 INFO  Job:1367 -  map 33% reduce 0%
2020-10-05 11:56:08 INFO  Job:1367 -  map 67% reduce 0%
2020-10-05 11:56:13 INFO  Job:1367 -  map 100% reduce 0%
2020-10-05 11:56:17 INFO  Job:1367 -  map 100% reduce 100%
2020-10-05 11:56:20 INFO  Job:1378 - Job job_1601898739656_0004 completed successfully
2020-10-05 11:56:20 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=676865
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41436
		Total time spent by all reduces in occupied slots (ms)=14412
		Total time spent by all map tasks (ms)=10359
		Total time spent by all reduce tasks (ms)=3603
		Total vcore-milliseconds taken by all map tasks=10359
		Total vcore-milliseconds taken by all reduce tasks=3603
		Total megabyte-milliseconds taken by all map tasks=42430464
		Total megabyte-milliseconds taken by all reduce tasks=14757888
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=609
		CPU time spent (ms)=7500
		Physical memory (bytes) snapshot=1136463872
		Virtual memory (bytes) snapshot=16051167232
		Total committed heap usage (bytes)=1051721728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201005 11:56:21.111" starttime="20201005 11:56:21.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:56:21.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:56:21.112" starttime="20201005 11:56:21.111"></status>
</kw>
<status status="PASS" endtime="20201005 11:56:21.112" starttime="20201005 11:55:44.098"></status>
</kw>
<msg timestamp="20201005 11:56:21.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:56:21.112" starttime="20201005 11:55:44.097"></status>
</kw>
<msg timestamp="20201005 11:56:21.113" level="INFO">${output} = 2020-10-05 11:55:45 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-05 11:55:46 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201005 11:56:21.113" starttime="20201005 11:55:44.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201005 11:56:21.113" starttime="20201005 11:56:21.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201005 11:56:21.114" starttime="20201005 11:56:21.114"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201005 11:56:21.114" critical="yes" starttime="20201005 11:55:44.063"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201005 11:56:21.115" starttime="20201005 11:55:07.566"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:53:36.761" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:53:36.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:53:36.766" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201005 11:53:36.766" starttime="20201005 11:53:36.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:53:36.767" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201005 11:53:36.767" starttime="20201005 11:53:36.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:53:36.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:53:36.768" starttime="20201005 11:53:36.767"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:36.768" starttime="20201005 11:53:36.756"></status>
</kw>
<msg timestamp="20201005 11:53:36.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:53:36.768" starttime="20201005 11:53:36.756"></status>
</kw>
<msg timestamp="20201005 11:53:36.768" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201005 11:53:36.768" starttime="20201005 11:53:36.756"></status>
</kw>
<msg timestamp="20201005 11:53:36.768" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201005 11:53:36.768" starttime="20201005 11:53:36.756"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 11:53:36.771" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 11:53:36.771" starttime="20201005 11:53:36.771"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:53:36.772" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 11:53:36.772" starttime="20201005 11:53:36.772"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:36.772" starttime="20201005 11:53:36.771"></status>
</kw>
<msg timestamp="20201005 11:53:36.772" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 11:53:36.772" starttime="20201005 11:53:36.770"></status>
</kw>
<status status="PASS" endtime="20201005 11:53:36.772" starttime="20201005 11:53:36.770"></status>
</kw>
<msg timestamp="20201005 11:53:36.773" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 11:53:36.773" starttime="20201005 11:53:36.769"></status>
</kw>
<msg timestamp="20201005 11:53:36.773" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 11:53:36.773" starttime="20201005 11:53:36.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:53:36.777" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:54:16.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:54:16.557" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-05 11:53:38 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:53:38 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201005 11:54:16.557" starttime="20201005 11:53:36.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:54:16.558" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-05 11:53:38 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:53:38 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-05 11:53:38 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-05 11:53:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 11:53:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8CC979CAE7BE-&gt;56d66921-fcea-43d7-b94c-b9f48c14c472
2020-10-05 11:53:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-05 11:53:40 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-05 11:53:40 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-05 11:53:40 INFO  JobSubmitter:198 - number of splits:3
2020-10-05 11:53:40 INFO  JobSubmitter:287 - Submitting tokens for job: job_1601898739656_0001
2020-10-05 11:53:41 INFO  YarnClientImpl:273 - Submitted application application_1601898739656_0001
2020-10-05 11:53:41 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1601898739656_0001/
2020-10-05 11:53:41 INFO  Job:1339 - Running job: job_1601898739656_0001
2020-10-05 11:53:51 INFO  Job:1360 - Job job_1601898739656_0001 running in uber mode : false
2020-10-05 11:53:51 INFO  Job:1367 -  map 0% reduce 0%
2020-10-05 11:53:57 INFO  Job:1367 -  map 33% reduce 0%
2020-10-05 11:54:02 INFO  Job:1367 -  map 67% reduce 0%
2020-10-05 11:54:07 INFO  Job:1367 -  map 100% reduce 0%
2020-10-05 11:54:12 INFO  Job:1367 -  map 100% reduce 100%
2020-10-05 11:54:15 INFO  Job:1378 - Job job_1601898739656_0001 completed successfully
2020-10-05 11:54:15 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=614325
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39380
		Total time spent by all reduces in occupied slots (ms)=15288
		Total time spent by all map tasks (ms)=9845
		Total time spent by all reduce tasks (ms)=3822
		Total vcore-milliseconds taken by all map tasks=9845
		Total vcore-milliseconds taken by all reduce tasks=3822
		Total megabyte-milliseconds taken by all map tasks=40325120
		Total megabyte-milliseconds taken by all reduce tasks=15654912
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=605
		CPU time spent (ms)=7170
		Physical memory (bytes) snapshot=1142054912
		Virtual memory (bytes) snapshot=16059461632
		Total committed heap usage (bytes)=1047003136
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.842 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201005 11:54:16.558" starttime="20201005 11:54:16.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:54:16.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:54:16.559" starttime="20201005 11:54:16.558"></status>
</kw>
<status status="PASS" endtime="20201005 11:54:16.559" starttime="20201005 11:53:36.773"></status>
</kw>
<msg timestamp="20201005 11:54:16.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:54:16.559" starttime="20201005 11:53:36.773"></status>
</kw>
<msg timestamp="20201005 11:54:16.560" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-05 11:53:38 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:53:38 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201005 11:54:16.560" starttime="20201005 11:53:36.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201005 11:54:16.560" starttime="20201005 11:54:16.560"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201005 11:54:16.561" critical="yes" starttime="20201005 11:53:36.755"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:54:16.567" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:54:16.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:54:16.573" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201005 11:54:16.573" starttime="20201005 11:54:16.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:54:16.574" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201005 11:54:16.574" starttime="20201005 11:54:16.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:54:16.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:54:16.575" starttime="20201005 11:54:16.575"></status>
</kw>
<status status="PASS" endtime="20201005 11:54:16.575" starttime="20201005 11:54:16.563"></status>
</kw>
<msg timestamp="20201005 11:54:16.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:54:16.575" starttime="20201005 11:54:16.562"></status>
</kw>
<msg timestamp="20201005 11:54:16.576" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201005 11:54:16.576" starttime="20201005 11:54:16.562"></status>
</kw>
<msg timestamp="20201005 11:54:16.576" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201005 11:54:16.576" starttime="20201005 11:54:16.562"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201005 11:54:16.576" level="INFO">${random} = 73</msg>
<status status="PASS" endtime="20201005 11:54:16.576" starttime="20201005 11:54:16.576"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 11:54:16.580" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 11:54:16.580" starttime="20201005 11:54:16.579"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:54:16.580" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 11:54:16.580" starttime="20201005 11:54:16.580"></status>
</kw>
<status status="PASS" endtime="20201005 11:54:16.581" starttime="20201005 11:54:16.579"></status>
</kw>
<msg timestamp="20201005 11:54:16.581" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 11:54:16.581" starttime="20201005 11:54:16.579"></status>
</kw>
<status status="PASS" endtime="20201005 11:54:16.581" starttime="20201005 11:54:16.578"></status>
</kw>
<msg timestamp="20201005 11:54:16.581" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 11:54:16.581" starttime="20201005 11:54:16.577"></status>
</kw>
<msg timestamp="20201005 11:54:16.581" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 11:54:16.581" starttime="20201005 11:54:16.576"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 11:54:16.584" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 11:54:16.584" starttime="20201005 11:54:16.584"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:54:16.585" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 11:54:16.585" starttime="20201005 11:54:16.584"></status>
</kw>
<status status="PASS" endtime="20201005 11:54:16.585" starttime="20201005 11:54:16.583"></status>
</kw>
<msg timestamp="20201005 11:54:16.585" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 11:54:16.585" starttime="20201005 11:54:16.583"></status>
</kw>
<status status="PASS" endtime="20201005 11:54:16.585" starttime="20201005 11:54:16.582"></status>
</kw>
<msg timestamp="20201005 11:54:16.585" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201005 11:54:16.585" starttime="20201005 11:54:16.582"></status>
</kw>
<msg timestamp="20201005 11:54:16.585" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201005 11:54:16.585" starttime="20201005 11:54:16.581"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 11:54:16.588" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 11:54:16.588" starttime="20201005 11:54:16.588"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:54:16.589" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 11:54:16.589" starttime="20201005 11:54:16.588"></status>
</kw>
<status status="PASS" endtime="20201005 11:54:16.589" starttime="20201005 11:54:16.587"></status>
</kw>
<msg timestamp="20201005 11:54:16.589" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 11:54:16.589" starttime="20201005 11:54:16.587"></status>
</kw>
<status status="PASS" endtime="20201005 11:54:16.589" starttime="20201005 11:54:16.586"></status>
</kw>
<msg timestamp="20201005 11:54:16.589" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-73.txt</msg>
<status status="PASS" endtime="20201005 11:54:16.589" starttime="20201005 11:54:16.586"></status>
</kw>
<msg timestamp="20201005 11:54:16.589" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-73.txt</msg>
<status status="PASS" endtime="20201005 11:54:16.589" starttime="20201005 11:54:16.585"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:54:16.594" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-73.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:54:51.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:54:51.924" level="INFO">${output} = 2020-10-05 11:54:18 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-05 11:54:18 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201005 11:54:51.924" starttime="20201005 11:54:16.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:54:51.925" level="INFO">2020-10-05 11:54:18 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-05 11:54:18 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-05 11:54:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:54:19 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-05 11:54:19 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-05 11:54:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 11:54:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2FA6D4AFB515-&gt;56d66921-fcea-43d7-b94c-b9f48c14c472
2020-10-05 11:54:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-05 11:54:20 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-05 11:54:20 INFO  JobSubmitter:198 - number of splits:3
2020-10-05 11:54:20 INFO  JobSubmitter:287 - Submitting tokens for job: job_1601898739656_0002
2020-10-05 11:54:20 INFO  YarnClientImpl:273 - Submitted application application_1601898739656_0002
2020-10-05 11:54:21 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1601898739656_0002/
2020-10-05 11:54:21 INFO  Job:1339 - Running job: job_1601898739656_0002
2020-10-05 11:54:29 INFO  Job:1360 - Job job_1601898739656_0002 running in uber mode : false
2020-10-05 11:54:29 INFO  Job:1367 -  map 0% reduce 0%
2020-10-05 11:54:36 INFO  Job:1367 -  map 33% reduce 0%
2020-10-05 11:54:40 INFO  Job:1367 -  map 67% reduce 0%
2020-10-05 11:54:45 INFO  Job:1367 -  map 100% reduce 0%
2020-10-05 11:54:50 INFO  Job:1367 -  map 100% reduce 100%
2020-10-05 11:54:51 INFO  Job:1378 - Job job_1601898739656_0002 completed successfully
2020-10-05 11:54:51 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=676949
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42676
		Total time spent by all reduces in occupied slots (ms)=15240
		Total time spent by all map tasks (ms)=10669
		Total time spent by all reduce tasks (ms)=3810
		Total vcore-milliseconds taken by all map tasks=10669
		Total vcore-milliseconds taken by all reduce tasks=3810
		Total megabyte-milliseconds taken by all map tasks=43700224
		Total megabyte-milliseconds taken by all reduce tasks=15605760
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=652
		CPU time spent (ms)=7140
		Physical memory (bytes) snapshot=1112666112
		Virtual memory (bytes) snapshot=16047259648
		Total committed heap usage (bytes)=1051721728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201005 11:54:51.926" starttime="20201005 11:54:51.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:54:51.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:54:51.926" starttime="20201005 11:54:51.926"></status>
</kw>
<status status="PASS" endtime="20201005 11:54:51.926" starttime="20201005 11:54:16.590"></status>
</kw>
<msg timestamp="20201005 11:54:51.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:54:51.927" starttime="20201005 11:54:16.590"></status>
</kw>
<msg timestamp="20201005 11:54:51.927" level="INFO">${output} = 2020-10-05 11:54:18 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-05 11:54:18 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201005 11:54:51.927" starttime="20201005 11:54:16.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201005 11:54:51.928" starttime="20201005 11:54:51.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201005 11:54:51.928" starttime="20201005 11:54:51.928"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201005 11:54:51.928" critical="yes" starttime="20201005 11:54:16.561"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201005 11:54:51.929" starttime="20201005 11:53:36.704"></status>
</suite>
<status status="PASS" elapsedtime="189520" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:57:26.432" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:57:28.729" level="INFO">${rc} = 255</msg>
<msg timestamp="20201005 11:57:28.729" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201005 11:57:28.729" starttime="20201005 11:57:26.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:57:28.730" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201005 11:57:28.730" starttime="20201005 11:57:28.729"></status>
</kw>
<msg timestamp="20201005 11:57:28.731" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201005 11:57:28.731" starttime="20201005 11:57:26.427"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:57:28.736" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:57:30.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:57:30.822" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:57:30.822" starttime="20201005 11:57:28.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:57:30.823" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:57:30.823" starttime="20201005 11:57:30.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:57:30.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:57:30.824" starttime="20201005 11:57:30.823"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:30.824" starttime="20201005 11:57:28.732"></status>
</kw>
<msg timestamp="20201005 11:57:30.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:57:30.825" starttime="20201005 11:57:28.732"></status>
</kw>
<msg timestamp="20201005 11:57:30.825" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201005 11:57:30.825" starttime="20201005 11:57:28.732"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201005 11:57:30.825" starttime="20201005 11:57:30.825"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:30.825" starttime="20201005 11:57:28.731"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:30.826" starttime="20201005 11:57:28.731"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:57:30.831" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:57:33.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:57:33.158" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:57:33.158" starttime="20201005 11:57:30.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:57:33.159" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:57:33.160" starttime="20201005 11:57:33.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:57:33.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:57:33.160" starttime="20201005 11:57:33.160"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:33.160" starttime="20201005 11:57:30.827"></status>
</kw>
<msg timestamp="20201005 11:57:33.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:57:33.161" starttime="20201005 11:57:30.827"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:33.161" starttime="20201005 11:57:30.827"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:33.161" starttime="20201005 11:57:30.826"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:33.161" starttime="20201005 11:57:30.826"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201005 11:57:33.162" starttime="20201005 11:57:33.161"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:57:33.167" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:57:35.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:57:35.480" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T11:57:33.027Z",
  "modificat...</msg>
<status status="PASS" endtime="20201005 11:57:35.480" starttime="20201005 11:57:33.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:57:35.481" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T11:57:33.027Z",
  "modificationTime" : "2020-10-05T11:57:33.027Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201005 11:57:35.481" starttime="20201005 11:57:35.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:57:35.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:57:35.482" starttime="20201005 11:57:35.481"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:35.482" starttime="20201005 11:57:33.163"></status>
</kw>
<msg timestamp="20201005 11:57:35.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:57:35.482" starttime="20201005 11:57:33.162"></status>
</kw>
<msg timestamp="20201005 11:57:35.483" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T11:57:33.027Z",
  "modificat...</msg>
<status status="PASS" endtime="20201005 11:57:35.483" starttime="20201005 11:57:33.162"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201005 11:57:35.483" starttime="20201005 11:57:35.483"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 11:57:35.488" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 11:57:35.488" starttime="20201005 11:57:35.487"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:57:35.488" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 11:57:35.489" starttime="20201005 11:57:35.488"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:35.489" starttime="20201005 11:57:35.487"></status>
</kw>
<msg timestamp="20201005 11:57:35.489" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 11:57:35.489" starttime="20201005 11:57:35.486"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:35.489" starttime="20201005 11:57:35.485"></status>
</kw>
<msg timestamp="20201005 11:57:35.489" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201005 11:57:35.489" starttime="20201005 11:57:35.484"></status>
</kw>
<msg timestamp="20201005 11:57:35.489" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201005 11:57:35.490" starttime="20201005 11:57:35.483"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:57:35.494" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:57:37.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:57:37.938" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:57:37.938" starttime="20201005 11:57:35.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:57:37.939" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:57:37.939" starttime="20201005 11:57:37.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:57:37.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:57:37.940" starttime="20201005 11:57:37.939"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:37.940" starttime="20201005 11:57:35.490"></status>
</kw>
<msg timestamp="20201005 11:57:37.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:57:37.940" starttime="20201005 11:57:35.490"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:37.940" starttime="20201005 11:57:35.490"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:57:37.944" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:57:43.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:57:43.409" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:57:43.409" starttime="20201005 11:57:37.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:57:43.410" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:57:43.410" starttime="20201005 11:57:43.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:57:43.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:57:43.411" starttime="20201005 11:57:43.411"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:43.412" starttime="20201005 11:57:37.942"></status>
</kw>
<msg timestamp="20201005 11:57:43.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:57:43.412" starttime="20201005 11:57:37.941"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:43.412" starttime="20201005 11:57:37.941"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:57:43.416" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:57:47.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:57:47.679" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:57:47.679" starttime="20201005 11:57:43.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:57:47.680" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:57:47.680" starttime="20201005 11:57:47.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:57:47.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:57:47.680" starttime="20201005 11:57:47.680"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:47.681" starttime="20201005 11:57:43.413"></status>
</kw>
<msg timestamp="20201005 11:57:47.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:57:47.681" starttime="20201005 11:57:43.413"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:47.681" starttime="20201005 11:57:43.412"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:57:47.686" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:57:52.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:57:52.133" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:57:52.133" starttime="20201005 11:57:47.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:57:52.135" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:57:52.136" starttime="20201005 11:57:52.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:57:52.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:57:52.137" starttime="20201005 11:57:52.136"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:52.137" starttime="20201005 11:57:47.683"></status>
</kw>
<msg timestamp="20201005 11:57:52.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:57:52.138" starttime="20201005 11:57:47.682"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:52.138" starttime="20201005 11:57:47.681"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 11:57:52.138" critical="yes" starttime="20201005 11:57:26.426"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 11:57:52.145" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 11:57:52.145" starttime="20201005 11:57:52.144"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:57:52.145" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 11:57:52.145" starttime="20201005 11:57:52.145"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:52.145" starttime="20201005 11:57:52.143"></status>
</kw>
<msg timestamp="20201005 11:57:52.146" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 11:57:52.146" starttime="20201005 11:57:52.143"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:52.146" starttime="20201005 11:57:52.142"></status>
</kw>
<msg timestamp="20201005 11:57:52.146" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201005 11:57:52.146" starttime="20201005 11:57:52.141"></status>
</kw>
<msg timestamp="20201005 11:57:52.146" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201005 11:57:52.146" starttime="20201005 11:57:52.141"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:57:52.152" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:57:54.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:57:54.279" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:57:54.279" starttime="20201005 11:57:52.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:57:54.280" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:57:54.280" starttime="20201005 11:57:54.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:57:54.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:57:54.281" starttime="20201005 11:57:54.281"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:54.281" starttime="20201005 11:57:52.147"></status>
</kw>
<msg timestamp="20201005 11:57:54.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:57:54.282" starttime="20201005 11:57:52.147"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:54.282" starttime="20201005 11:57:52.146"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:57:54.290" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:57:56.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:57:56.401" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 11:57:56.401" starttime="20201005 11:57:54.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:57:56.402" level="INFO"></msg>
<status status="PASS" endtime="20201005 11:57:56.402" starttime="20201005 11:57:56.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:57:56.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:57:56.403" starttime="20201005 11:57:56.402"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:56.403" starttime="20201005 11:57:54.287"></status>
</kw>
<msg timestamp="20201005 11:57:56.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:57:56.403" starttime="20201005 11:57:54.283"></status>
</kw>
<status status="PASS" endtime="20201005 11:57:56.403" starttime="20201005 11:57:54.282"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 11:57:56.404" critical="yes" starttime="20201005 11:57:52.140"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201005 11:57:56.405" starttime="20201005 11:57:26.360"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 11:59:43.630" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 11:59:43.630" starttime="20201005 11:59:43.629"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:59:43.630" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 11:59:43.630" starttime="20201005 11:59:43.630"></status>
</kw>
<status status="PASS" endtime="20201005 11:59:43.630" starttime="20201005 11:59:43.629"></status>
</kw>
<msg timestamp="20201005 11:59:43.630" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 11:59:43.630" starttime="20201005 11:59:43.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201005 11:59:43.631" starttime="20201005 11:59:43.631"></status>
</kw>
<msg timestamp="20201005 11:59:43.631" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201005 11:59:43.632" starttime="20201005 11:59:43.631"></status>
</kw>
<status status="PASS" endtime="20201005 11:59:43.632" starttime="20201005 11:59:43.628"></status>
</kw>
<msg timestamp="20201005 11:59:43.632" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 11:59:43.632" starttime="20201005 11:59:43.627"></status>
</kw>
<msg timestamp="20201005 11:59:43.632" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 11:59:43.632" starttime="20201005 11:59:43.626"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201005 11:59:43.633" level="INFO">${random} = 18599</msg>
<status status="PASS" endtime="20201005 11:59:43.633" starttime="20201005 11:59:43.632"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:59:43.638" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-18599 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:59:47.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:59:47.278" level="INFO">${output} = 2020-10-05 11:59:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201005 11:59:47.278" starttime="20201005 11:59:43.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:59:47.279" level="INFO">2020-10-05 11:59:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:45 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-05 11:59:45 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:59:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-05 11:59:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-05 11:59:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 11:59:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5AF9F5CB7151-&gt;78e64221-9ddf-4925-8e18-b6ef90bbb35a
2020-10-05 11:59:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-05 11:59:46 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201005 11:59:47.280" starttime="20201005 11:59:47.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:59:47.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:59:47.280" starttime="20201005 11:59:47.280"></status>
</kw>
<status status="PASS" endtime="20201005 11:59:47.280" starttime="20201005 11:59:43.633"></status>
</kw>
<msg timestamp="20201005 11:59:47.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:59:47.281" starttime="20201005 11:59:43.633"></status>
</kw>
<msg timestamp="20201005 11:59:47.281" level="INFO">${result} = 2020-10-05 11:59:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201005 11:59:47.281" starttime="20201005 11:59:43.633"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:59:47.284" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:59:49.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:59:49.183" level="INFO">${output} = 2020-10-05 11:59:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:48 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201005 11:59:49.183" starttime="20201005 11:59:47.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:59:49.184" level="INFO">2020-10-05 11:59:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:48 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 11:57 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-05 11:59 ofs://om/volume1/bucket1/ozone-18599
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-05 11:58 ofs://om/volume1/bucket1/ozone-43063
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 11:57 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 11:59 ofs://om/volume1/bucket1/wordcount-79.txt
2020-10-05 11:59:49 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201005 11:59:49.184" starttime="20201005 11:59:49.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:59:49.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:59:49.185" starttime="20201005 11:59:49.184"></status>
</kw>
<status status="PASS" endtime="20201005 11:59:49.185" starttime="20201005 11:59:47.282"></status>
</kw>
<msg timestamp="20201005 11:59:49.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:59:49.185" starttime="20201005 11:59:47.281"></status>
</kw>
<msg timestamp="20201005 11:59:49.186" level="INFO">${result} = 2020-10-05 11:59:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:48 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201005 11:59:49.186" starttime="20201005 11:59:47.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201005 11:59:49.186" starttime="20201005 11:59:49.186"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201005 11:59:49.186" critical="yes" starttime="20201005 11:59:43.625"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201005 11:59:49.187" starttime="20201005 11:59:43.575"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 11:58:01.452" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 11:58:01.452" starttime="20201005 11:58:01.452"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:58:01.453" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 11:58:01.453" starttime="20201005 11:58:01.452"></status>
</kw>
<status status="PASS" endtime="20201005 11:58:01.453" starttime="20201005 11:58:01.451"></status>
</kw>
<msg timestamp="20201005 11:58:01.453" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 11:58:01.453" starttime="20201005 11:58:01.451"></status>
</kw>
<status status="PASS" endtime="20201005 11:58:01.453" starttime="20201005 11:58:01.451"></status>
</kw>
<msg timestamp="20201005 11:58:01.453" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 11:58:01.453" starttime="20201005 11:58:01.450"></status>
</kw>
<msg timestamp="20201005 11:58:01.454" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 11:58:01.454" starttime="20201005 11:58:01.449"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201005 11:58:01.454" level="INFO">${random} = 43063</msg>
<status status="PASS" endtime="20201005 11:58:01.454" starttime="20201005 11:58:01.454"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:58:01.461" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-43063 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:58:05.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:58:05.311" level="INFO">${output} = 2020-10-05 11:58:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201005 11:58:05.311" starttime="20201005 11:58:01.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:58:05.312" level="INFO">2020-10-05 11:58:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:03 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-05 11:58:03 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:58:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-05 11:58:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-05 11:58:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 11:58:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D5C3090358A5-&gt;78e64221-9ddf-4925-8e18-b6ef90bbb35a
2020-10-05 11:58:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-05 11:58:04 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201005 11:58:05.312" starttime="20201005 11:58:05.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:58:05.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:58:05.313" starttime="20201005 11:58:05.312"></status>
</kw>
<status status="PASS" endtime="20201005 11:58:05.313" starttime="20201005 11:58:01.455"></status>
</kw>
<msg timestamp="20201005 11:58:05.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:58:05.313" starttime="20201005 11:58:01.455"></status>
</kw>
<msg timestamp="20201005 11:58:05.313" level="INFO">${result} = 2020-10-05 11:58:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201005 11:58:05.313" starttime="20201005 11:58:01.454"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:58:05.317" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:58:07.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:58:07.256" level="INFO">${output} = 2020-10-05 11:58:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:07 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201005 11:58:07.256" starttime="20201005 11:58:05.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:58:07.257" level="INFO">2020-10-05 11:58:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:07 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 11:57 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-05 11:58 o3fs://bucket1.volume1.om/ozone-43063
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 11:57 o3fs://bucket1.volume1.om/user
2020-10-05 11:58:07 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201005 11:58:07.257" starttime="20201005 11:58:07.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:58:07.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:58:07.258" starttime="20201005 11:58:07.258"></status>
</kw>
<status status="PASS" endtime="20201005 11:58:07.258" starttime="20201005 11:58:05.314"></status>
</kw>
<msg timestamp="20201005 11:58:07.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:58:07.258" starttime="20201005 11:58:05.314"></status>
</kw>
<msg timestamp="20201005 11:58:07.259" level="INFO">${result} = 2020-10-05 11:58:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:07 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201005 11:58:07.259" starttime="20201005 11:58:05.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201005 11:58:07.259" starttime="20201005 11:58:07.259"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201005 11:58:07.259" critical="yes" starttime="20201005 11:58:01.448"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201005 11:58:07.260" starttime="20201005 11:58:01.398"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:59:54.143" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:59:54.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:59:54.150" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201005 11:59:54.150" starttime="20201005 11:59:54.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:59:54.151" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201005 11:59:54.151" starttime="20201005 11:59:54.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:59:54.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:59:54.151" starttime="20201005 11:59:54.151"></status>
</kw>
<status status="PASS" endtime="20201005 11:59:54.152" starttime="20201005 11:59:54.138"></status>
</kw>
<msg timestamp="20201005 11:59:54.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:59:54.152" starttime="20201005 11:59:54.138"></status>
</kw>
<msg timestamp="20201005 11:59:54.152" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201005 11:59:54.152" starttime="20201005 11:59:54.137"></status>
</kw>
<msg timestamp="20201005 11:59:54.152" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201005 11:59:54.152" starttime="20201005 11:59:54.137"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 11:59:54.156" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 11:59:54.156" starttime="20201005 11:59:54.155"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:59:54.156" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 11:59:54.156" starttime="20201005 11:59:54.156"></status>
</kw>
<status status="PASS" endtime="20201005 11:59:54.156" starttime="20201005 11:59:54.155"></status>
</kw>
<msg timestamp="20201005 11:59:54.157" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 11:59:54.157" starttime="20201005 11:59:54.154"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201005 11:59:54.158" starttime="20201005 11:59:54.157"></status>
</kw>
<msg timestamp="20201005 11:59:54.158" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201005 11:59:54.158" starttime="20201005 11:59:54.157"></status>
</kw>
<status status="PASS" endtime="20201005 11:59:54.158" starttime="20201005 11:59:54.154"></status>
</kw>
<msg timestamp="20201005 11:59:54.158" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 11:59:54.158" starttime="20201005 11:59:54.153"></status>
</kw>
<msg timestamp="20201005 11:59:54.158" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 11:59:54.158" starttime="20201005 11:59:54.152"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:59:54.163" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:00:36.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:00:36.562" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-05 11:59:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59...</msg>
<status status="PASS" endtime="20201005 12:00:36.562" starttime="20201005 11:59:54.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:00:36.563" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-05 11:59:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:56 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-05 11:59:56 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:59:56 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-05 11:59:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-05 11:59:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 11:59:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B8C22A609181-&gt;78e64221-9ddf-4925-8e18-b6ef90bbb35a
2020-10-05 11:59:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-05 11:59:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:00 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-05 12:00:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:00 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-05 12:00:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:00 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-05 12:00:00 INFO  JobSubmitter:202 - number of splits:3
2020-10-05 12:00:00 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601899028327_0003
2020-10-05 12:00:00 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-05 12:00:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:01 INFO  Configuration:2752 - resource-types.xml not found
2020-10-05 12:00:01 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-05 12:00:01 INFO  YarnClientImpl:324 - Submitted application application_1601899028327_0003
2020-10-05 12:00:01 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601899028327_0003/
2020-10-05 12:00:01 INFO  Job:1619 - Running job: job_1601899028327_0003
2020-10-05 12:00:09 INFO  Job:1640 - Job job_1601899028327_0003 running in uber mode : false
2020-10-05 12:00:09 INFO  Job:1647 -  map 0% reduce 0%
2020-10-05 12:00:15 INFO  Job:1647 -  map 33% reduce 0%
2020-10-05 12:00:21 INFO  Job:1647 -  map 67% reduce 0%
2020-10-05 12:00:27 INFO  Job:1647 -  map 100% reduce 0%
2020-10-05 12:00:32 INFO  Job:1647 -  map 100% reduce 100%
2020-10-05 12:00:35 INFO  Job:1658 - Job job_1601899028327_0003 completed successfully
2020-10-05 12:00:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:35 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1020113
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41968
		Total time spent by all reduces in occupied slots (ms)=16344
		Total time spent by all map tasks (ms)=10492
		Total time spent by all reduce tasks (ms)=4086
		Total vcore-milliseconds taken by all map tasks=10492
		Total vcore-milliseconds taken by all reduce tasks=4086
		Total megabyte-milliseconds taken by all map tasks=42975232
		Total megabyte-milliseconds taken by all reduce tasks=16736256
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=670
		CPU time spent (ms)=7500
		Physical memory (bytes) snapshot=1336365056
		Virtual memory (bytes) snapshot=16069697536
		Total committed heap usage (bytes)=1281884160
		Peak Map Physical memory (bytes)=371863552
		Peak Map Virtual memory (bytes)=4014014464
		Peak Reduce Physical memory (bytes)=384208896
		Peak Reduce Virtual memory (bytes)=4033306624
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.038 seconds
2020-10-05 12:00:35 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-05 12:00:36 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201005 12:00:36.564" starttime="20201005 12:00:36.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:00:36.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:00:36.564" starttime="20201005 12:00:36.564"></status>
</kw>
<status status="PASS" endtime="20201005 12:00:36.564" starttime="20201005 11:59:54.159"></status>
</kw>
<msg timestamp="20201005 12:00:36.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:00:36.565" starttime="20201005 11:59:54.159"></status>
</kw>
<msg timestamp="20201005 12:00:36.565" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-05 11:59:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59...</msg>
<status status="PASS" endtime="20201005 12:00:36.565" starttime="20201005 11:59:54.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201005 12:00:36.566" starttime="20201005 12:00:36.565"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201005 12:00:36.566" critical="yes" starttime="20201005 11:59:54.136"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:00:36.571" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:00:36.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:00:36.576" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201005 12:00:36.576" starttime="20201005 12:00:36.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:00:36.577" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201005 12:00:36.577" starttime="20201005 12:00:36.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:00:36.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:00:36.578" starttime="20201005 12:00:36.578"></status>
</kw>
<status status="PASS" endtime="20201005 12:00:36.578" starttime="20201005 12:00:36.569"></status>
</kw>
<msg timestamp="20201005 12:00:36.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:00:36.578" starttime="20201005 12:00:36.568"></status>
</kw>
<msg timestamp="20201005 12:00:36.579" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201005 12:00:36.579" starttime="20201005 12:00:36.568"></status>
</kw>
<msg timestamp="20201005 12:00:36.579" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201005 12:00:36.579" starttime="20201005 12:00:36.568"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201005 12:00:36.579" level="INFO">${random} = 55</msg>
<status status="PASS" endtime="20201005 12:00:36.579" starttime="20201005 12:00:36.579"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 12:00:36.583" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 12:00:36.583" starttime="20201005 12:00:36.583"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:00:36.584" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 12:00:36.584" starttime="20201005 12:00:36.583"></status>
</kw>
<status status="PASS" endtime="20201005 12:00:36.584" starttime="20201005 12:00:36.582"></status>
</kw>
<msg timestamp="20201005 12:00:36.584" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 12:00:36.584" starttime="20201005 12:00:36.582"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:00:36.585" starttime="20201005 12:00:36.584"></status>
</kw>
<msg timestamp="20201005 12:00:36.585" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201005 12:00:36.585" starttime="20201005 12:00:36.584"></status>
</kw>
<status status="PASS" endtime="20201005 12:00:36.585" starttime="20201005 12:00:36.581"></status>
</kw>
<msg timestamp="20201005 12:00:36.585" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 12:00:36.585" starttime="20201005 12:00:36.580"></status>
</kw>
<msg timestamp="20201005 12:00:36.585" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 12:00:36.585" starttime="20201005 12:00:36.580"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 12:00:36.588" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 12:00:36.589" starttime="20201005 12:00:36.588"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:00:36.589" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 12:00:36.589" starttime="20201005 12:00:36.589"></status>
</kw>
<status status="PASS" endtime="20201005 12:00:36.589" starttime="20201005 12:00:36.588"></status>
</kw>
<msg timestamp="20201005 12:00:36.589" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 12:00:36.589" starttime="20201005 12:00:36.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:00:36.591" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201005 12:00:36.591" starttime="20201005 12:00:36.590"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:00:36.591" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201005 12:00:36.591" starttime="20201005 12:00:36.591"></status>
</kw>
<status status="PASS" endtime="20201005 12:00:36.591" starttime="20201005 12:00:36.590"></status>
</kw>
<msg timestamp="20201005 12:00:36.591" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201005 12:00:36.591" starttime="20201005 12:00:36.589"></status>
</kw>
<status status="PASS" endtime="20201005 12:00:36.592" starttime="20201005 12:00:36.586"></status>
</kw>
<msg timestamp="20201005 12:00:36.592" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201005 12:00:36.592" starttime="20201005 12:00:36.586"></status>
</kw>
<msg timestamp="20201005 12:00:36.592" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201005 12:00:36.592" starttime="20201005 12:00:36.585"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 12:00:36.595" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 12:00:36.595" starttime="20201005 12:00:36.594"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:00:36.595" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 12:00:36.595" starttime="20201005 12:00:36.595"></status>
</kw>
<status status="PASS" endtime="20201005 12:00:36.596" starttime="20201005 12:00:36.594"></status>
</kw>
<msg timestamp="20201005 12:00:36.596" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 12:00:36.596" starttime="20201005 12:00:36.593"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:00:36.597" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201005 12:00:36.597" starttime="20201005 12:00:36.597"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:00:36.597" level="INFO">${result} = /wordcount-55.txt</msg>
<status status="PASS" endtime="20201005 12:00:36.598" starttime="20201005 12:00:36.597"></status>
</kw>
<status status="PASS" endtime="20201005 12:00:36.598" starttime="20201005 12:00:36.596"></status>
</kw>
<msg timestamp="20201005 12:00:36.598" level="INFO">${path_with_leading} = /wordcount-55.txt</msg>
<status status="PASS" endtime="20201005 12:00:36.598" starttime="20201005 12:00:36.596"></status>
</kw>
<status status="PASS" endtime="20201005 12:00:36.598" starttime="20201005 12:00:36.593"></status>
</kw>
<msg timestamp="20201005 12:00:36.598" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-55.txt</msg>
<status status="PASS" endtime="20201005 12:00:36.598" starttime="20201005 12:00:36.593"></status>
</kw>
<msg timestamp="20201005 12:00:36.598" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-55.txt</msg>
<status status="PASS" endtime="20201005 12:00:36.598" starttime="20201005 12:00:36.592"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:00:36.602" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-55.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:01:12.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:01:12.985" level="INFO">${output} = 2020-10-05 12:00:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:38 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201005 12:01:12.985" starttime="20201005 12:00:36.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:01:12.986" level="INFO">2020-10-05 12:00:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:38 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-05 12:00:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:38 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-05 12:00:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:38 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-05 12:00:38 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-05 12:00:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-05 12:00:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-05 12:00:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 12:00:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-637AC95BFDE2-&gt;78e64221-9ddf-4925-8e18-b6ef90bbb35a
2020-10-05 12:00:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-05 12:00:40 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-05 12:00:40 INFO  JobSubmitter:202 - number of splits:3
2020-10-05 12:00:40 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601899028327_0004
2020-10-05 12:00:40 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-05 12:00:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:41 INFO  Configuration:2752 - resource-types.xml not found
2020-10-05 12:00:41 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-05 12:00:41 INFO  YarnClientImpl:324 - Submitted application application_1601899028327_0004
2020-10-05 12:00:41 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601899028327_0004/
2020-10-05 12:00:41 INFO  Job:1619 - Running job: job_1601899028327_0004
2020-10-05 12:00:49 INFO  Job:1640 - Job job_1601899028327_0004 running in uber mode : false
2020-10-05 12:00:49 INFO  Job:1647 -  map 0% reduce 0%
2020-10-05 12:00:55 INFO  Job:1647 -  map 33% reduce 0%
2020-10-05 12:01:01 INFO  Job:1647 -  map 67% reduce 0%
2020-10-05 12:01:07 INFO  Job:1647 -  map 100% reduce 0%
2020-10-05 12:01:11 INFO  Job:1647 -  map 100% reduce 100%
2020-10-05 12:01:12 INFO  Job:1658 - Job job_1601899028327_0004 completed successfully
2020-10-05 12:01:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:01:12 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1082777
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42952
		Total time spent by all reduces in occupied slots (ms)=15440
		Total time spent by all map tasks (ms)=10738
		Total time spent by all reduce tasks (ms)=3860
		Total vcore-milliseconds taken by all map tasks=10738
		Total vcore-milliseconds taken by all reduce tasks=3860
		Total megabyte-milliseconds taken by all map tasks=43982848
		Total megabyte-milliseconds taken by all reduce tasks=15810560
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=648
		CPU time spent (ms)=7260
		Physical memory (bytes) snapshot=1324908544
		Virtual memory (bytes) snapshot=16057659392
		Total committed heap usage (bytes)=1288699904
		Peak Map Physical memory (bytes)=381456384
		Peak Map Virtual memory (bytes)=4014186496
		Peak Reduce Physical memory (bytes)=379518976
		Peak Reduce Virtual memory (bytes)=4035723264
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-05 12:01:12 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201005 12:01:12.987" starttime="20201005 12:01:12.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:01:12.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:01:12.987" starttime="20201005 12:01:12.987"></status>
</kw>
<status status="PASS" endtime="20201005 12:01:12.987" starttime="20201005 12:00:36.599"></status>
</kw>
<msg timestamp="20201005 12:01:12.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:01:12.988" starttime="20201005 12:00:36.599"></status>
</kw>
<msg timestamp="20201005 12:01:12.988" level="INFO">${output} = 2020-10-05 12:00:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 12:00:38 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201005 12:01:12.989" starttime="20201005 12:00:36.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201005 12:01:12.989" starttime="20201005 12:01:12.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201005 12:01:12.990" starttime="20201005 12:01:12.989"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201005 12:01:12.990" critical="yes" starttime="20201005 12:00:36.567"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201005 12:01:12.991" starttime="20201005 11:59:54.088"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:58:12.387" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:58:12.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:58:12.391" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201005 11:58:12.391" starttime="20201005 11:58:12.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:58:12.392" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201005 11:58:12.392" starttime="20201005 11:58:12.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:58:12.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:58:12.393" starttime="20201005 11:58:12.392"></status>
</kw>
<status status="PASS" endtime="20201005 11:58:12.393" starttime="20201005 11:58:12.381"></status>
</kw>
<msg timestamp="20201005 11:58:12.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:58:12.393" starttime="20201005 11:58:12.380"></status>
</kw>
<msg timestamp="20201005 11:58:12.393" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201005 11:58:12.394" starttime="20201005 11:58:12.380"></status>
</kw>
<msg timestamp="20201005 11:58:12.394" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201005 11:58:12.394" starttime="20201005 11:58:12.380"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 11:58:12.397" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 11:58:12.397" starttime="20201005 11:58:12.396"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:58:12.398" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 11:58:12.398" starttime="20201005 11:58:12.397"></status>
</kw>
<status status="PASS" endtime="20201005 11:58:12.398" starttime="20201005 11:58:12.396"></status>
</kw>
<msg timestamp="20201005 11:58:12.398" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 11:58:12.398" starttime="20201005 11:58:12.396"></status>
</kw>
<status status="PASS" endtime="20201005 11:58:12.398" starttime="20201005 11:58:12.395"></status>
</kw>
<msg timestamp="20201005 11:58:12.398" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 11:58:12.398" starttime="20201005 11:58:12.394"></status>
</kw>
<msg timestamp="20201005 11:58:12.398" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 11:58:12.398" starttime="20201005 11:58:12.394"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:58:12.402" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:58:54.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:58:54.852" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-05 11:58:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58...</msg>
<status status="PASS" endtime="20201005 11:58:54.852" starttime="20201005 11:58:12.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:58:54.853" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-05 11:58:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:14 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-05 11:58:14 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:58:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-05 11:58:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-05 11:58:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 11:58:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FEEB19091F17-&gt;78e64221-9ddf-4925-8e18-b6ef90bbb35a
2020-10-05 11:58:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-05 11:58:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-05 11:58:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:16 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-05 11:58:16 INFO  JobSubmitter:202 - number of splits:3
2020-10-05 11:58:17 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601899028327_0001
2020-10-05 11:58:17 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-05 11:58:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:17 INFO  Configuration:2752 - resource-types.xml not found
2020-10-05 11:58:17 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-05 11:58:17 INFO  YarnClientImpl:324 - Submitted application application_1601899028327_0001
2020-10-05 11:58:17 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601899028327_0001/
2020-10-05 11:58:17 INFO  Job:1619 - Running job: job_1601899028327_0001
2020-10-05 11:58:28 INFO  Job:1640 - Job job_1601899028327_0001 running in uber mode : false
2020-10-05 11:58:28 INFO  Job:1647 -  map 0% reduce 0%
2020-10-05 11:58:35 INFO  Job:1647 -  map 33% reduce 0%
2020-10-05 11:58:41 INFO  Job:1647 -  map 67% reduce 0%
2020-10-05 11:58:47 INFO  Job:1647 -  map 100% reduce 0%
2020-10-05 11:58:53 INFO  Job:1647 -  map 100% reduce 100%
2020-10-05 11:58:54 INFO  Job:1658 - Job job_1601899028327_0001 completed successfully
2020-10-05 11:58:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:54 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1020325
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44076
		Total time spent by all reduces in occupied slots (ms)=17152
		Total time spent by all map tasks (ms)=11019
		Total time spent by all reduce tasks (ms)=4288
		Total vcore-milliseconds taken by all map tasks=11019
		Total vcore-milliseconds taken by all reduce tasks=4288
		Total megabyte-milliseconds taken by all map tasks=45133824
		Total megabyte-milliseconds taken by all reduce tasks=17563648
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=690
		CPU time spent (ms)=7510
		Physical memory (bytes) snapshot=1254801408
		Virtual memory (bytes) snapshot=16078176256
		Total committed heap usage (bytes)=1099431936
		Peak Map Physical memory (bytes)=294166528
		Peak Map Virtual memory (bytes)=4017266688
		Peak Reduce Physical memory (bytes)=378806272
		Peak Reduce Virtual memory (bytes)=4036816896
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.261 seconds
2020-10-05 11:58:54 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-05 11:58:54 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201005 11:58:54.853" starttime="20201005 11:58:54.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:58:54.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:58:54.854" starttime="20201005 11:58:54.853"></status>
</kw>
<status status="PASS" endtime="20201005 11:58:54.854" starttime="20201005 11:58:12.400"></status>
</kw>
<msg timestamp="20201005 11:58:54.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:58:54.854" starttime="20201005 11:58:12.399"></status>
</kw>
<msg timestamp="20201005 11:58:54.855" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-05 11:58:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58...</msg>
<status status="PASS" endtime="20201005 11:58:54.855" starttime="20201005 11:58:12.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201005 11:58:54.855" starttime="20201005 11:58:54.855"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201005 11:58:54.855" critical="yes" starttime="20201005 11:58:12.379"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:58:54.860" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:58:54.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:58:54.866" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201005 11:58:54.866" starttime="20201005 11:58:54.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:58:54.867" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201005 11:58:54.868" starttime="20201005 11:58:54.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:58:54.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:58:54.868" starttime="20201005 11:58:54.868"></status>
</kw>
<status status="PASS" endtime="20201005 11:58:54.868" starttime="20201005 11:58:54.858"></status>
</kw>
<msg timestamp="20201005 11:58:54.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:58:54.869" starttime="20201005 11:58:54.857"></status>
</kw>
<msg timestamp="20201005 11:58:54.869" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201005 11:58:54.869" starttime="20201005 11:58:54.857"></status>
</kw>
<msg timestamp="20201005 11:58:54.869" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201005 11:58:54.869" starttime="20201005 11:58:54.857"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201005 11:58:54.869" level="INFO">${random} = 79</msg>
<status status="PASS" endtime="20201005 11:58:54.870" starttime="20201005 11:58:54.869"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 11:58:54.873" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 11:58:54.873" starttime="20201005 11:58:54.872"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:58:54.873" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 11:58:54.873" starttime="20201005 11:58:54.873"></status>
</kw>
<status status="PASS" endtime="20201005 11:58:54.873" starttime="20201005 11:58:54.872"></status>
</kw>
<msg timestamp="20201005 11:58:54.873" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 11:58:54.873" starttime="20201005 11:58:54.872"></status>
</kw>
<status status="PASS" endtime="20201005 11:58:54.874" starttime="20201005 11:58:54.871"></status>
</kw>
<msg timestamp="20201005 11:58:54.874" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 11:58:54.874" starttime="20201005 11:58:54.870"></status>
</kw>
<msg timestamp="20201005 11:58:54.874" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 11:58:54.874" starttime="20201005 11:58:54.870"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 11:58:54.876" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 11:58:54.876" starttime="20201005 11:58:54.876"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:58:54.877" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 11:58:54.877" starttime="20201005 11:58:54.877"></status>
</kw>
<status status="PASS" endtime="20201005 11:58:54.877" starttime="20201005 11:58:54.876"></status>
</kw>
<msg timestamp="20201005 11:58:54.877" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 11:58:54.877" starttime="20201005 11:58:54.875"></status>
</kw>
<status status="PASS" endtime="20201005 11:58:54.878" starttime="20201005 11:58:54.875"></status>
</kw>
<msg timestamp="20201005 11:58:54.878" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201005 11:58:54.878" starttime="20201005 11:58:54.875"></status>
</kw>
<msg timestamp="20201005 11:58:54.878" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201005 11:58:54.878" starttime="20201005 11:58:54.874"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 11:58:54.880" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 11:58:54.880" starttime="20201005 11:58:54.880"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 11:58:54.881" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 11:58:54.881" starttime="20201005 11:58:54.881"></status>
</kw>
<status status="PASS" endtime="20201005 11:58:54.881" starttime="20201005 11:58:54.880"></status>
</kw>
<msg timestamp="20201005 11:58:54.881" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 11:58:54.881" starttime="20201005 11:58:54.879"></status>
</kw>
<status status="PASS" endtime="20201005 11:58:54.882" starttime="20201005 11:58:54.879"></status>
</kw>
<msg timestamp="20201005 11:58:54.882" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-79.txt</msg>
<status status="PASS" endtime="20201005 11:58:54.882" starttime="20201005 11:58:54.878"></status>
</kw>
<msg timestamp="20201005 11:58:54.882" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-79.txt</msg>
<status status="PASS" endtime="20201005 11:58:54.882" starttime="20201005 11:58:54.878"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 11:58:54.892" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-79.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 11:59:38.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 11:59:38.661" level="INFO">${output} = 2020-10-05 11:58:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201005 11:59:38.661" starttime="20201005 11:58:54.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 11:59:38.662" level="INFO">2020-10-05 11:58:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:56 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-05 11:58:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:57 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-05 11:58:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:57 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-05 11:58:57 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-05 11:58:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-05 11:58:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-05 11:58:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 11:58:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1B4D2B0A4C2D-&gt;78e64221-9ddf-4925-8e18-b6ef90bbb35a
2020-10-05 11:58:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-05 11:58:58 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-05 11:58:59 INFO  JobSubmitter:202 - number of splits:3
2020-10-05 11:58:59 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601899028327_0002
2020-10-05 11:58:59 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-05 11:58:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:59 INFO  Configuration:2752 - resource-types.xml not found
2020-10-05 11:58:59 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-05 11:58:59 INFO  YarnClientImpl:324 - Submitted application application_1601899028327_0002
2020-10-05 11:58:59 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601899028327_0002/
2020-10-05 11:58:59 INFO  Job:1619 - Running job: job_1601899028327_0002
2020-10-05 11:59:07 INFO  Job:1640 - Job job_1601899028327_0002 running in uber mode : false
2020-10-05 11:59:07 INFO  Job:1647 -  map 0% reduce 0%
2020-10-05 11:59:15 INFO  Job:1647 -  map 33% reduce 0%
2020-10-05 11:59:21 INFO  Job:1647 -  map 67% reduce 0%
2020-10-05 11:59:27 INFO  Job:1647 -  map 100% reduce 0%
2020-10-05 11:59:32 INFO  Job:1647 -  map 100% reduce 100%
2020-10-05 11:59:38 INFO  Job:1658 - Job job_1601899028327_0002 completed successfully
2020-10-05 11:59:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:59:38 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1082861
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43020
		Total time spent by all reduces in occupied slots (ms)=15576
		Total time spent by all map tasks (ms)=10755
		Total time spent by all reduce tasks (ms)=3894
		Total vcore-milliseconds taken by all map tasks=10755
		Total vcore-milliseconds taken by all reduce tasks=3894
		Total megabyte-milliseconds taken by all map tasks=44052480
		Total megabyte-milliseconds taken by all reduce tasks=15949824
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=654
		CPU time spent (ms)=7630
		Physical memory (bytes) snapshot=1162588160
		Virtual memory (bytes) snapshot=16069029888
		Total committed heap usage (bytes)=1181220864
		Peak Map Physical memory (bytes)=292425728
		Peak Map Virtual memory (bytes)=4016246784
		Peak Reduce Physical memory (bytes)=290185216
		Peak Reduce Virtual memory (bytes)=4031221760
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-05 11:59:38 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201005 11:59:38.663" starttime="20201005 11:59:38.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 11:59:38.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 11:59:38.664" starttime="20201005 11:59:38.663"></status>
</kw>
<status status="PASS" endtime="20201005 11:59:38.664" starttime="20201005 11:58:54.883"></status>
</kw>
<msg timestamp="20201005 11:59:38.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 11:59:38.664" starttime="20201005 11:58:54.882"></status>
</kw>
<msg timestamp="20201005 11:59:38.665" level="INFO">${output} = 2020-10-05 11:58:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-05 11:58:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201005 11:59:38.665" starttime="20201005 11:58:54.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201005 11:59:38.666" starttime="20201005 11:59:38.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201005 11:59:38.667" starttime="20201005 11:59:38.666"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201005 11:59:38.667" critical="yes" starttime="20201005 11:58:54.856"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201005 11:59:38.668" starttime="20201005 11:58:12.330"></status>
</suite>
<status status="PASS" elapsedtime="206760" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:02:36.483" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:02:40.919" level="INFO">${rc} = 255</msg>
<msg timestamp="20201005 12:02:40.919" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201005 12:02:40.919" starttime="20201005 12:02:36.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:02:40.921" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201005 12:02:40.921" starttime="20201005 12:02:40.920"></status>
</kw>
<msg timestamp="20201005 12:02:40.921" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201005 12:02:40.921" starttime="20201005 12:02:36.476"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:02:40.928" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:02:44.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:02:44.602" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:02:44.602" starttime="20201005 12:02:40.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:02:44.603" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:02:44.603" starttime="20201005 12:02:44.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:02:44.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:02:44.604" starttime="20201005 12:02:44.603"></status>
</kw>
<status status="PASS" endtime="20201005 12:02:44.604" starttime="20201005 12:02:40.923"></status>
</kw>
<msg timestamp="20201005 12:02:44.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:02:44.605" starttime="20201005 12:02:40.923"></status>
</kw>
<msg timestamp="20201005 12:02:44.605" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201005 12:02:44.605" starttime="20201005 12:02:40.922"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201005 12:02:44.605" starttime="20201005 12:02:44.605"></status>
</kw>
<status status="PASS" endtime="20201005 12:02:44.606" starttime="20201005 12:02:40.922"></status>
</kw>
<status status="PASS" endtime="20201005 12:02:44.606" starttime="20201005 12:02:40.921"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:02:44.611" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:02:48.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:02:48.063" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:02:48.063" starttime="20201005 12:02:44.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:02:48.065" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:02:48.065" starttime="20201005 12:02:48.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:02:48.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:02:48.065" starttime="20201005 12:02:48.065"></status>
</kw>
<status status="PASS" endtime="20201005 12:02:48.066" starttime="20201005 12:02:44.608"></status>
</kw>
<msg timestamp="20201005 12:02:48.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:02:48.066" starttime="20201005 12:02:44.607"></status>
</kw>
<status status="PASS" endtime="20201005 12:02:48.066" starttime="20201005 12:02:44.607"></status>
</kw>
<status status="PASS" endtime="20201005 12:02:48.066" starttime="20201005 12:02:44.606"></status>
</kw>
<status status="PASS" endtime="20201005 12:02:48.066" starttime="20201005 12:02:44.606"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201005 12:02:48.067" starttime="20201005 12:02:48.067"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:02:48.072" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:02:51.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:02:51.490" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:02:47.815Z",
  "modificat...</msg>
<status status="PASS" endtime="20201005 12:02:51.491" starttime="20201005 12:02:48.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:02:51.492" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:02:47.815Z",
  "modificationTime" : "2020-10-05T12:02:47.815Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201005 12:02:51.492" starttime="20201005 12:02:51.491"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:02:51.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:02:51.493" starttime="20201005 12:02:51.492"></status>
</kw>
<status status="PASS" endtime="20201005 12:02:51.493" starttime="20201005 12:02:48.069"></status>
</kw>
<msg timestamp="20201005 12:02:51.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:02:51.493" starttime="20201005 12:02:48.068"></status>
</kw>
<msg timestamp="20201005 12:02:51.494" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-05T12:02:47.815Z",
  "modificat...</msg>
<status status="PASS" endtime="20201005 12:02:51.494" starttime="20201005 12:02:48.067"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201005 12:02:51.494" starttime="20201005 12:02:51.494"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:02:51.498" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 12:02:51.498" starttime="20201005 12:02:51.498"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:02:51.499" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 12:02:51.499" starttime="20201005 12:02:51.498"></status>
</kw>
<status status="PASS" endtime="20201005 12:02:51.499" starttime="20201005 12:02:51.497"></status>
</kw>
<msg timestamp="20201005 12:02:51.499" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 12:02:51.499" starttime="20201005 12:02:51.497"></status>
</kw>
<status status="PASS" endtime="20201005 12:02:51.499" starttime="20201005 12:02:51.496"></status>
</kw>
<msg timestamp="20201005 12:02:51.500" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201005 12:02:51.500" starttime="20201005 12:02:51.495"></status>
</kw>
<msg timestamp="20201005 12:02:51.500" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201005 12:02:51.500" starttime="20201005 12:02:51.494"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:02:51.504" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:02:54.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:02:54.748" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:02:54.748" starttime="20201005 12:02:51.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:02:54.749" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:02:54.749" starttime="20201005 12:02:54.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:02:54.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:02:54.750" starttime="20201005 12:02:54.749"></status>
</kw>
<status status="PASS" endtime="20201005 12:02:54.750" starttime="20201005 12:02:51.501"></status>
</kw>
<msg timestamp="20201005 12:02:54.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:02:54.750" starttime="20201005 12:02:51.500"></status>
</kw>
<status status="PASS" endtime="20201005 12:02:54.751" starttime="20201005 12:02:51.500"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:02:54.755" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:03:02.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:03:02.343" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:03:02.343" starttime="20201005 12:02:54.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:03:02.344" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:03:02.344" starttime="20201005 12:03:02.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:03:02.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:03:02.345" starttime="20201005 12:03:02.344"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:02.345" starttime="20201005 12:02:54.752"></status>
</kw>
<msg timestamp="20201005 12:03:02.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:03:02.345" starttime="20201005 12:02:54.752"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:02.346" starttime="20201005 12:02:54.751"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:03:02.350" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:03:08.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:03:08.381" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:03:08.381" starttime="20201005 12:03:02.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:03:08.382" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:03:08.382" starttime="20201005 12:03:08.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:03:08.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:03:08.383" starttime="20201005 12:03:08.383"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:08.383" starttime="20201005 12:03:02.347"></status>
</kw>
<msg timestamp="20201005 12:03:08.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:03:08.384" starttime="20201005 12:03:02.346"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:08.384" starttime="20201005 12:03:02.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:03:08.390" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:03:13.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:03:13.813" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:03:13.813" starttime="20201005 12:03:08.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:03:13.814" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:03:13.814" starttime="20201005 12:03:13.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:03:13.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:03:13.815" starttime="20201005 12:03:13.814"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:13.815" starttime="20201005 12:03:08.385"></status>
</kw>
<msg timestamp="20201005 12:03:13.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:03:13.815" starttime="20201005 12:03:08.385"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:13.815" starttime="20201005 12:03:08.384"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:03:13.816" critical="yes" starttime="20201005 12:02:36.474"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:03:13.821" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 12:03:13.821" starttime="20201005 12:03:13.821"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:03:13.822" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 12:03:13.822" starttime="20201005 12:03:13.821"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:13.822" starttime="20201005 12:03:13.820"></status>
</kw>
<msg timestamp="20201005 12:03:13.822" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 12:03:13.822" starttime="20201005 12:03:13.820"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:13.822" starttime="20201005 12:03:13.819"></status>
</kw>
<msg timestamp="20201005 12:03:13.823" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201005 12:03:13.823" starttime="20201005 12:03:13.818"></status>
</kw>
<msg timestamp="20201005 12:03:13.823" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201005 12:03:13.823" starttime="20201005 12:03:13.817"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:03:13.826" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:03:16.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:03:16.792" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:03:16.792" starttime="20201005 12:03:13.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:03:16.793" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:03:16.793" starttime="20201005 12:03:16.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:03:16.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:03:16.794" starttime="20201005 12:03:16.793"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:16.794" starttime="20201005 12:03:13.824"></status>
</kw>
<msg timestamp="20201005 12:03:16.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:03:16.794" starttime="20201005 12:03:13.823"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:16.795" starttime="20201005 12:03:13.823"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:03:16.800" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:03:19.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:03:19.830" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201005 12:03:19.830" starttime="20201005 12:03:16.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:03:19.832" level="INFO"></msg>
<status status="PASS" endtime="20201005 12:03:19.832" starttime="20201005 12:03:19.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:03:19.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:03:19.832" starttime="20201005 12:03:19.832"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:19.833" starttime="20201005 12:03:16.796"></status>
</kw>
<msg timestamp="20201005 12:03:19.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:03:19.833" starttime="20201005 12:03:16.796"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:19.833" starttime="20201005 12:03:16.795"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201005 12:03:19.833" critical="yes" starttime="20201005 12:03:13.816"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201005 12:03:19.834" starttime="20201005 12:02:36.404"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 12:05:01.955" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 12:05:01.955" starttime="20201005 12:05:01.954"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:05:01.956" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 12:05:01.956" starttime="20201005 12:05:01.955"></status>
</kw>
<status status="PASS" endtime="20201005 12:05:01.956" starttime="20201005 12:05:01.953"></status>
</kw>
<msg timestamp="20201005 12:05:01.956" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 12:05:01.956" starttime="20201005 12:05:01.952"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:05:01.957" starttime="20201005 12:05:01.957"></status>
</kw>
<msg timestamp="20201005 12:05:01.957" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201005 12:05:01.957" starttime="20201005 12:05:01.956"></status>
</kw>
<status status="PASS" endtime="20201005 12:05:01.957" starttime="20201005 12:05:01.952"></status>
</kw>
<msg timestamp="20201005 12:05:01.957" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 12:05:01.957" starttime="20201005 12:05:01.951"></status>
</kw>
<msg timestamp="20201005 12:05:01.958" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 12:05:01.958" starttime="20201005 12:05:01.950"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201005 12:05:01.958" level="INFO">${random} = 57299</msg>
<status status="PASS" endtime="20201005 12:05:01.958" starttime="20201005 12:05:01.958"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:05:01.961" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-57299 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:05:05.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:05:05.717" level="INFO">${output} = 2020-10-05 12:05:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:05:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201005 12:05:05.718" starttime="20201005 12:05:01.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:05:05.719" level="INFO">2020-10-05 12:05:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:05:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-05 12:05:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-05 12:05:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 12:05:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-14A33CB38AB5-&gt;fc741730-a8c8-4565-a5e5-085fd7d51c97
2020-10-05 12:05:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201005 12:05:05.719" starttime="20201005 12:05:05.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:05:05.719" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:05:05.719" starttime="20201005 12:05:05.719"></status>
</kw>
<status status="PASS" endtime="20201005 12:05:05.720" starttime="20201005 12:05:01.959"></status>
</kw>
<msg timestamp="20201005 12:05:05.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:05:05.720" starttime="20201005 12:05:01.959"></status>
</kw>
<msg timestamp="20201005 12:05:05.720" level="INFO">${result} = 2020-10-05 12:05:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:05:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201005 12:05:05.720" starttime="20201005 12:05:01.959"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:05:05.723" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:05:07.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:05:07.765" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 12:02 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-05 12:03 ofs://om/volume1/bucket1/ozone-25359
-rw-...</msg>
<status status="PASS" endtime="20201005 12:05:07.765" starttime="20201005 12:05:05.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:05:07.767" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 12:02 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-05 12:03 ofs://om/volume1/bucket1/ozone-25359
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-05 12:05 ofs://om/volume1/bucket1/ozone-57299
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 12:03 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 12:04 ofs://om/volume1/bucket1/wordcount-56.txt</msg>
<status status="PASS" endtime="20201005 12:05:07.767" starttime="20201005 12:05:07.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:05:07.767" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:05:07.768" starttime="20201005 12:05:07.767"></status>
</kw>
<status status="PASS" endtime="20201005 12:05:07.768" starttime="20201005 12:05:05.721"></status>
</kw>
<msg timestamp="20201005 12:05:07.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:05:07.768" starttime="20201005 12:05:05.721"></status>
</kw>
<msg timestamp="20201005 12:05:07.768" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 12:02 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-05 12:03 ofs://om/volume1/bucket1/ozone-25359
-rw-...</msg>
<status status="PASS" endtime="20201005 12:05:07.768" starttime="20201005 12:05:05.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:05:07.769" starttime="20201005 12:05:07.768"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201005 12:05:07.769" critical="yes" starttime="20201005 12:05:01.949"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201005 12:05:07.770" starttime="20201005 12:05:01.904"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:03:24.701" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 12:03:24.702" starttime="20201005 12:03:24.700"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:03:24.702" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 12:03:24.702" starttime="20201005 12:03:24.702"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:24.702" starttime="20201005 12:03:24.699"></status>
</kw>
<msg timestamp="20201005 12:03:24.702" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 12:03:24.702" starttime="20201005 12:03:24.699"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:24.703" starttime="20201005 12:03:24.698"></status>
</kw>
<msg timestamp="20201005 12:03:24.703" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 12:03:24.703" starttime="20201005 12:03:24.697"></status>
</kw>
<msg timestamp="20201005 12:03:24.703" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 12:03:24.703" starttime="20201005 12:03:24.697"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201005 12:03:24.704" level="INFO">${random} = 25359</msg>
<status status="PASS" endtime="20201005 12:03:24.704" starttime="20201005 12:03:24.703"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:03:24.706" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-25359 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:03:28.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:03:28.678" level="INFO">${output} = 2020-10-05 12:03:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:03:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201005 12:03:28.678" starttime="20201005 12:03:24.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:03:28.679" level="INFO">2020-10-05 12:03:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:03:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-05 12:03:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-05 12:03:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 12:03:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-57E0111AECB4-&gt;fc741730-a8c8-4565-a5e5-085fd7d51c97
2020-10-05 12:03:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201005 12:03:28.679" starttime="20201005 12:03:28.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:03:28.680" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:03:28.680" starttime="20201005 12:03:28.679"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:28.680" starttime="20201005 12:03:24.704"></status>
</kw>
<msg timestamp="20201005 12:03:28.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:03:28.680" starttime="20201005 12:03:24.704"></status>
</kw>
<msg timestamp="20201005 12:03:28.680" level="INFO">${result} = 2020-10-05 12:03:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:03:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201005 12:03:28.680" starttime="20201005 12:03:24.704"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:03:28.683" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:03:30.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:03:30.548" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 12:02 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-05 12:03 o3fs://bucket1.volume1.om/ozone-25359
dr...</msg>
<status status="PASS" endtime="20201005 12:03:30.548" starttime="20201005 12:03:28.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:03:30.549" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 12:02 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-05 12:03 o3fs://bucket1.volume1.om/ozone-25359
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 12:03 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201005 12:03:30.549" starttime="20201005 12:03:30.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:03:30.549" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:03:30.550" starttime="20201005 12:03:30.549"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:30.550" starttime="20201005 12:03:28.681"></status>
</kw>
<msg timestamp="20201005 12:03:30.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:03:30.550" starttime="20201005 12:03:28.681"></status>
</kw>
<msg timestamp="20201005 12:03:30.550" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-05 12:02 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-05 12:03 o3fs://bucket1.volume1.om/ozone-25359
dr...</msg>
<status status="PASS" endtime="20201005 12:03:30.550" starttime="20201005 12:03:28.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:03:30.551" starttime="20201005 12:03:30.550"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201005 12:03:30.551" critical="yes" starttime="20201005 12:03:24.696"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201005 12:03:30.552" starttime="20201005 12:03:24.653"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:05:12.655" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:05:12.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:05:12.664" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:05:12.664" starttime="20201005 12:05:12.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:05:12.665" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:05:12.665" starttime="20201005 12:05:12.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:05:12.666" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:05:12.666" starttime="20201005 12:05:12.665"></status>
</kw>
<status status="PASS" endtime="20201005 12:05:12.666" starttime="20201005 12:05:12.653"></status>
</kw>
<msg timestamp="20201005 12:05:12.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:05:12.667" starttime="20201005 12:05:12.652"></status>
</kw>
<msg timestamp="20201005 12:05:12.667" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:05:12.667" starttime="20201005 12:05:12.652"></status>
</kw>
<msg timestamp="20201005 12:05:12.667" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:05:12.667" starttime="20201005 12:05:12.652"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 12:05:12.671" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 12:05:12.671" starttime="20201005 12:05:12.670"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:05:12.671" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 12:05:12.671" starttime="20201005 12:05:12.671"></status>
</kw>
<status status="PASS" endtime="20201005 12:05:12.672" starttime="20201005 12:05:12.670"></status>
</kw>
<msg timestamp="20201005 12:05:12.672" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 12:05:12.672" starttime="20201005 12:05:12.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:05:12.673" starttime="20201005 12:05:12.672"></status>
</kw>
<msg timestamp="20201005 12:05:12.673" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201005 12:05:12.673" starttime="20201005 12:05:12.672"></status>
</kw>
<status status="PASS" endtime="20201005 12:05:12.673" starttime="20201005 12:05:12.669"></status>
</kw>
<msg timestamp="20201005 12:05:12.673" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 12:05:12.673" starttime="20201005 12:05:12.668"></status>
</kw>
<msg timestamp="20201005 12:05:12.673" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 12:05:12.673" starttime="20201005 12:05:12.667"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:05:12.677" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:05:52.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:05:52.173" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-05 12:05:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:05:14 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201005 12:05:52.173" starttime="20201005 12:05:12.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:05:52.174" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-05 12:05:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:05:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-05 12:05:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-05 12:05:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 12:05:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2423B9D6151F-&gt;fc741730-a8c8-4565-a5e5-085fd7d51c97
2020-10-05 12:05:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-05 12:05:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-05 12:05:19 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-05 12:05:19 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-05 12:05:19 INFO  JobSubmitter:202 - number of splits:3
2020-10-05 12:05:19 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-05 12:05:19 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601899333721_0003
2020-10-05 12:05:19 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-05 12:05:19 INFO  Configuration:2752 - resource-types.xml not found
2020-10-05 12:05:19 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-05 12:05:20 INFO  YarnClientImpl:311 - Submitted application application_1601899333721_0003
2020-10-05 12:05:20 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601899333721_0003/
2020-10-05 12:05:20 INFO  Job:1619 - Running job: job_1601899333721_0003
2020-10-05 12:05:28 INFO  Job:1640 - Job job_1601899333721_0003 running in uber mode : false
2020-10-05 12:05:28 INFO  Job:1647 -  map 0% reduce 0%
2020-10-05 12:05:34 INFO  Job:1647 -  map 33% reduce 0%
2020-10-05 12:05:39 INFO  Job:1647 -  map 67% reduce 0%
2020-10-05 12:05:44 INFO  Job:1647 -  map 100% reduce 0%
2020-10-05 12:05:50 INFO  Job:1647 -  map 100% reduce 100%
2020-10-05 12:05:51 INFO  Job:1658 - Job job_1601899333721_0003 completed successfully
2020-10-05 12:05:51 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1043121
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=753
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43296
		Total time spent by all reduces in occupied slots (ms)=15992
		Total time spent by all map tasks (ms)=10824
		Total time spent by all reduce tasks (ms)=3998
		Total vcore-milliseconds taken by all map tasks=10824
		Total vcore-milliseconds taken by all reduce tasks=3998
		Total megabyte-milliseconds taken by all map tasks=44335104
		Total megabyte-milliseconds taken by all reduce tasks=16375808
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=399
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=698
		CPU time spent (ms)=8130
		Physical memory (bytes) snapshot=1424752640
		Virtual memory (bytes) snapshot=16052166656
		Total committed heap usage (bytes)=1546125312
		Peak Map Physical memory (bytes)=357978112
		Peak Map Virtual memory (bytes)=4018069504
		Peak Reduce Physical memory (bytes)=370421760
		Peak Reduce Virtual memory (bytes)=4017737728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.899 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201005 12:05:52.174" starttime="20201005 12:05:52.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:05:52.175" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:05:52.175" starttime="20201005 12:05:52.174"></status>
</kw>
<status status="PASS" endtime="20201005 12:05:52.175" starttime="20201005 12:05:12.674"></status>
</kw>
<msg timestamp="20201005 12:05:52.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:05:52.176" starttime="20201005 12:05:12.674"></status>
</kw>
<msg timestamp="20201005 12:05:52.176" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-05 12:05:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:05:14 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201005 12:05:52.176" starttime="20201005 12:05:12.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201005 12:05:52.177" starttime="20201005 12:05:52.176"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201005 12:05:52.177" critical="yes" starttime="20201005 12:05:12.651"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:05:52.182" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:05:52.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:05:52.187" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:05:52.187" starttime="20201005 12:05:52.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:05:52.188" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:05:52.188" starttime="20201005 12:05:52.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:05:52.189" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:05:52.189" starttime="20201005 12:05:52.189"></status>
</kw>
<status status="PASS" endtime="20201005 12:05:52.189" starttime="20201005 12:05:52.180"></status>
</kw>
<msg timestamp="20201005 12:05:52.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:05:52.190" starttime="20201005 12:05:52.179"></status>
</kw>
<msg timestamp="20201005 12:05:52.190" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:05:52.190" starttime="20201005 12:05:52.179"></status>
</kw>
<msg timestamp="20201005 12:05:52.190" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:05:52.190" starttime="20201005 12:05:52.178"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201005 12:05:52.191" level="INFO">${random} = 15</msg>
<status status="PASS" endtime="20201005 12:05:52.191" starttime="20201005 12:05:52.190"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 12:05:52.194" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 12:05:52.194" starttime="20201005 12:05:52.194"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:05:52.195" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 12:05:52.195" starttime="20201005 12:05:52.195"></status>
</kw>
<status status="PASS" endtime="20201005 12:05:52.195" starttime="20201005 12:05:52.194"></status>
</kw>
<msg timestamp="20201005 12:05:52.196" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 12:05:52.196" starttime="20201005 12:05:52.193"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201005 12:05:52.197" starttime="20201005 12:05:52.196"></status>
</kw>
<msg timestamp="20201005 12:05:52.197" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201005 12:05:52.197" starttime="20201005 12:05:52.196"></status>
</kw>
<status status="PASS" endtime="20201005 12:05:52.197" starttime="20201005 12:05:52.192"></status>
</kw>
<msg timestamp="20201005 12:05:52.197" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 12:05:52.197" starttime="20201005 12:05:52.192"></status>
</kw>
<msg timestamp="20201005 12:05:52.197" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201005 12:05:52.197" starttime="20201005 12:05:52.191"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 12:05:52.201" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 12:05:52.201" starttime="20201005 12:05:52.200"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:05:52.201" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 12:05:52.201" starttime="20201005 12:05:52.201"></status>
</kw>
<status status="PASS" endtime="20201005 12:05:52.201" starttime="20201005 12:05:52.200"></status>
</kw>
<msg timestamp="20201005 12:05:52.201" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 12:05:52.202" starttime="20201005 12:05:52.199"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:05:52.203" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201005 12:05:52.203" starttime="20201005 12:05:52.203"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:05:52.204" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201005 12:05:52.204" starttime="20201005 12:05:52.204"></status>
</kw>
<status status="PASS" endtime="20201005 12:05:52.204" starttime="20201005 12:05:52.202"></status>
</kw>
<msg timestamp="20201005 12:05:52.204" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201005 12:05:52.204" starttime="20201005 12:05:52.202"></status>
</kw>
<status status="PASS" endtime="20201005 12:05:52.205" starttime="20201005 12:05:52.199"></status>
</kw>
<msg timestamp="20201005 12:05:52.205" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201005 12:05:52.205" starttime="20201005 12:05:52.198"></status>
</kw>
<msg timestamp="20201005 12:05:52.205" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201005 12:05:52.205" starttime="20201005 12:05:52.197"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201005 12:05:52.208" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201005 12:05:52.208" starttime="20201005 12:05:52.208"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:05:52.209" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201005 12:05:52.209" starttime="20201005 12:05:52.208"></status>
</kw>
<status status="PASS" endtime="20201005 12:05:52.209" starttime="20201005 12:05:52.207"></status>
</kw>
<msg timestamp="20201005 12:05:52.209" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201005 12:05:52.209" starttime="20201005 12:05:52.207"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:05:52.211" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201005 12:05:52.211" starttime="20201005 12:05:52.210"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:05:52.211" level="INFO">${result} = /wordcount-15.txt</msg>
<status status="PASS" endtime="20201005 12:05:52.211" starttime="20201005 12:05:52.211"></status>
</kw>
<status status="PASS" endtime="20201005 12:05:52.212" starttime="20201005 12:05:52.210"></status>
</kw>
<msg timestamp="20201005 12:05:52.212" level="INFO">${path_with_leading} = /wordcount-15.txt</msg>
<status status="PASS" endtime="20201005 12:05:52.212" starttime="20201005 12:05:52.209"></status>
</kw>
<status status="PASS" endtime="20201005 12:05:52.212" starttime="20201005 12:05:52.206"></status>
</kw>
<msg timestamp="20201005 12:05:52.212" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-15.txt</msg>
<status status="PASS" endtime="20201005 12:05:52.212" starttime="20201005 12:05:52.206"></status>
</kw>
<msg timestamp="20201005 12:05:52.212" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-15.txt</msg>
<status status="PASS" endtime="20201005 12:05:52.212" starttime="20201005 12:05:52.205"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:05:52.215" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-15.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:06:36.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:06:36.016" level="INFO">${output} = 2020-10-05 12:05:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-05 12:05:54 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201005 12:06:36.016" starttime="20201005 12:05:52.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:06:36.017" level="INFO">2020-10-05 12:05:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-05 12:05:54 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-05 12:05:54 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:05:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-05 12:05:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-05 12:05:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 12:05:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E991CF5330A0-&gt;fc741730-a8c8-4565-a5e5-085fd7d51c97
2020-10-05 12:05:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-05 12:05:58 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-05 12:05:58 INFO  JobSubmitter:202 - number of splits:3
2020-10-05 12:05:58 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-05 12:05:58 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601899333721_0004
2020-10-05 12:05:58 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-05 12:05:59 INFO  Configuration:2752 - resource-types.xml not found
2020-10-05 12:05:59 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-05 12:05:59 INFO  YarnClientImpl:311 - Submitted application application_1601899333721_0004
2020-10-05 12:05:59 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601899333721_0004/
2020-10-05 12:05:59 INFO  Job:1619 - Running job: job_1601899333721_0004
2020-10-05 12:06:07 INFO  Job:1640 - Job job_1601899333721_0004 running in uber mode : false
2020-10-05 12:06:07 INFO  Job:1647 -  map 0% reduce 0%
2020-10-05 12:06:14 INFO  Job:1647 -  map 33% reduce 0%
2020-10-05 12:06:20 INFO  Job:1647 -  map 67% reduce 0%
2020-10-05 12:06:26 INFO  Job:1647 -  map 100% reduce 0%
2020-10-05 12:06:34 INFO  Job:1647 -  map 100% reduce 100%
2020-10-05 12:06:35 INFO  Job:1658 - Job job_1601899333721_0004 completed successfully
2020-10-05 12:06:35 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1105793
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43516
		Total time spent by all reduces in occupied slots (ms)=26852
		Total time spent by all map tasks (ms)=10879
		Total time spent by all reduce tasks (ms)=6713
		Total vcore-milliseconds taken by all map tasks=10879
		Total vcore-milliseconds taken by all reduce tasks=6713
		Total megabyte-milliseconds taken by all map tasks=44560384
		Total megabyte-milliseconds taken by all reduce tasks=27496448
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=726
		CPU time spent (ms)=7860
		Physical memory (bytes) snapshot=1307009024
		Virtual memory (bytes) snapshot=16039665664
		Total committed heap usage (bytes)=1445986304
		Peak Map Physical memory (bytes)=346673152
		Peak Map Virtual memory (bytes)=4008390656
		Peak Reduce Physical memory (bytes)=360382464
		Peak Reduce Virtual memory (bytes)=4023435264
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201005 12:06:36.017" starttime="20201005 12:06:36.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:06:36.018" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:06:36.018" starttime="20201005 12:06:36.017"></status>
</kw>
<status status="PASS" endtime="20201005 12:06:36.018" starttime="20201005 12:05:52.213"></status>
</kw>
<msg timestamp="20201005 12:06:36.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:06:36.019" starttime="20201005 12:05:52.213"></status>
</kw>
<msg timestamp="20201005 12:06:36.019" level="INFO">${output} = 2020-10-05 12:05:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-05 12:05:54 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201005 12:06:36.019" starttime="20201005 12:05:52.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201005 12:06:36.020" starttime="20201005 12:06:36.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201005 12:06:36.020" starttime="20201005 12:06:36.020"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201005 12:06:36.021" critical="yes" starttime="20201005 12:05:52.178"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201005 12:06:36.022" starttime="20201005 12:05:12.605"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:03:35.276" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:03:35.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:03:35.283" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:03:35.283" starttime="20201005 12:03:35.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:03:35.284" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:03:35.284" starttime="20201005 12:03:35.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:03:35.285" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:03:35.285" starttime="20201005 12:03:35.284"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:35.285" starttime="20201005 12:03:35.274"></status>
</kw>
<msg timestamp="20201005 12:03:35.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:03:35.285" starttime="20201005 12:03:35.274"></status>
</kw>
<msg timestamp="20201005 12:03:35.285" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:03:35.285" starttime="20201005 12:03:35.273"></status>
</kw>
<msg timestamp="20201005 12:03:35.286" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:03:35.286" starttime="20201005 12:03:35.273"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:03:35.289" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 12:03:35.289" starttime="20201005 12:03:35.289"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:03:35.290" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 12:03:35.290" starttime="20201005 12:03:35.289"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:35.290" starttime="20201005 12:03:35.288"></status>
</kw>
<msg timestamp="20201005 12:03:35.290" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 12:03:35.290" starttime="20201005 12:03:35.288"></status>
</kw>
<status status="PASS" endtime="20201005 12:03:35.291" starttime="20201005 12:03:35.287"></status>
</kw>
<msg timestamp="20201005 12:03:35.291" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 12:03:35.291" starttime="20201005 12:03:35.287"></status>
</kw>
<msg timestamp="20201005 12:03:35.291" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 12:03:35.291" starttime="20201005 12:03:35.286"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:03:35.293" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:04:18.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:04:18.144" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-05 12:03:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:03:37 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201005 12:04:18.145" starttime="20201005 12:03:35.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:04:18.146" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-05 12:03:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:03:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-05 12:03:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-05 12:03:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 12:03:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-391404224369-&gt;fc741730-a8c8-4565-a5e5-085fd7d51c97
2020-10-05 12:03:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-05 12:03:38 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-05 12:03:39 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-05 12:03:39 INFO  JobSubmitter:202 - number of splits:3
2020-10-05 12:03:39 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-05 12:03:39 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601899333721_0001
2020-10-05 12:03:39 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-05 12:03:40 INFO  Configuration:2752 - resource-types.xml not found
2020-10-05 12:03:40 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-05 12:03:40 INFO  YarnClientImpl:311 - Submitted application application_1601899333721_0001
2020-10-05 12:03:40 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601899333721_0001/
2020-10-05 12:03:40 INFO  Job:1619 - Running job: job_1601899333721_0001
2020-10-05 12:03:51 INFO  Job:1640 - Job job_1601899333721_0001 running in uber mode : false
2020-10-05 12:03:51 INFO  Job:1647 -  map 0% reduce 0%
2020-10-05 12:03:59 INFO  Job:1647 -  map 33% reduce 0%
2020-10-05 12:04:05 INFO  Job:1647 -  map 67% reduce 0%
2020-10-05 12:04:11 INFO  Job:1647 -  map 100% reduce 0%
2020-10-05 12:04:16 INFO  Job:1647 -  map 100% reduce 100%
2020-10-05 12:04:17 INFO  Job:1658 - Job job_1601899333721_0001 completed successfully
2020-10-05 12:04:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1043333
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=804
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45148
		Total time spent by all reduces in occupied slots (ms)=16336
		Total time spent by all map tasks (ms)=11287
		Total time spent by all reduce tasks (ms)=4084
		Total vcore-milliseconds taken by all map tasks=11287
		Total vcore-milliseconds taken by all reduce tasks=4084
		Total megabyte-milliseconds taken by all map tasks=46231552
		Total megabyte-milliseconds taken by all reduce tasks=16728064
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=450
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=678
		CPU time spent (ms)=8020
		Physical memory (bytes) snapshot=1447563264
		Virtual memory (bytes) snapshot=16072425472
		Total committed heap usage (bytes)=1665662976
		Peak Map Physical memory (bytes)=361361408
		Peak Map Virtual memory (bytes)=4017664000
		Peak Reduce Physical memory (bytes)=367198208
		Peak Reduce Virtual memory (bytes)=4024999936
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.712 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201005 12:04:18.146" starttime="20201005 12:04:18.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:04:18.147" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:04:18.147" starttime="20201005 12:04:18.146"></status>
</kw>
<status status="PASS" endtime="20201005 12:04:18.147" starttime="20201005 12:03:35.292"></status>
</kw>
<msg timestamp="20201005 12:04:18.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:04:18.147" starttime="20201005 12:03:35.291"></status>
</kw>
<msg timestamp="20201005 12:04:18.148" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-05 12:03:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:03:37 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201005 12:04:18.148" starttime="20201005 12:03:35.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201005 12:04:18.149" starttime="20201005 12:04:18.148"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201005 12:04:18.149" critical="yes" starttime="20201005 12:03:35.272"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:04:18.154" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:04:18.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:04:18.159" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:04:18.159" starttime="20201005 12:04:18.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:04:18.160" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:04:18.160" starttime="20201005 12:04:18.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:04:18.160" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:04:18.160" starttime="20201005 12:04:18.160"></status>
</kw>
<status status="PASS" endtime="20201005 12:04:18.161" starttime="20201005 12:04:18.151"></status>
</kw>
<msg timestamp="20201005 12:04:18.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:04:18.161" starttime="20201005 12:04:18.151"></status>
</kw>
<msg timestamp="20201005 12:04:18.161" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:04:18.161" starttime="20201005 12:04:18.151"></status>
</kw>
<msg timestamp="20201005 12:04:18.161" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201005 12:04:18.161" starttime="20201005 12:04:18.150"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201005 12:04:18.162" level="INFO">${random} = 56</msg>
<status status="PASS" endtime="20201005 12:04:18.162" starttime="20201005 12:04:18.162"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:04:18.166" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 12:04:18.166" starttime="20201005 12:04:18.165"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:04:18.166" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 12:04:18.166" starttime="20201005 12:04:18.166"></status>
</kw>
<status status="PASS" endtime="20201005 12:04:18.166" starttime="20201005 12:04:18.165"></status>
</kw>
<msg timestamp="20201005 12:04:18.167" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 12:04:18.167" starttime="20201005 12:04:18.164"></status>
</kw>
<status status="PASS" endtime="20201005 12:04:18.167" starttime="20201005 12:04:18.164"></status>
</kw>
<msg timestamp="20201005 12:04:18.167" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 12:04:18.167" starttime="20201005 12:04:18.163"></status>
</kw>
<msg timestamp="20201005 12:04:18.167" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201005 12:04:18.167" starttime="20201005 12:04:18.162"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:04:18.170" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 12:04:18.170" starttime="20201005 12:04:18.170"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:04:18.172" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 12:04:18.172" starttime="20201005 12:04:18.171"></status>
</kw>
<status status="PASS" endtime="20201005 12:04:18.172" starttime="20201005 12:04:18.170"></status>
</kw>
<msg timestamp="20201005 12:04:18.172" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 12:04:18.172" starttime="20201005 12:04:18.169"></status>
</kw>
<status status="PASS" endtime="20201005 12:04:18.172" starttime="20201005 12:04:18.169"></status>
</kw>
<msg timestamp="20201005 12:04:18.173" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201005 12:04:18.173" starttime="20201005 12:04:18.168"></status>
</kw>
<msg timestamp="20201005 12:04:18.173" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201005 12:04:18.173" starttime="20201005 12:04:18.167"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201005 12:04:18.177" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201005 12:04:18.177" starttime="20201005 12:04:18.176"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201005 12:04:18.177" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201005 12:04:18.178" starttime="20201005 12:04:18.177"></status>
</kw>
<status status="PASS" endtime="20201005 12:04:18.178" starttime="20201005 12:04:18.175"></status>
</kw>
<msg timestamp="20201005 12:04:18.178" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201005 12:04:18.178" starttime="20201005 12:04:18.175"></status>
</kw>
<status status="PASS" endtime="20201005 12:04:18.178" starttime="20201005 12:04:18.174"></status>
</kw>
<msg timestamp="20201005 12:04:18.178" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-56.txt</msg>
<status status="PASS" endtime="20201005 12:04:18.178" starttime="20201005 12:04:18.174"></status>
</kw>
<msg timestamp="20201005 12:04:18.178" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-56.txt</msg>
<status status="PASS" endtime="20201005 12:04:18.178" starttime="20201005 12:04:18.173"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201005 12:04:18.181" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-56.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201005 12:04:56.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20201005 12:04:56.980" level="INFO">${output} = 2020-10-05 12:04:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-05 12:04:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201005 12:04:56.980" starttime="20201005 12:04:18.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201005 12:04:56.981" level="INFO">2020-10-05 12:04:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-05 12:04:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-05 12:04:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-05 12:04:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-05 12:04:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-05 12:04:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-05 12:04:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2DB7C969CF13-&gt;fc741730-a8c8-4565-a5e5-085fd7d51c97
2020-10-05 12:04:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-05 12:04:22 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-05 12:04:22 INFO  JobSubmitter:202 - number of splits:3
2020-10-05 12:04:22 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-05 12:04:22 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601899333721_0002
2020-10-05 12:04:22 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-05 12:04:22 INFO  Configuration:2752 - resource-types.xml not found
2020-10-05 12:04:22 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-05 12:04:23 INFO  YarnClientImpl:311 - Submitted application application_1601899333721_0002
2020-10-05 12:04:23 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601899333721_0002/
2020-10-05 12:04:23 INFO  Job:1619 - Running job: job_1601899333721_0002
2020-10-05 12:04:31 INFO  Job:1640 - Job job_1601899333721_0002 running in uber mode : false
2020-10-05 12:04:31 INFO  Job:1647 -  map 0% reduce 0%
2020-10-05 12:04:39 INFO  Job:1647 -  map 33% reduce 0%
2020-10-05 12:04:44 INFO  Job:1647 -  map 67% reduce 0%
2020-10-05 12:04:50 INFO  Job:1647 -  map 100% reduce 0%
2020-10-05 12:04:55 INFO  Job:1647 -  map 100% reduce 100%
2020-10-05 12:04:56 INFO  Job:1658 - Job job_1601899333721_0002 completed successfully
2020-10-05 12:04:56 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1105877
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44836
		Total time spent by all reduces in occupied slots (ms)=16188
		Total time spent by all map tasks (ms)=11209
		Total time spent by all reduce tasks (ms)=4047
		Total vcore-milliseconds taken by all map tasks=11209
		Total vcore-milliseconds taken by all reduce tasks=4047
		Total megabyte-milliseconds taken by all map tasks=45912064
		Total megabyte-milliseconds taken by all reduce tasks=16576512
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=720
		CPU time spent (ms)=7990
		Physical memory (bytes) snapshot=1407401984
		Virtual memory (bytes) snapshot=16038559744
		Total committed heap usage (bytes)=1632108544
		Peak Map Physical memory (bytes)=352542720
		Peak Map Virtual memory (bytes)=4009299968
		Peak Reduce Physical memory (bytes)=366530560
		Peak Reduce Virtual memory (bytes)=4017291264
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201005 12:04:56.981" starttime="20201005 12:04:56.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201005 12:04:56.982" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201005 12:04:56.982" starttime="20201005 12:04:56.982"></status>
</kw>
<status status="PASS" endtime="20201005 12:04:56.982" starttime="20201005 12:04:18.179"></status>
</kw>
<msg timestamp="20201005 12:04:56.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201005 12:04:56.983" starttime="20201005 12:04:18.179"></status>
</kw>
<msg timestamp="20201005 12:04:56.983" level="INFO">${output} = 2020-10-05 12:04:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-05 12:04:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201005 12:04:56.983" starttime="20201005 12:04:18.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201005 12:04:56.984" starttime="20201005 12:04:56.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201005 12:04:56.984" starttime="20201005 12:04:56.984"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201005 12:04:56.985" critical="yes" starttime="20201005 12:04:18.149"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201005 12:04:56.985" starttime="20201005 12:03:35.232"></status>
</suite>
<status status="PASS" elapsedtime="220365" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="616645" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
