<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201027 13:26:31.529" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/csi.robot" id="s1" name="ozone-csi">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
</arguments>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:26:20.946" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:26:20.948" level="INFO">${rc} = 1</msg>
<msg timestamp="20201027 13:26:20.948" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:26:20.948" starttime="20201027 13:26:20.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:26:20.950" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:26:20.950" starttime="20201027 13:26:20.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:26:20.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201027 13:26:20.951" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201027 13:26:20.951" starttime="20201027 13:26:20.950"></status>
</kw>
<status status="FAIL" endtime="20201027 13:26:20.951" starttime="20201027 13:26:20.941"></status>
</kw>
<msg timestamp="20201027 13:26:20.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201027 13:26:20.951" starttime="20201027 13:26:20.941"></status>
</kw>
<status status="FAIL" endtime="20201027 13:26:20.951" starttime="20201027 13:26:20.941"></status>
</kw>
<status status="FAIL" endtime="20201027 13:26:20.952" starttime="20201027 13:26:20.940"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:26:21.964" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:26:21.966" level="INFO">${rc} = 1</msg>
<msg timestamp="20201027 13:26:21.966" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:26:21.966" starttime="20201027 13:26:21.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:26:21.967" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:26:21.968" starttime="20201027 13:26:21.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:26:21.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201027 13:26:21.968" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201027 13:26:21.969" starttime="20201027 13:26:21.968"></status>
</kw>
<status status="FAIL" endtime="20201027 13:26:21.969" starttime="20201027 13:26:21.955"></status>
</kw>
<msg timestamp="20201027 13:26:21.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201027 13:26:21.969" starttime="20201027 13:26:21.955"></status>
</kw>
<status status="FAIL" endtime="20201027 13:26:21.969" starttime="20201027 13:26:21.954"></status>
</kw>
<status status="FAIL" endtime="20201027 13:26:21.969" starttime="20201027 13:26:21.954"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:26:22.974" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:26:22.975" level="INFO">${rc} = 1</msg>
<msg timestamp="20201027 13:26:22.975" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:26:22.975" starttime="20201027 13:26:22.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:26:22.976" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:26:22.976" starttime="20201027 13:26:22.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:26:22.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201027 13:26:22.977" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201027 13:26:22.977" starttime="20201027 13:26:22.976"></status>
</kw>
<status status="FAIL" endtime="20201027 13:26:22.978" starttime="20201027 13:26:22.971"></status>
</kw>
<msg timestamp="20201027 13:26:22.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201027 13:26:22.978" starttime="20201027 13:26:22.971"></status>
</kw>
<status status="FAIL" endtime="20201027 13:26:22.978" starttime="20201027 13:26:22.970"></status>
</kw>
<status status="FAIL" endtime="20201027 13:26:22.979" starttime="20201027 13:26:22.970"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:26:23.984" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:26:23.985" level="INFO">${rc} = 1</msg>
<msg timestamp="20201027 13:26:23.986" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:26:23.986" starttime="20201027 13:26:23.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:26:23.987" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:26:23.987" starttime="20201027 13:26:23.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:26:23.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201027 13:26:23.988" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201027 13:26:23.988" starttime="20201027 13:26:23.987"></status>
</kw>
<status status="FAIL" endtime="20201027 13:26:23.988" starttime="20201027 13:26:23.980"></status>
</kw>
<msg timestamp="20201027 13:26:23.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201027 13:26:23.989" starttime="20201027 13:26:23.980"></status>
</kw>
<status status="FAIL" endtime="20201027 13:26:23.989" starttime="20201027 13:26:23.980"></status>
</kw>
<status status="FAIL" endtime="20201027 13:26:23.989" starttime="20201027 13:26:23.979"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:26:24.994" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:26:24.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:26:24.997" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:26:24.997" starttime="20201027 13:26:24.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:26:24.997" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:26:24.998" starttime="20201027 13:26:24.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:26:24.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:26:24.998" starttime="20201027 13:26:24.998"></status>
</kw>
<status status="PASS" endtime="20201027 13:26:24.999" starttime="20201027 13:26:24.991"></status>
</kw>
<msg timestamp="20201027 13:26:24.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:26:24.999" starttime="20201027 13:26:24.991"></status>
</kw>
<status status="PASS" endtime="20201027 13:26:24.999" starttime="20201027 13:26:24.990"></status>
</kw>
<status status="PASS" endtime="20201027 13:26:24.999" starttime="20201027 13:26:24.990"></status>
</kw>
<status status="PASS" endtime="20201027 13:26:24.999" starttime="20201027 13:26:20.940"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201027 13:26:25.000" critical="yes" starttime="20201027 13:26:20.939"></status>
</test>
<test id="s1-t2" name="Test CSI identitiy service">
<kw name="Execute" library="os">
<arguments>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:26:25.006" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:26:25.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:26:25.352" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201027 13:26:25.352" starttime="20201027 13:26:25.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:26:25.353" level="INFO">"org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201027 13:26:25.354" starttime="20201027 13:26:25.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:26:25.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:26:25.354" starttime="20201027 13:26:25.354"></status>
</kw>
<status status="PASS" endtime="20201027 13:26:25.355" starttime="20201027 13:26:25.003"></status>
</kw>
<msg timestamp="20201027 13:26:25.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:26:25.355" starttime="20201027 13:26:25.003"></status>
</kw>
<msg timestamp="20201027 13:26:25.355" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201027 13:26:25.355" starttime="20201027 13:26:25.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
</arguments>
<status status="PASS" endtime="20201027 13:26:25.356" starttime="20201027 13:26:25.356"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201027 13:26:25.356" critical="yes" starttime="20201027 13:26:25.001"></status>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" endtime="20201027 13:26:25.357" starttime="20201027 13:26:20.874"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-csi" pass="2">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
