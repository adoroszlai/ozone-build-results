<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201027 13:44:10.558" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:31:01.102" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:31:03.319" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 13:31:03.319" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 13:31:03.319" starttime="20201027 13:31:01.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:31:03.321" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 13:31:03.321" starttime="20201027 13:31:03.320"></status>
</kw>
<msg timestamp="20201027 13:31:03.321" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 13:31:03.321" starttime="20201027 13:31:01.095"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:31:03.327" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:31:05.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:31:05.355" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:31:05.355" starttime="20201027 13:31:03.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:31:05.356" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:31:05.356" starttime="20201027 13:31:05.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:31:05.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:31:05.357" starttime="20201027 13:31:05.356"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:05.357" starttime="20201027 13:31:03.323"></status>
</kw>
<msg timestamp="20201027 13:31:05.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:31:05.358" starttime="20201027 13:31:03.323"></status>
</kw>
<msg timestamp="20201027 13:31:05.358" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201027 13:31:05.358" starttime="20201027 13:31:03.322"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201027 13:31:05.359" starttime="20201027 13:31:05.359"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:05.359" starttime="20201027 13:31:03.322"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:05.359" starttime="20201027 13:31:03.321"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:31:05.365" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:31:07.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:31:07.539" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:31:07.539" starttime="20201027 13:31:05.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:31:07.540" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:31:07.540" starttime="20201027 13:31:07.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:31:07.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:31:07.540" starttime="20201027 13:31:07.540"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:07.541" starttime="20201027 13:31:05.361"></status>
</kw>
<msg timestamp="20201027 13:31:07.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:31:07.541" starttime="20201027 13:31:05.361"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:07.541" starttime="20201027 13:31:05.361"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:07.541" starttime="20201027 13:31:05.360"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:07.541" starttime="20201027 13:31:05.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201027 13:31:07.542" starttime="20201027 13:31:07.542"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:31:07.547" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:31:09.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:31:09.660" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T13:31:07.412Z",
  "modificat...</msg>
<status status="PASS" endtime="20201027 13:31:09.660" starttime="20201027 13:31:07.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:31:09.661" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T13:31:07.412Z",
  "modificationTime" : "2020-10-27T13:31:07.412Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 13:31:09.661" starttime="20201027 13:31:09.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:31:09.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:31:09.662" starttime="20201027 13:31:09.662"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:09.663" starttime="20201027 13:31:07.544"></status>
</kw>
<msg timestamp="20201027 13:31:09.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:31:09.663" starttime="20201027 13:31:07.543"></status>
</kw>
<msg timestamp="20201027 13:31:09.663" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T13:31:07.412Z",
  "modificat...</msg>
<status status="PASS" endtime="20201027 13:31:09.663" starttime="20201027 13:31:07.542"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201027 13:31:09.664" starttime="20201027 13:31:09.664"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:31:09.668" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:31:09.668" starttime="20201027 13:31:09.668"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:31:09.669" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:31:09.669" starttime="20201027 13:31:09.668"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:09.669" starttime="20201027 13:31:09.667"></status>
</kw>
<msg timestamp="20201027 13:31:09.669" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:31:09.669" starttime="20201027 13:31:09.666"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:09.670" starttime="20201027 13:31:09.666"></status>
</kw>
<msg timestamp="20201027 13:31:09.670" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 13:31:09.670" starttime="20201027 13:31:09.665"></status>
</kw>
<msg timestamp="20201027 13:31:09.670" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 13:31:09.670" starttime="20201027 13:31:09.664"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:31:09.674" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:31:11.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:31:11.779" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:31:11.779" starttime="20201027 13:31:09.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:31:11.780" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:31:11.780" starttime="20201027 13:31:11.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:31:11.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:31:11.781" starttime="20201027 13:31:11.780"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:11.781" starttime="20201027 13:31:09.671"></status>
</kw>
<msg timestamp="20201027 13:31:11.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:31:11.781" starttime="20201027 13:31:09.671"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:11.782" starttime="20201027 13:31:09.670"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:31:11.787" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:31:17.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:31:17.279" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:31:17.280" starttime="20201027 13:31:11.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:31:17.281" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:31:17.281" starttime="20201027 13:31:17.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:31:17.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:31:17.282" starttime="20201027 13:31:17.281"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:17.282" starttime="20201027 13:31:11.783"></status>
</kw>
<msg timestamp="20201027 13:31:17.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:31:17.282" starttime="20201027 13:31:11.783"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:17.283" starttime="20201027 13:31:11.782"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:31:17.286" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:31:21.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:31:21.507" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:31:21.507" starttime="20201027 13:31:17.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:31:21.508" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:31:21.508" starttime="20201027 13:31:21.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:31:21.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:31:21.509" starttime="20201027 13:31:21.508"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:21.509" starttime="20201027 13:31:17.284"></status>
</kw>
<msg timestamp="20201027 13:31:21.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:31:21.509" starttime="20201027 13:31:17.283"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:21.509" starttime="20201027 13:31:17.283"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:31:21.514" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:31:25.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:31:25.645" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:31:25.645" starttime="20201027 13:31:21.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:31:25.646" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:31:25.646" starttime="20201027 13:31:25.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:31:25.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:31:25.647" starttime="20201027 13:31:25.646"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:25.647" starttime="20201027 13:31:21.511"></status>
</kw>
<msg timestamp="20201027 13:31:25.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:31:25.647" starttime="20201027 13:31:21.510"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:25.647" starttime="20201027 13:31:21.510"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 13:31:25.648" critical="yes" starttime="20201027 13:31:01.094"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:31:25.654" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:31:25.654" starttime="20201027 13:31:25.653"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:31:25.655" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:31:25.655" starttime="20201027 13:31:25.654"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:25.655" starttime="20201027 13:31:25.653"></status>
</kw>
<msg timestamp="20201027 13:31:25.655" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:31:25.655" starttime="20201027 13:31:25.652"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:25.655" starttime="20201027 13:31:25.651"></status>
</kw>
<msg timestamp="20201027 13:31:25.656" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 13:31:25.656" starttime="20201027 13:31:25.650"></status>
</kw>
<msg timestamp="20201027 13:31:25.656" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 13:31:25.656" starttime="20201027 13:31:25.650"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:31:25.659" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:31:27.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:31:27.784" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:31:27.784" starttime="20201027 13:31:25.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:31:27.785" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:31:27.785" starttime="20201027 13:31:27.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:31:27.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:31:27.786" starttime="20201027 13:31:27.786"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:27.787" starttime="20201027 13:31:25.657"></status>
</kw>
<msg timestamp="20201027 13:31:27.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:31:27.787" starttime="20201027 13:31:25.656"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:27.787" starttime="20201027 13:31:25.656"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:31:27.792" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:31:29.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:31:29.874" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:31:29.874" starttime="20201027 13:31:27.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:31:29.875" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:31:29.875" starttime="20201027 13:31:29.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:31:29.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:31:29.876" starttime="20201027 13:31:29.875"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:29.876" starttime="20201027 13:31:27.788"></status>
</kw>
<msg timestamp="20201027 13:31:29.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:31:29.876" starttime="20201027 13:31:27.788"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:29.877" starttime="20201027 13:31:27.787"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 13:31:29.877" critical="yes" starttime="20201027 13:31:25.649"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201027 13:31:29.878" starttime="20201027 13:31:01.028"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 13:33:07.365" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 13:33:07.365" starttime="20201027 13:33:07.365"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:33:07.366" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 13:33:07.366" starttime="20201027 13:33:07.365"></status>
</kw>
<status status="PASS" endtime="20201027 13:33:07.366" starttime="20201027 13:33:07.364"></status>
</kw>
<msg timestamp="20201027 13:33:07.366" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 13:33:07.366" starttime="20201027 13:33:07.364"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 13:33:07.367" starttime="20201027 13:33:07.367"></status>
</kw>
<msg timestamp="20201027 13:33:07.367" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 13:33:07.367" starttime="20201027 13:33:07.366"></status>
</kw>
<status status="PASS" endtime="20201027 13:33:07.367" starttime="20201027 13:33:07.363"></status>
</kw>
<msg timestamp="20201027 13:33:07.367" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 13:33:07.368" starttime="20201027 13:33:07.363"></status>
</kw>
<msg timestamp="20201027 13:33:07.368" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 13:33:07.368" starttime="20201027 13:33:07.361"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 13:33:07.368" level="INFO">${random} = 23688</msg>
<status status="PASS" endtime="20201027 13:33:07.368" starttime="20201027 13:33:07.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:33:07.382" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-23688 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:33:10.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:33:10.847" level="INFO">${output} = 2020-10-27 13:33:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:33:09 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 ...</msg>
<status status="PASS" endtime="20201027 13:33:10.847" starttime="20201027 13:33:07.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:33:10.848" level="INFO">2020-10-27 13:33:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:33:09 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 13:33:09 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-27 13:33:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:33:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5BE250C68380-&gt;b4a90fc7-f74a-45c4-afef-4659472d609b
2020-10-27 13:33:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201027 13:33:10.848" starttime="20201027 13:33:10.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:33:10.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:33:10.849" starttime="20201027 13:33:10.849"></status>
</kw>
<status status="PASS" endtime="20201027 13:33:10.849" starttime="20201027 13:33:07.369"></status>
</kw>
<msg timestamp="20201027 13:33:10.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:33:10.849" starttime="20201027 13:33:07.369"></status>
</kw>
<msg timestamp="20201027 13:33:10.850" level="INFO">${result} = 2020-10-27 13:33:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:33:09 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 ...</msg>
<status status="PASS" endtime="20201027 13:33:10.850" starttime="20201027 13:33:07.369"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:33:10.853" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:33:12.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:33:12.671" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 13:31 ofs://om/volume1/bucket1/ozone-16719
-rw-...</msg>
<status status="PASS" endtime="20201027 13:33:12.671" starttime="20201027 13:33:10.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:33:12.672" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 13:31 ofs://om/volume1/bucket1/ozone-16719
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 13:33 ofs://om/volume1/bucket1/ozone-23688
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:31 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:32 ofs://om/volume1/bucket1/wordcount-38.txt</msg>
<status status="PASS" endtime="20201027 13:33:12.672" starttime="20201027 13:33:12.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:33:12.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:33:12.673" starttime="20201027 13:33:12.672"></status>
</kw>
<status status="PASS" endtime="20201027 13:33:12.673" starttime="20201027 13:33:10.851"></status>
</kw>
<msg timestamp="20201027 13:33:12.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:33:12.673" starttime="20201027 13:33:10.850"></status>
</kw>
<msg timestamp="20201027 13:33:12.673" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 13:31 ofs://om/volume1/bucket1/ozone-16719
-rw-...</msg>
<status status="PASS" endtime="20201027 13:33:12.673" starttime="20201027 13:33:10.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 13:33:12.674" starttime="20201027 13:33:12.674"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 13:33:12.674" critical="yes" starttime="20201027 13:33:07.360"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 13:33:12.675" starttime="20201027 13:33:07.300"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:31:34.860" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:31:34.860" starttime="20201027 13:31:34.860"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:31:34.861" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:31:34.861" starttime="20201027 13:31:34.860"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:34.861" starttime="20201027 13:31:34.859"></status>
</kw>
<msg timestamp="20201027 13:31:34.861" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:31:34.861" starttime="20201027 13:31:34.859"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:34.861" starttime="20201027 13:31:34.858"></status>
</kw>
<msg timestamp="20201027 13:31:34.861" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 13:31:34.861" starttime="20201027 13:31:34.858"></status>
</kw>
<msg timestamp="20201027 13:31:34.861" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 13:31:34.861" starttime="20201027 13:31:34.856"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 13:31:34.862" level="INFO">${random} = 16719</msg>
<status status="PASS" endtime="20201027 13:31:34.862" starttime="20201027 13:31:34.862"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:31:34.867" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-16719 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:31:38.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:31:38.390" level="INFO">${output} = 2020-10-27 13:31:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:31:36 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 ...</msg>
<status status="PASS" endtime="20201027 13:31:38.390" starttime="20201027 13:31:34.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:31:38.391" level="INFO">2020-10-27 13:31:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:31:36 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 13:31:36 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-27 13:31:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:31:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-457790848B35-&gt;b4a90fc7-f74a-45c4-afef-4659472d609b
2020-10-27 13:31:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201027 13:31:38.391" starttime="20201027 13:31:38.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:31:38.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:31:38.392" starttime="20201027 13:31:38.392"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:38.392" starttime="20201027 13:31:34.863"></status>
</kw>
<msg timestamp="20201027 13:31:38.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:31:38.392" starttime="20201027 13:31:34.863"></status>
</kw>
<msg timestamp="20201027 13:31:38.393" level="INFO">${result} = 2020-10-27 13:31:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:31:36 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 ...</msg>
<status status="PASS" endtime="20201027 13:31:38.393" starttime="20201027 13:31:34.862"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:31:38.396" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:31:40.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:31:40.325" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 13:31 o3fs://bucket1.volume1.om/ozone-16719
dr...</msg>
<status status="PASS" endtime="20201027 13:31:40.326" starttime="20201027 13:31:38.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:31:40.327" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 13:31 o3fs://bucket1.volume1.om/ozone-16719
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:31 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 13:31:40.327" starttime="20201027 13:31:40.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:31:40.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:31:40.328" starttime="20201027 13:31:40.327"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:40.328" starttime="20201027 13:31:38.394"></status>
</kw>
<msg timestamp="20201027 13:31:40.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:31:40.328" starttime="20201027 13:31:38.393"></status>
</kw>
<msg timestamp="20201027 13:31:40.328" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 13:31 o3fs://bucket1.volume1.om/ozone-16719
dr...</msg>
<status status="PASS" endtime="20201027 13:31:40.328" starttime="20201027 13:31:38.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 13:31:40.329" starttime="20201027 13:31:40.328"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 13:31:40.329" critical="yes" starttime="20201027 13:31:34.855"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 13:31:40.331" starttime="20201027 13:31:34.798"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:33:17.282" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:33:17.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:33:17.285" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 13:33:17.286" starttime="20201027 13:33:17.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:33:17.287" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 13:33:17.287" starttime="20201027 13:33:17.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:33:17.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:33:17.287" starttime="20201027 13:33:17.287"></status>
</kw>
<status status="PASS" endtime="20201027 13:33:17.288" starttime="20201027 13:33:17.275"></status>
</kw>
<msg timestamp="20201027 13:33:17.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:33:17.288" starttime="20201027 13:33:17.275"></status>
</kw>
<msg timestamp="20201027 13:33:17.288" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 13:33:17.288" starttime="20201027 13:33:17.274"></status>
</kw>
<msg timestamp="20201027 13:33:17.288" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 13:33:17.289" starttime="20201027 13:33:17.274"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 13:33:17.292" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 13:33:17.292" starttime="20201027 13:33:17.292"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:33:17.293" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 13:33:17.293" starttime="20201027 13:33:17.292"></status>
</kw>
<status status="PASS" endtime="20201027 13:33:17.294" starttime="20201027 13:33:17.291"></status>
</kw>
<msg timestamp="20201027 13:33:17.294" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 13:33:17.294" starttime="20201027 13:33:17.291"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 13:33:17.295" starttime="20201027 13:33:17.294"></status>
</kw>
<msg timestamp="20201027 13:33:17.295" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 13:33:17.295" starttime="20201027 13:33:17.294"></status>
</kw>
<status status="PASS" endtime="20201027 13:33:17.295" starttime="20201027 13:33:17.290"></status>
</kw>
<msg timestamp="20201027 13:33:17.295" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 13:33:17.295" starttime="20201027 13:33:17.289"></status>
</kw>
<msg timestamp="20201027 13:33:17.296" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 13:33:17.296" starttime="20201027 13:33:17.289"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:33:17.299" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:33:51.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:33:51.340" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 13:33:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:33:19 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201027 13:33:51.341" starttime="20201027 13:33:17.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:33:51.342" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 13:33:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:33:19 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 13:33:19 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-27 13:33:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:33:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0EA1C0F667DD-&gt;b4a90fc7-f74a-45c4-afef-4659472d609b
2020-10-27 13:33:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 13:33:20 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-10-27 13:33:20 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 13:33:20 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-27 13:33:21 INFO  JobSubmitter:198 - number of splits:3
2020-10-27 13:33:21 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603805430566_0003
2020-10-27 13:33:21 INFO  YarnClientImpl:273 - Submitted application application_1603805430566_0003
2020-10-27 13:33:21 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603805430566_0003/
2020-10-27 13:33:21 INFO  Job:1339 - Running job: job_1603805430566_0003
2020-10-27 13:33:29 INFO  Job:1360 - Job job_1603805430566_0003 running in uber mode : false
2020-10-27 13:33:29 INFO  Job:1367 -  map 0% reduce 0%
2020-10-27 13:33:35 INFO  Job:1367 -  map 33% reduce 0%
2020-10-27 13:33:40 INFO  Job:1367 -  map 67% reduce 0%
2020-10-27 13:33:45 INFO  Job:1367 -  map 100% reduce 0%
2020-10-27 13:33:49 INFO  Job:1367 -  map 100% reduce 100%
2020-10-27 13:33:50 INFO  Job:1378 - Job job_1603805430566_0003 completed successfully
2020-10-27 13:33:50 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615221
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=753
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38952
		Total time spent by all reduces in occupied slots (ms)=15132
		Total time spent by all map tasks (ms)=9738
		Total time spent by all reduce tasks (ms)=3783
		Total vcore-milliseconds taken by all map tasks=9738
		Total vcore-milliseconds taken by all reduce tasks=3783
		Total megabyte-milliseconds taken by all map tasks=39886848
		Total megabyte-milliseconds taken by all reduce tasks=15495168
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=399
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=583
		CPU time spent (ms)=6940
		Physical memory (bytes) snapshot=1147699200
		Virtual memory (bytes) snapshot=16062697472
		Total committed heap usage (bytes)=1147666432
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.313 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201027 13:33:51.342" starttime="20201027 13:33:51.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:33:51.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:33:51.343" starttime="20201027 13:33:51.342"></status>
</kw>
<status status="PASS" endtime="20201027 13:33:51.343" starttime="20201027 13:33:17.297"></status>
</kw>
<msg timestamp="20201027 13:33:51.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:33:51.344" starttime="20201027 13:33:17.297"></status>
</kw>
<msg timestamp="20201027 13:33:51.344" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 13:33:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:33:19 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201027 13:33:51.344" starttime="20201027 13:33:17.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 13:33:51.345" starttime="20201027 13:33:51.344"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 13:33:51.345" critical="yes" starttime="20201027 13:33:17.273"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:33:51.350" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:33:51.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:33:51.355" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 13:33:51.355" starttime="20201027 13:33:51.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:33:51.356" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 13:33:51.356" starttime="20201027 13:33:51.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:33:51.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:33:51.357" starttime="20201027 13:33:51.356"></status>
</kw>
<status status="PASS" endtime="20201027 13:33:51.357" starttime="20201027 13:33:51.347"></status>
</kw>
<msg timestamp="20201027 13:33:51.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:33:51.357" starttime="20201027 13:33:51.347"></status>
</kw>
<msg timestamp="20201027 13:33:51.357" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 13:33:51.357" starttime="20201027 13:33:51.346"></status>
</kw>
<msg timestamp="20201027 13:33:51.358" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 13:33:51.358" starttime="20201027 13:33:51.346"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 13:33:51.358" level="INFO">${random} = 79</msg>
<status status="PASS" endtime="20201027 13:33:51.358" starttime="20201027 13:33:51.358"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 13:33:51.362" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 13:33:51.362" starttime="20201027 13:33:51.361"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:33:51.362" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 13:33:51.362" starttime="20201027 13:33:51.362"></status>
</kw>
<status status="PASS" endtime="20201027 13:33:51.363" starttime="20201027 13:33:51.361"></status>
</kw>
<msg timestamp="20201027 13:33:51.363" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 13:33:51.363" starttime="20201027 13:33:51.361"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 13:33:51.364" starttime="20201027 13:33:51.363"></status>
</kw>
<msg timestamp="20201027 13:33:51.364" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 13:33:51.364" starttime="20201027 13:33:51.363"></status>
</kw>
<status status="PASS" endtime="20201027 13:33:51.364" starttime="20201027 13:33:51.360"></status>
</kw>
<msg timestamp="20201027 13:33:51.364" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 13:33:51.364" starttime="20201027 13:33:51.359"></status>
</kw>
<msg timestamp="20201027 13:33:51.364" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 13:33:51.364" starttime="20201027 13:33:51.359"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 13:33:51.367" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 13:33:51.367" starttime="20201027 13:33:51.367"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:33:51.368" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 13:33:51.368" starttime="20201027 13:33:51.367"></status>
</kw>
<status status="PASS" endtime="20201027 13:33:51.368" starttime="20201027 13:33:51.366"></status>
</kw>
<msg timestamp="20201027 13:33:51.368" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 13:33:51.368" starttime="20201027 13:33:51.366"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:33:51.370" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201027 13:33:51.370" starttime="20201027 13:33:51.369"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:33:51.371" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201027 13:33:51.371" starttime="20201027 13:33:51.370"></status>
</kw>
<status status="PASS" endtime="20201027 13:33:51.371" starttime="20201027 13:33:51.369"></status>
</kw>
<msg timestamp="20201027 13:33:51.371" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201027 13:33:51.371" starttime="20201027 13:33:51.368"></status>
</kw>
<status status="PASS" endtime="20201027 13:33:51.371" starttime="20201027 13:33:51.365"></status>
</kw>
<msg timestamp="20201027 13:33:51.371" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 13:33:51.372" starttime="20201027 13:33:51.365"></status>
</kw>
<msg timestamp="20201027 13:33:51.372" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 13:33:51.372" starttime="20201027 13:33:51.364"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 13:33:51.375" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 13:33:51.375" starttime="20201027 13:33:51.375"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:33:51.376" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 13:33:51.376" starttime="20201027 13:33:51.375"></status>
</kw>
<status status="PASS" endtime="20201027 13:33:51.376" starttime="20201027 13:33:51.374"></status>
</kw>
<msg timestamp="20201027 13:33:51.376" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 13:33:51.376" starttime="20201027 13:33:51.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:33:51.377" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201027 13:33:51.377" starttime="20201027 13:33:51.377"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:33:51.378" level="INFO">${result} = /wordcount-79.txt</msg>
<status status="PASS" endtime="20201027 13:33:51.378" starttime="20201027 13:33:51.378"></status>
</kw>
<status status="PASS" endtime="20201027 13:33:51.378" starttime="20201027 13:33:51.377"></status>
</kw>
<msg timestamp="20201027 13:33:51.378" level="INFO">${path_with_leading} = /wordcount-79.txt</msg>
<status status="PASS" endtime="20201027 13:33:51.378" starttime="20201027 13:33:51.376"></status>
</kw>
<status status="PASS" endtime="20201027 13:33:51.379" starttime="20201027 13:33:51.373"></status>
</kw>
<msg timestamp="20201027 13:33:51.379" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-79.txt</msg>
<status status="PASS" endtime="20201027 13:33:51.379" starttime="20201027 13:33:51.372"></status>
</kw>
<msg timestamp="20201027 13:33:51.379" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-79.txt</msg>
<status status="PASS" endtime="20201027 13:33:51.379" starttime="20201027 13:33:51.372"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:33:51.383" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-79.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:34:27.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:34:27.515" level="INFO">${output} = 2020-10-27 13:33:53 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-10-27 13:33:53 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201027 13:34:27.515" starttime="20201027 13:33:51.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:34:27.516" level="INFO">2020-10-27 13:33:53 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-10-27 13:33:53 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 13:33:53 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:33:53 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 13:33:53 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-27 13:33:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:33:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B7A170CC2D1B-&gt;b4a90fc7-f74a-45c4-afef-4659472d609b
2020-10-27 13:33:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 13:33:54 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-27 13:33:54 INFO  JobSubmitter:198 - number of splits:3
2020-10-27 13:33:57 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603805430566_0004
2020-10-27 13:33:57 INFO  YarnClientImpl:273 - Submitted application application_1603805430566_0004
2020-10-27 13:33:57 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603805430566_0004/
2020-10-27 13:33:57 INFO  Job:1339 - Running job: job_1603805430566_0004
2020-10-27 13:34:05 INFO  Job:1360 - Job job_1603805430566_0004 running in uber mode : false
2020-10-27 13:34:05 INFO  Job:1367 -  map 0% reduce 0%
2020-10-27 13:34:11 INFO  Job:1367 -  map 33% reduce 0%
2020-10-27 13:34:16 INFO  Job:1367 -  map 67% reduce 0%
2020-10-27 13:34:22 INFO  Job:1367 -  map 100% reduce 0%
2020-10-27 13:34:26 INFO  Job:1367 -  map 100% reduce 100%
2020-10-27 13:34:27 INFO  Job:1378 - Job job_1603805430566_0004 completed successfully
2020-10-27 13:34:27 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40584
		Total time spent by all reduces in occupied slots (ms)=15096
		Total time spent by all map tasks (ms)=10146
		Total time spent by all reduce tasks (ms)=3774
		Total vcore-milliseconds taken by all map tasks=10146
		Total vcore-milliseconds taken by all reduce tasks=3774
		Total megabyte-milliseconds taken by all map tasks=41558016
		Total megabyte-milliseconds taken by all reduce tasks=15458304
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=577
		CPU time spent (ms)=7310
		Physical memory (bytes) snapshot=1134559232
		Virtual memory (bytes) snapshot=16071581696
		Total committed heap usage (bytes)=1056964608
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201027 13:34:27.517" starttime="20201027 13:34:27.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:34:27.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:34:27.517" starttime="20201027 13:34:27.517"></status>
</kw>
<status status="PASS" endtime="20201027 13:34:27.518" starttime="20201027 13:33:51.380"></status>
</kw>
<msg timestamp="20201027 13:34:27.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:34:27.518" starttime="20201027 13:33:51.380"></status>
</kw>
<msg timestamp="20201027 13:34:27.519" level="INFO">${output} = 2020-10-27 13:33:53 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-10-27 13:33:53 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201027 13:34:27.519" starttime="20201027 13:33:51.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 13:34:27.519" starttime="20201027 13:34:27.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 13:34:27.520" starttime="20201027 13:34:27.519"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 13:34:27.520" critical="yes" starttime="20201027 13:33:51.345"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 13:34:27.521" starttime="20201027 13:33:17.217"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:31:45.112" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:31:45.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:31:45.116" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 13:31:45.116" starttime="20201027 13:31:45.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:31:45.117" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 13:31:45.117" starttime="20201027 13:31:45.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:31:45.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:31:45.118" starttime="20201027 13:31:45.118"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:45.118" starttime="20201027 13:31:45.107"></status>
</kw>
<msg timestamp="20201027 13:31:45.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:31:45.119" starttime="20201027 13:31:45.106"></status>
</kw>
<msg timestamp="20201027 13:31:45.119" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 13:31:45.119" starttime="20201027 13:31:45.106"></status>
</kw>
<msg timestamp="20201027 13:31:45.119" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 13:31:45.119" starttime="20201027 13:31:45.106"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:31:45.123" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:31:45.123" starttime="20201027 13:31:45.122"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:31:45.124" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:31:45.124" starttime="20201027 13:31:45.123"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:45.124" starttime="20201027 13:31:45.122"></status>
</kw>
<msg timestamp="20201027 13:31:45.124" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:31:45.124" starttime="20201027 13:31:45.121"></status>
</kw>
<status status="PASS" endtime="20201027 13:31:45.124" starttime="20201027 13:31:45.121"></status>
</kw>
<msg timestamp="20201027 13:31:45.124" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 13:31:45.124" starttime="20201027 13:31:45.120"></status>
</kw>
<msg timestamp="20201027 13:31:45.124" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 13:31:45.124" starttime="20201027 13:31:45.119"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:31:45.127" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:32:25.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:32:25.641" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 13:31:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:31:47 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201027 13:32:25.641" starttime="20201027 13:31:45.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:32:25.642" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 13:31:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:31:47 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 13:31:47 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-27 13:31:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:31:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-275403EA7B2C-&gt;b4a90fc7-f74a-45c4-afef-4659472d609b
2020-10-27 13:31:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 13:31:48 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-10-27 13:31:48 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-27 13:31:51 INFO  JobSubmitter:198 - number of splits:3
2020-10-27 13:31:54 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603805430566_0001
2020-10-27 13:31:54 INFO  YarnClientImpl:273 - Submitted application application_1603805430566_0001
2020-10-27 13:31:54 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603805430566_0001/
2020-10-27 13:31:54 INFO  Job:1339 - Running job: job_1603805430566_0001
2020-10-27 13:32:04 INFO  Job:1360 - Job job_1603805430566_0001 running in uber mode : false
2020-10-27 13:32:04 INFO  Job:1367 -  map 0% reduce 0%
2020-10-27 13:32:09 INFO  Job:1367 -  map 33% reduce 0%
2020-10-27 13:32:14 INFO  Job:1367 -  map 67% reduce 0%
2020-10-27 13:32:19 INFO  Job:1367 -  map 100% reduce 0%
2020-10-27 13:32:24 INFO  Job:1367 -  map 100% reduce 100%
2020-10-27 13:32:24 INFO  Job:1378 - Job job_1603805430566_0001 completed successfully
2020-10-27 13:32:25 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615465
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39264
		Total time spent by all reduces in occupied slots (ms)=15136
		Total time spent by all map tasks (ms)=9816
		Total time spent by all reduce tasks (ms)=3784
		Total vcore-milliseconds taken by all map tasks=9816
		Total vcore-milliseconds taken by all reduce tasks=3784
		Total megabyte-milliseconds taken by all map tasks=40206336
		Total megabyte-milliseconds taken by all reduce tasks=15499264
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=563
		CPU time spent (ms)=6880
		Physical memory (bytes) snapshot=1155260416
		Virtual memory (bytes) snapshot=16073097216
		Total committed heap usage (bytes)=1059061760
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.678 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201027 13:32:25.642" starttime="20201027 13:32:25.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:32:25.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:32:25.643" starttime="20201027 13:32:25.643"></status>
</kw>
<status status="PASS" endtime="20201027 13:32:25.643" starttime="20201027 13:31:45.125"></status>
</kw>
<msg timestamp="20201027 13:32:25.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:32:25.643" starttime="20201027 13:31:45.125"></status>
</kw>
<msg timestamp="20201027 13:32:25.644" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 13:31:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:31:47 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201027 13:32:25.644" starttime="20201027 13:31:45.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 13:32:25.644" starttime="20201027 13:32:25.644"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 13:32:25.645" critical="yes" starttime="20201027 13:31:45.105"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:32:25.650" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:32:25.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:32:25.655" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 13:32:25.655" starttime="20201027 13:32:25.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:32:25.655" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 13:32:25.656" starttime="20201027 13:32:25.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:32:25.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:32:25.656" starttime="20201027 13:32:25.656"></status>
</kw>
<status status="PASS" endtime="20201027 13:32:25.656" starttime="20201027 13:32:25.647"></status>
</kw>
<msg timestamp="20201027 13:32:25.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:32:25.656" starttime="20201027 13:32:25.647"></status>
</kw>
<msg timestamp="20201027 13:32:25.657" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 13:32:25.657" starttime="20201027 13:32:25.647"></status>
</kw>
<msg timestamp="20201027 13:32:25.657" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 13:32:25.657" starttime="20201027 13:32:25.646"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 13:32:25.657" level="INFO">${random} = 38</msg>
<status status="PASS" endtime="20201027 13:32:25.657" starttime="20201027 13:32:25.657"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:32:25.661" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:32:25.661" starttime="20201027 13:32:25.660"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:32:25.661" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:32:25.661" starttime="20201027 13:32:25.661"></status>
</kw>
<status status="PASS" endtime="20201027 13:32:25.661" starttime="20201027 13:32:25.660"></status>
</kw>
<msg timestamp="20201027 13:32:25.662" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:32:25.662" starttime="20201027 13:32:25.659"></status>
</kw>
<status status="PASS" endtime="20201027 13:32:25.662" starttime="20201027 13:32:25.659"></status>
</kw>
<msg timestamp="20201027 13:32:25.662" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 13:32:25.662" starttime="20201027 13:32:25.658"></status>
</kw>
<msg timestamp="20201027 13:32:25.662" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 13:32:25.662" starttime="20201027 13:32:25.657"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:32:25.665" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:32:25.665" starttime="20201027 13:32:25.665"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:32:25.666" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:32:25.666" starttime="20201027 13:32:25.665"></status>
</kw>
<status status="PASS" endtime="20201027 13:32:25.666" starttime="20201027 13:32:25.664"></status>
</kw>
<msg timestamp="20201027 13:32:25.666" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:32:25.666" starttime="20201027 13:32:25.664"></status>
</kw>
<status status="PASS" endtime="20201027 13:32:25.666" starttime="20201027 13:32:25.663"></status>
</kw>
<msg timestamp="20201027 13:32:25.666" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 13:32:25.666" starttime="20201027 13:32:25.663"></status>
</kw>
<msg timestamp="20201027 13:32:25.667" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 13:32:25.667" starttime="20201027 13:32:25.662"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:32:25.669" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:32:25.670" starttime="20201027 13:32:25.669"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:32:25.670" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:32:25.670" starttime="20201027 13:32:25.670"></status>
</kw>
<status status="PASS" endtime="20201027 13:32:25.670" starttime="20201027 13:32:25.669"></status>
</kw>
<msg timestamp="20201027 13:32:25.670" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:32:25.670" starttime="20201027 13:32:25.668"></status>
</kw>
<status status="PASS" endtime="20201027 13:32:25.671" starttime="20201027 13:32:25.668"></status>
</kw>
<msg timestamp="20201027 13:32:25.671" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-38.txt</msg>
<status status="PASS" endtime="20201027 13:32:25.671" starttime="20201027 13:32:25.667"></status>
</kw>
<msg timestamp="20201027 13:32:25.671" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-38.txt</msg>
<status status="PASS" endtime="20201027 13:32:25.671" starttime="20201027 13:32:25.667"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:32:25.675" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-38.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:33:02.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:33:02.481" level="INFO">${output} = 2020-10-27 13:32:27 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-10-27 13:32:27 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201027 13:33:02.481" starttime="20201027 13:32:25.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:33:02.483" level="INFO">2020-10-27 13:32:27 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-10-27 13:32:27 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 13:32:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:32:28 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 13:32:28 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-27 13:32:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:32:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-36BBD3C0DF74-&gt;b4a90fc7-f74a-45c4-afef-4659472d609b
2020-10-27 13:32:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 13:32:29 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-27 13:32:29 INFO  JobSubmitter:198 - number of splits:3
2020-10-27 13:32:29 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603805430566_0002
2020-10-27 13:32:29 INFO  YarnClientImpl:273 - Submitted application application_1603805430566_0002
2020-10-27 13:32:29 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603805430566_0002/
2020-10-27 13:32:29 INFO  Job:1339 - Running job: job_1603805430566_0002
2020-10-27 13:32:38 INFO  Job:1360 - Job job_1603805430566_0002 running in uber mode : false
2020-10-27 13:32:38 INFO  Job:1367 -  map 0% reduce 0%
2020-10-27 13:32:44 INFO  Job:1367 -  map 33% reduce 0%
2020-10-27 13:32:49 INFO  Job:1367 -  map 67% reduce 0%
2020-10-27 13:32:54 INFO  Job:1367 -  map 100% reduce 0%
2020-10-27 13:32:58 INFO  Job:1367 -  map 100% reduce 100%
2020-10-27 13:33:02 INFO  Job:1378 - Job job_1603805430566_0002 completed successfully
2020-10-27 13:33:02 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39476
		Total time spent by all reduces in occupied slots (ms)=14624
		Total time spent by all map tasks (ms)=9869
		Total time spent by all reduce tasks (ms)=3656
		Total vcore-milliseconds taken by all map tasks=9869
		Total vcore-milliseconds taken by all reduce tasks=3656
		Total megabyte-milliseconds taken by all map tasks=40423424
		Total megabyte-milliseconds taken by all reduce tasks=14974976
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=540
		CPU time spent (ms)=7190
		Physical memory (bytes) snapshot=1142497280
		Virtual memory (bytes) snapshot=16064233472
		Total committed heap usage (bytes)=1047527424
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201027 13:33:02.483" starttime="20201027 13:33:02.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:33:02.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:33:02.484" starttime="20201027 13:33:02.483"></status>
</kw>
<status status="PASS" endtime="20201027 13:33:02.484" starttime="20201027 13:32:25.672"></status>
</kw>
<msg timestamp="20201027 13:33:02.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:33:02.484" starttime="20201027 13:32:25.672"></status>
</kw>
<msg timestamp="20201027 13:33:02.485" level="INFO">${output} = 2020-10-27 13:32:27 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-10-27 13:32:27 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201027 13:33:02.485" starttime="20201027 13:32:25.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 13:33:02.485" starttime="20201027 13:33:02.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 13:33:02.486" starttime="20201027 13:33:02.485"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 13:33:02.486" critical="yes" starttime="20201027 13:32:25.645"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 13:33:02.487" starttime="20201027 13:31:45.049"></status>
</suite>
<status status="PASS" elapsedtime="187500" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:35:34.129" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:35:36.579" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 13:35:36.579" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 13:35:36.579" starttime="20201027 13:35:34.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:35:36.580" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 13:35:36.580" starttime="20201027 13:35:36.579"></status>
</kw>
<msg timestamp="20201027 13:35:36.580" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 13:35:36.580" starttime="20201027 13:35:34.123"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:35:36.586" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:35:38.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:35:38.915" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:35:38.915" starttime="20201027 13:35:36.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:35:38.916" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:35:38.916" starttime="20201027 13:35:38.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:35:38.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:35:38.917" starttime="20201027 13:35:38.916"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:38.917" starttime="20201027 13:35:36.582"></status>
</kw>
<msg timestamp="20201027 13:35:38.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:35:38.917" starttime="20201027 13:35:36.582"></status>
</kw>
<msg timestamp="20201027 13:35:38.918" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201027 13:35:38.918" starttime="20201027 13:35:36.582"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201027 13:35:38.918" starttime="20201027 13:35:38.918"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:38.919" starttime="20201027 13:35:36.581"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:38.919" starttime="20201027 13:35:36.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:35:38.925" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:35:41.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:35:41.090" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:35:41.090" starttime="20201027 13:35:38.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:35:41.091" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:35:41.091" starttime="20201027 13:35:41.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:35:41.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:35:41.092" starttime="20201027 13:35:41.092"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:41.092" starttime="20201027 13:35:38.921"></status>
</kw>
<msg timestamp="20201027 13:35:41.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:35:41.093" starttime="20201027 13:35:38.921"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:41.093" starttime="20201027 13:35:38.920"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:41.093" starttime="20201027 13:35:38.920"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:41.093" starttime="20201027 13:35:38.919"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201027 13:35:41.094" starttime="20201027 13:35:41.093"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:35:41.098" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:35:43.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:35:43.383" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T13:35:41.064Z",
  "modificat...</msg>
<status status="PASS" endtime="20201027 13:35:43.383" starttime="20201027 13:35:41.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:35:43.384" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T13:35:41.064Z",
  "modificationTime" : "2020-10-27T13:35:41.064Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 13:35:43.384" starttime="20201027 13:35:43.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:35:43.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:35:43.385" starttime="20201027 13:35:43.384"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:43.385" starttime="20201027 13:35:41.095"></status>
</kw>
<msg timestamp="20201027 13:35:43.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:35:43.386" starttime="20201027 13:35:41.094"></status>
</kw>
<msg timestamp="20201027 13:35:43.386" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T13:35:41.064Z",
  "modificat...</msg>
<status status="PASS" endtime="20201027 13:35:43.386" starttime="20201027 13:35:41.094"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201027 13:35:43.387" starttime="20201027 13:35:43.386"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:35:43.392" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:35:43.392" starttime="20201027 13:35:43.391"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:35:43.392" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:35:43.393" starttime="20201027 13:35:43.392"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:43.393" starttime="20201027 13:35:43.390"></status>
</kw>
<msg timestamp="20201027 13:35:43.393" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:35:43.393" starttime="20201027 13:35:43.390"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:43.393" starttime="20201027 13:35:43.389"></status>
</kw>
<msg timestamp="20201027 13:35:43.393" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 13:35:43.393" starttime="20201027 13:35:43.388"></status>
</kw>
<msg timestamp="20201027 13:35:43.394" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 13:35:43.394" starttime="20201027 13:35:43.387"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:35:43.399" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:35:45.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:35:45.410" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:35:45.410" starttime="20201027 13:35:43.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:35:45.411" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:35:45.411" starttime="20201027 13:35:45.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:35:45.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:35:45.412" starttime="20201027 13:35:45.411"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:45.412" starttime="20201027 13:35:43.395"></status>
</kw>
<msg timestamp="20201027 13:35:45.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:35:45.412" starttime="20201027 13:35:43.395"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:45.413" starttime="20201027 13:35:43.394"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:35:45.416" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:35:51.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:35:51.124" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:35:51.124" starttime="20201027 13:35:45.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:35:51.125" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:35:51.125" starttime="20201027 13:35:51.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:35:51.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:35:51.126" starttime="20201027 13:35:51.125"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:51.126" starttime="20201027 13:35:45.414"></status>
</kw>
<msg timestamp="20201027 13:35:51.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:35:51.126" starttime="20201027 13:35:45.414"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:51.126" starttime="20201027 13:35:45.413"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:35:51.130" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:35:55.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:35:55.119" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:35:55.119" starttime="20201027 13:35:51.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:35:55.120" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:35:55.120" starttime="20201027 13:35:55.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:35:55.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:35:55.121" starttime="20201027 13:35:55.120"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:55.121" starttime="20201027 13:35:51.128"></status>
</kw>
<msg timestamp="20201027 13:35:55.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:35:55.121" starttime="20201027 13:35:51.127"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:55.122" starttime="20201027 13:35:51.127"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:35:55.125" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:35:59.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:35:59.257" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:35:59.257" starttime="20201027 13:35:55.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:35:59.258" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:35:59.258" starttime="20201027 13:35:59.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:35:59.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:35:59.259" starttime="20201027 13:35:59.258"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:59.259" starttime="20201027 13:35:55.123"></status>
</kw>
<msg timestamp="20201027 13:35:59.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:35:59.259" starttime="20201027 13:35:55.123"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:59.260" starttime="20201027 13:35:55.122"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 13:35:59.260" critical="yes" starttime="20201027 13:35:34.122"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:35:59.266" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:35:59.266" starttime="20201027 13:35:59.265"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:35:59.267" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:35:59.267" starttime="20201027 13:35:59.266"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:59.267" starttime="20201027 13:35:59.265"></status>
</kw>
<msg timestamp="20201027 13:35:59.267" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:35:59.267" starttime="20201027 13:35:59.264"></status>
</kw>
<status status="PASS" endtime="20201027 13:35:59.267" starttime="20201027 13:35:59.263"></status>
</kw>
<msg timestamp="20201027 13:35:59.267" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 13:35:59.267" starttime="20201027 13:35:59.263"></status>
</kw>
<msg timestamp="20201027 13:35:59.268" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 13:35:59.268" starttime="20201027 13:35:59.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:35:59.271" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:36:01.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:36:01.339" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:36:01.339" starttime="20201027 13:35:59.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:36:01.340" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:36:01.340" starttime="20201027 13:36:01.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:36:01.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:36:01.341" starttime="20201027 13:36:01.340"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:01.341" starttime="20201027 13:35:59.269"></status>
</kw>
<msg timestamp="20201027 13:36:01.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:36:01.342" starttime="20201027 13:35:59.268"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:01.342" starttime="20201027 13:35:59.268"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:36:01.347" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:36:03.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:36:03.541" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:36:03.541" starttime="20201027 13:36:01.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:36:03.542" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:36:03.542" starttime="20201027 13:36:03.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:36:03.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:36:03.543" starttime="20201027 13:36:03.543"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:03.544" starttime="20201027 13:36:01.343"></status>
</kw>
<msg timestamp="20201027 13:36:03.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:36:03.544" starttime="20201027 13:36:01.342"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:03.544" starttime="20201027 13:36:01.342"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 13:36:03.544" critical="yes" starttime="20201027 13:35:59.261"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201027 13:36:03.546" starttime="20201027 13:35:34.059"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 13:37:46.280" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 13:37:46.280" starttime="20201027 13:37:46.280"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:37:46.281" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 13:37:46.281" starttime="20201027 13:37:46.280"></status>
</kw>
<status status="PASS" endtime="20201027 13:37:46.281" starttime="20201027 13:37:46.279"></status>
</kw>
<msg timestamp="20201027 13:37:46.281" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 13:37:46.281" starttime="20201027 13:37:46.278"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 13:37:46.282" starttime="20201027 13:37:46.282"></status>
</kw>
<msg timestamp="20201027 13:37:46.282" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 13:37:46.282" starttime="20201027 13:37:46.281"></status>
</kw>
<status status="PASS" endtime="20201027 13:37:46.282" starttime="20201027 13:37:46.278"></status>
</kw>
<msg timestamp="20201027 13:37:46.282" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 13:37:46.283" starttime="20201027 13:37:46.277"></status>
</kw>
<msg timestamp="20201027 13:37:46.283" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 13:37:46.283" starttime="20201027 13:37:46.276"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 13:37:46.283" level="INFO">${random} = 89759</msg>
<status status="PASS" endtime="20201027 13:37:46.283" starttime="20201027 13:37:46.283"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:37:46.288" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-89759 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:37:49.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:37:49.770" level="INFO">${output} = 2020-10-27 13:37:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:47 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 13:37:49.770" starttime="20201027 13:37:46.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:37:49.771" level="INFO">2020-10-27 13:37:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:48 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-27 13:37:48 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:37:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 13:37:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 13:37:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:37:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A9CBDA495689-&gt;1d22b68a-c738-4ef7-aaa9-015a73330375
2020-10-27 13:37:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 13:37:49 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 13:37:49.771" starttime="20201027 13:37:49.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:37:49.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:37:49.772" starttime="20201027 13:37:49.771"></status>
</kw>
<status status="PASS" endtime="20201027 13:37:49.772" starttime="20201027 13:37:46.284"></status>
</kw>
<msg timestamp="20201027 13:37:49.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:37:49.773" starttime="20201027 13:37:46.284"></status>
</kw>
<msg timestamp="20201027 13:37:49.773" level="INFO">${result} = 2020-10-27 13:37:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:47 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 13:37:49.773" starttime="20201027 13:37:46.283"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:37:49.776" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:37:51.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:37:51.633" level="INFO">${output} = 2020-10-27 13:37:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:51 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 13:37:51.633" starttime="20201027 13:37:49.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:37:51.634" level="INFO">2020-10-27 13:37:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:51 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:35 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-27 13:36 ofs://om/volume1/bucket1/ozone-47325
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-27 13:37 ofs://om/volume1/bucket1/ozone-89759
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:36 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:37 ofs://om/volume1/bucket1/wordcount-96.txt
2020-10-27 13:37:51 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 13:37:51.634" starttime="20201027 13:37:51.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:37:51.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:37:51.635" starttime="20201027 13:37:51.634"></status>
</kw>
<status status="PASS" endtime="20201027 13:37:51.635" starttime="20201027 13:37:49.774"></status>
</kw>
<msg timestamp="20201027 13:37:51.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:37:51.636" starttime="20201027 13:37:49.774"></status>
</kw>
<msg timestamp="20201027 13:37:51.636" level="INFO">${result} = 2020-10-27 13:37:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:51 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 13:37:51.636" starttime="20201027 13:37:49.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 13:37:51.637" starttime="20201027 13:37:51.636"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 13:37:51.637" critical="yes" starttime="20201027 13:37:46.275"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 13:37:51.638" starttime="20201027 13:37:46.217"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:36:08.389" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:36:08.389" starttime="20201027 13:36:08.389"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:36:08.390" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:36:08.390" starttime="20201027 13:36:08.390"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:08.390" starttime="20201027 13:36:08.389"></status>
</kw>
<msg timestamp="20201027 13:36:08.390" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:36:08.390" starttime="20201027 13:36:08.388"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:08.391" starttime="20201027 13:36:08.387"></status>
</kw>
<msg timestamp="20201027 13:36:08.391" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 13:36:08.391" starttime="20201027 13:36:08.387"></status>
</kw>
<msg timestamp="20201027 13:36:08.391" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 13:36:08.391" starttime="20201027 13:36:08.385"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 13:36:08.391" level="INFO">${random} = 47325</msg>
<status status="PASS" endtime="20201027 13:36:08.391" starttime="20201027 13:36:08.391"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:36:08.398" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-47325 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:36:12.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:36:12.218" level="INFO">${output} = 2020-10-27 13:36:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:10 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 13:36:12.218" starttime="20201027 13:36:08.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:36:12.219" level="INFO">2020-10-27 13:36:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:10 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-27 13:36:10 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:36:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 13:36:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 13:36:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:36:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E489965531D0-&gt;1d22b68a-c738-4ef7-aaa9-015a73330375
2020-10-27 13:36:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 13:36:11 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 13:36:12.219" starttime="20201027 13:36:12.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:36:12.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:36:12.220" starttime="20201027 13:36:12.219"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:12.220" starttime="20201027 13:36:08.392"></status>
</kw>
<msg timestamp="20201027 13:36:12.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:36:12.220" starttime="20201027 13:36:08.392"></status>
</kw>
<msg timestamp="20201027 13:36:12.220" level="INFO">${result} = 2020-10-27 13:36:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:10 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 13:36:12.221" starttime="20201027 13:36:08.392"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:36:12.224" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:36:14.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:36:14.202" level="INFO">${output} = 2020-10-27 13:36:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 13:36:14.202" starttime="20201027 13:36:12.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:36:14.203" level="INFO">2020-10-27 13:36:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:13 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:35 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-27 13:36 o3fs://bucket1.volume1.om/ozone-47325
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:36 o3fs://bucket1.volume1.om/user
2020-10-27 13:36:14 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 13:36:14.203" starttime="20201027 13:36:14.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:36:14.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:36:14.204" starttime="20201027 13:36:14.203"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:14.204" starttime="20201027 13:36:12.222"></status>
</kw>
<msg timestamp="20201027 13:36:14.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:36:14.204" starttime="20201027 13:36:12.221"></status>
</kw>
<msg timestamp="20201027 13:36:14.205" level="INFO">${result} = 2020-10-27 13:36:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 13:36:14.205" starttime="20201027 13:36:12.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 13:36:14.205" starttime="20201027 13:36:14.205"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 13:36:14.205" critical="yes" starttime="20201027 13:36:08.385"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 13:36:14.206" starttime="20201027 13:36:08.328"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:37:56.297" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:37:56.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:37:56.313" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 13:37:56.313" starttime="20201027 13:37:56.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:37:56.313" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 13:37:56.314" starttime="20201027 13:37:56.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:37:56.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:37:56.314" starttime="20201027 13:37:56.314"></status>
</kw>
<status status="PASS" endtime="20201027 13:37:56.315" starttime="20201027 13:37:56.292"></status>
</kw>
<msg timestamp="20201027 13:37:56.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:37:56.315" starttime="20201027 13:37:56.292"></status>
</kw>
<msg timestamp="20201027 13:37:56.315" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 13:37:56.315" starttime="20201027 13:37:56.292"></status>
</kw>
<msg timestamp="20201027 13:37:56.315" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 13:37:56.315" starttime="20201027 13:37:56.291"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 13:37:56.319" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 13:37:56.319" starttime="20201027 13:37:56.319"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:37:56.320" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 13:37:56.320" starttime="20201027 13:37:56.320"></status>
</kw>
<status status="PASS" endtime="20201027 13:37:56.321" starttime="20201027 13:37:56.319"></status>
</kw>
<msg timestamp="20201027 13:37:56.321" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 13:37:56.321" starttime="20201027 13:37:56.318"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 13:37:56.322" starttime="20201027 13:37:56.321"></status>
</kw>
<msg timestamp="20201027 13:37:56.322" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 13:37:56.322" starttime="20201027 13:37:56.321"></status>
</kw>
<status status="PASS" endtime="20201027 13:37:56.322" starttime="20201027 13:37:56.317"></status>
</kw>
<msg timestamp="20201027 13:37:56.322" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 13:37:56.322" starttime="20201027 13:37:56.316"></status>
</kw>
<msg timestamp="20201027 13:37:56.323" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 13:37:56.323" starttime="20201027 13:37:56.316"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:37:56.327" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:38:31.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:38:31.982" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 13:37:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37...</msg>
<status status="PASS" endtime="20201027 13:38:31.982" starttime="20201027 13:37:56.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:38:31.984" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 13:37:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:58 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-27 13:37:58 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:37:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 13:37:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 13:37:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:37:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3607B06268C6-&gt;1d22b68a-c738-4ef7-aaa9-015a73330375
2020-10-27 13:37:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 13:37:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:59 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-27 13:37:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:59 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 13:37:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:00 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 13:38:00 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 13:38:00 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603805713153_0003
2020-10-27 13:38:00 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 13:38:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:00 INFO  Configuration:2752 - resource-types.xml not found
2020-10-27 13:38:00 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-27 13:38:00 INFO  YarnClientImpl:324 - Submitted application application_1603805713153_0003
2020-10-27 13:38:00 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603805713153_0003/
2020-10-27 13:38:00 INFO  Job:1619 - Running job: job_1603805713153_0003
2020-10-27 13:38:08 INFO  Job:1640 - Job job_1603805713153_0003 running in uber mode : false
2020-10-27 13:38:08 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 13:38:15 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 13:38:21 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 13:38:26 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 13:38:30 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 13:38:31 INFO  Job:1658 - Job job_1603805713153_0003 completed successfully
2020-10-27 13:38:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:31 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021309
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=753
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40060
		Total time spent by all reduces in occupied slots (ms)=15024
		Total time spent by all map tasks (ms)=10015
		Total time spent by all reduce tasks (ms)=3756
		Total vcore-milliseconds taken by all map tasks=10015
		Total vcore-milliseconds taken by all reduce tasks=3756
		Total megabyte-milliseconds taken by all map tasks=41021440
		Total megabyte-milliseconds taken by all reduce tasks=15384576
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=399
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=608
		CPU time spent (ms)=6920
		Physical memory (bytes) snapshot=1173602304
		Virtual memory (bytes) snapshot=16074956800
		Total committed heap usage (bytes)=1157103616
		Peak Map Physical memory (bytes)=299409408
		Peak Map Virtual memory (bytes)=4020715520
		Peak Reduce Physical memory (bytes)=298426368
		Peak Reduce Virtual memory (bytes)=4033277952
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.878 seconds
2020-10-27 13:38:31 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-27 13:38:31 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 13:38:31.984" starttime="20201027 13:38:31.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:38:31.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:38:31.984" starttime="20201027 13:38:31.984"></status>
</kw>
<status status="PASS" endtime="20201027 13:38:31.985" starttime="20201027 13:37:56.323"></status>
</kw>
<msg timestamp="20201027 13:38:31.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:38:31.985" starttime="20201027 13:37:56.323"></status>
</kw>
<msg timestamp="20201027 13:38:31.985" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 13:37:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37...</msg>
<status status="PASS" endtime="20201027 13:38:31.985" starttime="20201027 13:37:56.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 13:38:31.986" starttime="20201027 13:38:31.986"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 13:38:31.986" critical="yes" starttime="20201027 13:37:56.291"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:38:31.991" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:38:31.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:38:31.997" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 13:38:31.997" starttime="20201027 13:38:31.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:38:31.998" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 13:38:31.998" starttime="20201027 13:38:31.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:38:31.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:38:31.999" starttime="20201027 13:38:31.999"></status>
</kw>
<status status="PASS" endtime="20201027 13:38:31.999" starttime="20201027 13:38:31.989"></status>
</kw>
<msg timestamp="20201027 13:38:31.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:38:32.000" starttime="20201027 13:38:31.988"></status>
</kw>
<msg timestamp="20201027 13:38:32.000" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 13:38:32.000" starttime="20201027 13:38:31.988"></status>
</kw>
<msg timestamp="20201027 13:38:32.000" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 13:38:32.000" starttime="20201027 13:38:31.988"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 13:38:32.001" level="INFO">${random} = 45</msg>
<status status="PASS" endtime="20201027 13:38:32.001" starttime="20201027 13:38:32.000"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 13:38:32.004" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 13:38:32.004" starttime="20201027 13:38:32.004"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:38:32.005" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 13:38:32.005" starttime="20201027 13:38:32.005"></status>
</kw>
<status status="PASS" endtime="20201027 13:38:32.005" starttime="20201027 13:38:32.004"></status>
</kw>
<msg timestamp="20201027 13:38:32.005" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 13:38:32.005" starttime="20201027 13:38:32.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 13:38:32.006" starttime="20201027 13:38:32.006"></status>
</kw>
<msg timestamp="20201027 13:38:32.007" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 13:38:32.007" starttime="20201027 13:38:32.005"></status>
</kw>
<status status="PASS" endtime="20201027 13:38:32.007" starttime="20201027 13:38:32.002"></status>
</kw>
<msg timestamp="20201027 13:38:32.007" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 13:38:32.007" starttime="20201027 13:38:32.002"></status>
</kw>
<msg timestamp="20201027 13:38:32.007" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 13:38:32.007" starttime="20201027 13:38:32.001"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 13:38:32.011" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 13:38:32.011" starttime="20201027 13:38:32.010"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:38:32.011" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 13:38:32.011" starttime="20201027 13:38:32.011"></status>
</kw>
<status status="PASS" endtime="20201027 13:38:32.011" starttime="20201027 13:38:32.010"></status>
</kw>
<msg timestamp="20201027 13:38:32.011" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 13:38:32.012" starttime="20201027 13:38:32.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:38:32.013" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201027 13:38:32.013" starttime="20201027 13:38:32.013"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:38:32.014" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201027 13:38:32.014" starttime="20201027 13:38:32.013"></status>
</kw>
<status status="PASS" endtime="20201027 13:38:32.014" starttime="20201027 13:38:32.012"></status>
</kw>
<msg timestamp="20201027 13:38:32.014" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201027 13:38:32.014" starttime="20201027 13:38:32.012"></status>
</kw>
<status status="PASS" endtime="20201027 13:38:32.014" starttime="20201027 13:38:32.009"></status>
</kw>
<msg timestamp="20201027 13:38:32.015" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 13:38:32.015" starttime="20201027 13:38:32.008"></status>
</kw>
<msg timestamp="20201027 13:38:32.015" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 13:38:32.015" starttime="20201027 13:38:32.007"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 13:38:32.018" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 13:38:32.018" starttime="20201027 13:38:32.017"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:38:32.018" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 13:38:32.019" starttime="20201027 13:38:32.018"></status>
</kw>
<status status="PASS" endtime="20201027 13:38:32.019" starttime="20201027 13:38:32.017"></status>
</kw>
<msg timestamp="20201027 13:38:32.019" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 13:38:32.019" starttime="20201027 13:38:32.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:38:32.020" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201027 13:38:32.020" starttime="20201027 13:38:32.020"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:38:32.021" level="INFO">${result} = /wordcount-45.txt</msg>
<status status="PASS" endtime="20201027 13:38:32.021" starttime="20201027 13:38:32.020"></status>
</kw>
<status status="PASS" endtime="20201027 13:38:32.021" starttime="20201027 13:38:32.019"></status>
</kw>
<msg timestamp="20201027 13:38:32.021" level="INFO">${path_with_leading} = /wordcount-45.txt</msg>
<status status="PASS" endtime="20201027 13:38:32.021" starttime="20201027 13:38:32.019"></status>
</kw>
<status status="PASS" endtime="20201027 13:38:32.021" starttime="20201027 13:38:32.016"></status>
</kw>
<msg timestamp="20201027 13:38:32.022" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-45.txt</msg>
<status status="PASS" endtime="20201027 13:38:32.022" starttime="20201027 13:38:32.015"></status>
</kw>
<msg timestamp="20201027 13:38:32.022" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-45.txt</msg>
<status status="PASS" endtime="20201027 13:38:32.022" starttime="20201027 13:38:32.015"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:38:32.025" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-45.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:39:07.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:39:07.652" level="INFO">${output} = 2020-10-27 13:38:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:33 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 13:39:07.652" starttime="20201027 13:38:32.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:39:07.654" level="INFO">2020-10-27 13:38:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-27 13:38:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:34 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 13:38:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:34 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-27 13:38:34 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:38:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 13:38:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 13:38:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:38:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-189E46B5B3EB-&gt;1d22b68a-c738-4ef7-aaa9-015a73330375
2020-10-27 13:38:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 13:38:35 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 13:38:36 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 13:38:36 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603805713153_0004
2020-10-27 13:38:36 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 13:38:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:36 INFO  Configuration:2752 - resource-types.xml not found
2020-10-27 13:38:36 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-27 13:38:36 INFO  YarnClientImpl:324 - Submitted application application_1603805713153_0004
2020-10-27 13:38:36 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603805713153_0004/
2020-10-27 13:38:36 INFO  Job:1619 - Running job: job_1603805713153_0004
2020-10-27 13:38:44 INFO  Job:1640 - Job job_1603805713153_0004 running in uber mode : false
2020-10-27 13:38:44 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 13:38:50 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 13:38:57 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 13:39:02 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 13:39:07 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 13:39:07 INFO  Job:1658 - Job job_1603805713153_0004 completed successfully
2020-10-27 13:39:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:39:07 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39620
		Total time spent by all reduces in occupied slots (ms)=16032
		Total time spent by all map tasks (ms)=9905
		Total time spent by all reduce tasks (ms)=4008
		Total vcore-milliseconds taken by all map tasks=9905
		Total vcore-milliseconds taken by all reduce tasks=4008
		Total megabyte-milliseconds taken by all map tasks=40570880
		Total megabyte-milliseconds taken by all reduce tasks=16416768
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=588
		CPU time spent (ms)=6920
		Physical memory (bytes) snapshot=1150865408
		Virtual memory (bytes) snapshot=16060862464
		Total committed heap usage (bytes)=1065877504
		Peak Map Physical memory (bytes)=295854080
		Peak Map Virtual memory (bytes)=4019232768
		Peak Reduce Physical memory (bytes)=270041088
		Peak Reduce Virtual memory (bytes)=4018298880
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-27 13:39:07 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 13:39:07.654" starttime="20201027 13:39:07.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:39:07.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:39:07.654" starttime="20201027 13:39:07.654"></status>
</kw>
<status status="PASS" endtime="20201027 13:39:07.655" starttime="20201027 13:38:32.023"></status>
</kw>
<msg timestamp="20201027 13:39:07.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:39:07.655" starttime="20201027 13:38:32.022"></status>
</kw>
<msg timestamp="20201027 13:39:07.656" level="INFO">${output} = 2020-10-27 13:38:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:38:33 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 13:39:07.656" starttime="20201027 13:38:32.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 13:39:07.656" starttime="20201027 13:39:07.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 13:39:07.657" starttime="20201027 13:39:07.657"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 13:39:07.657" critical="yes" starttime="20201027 13:38:31.987"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 13:39:07.658" starttime="20201027 13:37:56.235"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:36:18.974" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:36:18.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:36:18.981" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 13:36:18.981" starttime="20201027 13:36:18.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:36:18.982" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 13:36:18.982" starttime="20201027 13:36:18.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:36:18.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:36:18.983" starttime="20201027 13:36:18.982"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:18.983" starttime="20201027 13:36:18.969"></status>
</kw>
<msg timestamp="20201027 13:36:18.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:36:18.984" starttime="20201027 13:36:18.969"></status>
</kw>
<msg timestamp="20201027 13:36:18.984" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 13:36:18.984" starttime="20201027 13:36:18.969"></status>
</kw>
<msg timestamp="20201027 13:36:18.984" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 13:36:18.984" starttime="20201027 13:36:18.968"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:36:18.988" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:36:18.988" starttime="20201027 13:36:18.987"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:36:18.988" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:36:18.988" starttime="20201027 13:36:18.988"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:18.989" starttime="20201027 13:36:18.987"></status>
</kw>
<msg timestamp="20201027 13:36:18.989" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:36:18.989" starttime="20201027 13:36:18.986"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:18.989" starttime="20201027 13:36:18.986"></status>
</kw>
<msg timestamp="20201027 13:36:18.989" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 13:36:18.989" starttime="20201027 13:36:18.985"></status>
</kw>
<msg timestamp="20201027 13:36:18.989" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 13:36:18.989" starttime="20201027 13:36:18.984"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:36:18.993" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:36:57.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:36:57.767" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 13:36:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36...</msg>
<status status="PASS" endtime="20201027 13:36:57.768" starttime="20201027 13:36:18.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:36:57.769" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 13:36:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:21 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-27 13:36:21 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:36:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 13:36:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 13:36:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:36:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A9C05CF683AE-&gt;1d22b68a-c738-4ef7-aaa9-015a73330375
2020-10-27 13:36:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 13:36:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-27 13:36:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:22 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 13:36:22 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 13:36:23 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603805713153_0001
2020-10-27 13:36:23 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 13:36:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:23 INFO  Configuration:2752 - resource-types.xml not found
2020-10-27 13:36:23 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-27 13:36:23 INFO  YarnClientImpl:324 - Submitted application application_1603805713153_0001
2020-10-27 13:36:23 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603805713153_0001/
2020-10-27 13:36:23 INFO  Job:1619 - Running job: job_1603805713153_0001
2020-10-27 13:36:33 INFO  Job:1640 - Job job_1603805713153_0001 running in uber mode : false
2020-10-27 13:36:33 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 13:36:40 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 13:36:47 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 13:36:52 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 13:36:56 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 13:36:57 INFO  Job:1658 - Job job_1603805713153_0001 completed successfully
2020-10-27 13:36:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:57 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39912
		Total time spent by all reduces in occupied slots (ms)=15448
		Total time spent by all map tasks (ms)=9978
		Total time spent by all reduce tasks (ms)=3862
		Total vcore-milliseconds taken by all map tasks=9978
		Total vcore-milliseconds taken by all reduce tasks=3862
		Total megabyte-milliseconds taken by all map tasks=40869888
		Total megabyte-milliseconds taken by all reduce tasks=15818752
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=559
		CPU time spent (ms)=6400
		Physical memory (bytes) snapshot=1139834880
		Virtual memory (bytes) snapshot=16034242560
		Total committed heap usage (bytes)=1066926080
		Peak Map Physical memory (bytes)=293965824
		Peak Map Virtual memory (bytes)=4010835968
		Peak Reduce Physical memory (bytes)=301121536
		Peak Reduce Virtual memory (bytes)=4035653632
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.978 seconds
2020-10-27 13:36:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:57 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-27 13:36:57 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 13:36:57.769" starttime="20201027 13:36:57.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:36:57.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:36:57.770" starttime="20201027 13:36:57.769"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:57.770" starttime="20201027 13:36:18.991"></status>
</kw>
<msg timestamp="20201027 13:36:57.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:36:57.770" starttime="20201027 13:36:18.990"></status>
</kw>
<msg timestamp="20201027 13:36:57.770" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 13:36:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36...</msg>
<status status="PASS" endtime="20201027 13:36:57.771" starttime="20201027 13:36:18.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 13:36:57.771" starttime="20201027 13:36:57.771"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 13:36:57.771" critical="yes" starttime="20201027 13:36:18.968"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:36:57.776" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:36:57.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:36:57.783" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 13:36:57.783" starttime="20201027 13:36:57.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:36:57.784" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 13:36:57.784" starttime="20201027 13:36:57.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:36:57.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:36:57.784" starttime="20201027 13:36:57.784"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:57.784" starttime="20201027 13:36:57.773"></status>
</kw>
<msg timestamp="20201027 13:36:57.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:36:57.785" starttime="20201027 13:36:57.773"></status>
</kw>
<msg timestamp="20201027 13:36:57.785" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 13:36:57.785" starttime="20201027 13:36:57.773"></status>
</kw>
<msg timestamp="20201027 13:36:57.785" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 13:36:57.785" starttime="20201027 13:36:57.772"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 13:36:57.786" level="INFO">${random} = 96</msg>
<status status="PASS" endtime="20201027 13:36:57.786" starttime="20201027 13:36:57.785"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:36:57.789" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:36:57.789" starttime="20201027 13:36:57.789"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:36:57.790" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:36:57.790" starttime="20201027 13:36:57.789"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:57.790" starttime="20201027 13:36:57.788"></status>
</kw>
<msg timestamp="20201027 13:36:57.790" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:36:57.790" starttime="20201027 13:36:57.788"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:57.790" starttime="20201027 13:36:57.787"></status>
</kw>
<msg timestamp="20201027 13:36:57.790" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 13:36:57.790" starttime="20201027 13:36:57.786"></status>
</kw>
<msg timestamp="20201027 13:36:57.790" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 13:36:57.791" starttime="20201027 13:36:57.786"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:36:57.794" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:36:57.794" starttime="20201027 13:36:57.793"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:36:57.795" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:36:57.795" starttime="20201027 13:36:57.794"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:57.795" starttime="20201027 13:36:57.793"></status>
</kw>
<msg timestamp="20201027 13:36:57.795" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:36:57.795" starttime="20201027 13:36:57.792"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:57.795" starttime="20201027 13:36:57.792"></status>
</kw>
<msg timestamp="20201027 13:36:57.795" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 13:36:57.796" starttime="20201027 13:36:57.791"></status>
</kw>
<msg timestamp="20201027 13:36:57.796" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 13:36:57.796" starttime="20201027 13:36:57.791"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:36:57.800" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:36:57.800" starttime="20201027 13:36:57.799"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:36:57.800" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:36:57.800" starttime="20201027 13:36:57.800"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:57.801" starttime="20201027 13:36:57.799"></status>
</kw>
<msg timestamp="20201027 13:36:57.801" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:36:57.801" starttime="20201027 13:36:57.798"></status>
</kw>
<status status="PASS" endtime="20201027 13:36:57.801" starttime="20201027 13:36:57.797"></status>
</kw>
<msg timestamp="20201027 13:36:57.801" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-96.txt</msg>
<status status="PASS" endtime="20201027 13:36:57.801" starttime="20201027 13:36:57.796"></status>
</kw>
<msg timestamp="20201027 13:36:57.801" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-96.txt</msg>
<status status="PASS" endtime="20201027 13:36:57.801" starttime="20201027 13:36:57.796"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:36:57.807" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-96.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:37:41.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:37:41.583" level="INFO">${output} = 2020-10-27 13:36:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:59 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 13:37:41.583" starttime="20201027 13:36:57.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:37:41.584" level="INFO">2020-10-27 13:36:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:59 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-27 13:36:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:59 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 13:36:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:00 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-27 13:37:00 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-27 13:37:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 13:37:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 13:37:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:37:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E55F523B4C3D-&gt;1d22b68a-c738-4ef7-aaa9-015a73330375
2020-10-27 13:37:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 13:37:01 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 13:37:04 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 13:37:04 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603805713153_0002
2020-10-27 13:37:04 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 13:37:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:04 INFO  Configuration:2752 - resource-types.xml not found
2020-10-27 13:37:04 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-27 13:37:04 INFO  YarnClientImpl:324 - Submitted application application_1603805713153_0002
2020-10-27 13:37:04 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603805713153_0002/
2020-10-27 13:37:04 INFO  Job:1619 - Running job: job_1603805713153_0002
2020-10-27 13:37:11 INFO  Job:1640 - Job job_1603805713153_0002 running in uber mode : false
2020-10-27 13:37:11 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 13:37:18 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 13:37:25 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 13:37:30 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 13:37:38 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 13:37:41 INFO  Job:1658 - Job job_1603805713153_0002 completed successfully
2020-10-27 13:37:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:37:41 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41968
		Total time spent by all reduces in occupied slots (ms)=24336
		Total time spent by all map tasks (ms)=10492
		Total time spent by all reduce tasks (ms)=6084
		Total vcore-milliseconds taken by all map tasks=10492
		Total vcore-milliseconds taken by all reduce tasks=6084
		Total megabyte-milliseconds taken by all map tasks=42975232
		Total megabyte-milliseconds taken by all reduce tasks=24920064
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=552
		CPU time spent (ms)=7050
		Physical memory (bytes) snapshot=1199771648
		Virtual memory (bytes) snapshot=16072015872
		Total committed heap usage (bytes)=1061158912
		Peak Map Physical memory (bytes)=306454528
		Peak Map Virtual memory (bytes)=4013092864
		Peak Reduce Physical memory (bytes)=295931904
		Peak Reduce Virtual memory (bytes)=4036362240
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-27 13:37:41 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 13:37:41.584" starttime="20201027 13:37:41.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:37:41.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:37:41.585" starttime="20201027 13:37:41.584"></status>
</kw>
<status status="PASS" endtime="20201027 13:37:41.585" starttime="20201027 13:36:57.803"></status>
</kw>
<msg timestamp="20201027 13:37:41.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:37:41.585" starttime="20201027 13:36:57.802"></status>
</kw>
<msg timestamp="20201027 13:37:41.586" level="INFO">${output} = 2020-10-27 13:36:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 13:36:59 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 13:37:41.586" starttime="20201027 13:36:57.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 13:37:41.587" starttime="20201027 13:37:41.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 13:37:41.587" starttime="20201027 13:37:41.587"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 13:37:41.587" critical="yes" starttime="20201027 13:36:57.772"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 13:37:41.588" starttime="20201027 13:36:18.912"></status>
</suite>
<status status="PASS" elapsedtime="194885" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:40:14.286" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:40:18.666" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 13:40:18.666" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 13:40:18.666" starttime="20201027 13:40:14.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:40:18.667" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 13:40:18.667" starttime="20201027 13:40:18.666"></status>
</kw>
<msg timestamp="20201027 13:40:18.667" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 13:40:18.667" starttime="20201027 13:40:14.269"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:40:18.673" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:40:21.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:40:21.963" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:40:21.963" starttime="20201027 13:40:18.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:40:21.964" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:40:21.964" starttime="20201027 13:40:21.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:40:21.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:40:21.965" starttime="20201027 13:40:21.964"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:21.965" starttime="20201027 13:40:18.670"></status>
</kw>
<msg timestamp="20201027 13:40:21.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:40:21.965" starttime="20201027 13:40:18.669"></status>
</kw>
<msg timestamp="20201027 13:40:21.966" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201027 13:40:21.966" starttime="20201027 13:40:18.668"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201027 13:40:21.967" starttime="20201027 13:40:21.966"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:21.967" starttime="20201027 13:40:18.668"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:21.967" starttime="20201027 13:40:18.668"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:40:21.973" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:40:25.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:40:25.410" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:40:25.410" starttime="20201027 13:40:21.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:40:25.411" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:40:25.411" starttime="20201027 13:40:25.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:40:25.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:40:25.412" starttime="20201027 13:40:25.411"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:25.412" starttime="20201027 13:40:21.969"></status>
</kw>
<msg timestamp="20201027 13:40:25.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:40:25.413" starttime="20201027 13:40:21.969"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:25.413" starttime="20201027 13:40:21.968"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:25.413" starttime="20201027 13:40:21.968"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:25.413" starttime="20201027 13:40:21.967"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201027 13:40:25.414" starttime="20201027 13:40:25.413"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:40:25.418" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:40:28.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:40:28.966" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T13:40:25.058Z",
  "modificat...</msg>
<status status="PASS" endtime="20201027 13:40:28.967" starttime="20201027 13:40:25.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:40:28.968" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T13:40:25.058Z",
  "modificationTime" : "2020-10-27T13:40:25.058Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 13:40:28.968" starttime="20201027 13:40:28.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:40:28.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:40:28.969" starttime="20201027 13:40:28.968"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:28.969" starttime="20201027 13:40:25.415"></status>
</kw>
<msg timestamp="20201027 13:40:28.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:40:28.969" starttime="20201027 13:40:25.415"></status>
</kw>
<msg timestamp="20201027 13:40:28.970" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T13:40:25.058Z",
  "modificat...</msg>
<status status="PASS" endtime="20201027 13:40:28.970" starttime="20201027 13:40:25.414"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201027 13:40:28.971" starttime="20201027 13:40:28.970"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:40:28.975" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:40:28.975" starttime="20201027 13:40:28.974"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:40:28.975" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:40:28.975" starttime="20201027 13:40:28.975"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:28.976" starttime="20201027 13:40:28.973"></status>
</kw>
<msg timestamp="20201027 13:40:28.976" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:40:28.976" starttime="20201027 13:40:28.973"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:28.976" starttime="20201027 13:40:28.972"></status>
</kw>
<msg timestamp="20201027 13:40:28.976" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 13:40:28.976" starttime="20201027 13:40:28.971"></status>
</kw>
<msg timestamp="20201027 13:40:28.976" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 13:40:28.976" starttime="20201027 13:40:28.971"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:40:28.981" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:40:32.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:40:32.342" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:40:32.343" starttime="20201027 13:40:28.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:40:32.344" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:40:32.344" starttime="20201027 13:40:32.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:40:32.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:40:32.345" starttime="20201027 13:40:32.344"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:32.345" starttime="20201027 13:40:28.977"></status>
</kw>
<msg timestamp="20201027 13:40:32.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:40:32.345" starttime="20201027 13:40:28.977"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:32.345" starttime="20201027 13:40:28.977"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:40:32.350" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:40:41.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:40:41.791" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:40:41.791" starttime="20201027 13:40:32.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:40:41.793" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:40:41.793" starttime="20201027 13:40:41.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:40:41.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:40:41.793" starttime="20201027 13:40:41.793"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:41.794" starttime="20201027 13:40:32.347"></status>
</kw>
<msg timestamp="20201027 13:40:41.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:40:41.794" starttime="20201027 13:40:32.346"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:41.794" starttime="20201027 13:40:32.345"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:40:41.798" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:40:47.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:40:47.048" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:40:47.048" starttime="20201027 13:40:41.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:40:47.049" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:40:47.049" starttime="20201027 13:40:47.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:40:47.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:40:47.049" starttime="20201027 13:40:47.049"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:47.050" starttime="20201027 13:40:41.795"></status>
</kw>
<msg timestamp="20201027 13:40:47.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:40:47.050" starttime="20201027 13:40:41.795"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:47.050" starttime="20201027 13:40:41.794"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:40:47.054" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:40:52.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:40:52.305" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:40:52.306" starttime="20201027 13:40:47.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:40:52.307" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:40:52.307" starttime="20201027 13:40:52.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:40:52.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:40:52.308" starttime="20201027 13:40:52.307"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:52.308" starttime="20201027 13:40:47.051"></status>
</kw>
<msg timestamp="20201027 13:40:52.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:40:52.308" starttime="20201027 13:40:47.051"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:52.308" starttime="20201027 13:40:47.050"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 13:40:52.309" critical="yes" starttime="20201027 13:40:14.268"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:40:52.314" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:40:52.315" starttime="20201027 13:40:52.314"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:40:52.315" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:40:52.315" starttime="20201027 13:40:52.315"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:52.315" starttime="20201027 13:40:52.313"></status>
</kw>
<msg timestamp="20201027 13:40:52.316" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:40:52.316" starttime="20201027 13:40:52.313"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:52.316" starttime="20201027 13:40:52.312"></status>
</kw>
<msg timestamp="20201027 13:40:52.316" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 13:40:52.316" starttime="20201027 13:40:52.311"></status>
</kw>
<msg timestamp="20201027 13:40:52.316" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 13:40:52.316" starttime="20201027 13:40:52.310"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:40:52.321" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:40:55.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:40:55.364" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:40:55.364" starttime="20201027 13:40:52.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:40:55.365" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:40:55.365" starttime="20201027 13:40:55.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:40:55.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:40:55.366" starttime="20201027 13:40:55.365"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:55.366" starttime="20201027 13:40:52.317"></status>
</kw>
<msg timestamp="20201027 13:40:55.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:40:55.367" starttime="20201027 13:40:52.317"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:55.367" starttime="20201027 13:40:52.316"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:40:55.372" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:40:58.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:40:58.494" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:40:58.494" starttime="20201027 13:40:55.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:40:58.495" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:40:58.495" starttime="20201027 13:40:58.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:40:58.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:40:58.496" starttime="20201027 13:40:58.496"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:58.497" starttime="20201027 13:40:55.368"></status>
</kw>
<msg timestamp="20201027 13:40:58.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:40:58.497" starttime="20201027 13:40:55.368"></status>
</kw>
<status status="PASS" endtime="20201027 13:40:58.497" starttime="20201027 13:40:55.367"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 13:40:58.497" critical="yes" starttime="20201027 13:40:52.309"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201027 13:40:58.499" starttime="20201027 13:40:14.202"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 13:42:36.551" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 13:42:36.551" starttime="20201027 13:42:36.551"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:42:36.552" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 13:42:36.552" starttime="20201027 13:42:36.551"></status>
</kw>
<status status="PASS" endtime="20201027 13:42:36.552" starttime="20201027 13:42:36.550"></status>
</kw>
<msg timestamp="20201027 13:42:36.552" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 13:42:36.552" starttime="20201027 13:42:36.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 13:42:36.553" starttime="20201027 13:42:36.552"></status>
</kw>
<msg timestamp="20201027 13:42:36.553" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 13:42:36.553" starttime="20201027 13:42:36.552"></status>
</kw>
<status status="PASS" endtime="20201027 13:42:36.553" starttime="20201027 13:42:36.549"></status>
</kw>
<msg timestamp="20201027 13:42:36.553" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 13:42:36.553" starttime="20201027 13:42:36.549"></status>
</kw>
<msg timestamp="20201027 13:42:36.554" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 13:42:36.554" starttime="20201027 13:42:36.547"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 13:42:36.554" level="INFO">${random} = 13462</msg>
<status status="PASS" endtime="20201027 13:42:36.554" starttime="20201027 13:42:36.554"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:42:36.559" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-13462 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:42:40.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:42:40.009" level="INFO">${output} = 2020-10-27 13:42:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 13:42:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201027 13:42:40.009" starttime="20201027 13:42:36.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:42:40.010" level="INFO">2020-10-27 13:42:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 13:42:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 13:42:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 13:42:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:42:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A6C94DC465CB-&gt;591f182d-75f6-4f60-b78c-ed8ee8a04e8a
2020-10-27 13:42:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201027 13:42:40.011" starttime="20201027 13:42:40.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:42:40.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:42:40.011" starttime="20201027 13:42:40.011"></status>
</kw>
<status status="PASS" endtime="20201027 13:42:40.011" starttime="20201027 13:42:36.555"></status>
</kw>
<msg timestamp="20201027 13:42:40.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:42:40.012" starttime="20201027 13:42:36.555"></status>
</kw>
<msg timestamp="20201027 13:42:40.012" level="INFO">${result} = 2020-10-27 13:42:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 13:42:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201027 13:42:40.012" starttime="20201027 13:42:36.554"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:42:40.017" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:42:41.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:42:41.954" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:40 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 13:41 ofs://om/volume1/bucket1/ozone-02480
-rw-...</msg>
<status status="PASS" endtime="20201027 13:42:41.954" starttime="20201027 13:42:40.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:42:41.955" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:40 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 13:41 ofs://om/volume1/bucket1/ozone-02480
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 13:42 ofs://om/volume1/bucket1/ozone-13462
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:40 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:42 ofs://om/volume1/bucket1/wordcount-90.txt</msg>
<status status="PASS" endtime="20201027 13:42:41.955" starttime="20201027 13:42:41.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:42:41.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:42:41.956" starttime="20201027 13:42:41.956"></status>
</kw>
<status status="PASS" endtime="20201027 13:42:41.957" starttime="20201027 13:42:40.013"></status>
</kw>
<msg timestamp="20201027 13:42:41.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:42:41.957" starttime="20201027 13:42:40.012"></status>
</kw>
<msg timestamp="20201027 13:42:41.957" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:40 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 13:41 ofs://om/volume1/bucket1/ozone-02480
-rw-...</msg>
<status status="PASS" endtime="20201027 13:42:41.957" starttime="20201027 13:42:40.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 13:42:41.958" starttime="20201027 13:42:41.957"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 13:42:41.958" critical="yes" starttime="20201027 13:42:36.547"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 13:42:41.959" starttime="20201027 13:42:36.492"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:41:03.250" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:41:03.250" starttime="20201027 13:41:03.250"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:41:03.251" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:41:03.251" starttime="20201027 13:41:03.250"></status>
</kw>
<status status="PASS" endtime="20201027 13:41:03.251" starttime="20201027 13:41:03.249"></status>
</kw>
<msg timestamp="20201027 13:41:03.251" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:41:03.251" starttime="20201027 13:41:03.248"></status>
</kw>
<status status="PASS" endtime="20201027 13:41:03.251" starttime="20201027 13:41:03.248"></status>
</kw>
<msg timestamp="20201027 13:41:03.251" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 13:41:03.251" starttime="20201027 13:41:03.247"></status>
</kw>
<msg timestamp="20201027 13:41:03.252" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 13:41:03.252" starttime="20201027 13:41:03.246"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 13:41:03.252" level="INFO">${random} = 02480</msg>
<status status="PASS" endtime="20201027 13:41:03.252" starttime="20201027 13:41:03.252"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:41:03.258" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-02480 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:41:07.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:41:07.018" level="INFO">${output} = 2020-10-27 13:41:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 13:41:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201027 13:41:07.018" starttime="20201027 13:41:03.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:41:07.020" level="INFO">2020-10-27 13:41:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 13:41:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 13:41:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 13:41:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:41:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E6EA93385A1F-&gt;591f182d-75f6-4f60-b78c-ed8ee8a04e8a
2020-10-27 13:41:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201027 13:41:07.020" starttime="20201027 13:41:07.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:41:07.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:41:07.021" starttime="20201027 13:41:07.020"></status>
</kw>
<status status="PASS" endtime="20201027 13:41:07.021" starttime="20201027 13:41:03.253"></status>
</kw>
<msg timestamp="20201027 13:41:07.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:41:07.021" starttime="20201027 13:41:03.253"></status>
</kw>
<msg timestamp="20201027 13:41:07.021" level="INFO">${result} = 2020-10-27 13:41:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 13:41:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201027 13:41:07.021" starttime="20201027 13:41:03.252"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:41:07.025" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:41:08.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:41:08.897" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:40 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 13:41 o3fs://bucket1.volume1.om/ozone-02480
dr...</msg>
<status status="PASS" endtime="20201027 13:41:08.897" starttime="20201027 13:41:07.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:41:08.898" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:40 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 13:41 o3fs://bucket1.volume1.om/ozone-02480
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:40 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 13:41:08.898" starttime="20201027 13:41:08.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:41:08.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:41:08.899" starttime="20201027 13:41:08.898"></status>
</kw>
<status status="PASS" endtime="20201027 13:41:08.899" starttime="20201027 13:41:07.022"></status>
</kw>
<msg timestamp="20201027 13:41:08.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:41:08.899" starttime="20201027 13:41:07.022"></status>
</kw>
<msg timestamp="20201027 13:41:08.899" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:40 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 13:41 o3fs://bucket1.volume1.om/ozone-02480
dr...</msg>
<status status="PASS" endtime="20201027 13:41:08.900" starttime="20201027 13:41:07.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 13:41:08.900" starttime="20201027 13:41:08.900"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 13:41:08.900" critical="yes" starttime="20201027 13:41:03.245"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 13:41:08.901" starttime="20201027 13:41:03.186"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:42:46.583" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:42:46.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:42:46.589" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 13:42:46.589" starttime="20201027 13:42:46.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:42:46.590" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 13:42:46.590" starttime="20201027 13:42:46.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:42:46.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:42:46.591" starttime="20201027 13:42:46.591"></status>
</kw>
<status status="PASS" endtime="20201027 13:42:46.591" starttime="20201027 13:42:46.577"></status>
</kw>
<msg timestamp="20201027 13:42:46.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:42:46.591" starttime="20201027 13:42:46.577"></status>
</kw>
<msg timestamp="20201027 13:42:46.592" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 13:42:46.592" starttime="20201027 13:42:46.576"></status>
</kw>
<msg timestamp="20201027 13:42:46.592" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 13:42:46.592" starttime="20201027 13:42:46.576"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 13:42:46.596" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 13:42:46.596" starttime="20201027 13:42:46.595"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:42:46.596" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 13:42:46.596" starttime="20201027 13:42:46.596"></status>
</kw>
<status status="PASS" endtime="20201027 13:42:46.597" starttime="20201027 13:42:46.595"></status>
</kw>
<msg timestamp="20201027 13:42:46.597" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 13:42:46.597" starttime="20201027 13:42:46.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 13:42:46.598" starttime="20201027 13:42:46.597"></status>
</kw>
<msg timestamp="20201027 13:42:46.598" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 13:42:46.598" starttime="20201027 13:42:46.597"></status>
</kw>
<status status="PASS" endtime="20201027 13:42:46.598" starttime="20201027 13:42:46.593"></status>
</kw>
<msg timestamp="20201027 13:42:46.598" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 13:42:46.598" starttime="20201027 13:42:46.593"></status>
</kw>
<msg timestamp="20201027 13:42:46.599" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 13:42:46.599" starttime="20201027 13:42:46.592"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:42:46.602" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:43:25.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:43:25.067" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 13:42:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 13:42:48 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201027 13:43:25.067" starttime="20201027 13:42:46.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:43:25.068" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 13:42:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 13:42:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 13:42:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 13:42:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:42:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-92FD3F77007E-&gt;591f182d-75f6-4f60-b78c-ed8ee8a04e8a
2020-10-27 13:42:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 13:42:49 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-27 13:42:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 13:42:50 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 13:42:50 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 13:42:50 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603805991229_0003
2020-10-27 13:42:50 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 13:42:50 INFO  Configuration:2795 - resource-types.xml not found
2020-10-27 13:42:50 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-27 13:42:51 INFO  YarnClientImpl:329 - Submitted application application_1603805991229_0003
2020-10-27 13:42:51 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603805991229_0003/
2020-10-27 13:42:51 INFO  Job:1619 - Running job: job_1603805991229_0003
2020-10-27 13:42:58 INFO  Job:1640 - Job job_1603805991229_0003 running in uber mode : false
2020-10-27 13:42:58 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 13:43:05 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 13:43:11 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 13:43:17 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 13:43:21 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 13:43:24 INFO  Job:1658 - Job job_1603805991229_0003 completed successfully
2020-10-27 13:43:24 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061445
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40524
		Total time spent by all reduces in occupied slots (ms)=14672
		Total time spent by all map tasks (ms)=10131
		Total time spent by all reduce tasks (ms)=3668
		Total vcore-milliseconds taken by all map tasks=10131
		Total vcore-milliseconds taken by all reduce tasks=3668
		Total megabyte-milliseconds taken by all map tasks=41496576
		Total megabyte-milliseconds taken by all reduce tasks=15024128
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=548
		CPU time spent (ms)=7480
		Physical memory (bytes) snapshot=1488711680
		Virtual memory (bytes) snapshot=16083361792
		Total committed heap usage (bytes)=1705508864
		Peak Map Physical memory (bytes)=374239232
		Peak Map Virtual memory (bytes)=4016766976
		Peak Reduce Physical memory (bytes)=374476800
		Peak Reduce Virtual memory (bytes)=4034703360
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.766 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201027 13:43:25.068" starttime="20201027 13:43:25.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:43:25.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:43:25.069" starttime="20201027 13:43:25.069"></status>
</kw>
<status status="PASS" endtime="20201027 13:43:25.069" starttime="20201027 13:42:46.600"></status>
</kw>
<msg timestamp="20201027 13:43:25.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:43:25.070" starttime="20201027 13:42:46.599"></status>
</kw>
<msg timestamp="20201027 13:43:25.070" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 13:42:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 13:42:48 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201027 13:43:25.070" starttime="20201027 13:42:46.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 13:43:25.071" starttime="20201027 13:43:25.070"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 13:43:25.071" critical="yes" starttime="20201027 13:42:46.576"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:43:25.076" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:43:25.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:43:25.083" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 13:43:25.083" starttime="20201027 13:43:25.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:43:25.084" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 13:43:25.084" starttime="20201027 13:43:25.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:43:25.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:43:25.085" starttime="20201027 13:43:25.084"></status>
</kw>
<status status="PASS" endtime="20201027 13:43:25.085" starttime="20201027 13:43:25.074"></status>
</kw>
<msg timestamp="20201027 13:43:25.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:43:25.085" starttime="20201027 13:43:25.073"></status>
</kw>
<msg timestamp="20201027 13:43:25.085" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 13:43:25.085" starttime="20201027 13:43:25.073"></status>
</kw>
<msg timestamp="20201027 13:43:25.086" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 13:43:25.086" starttime="20201027 13:43:25.072"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 13:43:25.086" level="INFO">${random} = 67</msg>
<status status="PASS" endtime="20201027 13:43:25.086" starttime="20201027 13:43:25.086"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 13:43:25.090" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 13:43:25.090" starttime="20201027 13:43:25.089"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:43:25.090" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 13:43:25.090" starttime="20201027 13:43:25.090"></status>
</kw>
<status status="PASS" endtime="20201027 13:43:25.091" starttime="20201027 13:43:25.089"></status>
</kw>
<msg timestamp="20201027 13:43:25.091" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 13:43:25.091" starttime="20201027 13:43:25.089"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 13:43:25.092" starttime="20201027 13:43:25.091"></status>
</kw>
<msg timestamp="20201027 13:43:25.092" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 13:43:25.092" starttime="20201027 13:43:25.091"></status>
</kw>
<status status="PASS" endtime="20201027 13:43:25.092" starttime="20201027 13:43:25.088"></status>
</kw>
<msg timestamp="20201027 13:43:25.092" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 13:43:25.092" starttime="20201027 13:43:25.087"></status>
</kw>
<msg timestamp="20201027 13:43:25.092" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 13:43:25.092" starttime="20201027 13:43:25.086"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 13:43:25.096" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 13:43:25.096" starttime="20201027 13:43:25.095"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:43:25.096" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 13:43:25.096" starttime="20201027 13:43:25.096"></status>
</kw>
<status status="PASS" endtime="20201027 13:43:25.097" starttime="20201027 13:43:25.095"></status>
</kw>
<msg timestamp="20201027 13:43:25.097" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 13:43:25.097" starttime="20201027 13:43:25.095"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:43:25.098" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201027 13:43:25.099" starttime="20201027 13:43:25.098"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:43:25.099" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201027 13:43:25.099" starttime="20201027 13:43:25.099"></status>
</kw>
<status status="PASS" endtime="20201027 13:43:25.099" starttime="20201027 13:43:25.097"></status>
</kw>
<msg timestamp="20201027 13:43:25.099" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201027 13:43:25.100" starttime="20201027 13:43:25.097"></status>
</kw>
<status status="PASS" endtime="20201027 13:43:25.100" starttime="20201027 13:43:25.094"></status>
</kw>
<msg timestamp="20201027 13:43:25.100" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 13:43:25.100" starttime="20201027 13:43:25.093"></status>
</kw>
<msg timestamp="20201027 13:43:25.100" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 13:43:25.100" starttime="20201027 13:43:25.093"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 13:43:25.103" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 13:43:25.104" starttime="20201027 13:43:25.103"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:43:25.104" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 13:43:25.104" starttime="20201027 13:43:25.104"></status>
</kw>
<status status="PASS" endtime="20201027 13:43:25.104" starttime="20201027 13:43:25.102"></status>
</kw>
<msg timestamp="20201027 13:43:25.104" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 13:43:25.105" starttime="20201027 13:43:25.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:43:25.106" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201027 13:43:25.106" starttime="20201027 13:43:25.106"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:43:25.107" level="INFO">${result} = /wordcount-67.txt</msg>
<status status="PASS" endtime="20201027 13:43:25.107" starttime="20201027 13:43:25.106"></status>
</kw>
<status status="PASS" endtime="20201027 13:43:25.107" starttime="20201027 13:43:25.105"></status>
</kw>
<msg timestamp="20201027 13:43:25.107" level="INFO">${path_with_leading} = /wordcount-67.txt</msg>
<status status="PASS" endtime="20201027 13:43:25.107" starttime="20201027 13:43:25.105"></status>
</kw>
<status status="PASS" endtime="20201027 13:43:25.107" starttime="20201027 13:43:25.101"></status>
</kw>
<msg timestamp="20201027 13:43:25.107" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-67.txt</msg>
<status status="PASS" endtime="20201027 13:43:25.107" starttime="20201027 13:43:25.101"></status>
</kw>
<msg timestamp="20201027 13:43:25.107" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-67.txt</msg>
<status status="PASS" endtime="20201027 13:43:25.108" starttime="20201027 13:43:25.100"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:43:25.112" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-67.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:44:03.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:44:03.408" level="INFO">${output} = 2020-10-27 13:43:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-27 13:43:27 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201027 13:44:03.409" starttime="20201027 13:43:25.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:44:03.410" level="INFO">2020-10-27 13:43:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-27 13:43:27 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 13:43:27 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 13:43:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 13:43:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 13:43:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:43:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9165ED03E575-&gt;591f182d-75f6-4f60-b78c-ed8ee8a04e8a
2020-10-27 13:43:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 13:43:28 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 13:43:28 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 13:43:29 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603805991229_0004
2020-10-27 13:43:29 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 13:43:29 INFO  Configuration:2795 - resource-types.xml not found
2020-10-27 13:43:29 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-27 13:43:29 INFO  YarnClientImpl:329 - Submitted application application_1603805991229_0004
2020-10-27 13:43:29 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603805991229_0004/
2020-10-27 13:43:29 INFO  Job:1619 - Running job: job_1603805991229_0004
2020-10-27 13:43:37 INFO  Job:1640 - Job job_1603805991229_0004 running in uber mode : false
2020-10-27 13:43:37 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 13:43:43 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 13:43:49 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 13:43:54 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 13:43:59 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 13:44:02 INFO  Job:1658 - Job job_1603805991229_0004 completed successfully
2020-10-27 13:44:03 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39844
		Total time spent by all reduces in occupied slots (ms)=14640
		Total time spent by all map tasks (ms)=9961
		Total time spent by all reduce tasks (ms)=3660
		Total vcore-milliseconds taken by all map tasks=9961
		Total vcore-milliseconds taken by all reduce tasks=3660
		Total megabyte-milliseconds taken by all map tasks=40800256
		Total megabyte-milliseconds taken by all reduce tasks=14991360
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=589
		CPU time spent (ms)=7720
		Physical memory (bytes) snapshot=1464778752
		Virtual memory (bytes) snapshot=16077623296
		Total committed heap usage (bytes)=1715470336
		Peak Map Physical memory (bytes)=368463872
		Peak Map Virtual memory (bytes)=4018688000
		Peak Reduce Physical memory (bytes)=368226304
		Peak Reduce Virtual memory (bytes)=4032954368
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201027 13:44:03.410" starttime="20201027 13:44:03.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:44:03.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:44:03.411" starttime="20201027 13:44:03.410"></status>
</kw>
<status status="PASS" endtime="20201027 13:44:03.411" starttime="20201027 13:43:25.109"></status>
</kw>
<msg timestamp="20201027 13:44:03.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:44:03.411" starttime="20201027 13:43:25.108"></status>
</kw>
<msg timestamp="20201027 13:44:03.412" level="INFO">${output} = 2020-10-27 13:43:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-27 13:43:27 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201027 13:44:03.412" starttime="20201027 13:43:25.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 13:44:03.413" starttime="20201027 13:44:03.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 13:44:03.413" starttime="20201027 13:44:03.413"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 13:44:03.413" critical="yes" starttime="20201027 13:43:25.072"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 13:44:03.415" starttime="20201027 13:42:46.518"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:41:13.638" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:41:13.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:41:13.643" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 13:41:13.643" starttime="20201027 13:41:13.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:41:13.644" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 13:41:13.644" starttime="20201027 13:41:13.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:41:13.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:41:13.645" starttime="20201027 13:41:13.644"></status>
</kw>
<status status="PASS" endtime="20201027 13:41:13.645" starttime="20201027 13:41:13.633"></status>
</kw>
<msg timestamp="20201027 13:41:13.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:41:13.646" starttime="20201027 13:41:13.633"></status>
</kw>
<msg timestamp="20201027 13:41:13.646" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 13:41:13.646" starttime="20201027 13:41:13.632"></status>
</kw>
<msg timestamp="20201027 13:41:13.646" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 13:41:13.646" starttime="20201027 13:41:13.632"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:41:13.650" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:41:13.650" starttime="20201027 13:41:13.649"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:41:13.651" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:41:13.651" starttime="20201027 13:41:13.650"></status>
</kw>
<status status="PASS" endtime="20201027 13:41:13.651" starttime="20201027 13:41:13.649"></status>
</kw>
<msg timestamp="20201027 13:41:13.651" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:41:13.651" starttime="20201027 13:41:13.648"></status>
</kw>
<status status="PASS" endtime="20201027 13:41:13.651" starttime="20201027 13:41:13.648"></status>
</kw>
<msg timestamp="20201027 13:41:13.651" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 13:41:13.651" starttime="20201027 13:41:13.647"></status>
</kw>
<msg timestamp="20201027 13:41:13.651" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 13:41:13.651" starttime="20201027 13:41:13.646"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:41:13.654" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:41:55.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:41:55.196" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 13:41:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 13:41:15 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201027 13:41:55.196" starttime="20201027 13:41:13.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:41:55.197" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 13:41:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 13:41:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 13:41:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 13:41:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:41:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-91D3612E1FF6-&gt;591f182d-75f6-4f60-b78c-ed8ee8a04e8a
2020-10-27 13:41:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 13:41:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-27 13:41:20 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 13:41:20 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 13:41:20 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603805991229_0001
2020-10-27 13:41:20 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 13:41:20 INFO  Configuration:2795 - resource-types.xml not found
2020-10-27 13:41:20 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-27 13:41:21 INFO  YarnClientImpl:329 - Submitted application application_1603805991229_0001
2020-10-27 13:41:21 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603805991229_0001/
2020-10-27 13:41:21 INFO  Job:1619 - Running job: job_1603805991229_0001
2020-10-27 13:41:31 INFO  Job:1640 - Job job_1603805991229_0001 running in uber mode : false
2020-10-27 13:41:31 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 13:41:38 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 13:41:43 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 13:41:48 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 13:41:53 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 13:41:54 INFO  Job:1658 - Job job_1603805991229_0001 completed successfully
2020-10-27 13:41:54 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40084
		Total time spent by all reduces in occupied slots (ms)=15700
		Total time spent by all map tasks (ms)=10021
		Total time spent by all reduce tasks (ms)=3925
		Total vcore-milliseconds taken by all map tasks=10021
		Total vcore-milliseconds taken by all reduce tasks=3925
		Total megabyte-milliseconds taken by all map tasks=41046016
		Total megabyte-milliseconds taken by all reduce tasks=16076800
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=576
		CPU time spent (ms)=7250
		Physical memory (bytes) snapshot=1490735104
		Virtual memory (bytes) snapshot=16086843392
		Total committed heap usage (bytes)=1729101824
		Peak Map Physical memory (bytes)=376156160
		Peak Map Virtual memory (bytes)=4018458624
		Peak Reduce Physical memory (bytes)=376975360
		Peak Reduce Virtual memory (bytes)=4037562368
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.647 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201027 13:41:55.197" starttime="20201027 13:41:55.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:41:55.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:41:55.198" starttime="20201027 13:41:55.198"></status>
</kw>
<status status="PASS" endtime="20201027 13:41:55.198" starttime="20201027 13:41:13.652"></status>
</kw>
<msg timestamp="20201027 13:41:55.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:41:55.199" starttime="20201027 13:41:13.652"></status>
</kw>
<msg timestamp="20201027 13:41:55.199" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 13:41:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 13:41:15 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201027 13:41:55.199" starttime="20201027 13:41:13.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 13:41:55.200" starttime="20201027 13:41:55.199"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 13:41:55.200" critical="yes" starttime="20201027 13:41:13.631"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:41:55.205" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:41:55.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:41:55.211" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 13:41:55.211" starttime="20201027 13:41:55.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:41:55.212" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 13:41:55.212" starttime="20201027 13:41:55.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:41:55.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:41:55.213" starttime="20201027 13:41:55.212"></status>
</kw>
<status status="PASS" endtime="20201027 13:41:55.213" starttime="20201027 13:41:55.202"></status>
</kw>
<msg timestamp="20201027 13:41:55.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:41:55.213" starttime="20201027 13:41:55.202"></status>
</kw>
<msg timestamp="20201027 13:41:55.213" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 13:41:55.213" starttime="20201027 13:41:55.202"></status>
</kw>
<msg timestamp="20201027 13:41:55.214" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 13:41:55.214" starttime="20201027 13:41:55.201"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 13:41:55.214" level="INFO">${random} = 90</msg>
<status status="PASS" endtime="20201027 13:41:55.214" starttime="20201027 13:41:55.214"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:41:55.218" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:41:55.218" starttime="20201027 13:41:55.217"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:41:55.219" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:41:55.219" starttime="20201027 13:41:55.218"></status>
</kw>
<status status="PASS" endtime="20201027 13:41:55.219" starttime="20201027 13:41:55.217"></status>
</kw>
<msg timestamp="20201027 13:41:55.219" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:41:55.219" starttime="20201027 13:41:55.216"></status>
</kw>
<status status="PASS" endtime="20201027 13:41:55.219" starttime="20201027 13:41:55.216"></status>
</kw>
<msg timestamp="20201027 13:41:55.220" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 13:41:55.220" starttime="20201027 13:41:55.215"></status>
</kw>
<msg timestamp="20201027 13:41:55.220" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 13:41:55.220" starttime="20201027 13:41:55.214"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:41:55.223" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:41:55.223" starttime="20201027 13:41:55.223"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:41:55.224" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:41:55.224" starttime="20201027 13:41:55.223"></status>
</kw>
<status status="PASS" endtime="20201027 13:41:55.224" starttime="20201027 13:41:55.222"></status>
</kw>
<msg timestamp="20201027 13:41:55.224" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:41:55.224" starttime="20201027 13:41:55.222"></status>
</kw>
<status status="PASS" endtime="20201027 13:41:55.224" starttime="20201027 13:41:55.221"></status>
</kw>
<msg timestamp="20201027 13:41:55.224" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 13:41:55.224" starttime="20201027 13:41:55.220"></status>
</kw>
<msg timestamp="20201027 13:41:55.224" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 13:41:55.224" starttime="20201027 13:41:55.220"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:41:55.227" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:41:55.227" starttime="20201027 13:41:55.227"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:41:55.228" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:41:55.228" starttime="20201027 13:41:55.227"></status>
</kw>
<status status="PASS" endtime="20201027 13:41:55.228" starttime="20201027 13:41:55.227"></status>
</kw>
<msg timestamp="20201027 13:41:55.228" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:41:55.228" starttime="20201027 13:41:55.226"></status>
</kw>
<status status="PASS" endtime="20201027 13:41:55.228" starttime="20201027 13:41:55.226"></status>
</kw>
<msg timestamp="20201027 13:41:55.228" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-90.txt</msg>
<status status="PASS" endtime="20201027 13:41:55.228" starttime="20201027 13:41:55.225"></status>
</kw>
<msg timestamp="20201027 13:41:55.229" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-90.txt</msg>
<status status="PASS" endtime="20201027 13:41:55.229" starttime="20201027 13:41:55.225"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:41:55.232" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-90.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:42:31.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:42:31.893" level="INFO">${output} = 2020-10-27 13:41:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-27 13:41:57 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201027 13:42:31.893" starttime="20201027 13:41:55.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:42:31.895" level="INFO">2020-10-27 13:41:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-27 13:41:57 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 13:41:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 13:41:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 13:41:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 13:41:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:41:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4ED7A4EEEB9B-&gt;591f182d-75f6-4f60-b78c-ed8ee8a04e8a
2020-10-27 13:41:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 13:41:59 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 13:41:59 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 13:41:59 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603805991229_0002
2020-10-27 13:41:59 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 13:41:59 INFO  Configuration:2795 - resource-types.xml not found
2020-10-27 13:41:59 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-27 13:41:59 INFO  YarnClientImpl:329 - Submitted application application_1603805991229_0002
2020-10-27 13:41:59 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603805991229_0002/
2020-10-27 13:41:59 INFO  Job:1619 - Running job: job_1603805991229_0002
2020-10-27 13:42:07 INFO  Job:1640 - Job job_1603805991229_0002 running in uber mode : false
2020-10-27 13:42:07 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 13:42:14 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 13:42:20 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 13:42:25 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 13:42:30 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 13:42:31 INFO  Job:1658 - Job job_1603805991229_0002 completed successfully
2020-10-27 13:42:31 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124185
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41204
		Total time spent by all reduces in occupied slots (ms)=15200
		Total time spent by all map tasks (ms)=10301
		Total time spent by all reduce tasks (ms)=3800
		Total vcore-milliseconds taken by all map tasks=10301
		Total vcore-milliseconds taken by all reduce tasks=3800
		Total megabyte-milliseconds taken by all map tasks=42192896
		Total megabyte-milliseconds taken by all reduce tasks=15564800
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=655
		CPU time spent (ms)=7830
		Physical memory (bytes) snapshot=1489883136
		Virtual memory (bytes) snapshot=16097640448
		Total committed heap usage (bytes)=1711276032
		Peak Map Physical memory (bytes)=379977728
		Peak Map Virtual memory (bytes)=4024832000
		Peak Reduce Physical memory (bytes)=374726656
		Peak Reduce Virtual memory (bytes)=4036681728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201027 13:42:31.895" starttime="20201027 13:42:31.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:42:31.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:42:31.896" starttime="20201027 13:42:31.895"></status>
</kw>
<status status="PASS" endtime="20201027 13:42:31.896" starttime="20201027 13:41:55.229"></status>
</kw>
<msg timestamp="20201027 13:42:31.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:42:31.896" starttime="20201027 13:41:55.229"></status>
</kw>
<msg timestamp="20201027 13:42:31.897" level="INFO">${output} = 2020-10-27 13:41:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-27 13:41:57 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201027 13:42:31.897" starttime="20201027 13:41:55.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 13:42:31.897" starttime="20201027 13:42:31.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 13:42:31.898" starttime="20201027 13:42:31.897"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 13:42:31.898" critical="yes" starttime="20201027 13:41:55.200"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 13:42:31.899" starttime="20201027 13:41:13.575"></status>
</suite>
<status status="PASS" elapsedtime="210700" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="593085" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
