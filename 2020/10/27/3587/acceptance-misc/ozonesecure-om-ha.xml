<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201027 14:10:16.116" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:05:32.261" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:05:46.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:05:46.214" level="INFO">${output} = 2020-10-27 14:05:34,602 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 14:05:34,789 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 14:05:46.214" starttime="20201027 14:05:32.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:05:46.215" level="INFO">2020-10-27 14:05:34,602 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 14:05:34,789 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-27 14:05:34,789 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-27 14:05:38,125 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-27 14:05:39,442 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-27 14:05:39,443 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-10-27 14:05:39,444 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-10-27 14:05:39,444 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-10-27 14:05:39,445 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-27 14:05:39,445 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-27 14:05:39,445 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-10-27 14:05:39,448 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-27 14:05:39,454 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 14:05:39,522 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-17356, with testuser/scm@EXAMPLE.COM as owner.
2020-10-27 14:05:40,215 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-17356/bucket-0-75124, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 14:05:40,479 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 14:05:41,481 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 14:05:42,482 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 14:05:43,483 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 14:05:43,496 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-27 14:05:44,483 [Thread-9] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,686
Average Time spent in bucket creation: 00:00:00,275
Average Time spent in key creation: 00:00:01,767
Average Time spent in key write: 00:00:01,485
Total bytes written: 10240
Total Execution time: 00:00:10,858
***************************************************</msg>
<status status="PASS" endtime="20201027 14:05:46.216" starttime="20201027 14:05:46.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:05:46.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:05:46.216" starttime="20201027 14:05:46.216"></status>
</kw>
<status status="PASS" endtime="20201027 14:05:46.217" starttime="20201027 14:05:32.255"></status>
</kw>
<msg timestamp="20201027 14:05:46.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:05:46.217" starttime="20201027 14:05:32.255"></status>
</kw>
<msg timestamp="20201027 14:05:46.217" level="INFO">${result} = 2020-10-27 14:05:34,602 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 14:05:34,789 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 14:05:46.217" starttime="20201027 14:05:32.254"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201027 14:05:46.219" starttime="20201027 14:05:46.218"></status>
</kw>
<status status="PASS" endtime="20201027 14:05:46.219" starttime="20201027 14:05:46.218"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 14:05:46.219" critical="yes" starttime="20201027 14:05:32.253"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:05:46.234" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:05:55.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:05:55.319" level="INFO">${output} = 2020-10-27 14:05:48,258 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 14:05:48,524 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 14:05:55.319" starttime="20201027 14:05:46.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:05:55.322" level="INFO">2020-10-27 14:05:48,258 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 14:05:48,524 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-27 14:05:48,524 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-27 14:05:48,739 [main] INFO freon.BaseFreonGenerator: Executing test with prefix v3hflsawx9
2020-10-27 14:05:48,770 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-27 14:05:49,775 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 14:05:50,000 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-27 14:05:50,576 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-10-27 14:05:50,657 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 14:05:50,775 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 14:05:51,487 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-27 14:05:51,776 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 14:05:51,873 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 14:05:51,873 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-601D80207524-&gt;74660c0f-37cb-401e-996e-77655db26a53
2020-10-27 14:05:51,875 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 14:05:52,776 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 14:05:53,777 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 14:05:54,778 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-27 14:05:54,947 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3902.889912, max=3902.889912, mean=3902.889912, stddev=0.0, median=3902.889912, p75=3902.889912, p95=3902.889912, p98=3902.889912, p99=3902.889912, p999=3902.889912, mean_rate=0.23761366224286937, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-27 14:05:54,948 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-10-27 14:05:54,957 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-27 14:05:54,957 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201027 14:05:55.322" starttime="20201027 14:05:55.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:05:55.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:05:55.323" starttime="20201027 14:05:55.322"></status>
</kw>
<status status="PASS" endtime="20201027 14:05:55.323" starttime="20201027 14:05:46.222"></status>
</kw>
<msg timestamp="20201027 14:05:55.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:05:55.323" starttime="20201027 14:05:46.222"></status>
</kw>
<msg timestamp="20201027 14:05:55.324" level="INFO">${result} = 2020-10-27 14:05:48,258 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 14:05:48,524 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 14:05:55.324" starttime="20201027 14:05:46.221"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201027 14:05:55.325" starttime="20201027 14:05:55.324"></status>
</kw>
<status status="PASS" endtime="20201027 14:05:55.325" starttime="20201027 14:05:55.324"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 14:05:55.325" critical="yes" starttime="20201027 14:05:46.220"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:05:55.332" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:06:00.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:06:00.882" level="INFO">${output} = 2020-10-27 14:05:57,308 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 14:05:57,553 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 14:06:00.883" starttime="20201027 14:05:55.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:06:00.884" level="INFO">2020-10-27 14:05:57,308 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 14:05:57,553 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-27 14:05:57,553 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-27 14:05:57,712 [main] INFO freon.BaseFreonGenerator: Executing test with prefix putf4hk6nn
2020-10-27 14:05:57,725 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-27 14:05:58,730 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 14:05:58,921 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-27 14:05:59,560 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-27 14:05:59,731 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 14:06:00,732 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-27 14:06:00,861 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=307.957112, max=307.957112, mean=307.957112, stddev=0.0, median=307.957112, p75=307.957112, p95=307.957112, p98=307.957112, p99=307.957112, p999=307.957112, mean_rate=0.6927858861668823, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-27 14:06:00,863 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-27 14:06:00,863 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-27 14:06:00,863 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201027 14:06:00.884" starttime="20201027 14:06:00.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:06:00.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:06:00.885" starttime="20201027 14:06:00.884"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:00.885" starttime="20201027 14:05:55.328"></status>
</kw>
<msg timestamp="20201027 14:06:00.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:06:00.886" starttime="20201027 14:05:55.327"></status>
</kw>
<msg timestamp="20201027 14:06:00.886" level="INFO">${result} = 2020-10-27 14:05:57,308 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 14:05:57,553 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 14:06:00.886" starttime="20201027 14:05:55.327"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201027 14:06:00.888" starttime="20201027 14:06:00.887"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:00.888" starttime="20201027 14:06:00.887"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 14:06:00.888" critical="yes" starttime="20201027 14:05:55.326"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:06:00.893" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:06:06.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:06:06.088" level="INFO">${output} = 2020-10-27 14:06:02,658 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 14:06:02,921 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 14:06:06.088" starttime="20201027 14:06:00.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:06:06.089" level="INFO">2020-10-27 14:06:02,658 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 14:06:02,921 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-27 14:06:02,921 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-27 14:06:03,123 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qtsaxsvdhz
2020-10-27 14:06:03,135 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-27 14:06:04,147 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 14:06:04,358 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-27 14:06:04,846 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-27 14:06:05,148 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-27 14:06:05,884 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=126.222979, max=126.222979, mean=126.222979, stddev=0.0, median=126.222979, p75=126.222979, p95=126.222979, p98=126.222979, p99=126.222979, p999=126.222979, mean_rate=0.8896594114384144, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-27 14:06:05,887 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-27 14:06:05,887 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-27 14:06:05,887 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201027 14:06:06.089" starttime="20201027 14:06:06.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:06:06.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:06:06.090" starttime="20201027 14:06:06.090"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:06.091" starttime="20201027 14:06:00.891"></status>
</kw>
<msg timestamp="20201027 14:06:06.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:06:06.091" starttime="20201027 14:06:00.890"></status>
</kw>
<msg timestamp="20201027 14:06:06.091" level="INFO">${result} = 2020-10-27 14:06:02,658 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 14:06:02,921 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 14:06:06.091" starttime="20201027 14:06:00.889"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201027 14:06:06.093" starttime="20201027 14:06:06.092"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:06.093" starttime="20201027 14:06:06.092"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 14:06:06.093" critical="yes" starttime="20201027 14:06:00.889"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201027 14:06:06.095" starttime="20201027 14:05:32.217"></status>
</suite>
<status status="PASS" endtime="20201027 14:06:06.099" starttime="20201027 14:05:32.185"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:05:23.929" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:05:23.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:05:23.933" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:05:23.933" starttime="20201027 14:05:23.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:05:23.935" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:05:23.935" starttime="20201027 14:05:23.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:05:23.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:05:23.936" starttime="20201027 14:05:23.935"></status>
</kw>
<status status="PASS" endtime="20201027 14:05:23.936" starttime="20201027 14:05:23.913"></status>
</kw>
<msg timestamp="20201027 14:05:23.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:05:23.936" starttime="20201027 14:05:23.912"></status>
</kw>
<msg timestamp="20201027 14:05:23.936" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:05:23.936" starttime="20201027 14:05:23.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:05:23.942" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:05:23.942" starttime="20201027 14:05:23.937"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:05:23.954" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:05:23.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:05:23.982" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:05:23.982" starttime="20201027 14:05:23.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:05:23.983" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:05:23.983" starttime="20201027 14:05:23.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:05:23.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:05:23.984" starttime="20201027 14:05:23.983"></status>
</kw>
<status status="PASS" endtime="20201027 14:05:23.984" starttime="20201027 14:05:23.944"></status>
</kw>
<msg timestamp="20201027 14:05:23.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:05:23.984" starttime="20201027 14:05:23.944"></status>
</kw>
<status status="PASS" endtime="20201027 14:05:23.985" starttime="20201027 14:05:23.943"></status>
</kw>
<status status="PASS" endtime="20201027 14:05:23.985" starttime="20201027 14:05:23.942"></status>
</kw>
<status status="PASS" endtime="20201027 14:05:23.985" starttime="20201027 14:05:23.911"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 14:05:23.985" critical="yes" starttime="20201027 14:05:23.909"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201027 14:05:23.986" starttime="20201027 14:05:23.724"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 14:06:12.579" level="INFO">${random} = 61545</msg>
<status status="PASS" endtime="20201027 14:06:12.579" starttime="20201027 14:06:12.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201027 14:06:12.581" level="INFO">${source} = 61545-source</msg>
<status status="PASS" endtime="20201027 14:06:12.581" starttime="20201027 14:06:12.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201027 14:06:12.582" level="INFO">${target} = 61545-target</msg>
<status status="PASS" endtime="20201027 14:06:12.582" starttime="20201027 14:06:12.581"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:06:12.589" level="INFO">Running command 'ozone sh volume create 61545-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:06:16.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:06:16.924" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:06:16.924" starttime="20201027 14:06:12.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:06:16.925" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:06:16.925" starttime="20201027 14:06:16.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:06:16.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:06:16.926" starttime="20201027 14:06:16.925"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:16.926" starttime="20201027 14:06:12.583"></status>
</kw>
<msg timestamp="20201027 14:06:16.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:06:16.926" starttime="20201027 14:06:12.583"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:16.926" starttime="20201027 14:06:12.583"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:06:16.930" level="INFO">Running command 'ozone sh volume create 61545-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:06:21.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:06:21.371" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:06:21.371" starttime="20201027 14:06:16.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:06:21.372" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:06:21.372" starttime="20201027 14:06:21.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:06:21.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:06:21.373" starttime="20201027 14:06:21.372"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:21.373" starttime="20201027 14:06:16.927"></status>
</kw>
<msg timestamp="20201027 14:06:21.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:06:21.374" starttime="20201027 14:06:16.927"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:21.374" starttime="20201027 14:06:16.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:06:21.380" level="INFO">Running command 'ozone sh bucket create 61545-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:06:25.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:06:25.965" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:06:25.965" starttime="20201027 14:06:21.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:06:25.967" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:06:25.967" starttime="20201027 14:06:25.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:06:25.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:06:25.968" starttime="20201027 14:06:25.967"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:25.968" starttime="20201027 14:06:21.376"></status>
</kw>
<msg timestamp="20201027 14:06:25.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:06:25.969" starttime="20201027 14:06:21.375"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:25.969" starttime="20201027 14:06:21.375"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:06:25.976" level="INFO">Running command 'ozone sh key put 61545-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:06:34.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:06:34.771" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:06:34.771" starttime="20201027 14:06:25.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:06:34.772" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:06:34.772" starttime="20201027 14:06:34.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:06:34.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:06:34.773" starttime="20201027 14:06:34.772"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:34.773" starttime="20201027 14:06:25.970"></status>
</kw>
<msg timestamp="20201027 14:06:34.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:06:34.773" starttime="20201027 14:06:25.970"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:34.774" starttime="20201027 14:06:25.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:06:34.778" level="INFO">Running command 'ozone sh bucket create 61545-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:06:38.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:06:38.828" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:06:38.828" starttime="20201027 14:06:34.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:06:38.829" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:06:38.829" starttime="20201027 14:06:38.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:06:38.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:06:38.830" starttime="20201027 14:06:38.829"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:38.830" starttime="20201027 14:06:34.775"></status>
</kw>
<msg timestamp="20201027 14:06:38.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:06:38.831" starttime="20201027 14:06:34.774"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:38.831" starttime="20201027 14:06:34.774"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:06:38.836" level="INFO">Running command 'ozone sh bucket link 61545-source/readable-bucket 61545-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:06:43.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:06:43.130" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:06:43.131" starttime="20201027 14:06:38.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:06:43.132" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:06:43.132" starttime="20201027 14:06:43.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:06:43.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:06:43.133" starttime="20201027 14:06:43.132"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:43.133" starttime="20201027 14:06:38.832"></status>
</kw>
<msg timestamp="20201027 14:06:43.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:06:43.133" starttime="20201027 14:06:38.832"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:43.134" starttime="20201027 14:06:38.831"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:06:43.138" level="INFO">Running command 'ozone sh bucket link 61545-source/readable-bucket 61545-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:06:47.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:06:47.002" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:06:47.002" starttime="20201027 14:06:43.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:06:47.003" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:06:47.003" starttime="20201027 14:06:47.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:06:47.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:06:47.004" starttime="20201027 14:06:47.003"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:47.004" starttime="20201027 14:06:43.135"></status>
</kw>
<msg timestamp="20201027 14:06:47.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:06:47.004" starttime="20201027 14:06:43.135"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:47.004" starttime="20201027 14:06:43.134"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:06:47.009" level="INFO">Running command 'ozone sh bucket link 61545-source/unreadable-bucket 61545-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:06:51.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:06:51.081" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:06:51.081" starttime="20201027 14:06:47.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:06:51.083" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:06:51.083" starttime="20201027 14:06:51.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:06:51.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:06:51.083" starttime="20201027 14:06:51.083"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:51.084" starttime="20201027 14:06:47.006"></status>
</kw>
<msg timestamp="20201027 14:06:51.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:06:51.084" starttime="20201027 14:06:47.005"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:51.084" starttime="20201027 14:06:47.005"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:06:51.089" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 61545-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:06:55.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:06:55.177" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:06:55.177" starttime="20201027 14:06:51.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:06:55.178" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 14:06:55.178" starttime="20201027 14:06:55.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:06:55.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:06:55.179" starttime="20201027 14:06:55.178"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:55.179" starttime="20201027 14:06:51.085"></status>
</kw>
<msg timestamp="20201027 14:06:55.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:06:55.179" starttime="20201027 14:06:51.085"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:55.180" starttime="20201027 14:06:51.084"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:06:55.184" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 61545-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:06:59.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:06:59.021" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:06:59.021" starttime="20201027 14:06:55.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:06:59.022" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 14:06:59.022" starttime="20201027 14:06:59.022"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:06:59.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:06:59.023" starttime="20201027 14:06:59.023"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:59.024" starttime="20201027 14:06:55.181"></status>
</kw>
<msg timestamp="20201027 14:06:59.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:06:59.024" starttime="20201027 14:06:55.181"></status>
</kw>
<status status="PASS" endtime="20201027 14:06:59.024" starttime="20201027 14:06:55.180"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:06:59.028" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 61545-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:03.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:03.307" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:07:03.307" starttime="20201027 14:06:59.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:03.308" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 14:07:03.308" starttime="20201027 14:07:03.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:03.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:03.309" starttime="20201027 14:07:03.308"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:03.309" starttime="20201027 14:06:59.025"></status>
</kw>
<msg timestamp="20201027 14:07:03.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:03.309" starttime="20201027 14:06:59.025"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:03.310" starttime="20201027 14:06:59.025"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:03.313" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 61545-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:07.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:07.386" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:07:07.386" starttime="20201027 14:07:03.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:07.387" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 14:07:07.387" starttime="20201027 14:07:07.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:07.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:07.387" starttime="20201027 14:07:07.387"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:07.388" starttime="20201027 14:07:03.311"></status>
</kw>
<msg timestamp="20201027 14:07:07.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:07.388" starttime="20201027 14:07:03.310"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:07.388" starttime="20201027 14:07:03.310"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:07.392" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 61545-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:11.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:11.363" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:07:11.363" starttime="20201027 14:07:07.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:11.365" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 14:07:11.365" starttime="20201027 14:07:11.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:11.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:11.365" starttime="20201027 14:07:11.365"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:11.366" starttime="20201027 14:07:07.389"></status>
</kw>
<msg timestamp="20201027 14:07:11.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:11.366" starttime="20201027 14:07:07.389"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:11.366" starttime="20201027 14:07:07.388"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:11.366" starttime="20201027 14:06:21.375"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:11.366" starttime="20201027 14:06:21.374"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:11.367" starttime="20201027 14:06:12.578"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:11.375" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:11.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:11.376" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:07:11.376" starttime="20201027 14:07:11.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:11.377" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:07:11.377" starttime="20201027 14:07:11.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:11.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:11.378" starttime="20201027 14:07:11.377"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:11.379" starttime="20201027 14:07:11.370"></status>
</kw>
<msg timestamp="20201027 14:07:11.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:11.379" starttime="20201027 14:07:11.370"></status>
</kw>
<msg timestamp="20201027 14:07:11.379" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:07:11.379" starttime="20201027 14:07:11.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:07:11.381" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:07:11.381" starttime="20201027 14:07:11.379"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:11.386" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:11.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:11.407" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:07:11.407" starttime="20201027 14:07:11.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:11.408" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:07:11.409" starttime="20201027 14:07:11.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:11.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:11.409" starttime="20201027 14:07:11.409"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:11.410" starttime="20201027 14:07:11.383"></status>
</kw>
<msg timestamp="20201027 14:07:11.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:11.410" starttime="20201027 14:07:11.382"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:11.410" starttime="20201027 14:07:11.381"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:11.410" starttime="20201027 14:07:11.381"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:11.410" starttime="20201027 14:07:11.369"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:11.410" starttime="20201027 14:07:11.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:11.416" level="INFO">Running command 'ozone sh bucket link 61545-source/no-such-bucket 61545-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:15.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:15.879" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:07:15.879" starttime="20201027 14:07:11.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:15.880" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:07:15.881" starttime="20201027 14:07:15.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:15.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:15.881" starttime="20201027 14:07:15.881"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:15.882" starttime="20201027 14:07:11.412"></status>
</kw>
<msg timestamp="20201027 14:07:15.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:15.882" starttime="20201027 14:07:11.411"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:15.882" starttime="20201027 14:07:11.411"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:15.885" level="INFO">Running command 'ozone sh key list 61545-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:19.779" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 14:07:19.779" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:07:19.779" starttime="20201027 14:07:15.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:19.780" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201027 14:07:19.780" starttime="20201027 14:07:19.780"></status>
</kw>
<msg timestamp="20201027 14:07:19.781" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:07:19.781" starttime="20201027 14:07:15.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201027 14:07:19.782" starttime="20201027 14:07:19.781"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 14:07:19.782" critical="yes" starttime="20201027 14:07:11.367"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:19.788" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:19.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:19.792" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:07:19.792" starttime="20201027 14:07:19.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:19.793" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:07:19.793" starttime="20201027 14:07:19.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:19.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:19.794" starttime="20201027 14:07:19.793"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:19.794" starttime="20201027 14:07:19.786"></status>
</kw>
<msg timestamp="20201027 14:07:19.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:19.794" starttime="20201027 14:07:19.785"></status>
</kw>
<msg timestamp="20201027 14:07:19.794" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:07:19.795" starttime="20201027 14:07:19.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:07:19.795" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:07:19.795" starttime="20201027 14:07:19.795"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:19.802" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:19.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:19.821" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:07:19.821" starttime="20201027 14:07:19.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:19.822" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:07:19.823" starttime="20201027 14:07:19.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:19.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:19.823" starttime="20201027 14:07:19.823"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:19.824" starttime="20201027 14:07:19.797"></status>
</kw>
<msg timestamp="20201027 14:07:19.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:19.824" starttime="20201027 14:07:19.797"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:19.824" starttime="20201027 14:07:19.796"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:19.824" starttime="20201027 14:07:19.796"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:19.824" starttime="20201027 14:07:19.784"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:19.824" starttime="20201027 14:07:19.783"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:19.828" level="INFO">Running command 'ozone sh bucket link 61545-source/bucket1 61545-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:24.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:24.222" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:07:24.222" starttime="20201027 14:07:19.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:24.224" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:07:24.224" starttime="20201027 14:07:24.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:24.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:24.225" starttime="20201027 14:07:24.224"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:24.225" starttime="20201027 14:07:19.826"></status>
</kw>
<msg timestamp="20201027 14:07:24.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:24.226" starttime="20201027 14:07:19.825"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:24.226" starttime="20201027 14:07:19.825"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:24.231" level="INFO">Running command 'ozone sh bucket create 61545-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:28.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:28.274" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:07:28.274" starttime="20201027 14:07:24.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:28.276" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:07:28.276" starttime="20201027 14:07:28.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:28.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:28.277" starttime="20201027 14:07:28.276"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:28.277" starttime="20201027 14:07:24.228"></status>
</kw>
<msg timestamp="20201027 14:07:28.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:28.277" starttime="20201027 14:07:24.227"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:28.278" starttime="20201027 14:07:24.226"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:28.283" level="INFO">Running command 'ozone sh key put 61545-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:35.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:35.064" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:07:35.065" starttime="20201027 14:07:28.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:35.066" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:07:35.066" starttime="20201027 14:07:35.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:35.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:35.067" starttime="20201027 14:07:35.066"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:35.067" starttime="20201027 14:07:28.279"></status>
</kw>
<msg timestamp="20201027 14:07:35.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:35.067" starttime="20201027 14:07:28.279"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:35.067" starttime="20201027 14:07:28.278"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201027 14:07:35.069" level="INFO">${postfix} = 65791</msg>
<status status="PASS" endtime="20201027 14:07:35.069" starttime="20201027 14:07:35.069"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201027 14:07:35.070" level="INFO">${tmpfile} = /tmp/tempkey-65791</msg>
<status status="PASS" endtime="20201027 14:07:35.070" starttime="20201027 14:07:35.070"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:35.075" level="INFO">Running command 'ozone sh key get -f 61545-target/link1/key1 /tmp/tempkey-65791 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:41.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:41.428" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:07:41.428" starttime="20201027 14:07:35.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:41.430" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:07:41.430" starttime="20201027 14:07:41.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:41.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:41.431" starttime="20201027 14:07:41.430"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:41.431" starttime="20201027 14:07:35.072"></status>
</kw>
<msg timestamp="20201027 14:07:41.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:41.431" starttime="20201027 14:07:35.071"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:41.431" starttime="20201027 14:07:35.070"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201027 14:07:41.434" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-65791 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:41.437" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201027 14:07:41.437" starttime="20201027 14:07:41.432"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:41.442" level="INFO">Running command 'rm -f /tmp/tempkey-65791 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:41.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:41.445" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:07:41.445" starttime="20201027 14:07:41.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:41.446" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:07:41.447" starttime="20201027 14:07:41.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:41.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:41.447" starttime="20201027 14:07:41.447"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:41.448" starttime="20201027 14:07:41.439"></status>
</kw>
<msg timestamp="20201027 14:07:41.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:41.448" starttime="20201027 14:07:41.438"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:41.448" starttime="20201027 14:07:41.437"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 14:07:41.449" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201027 14:07:41.449" starttime="20201027 14:07:41.448"></status>
</kw>
<msg timestamp="20201027 14:07:41.449" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201027 14:07:41.449" starttime="20201027 14:07:35.068"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201027 14:07:41.450" starttime="20201027 14:07:41.450"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:41.450" starttime="20201027 14:07:35.068"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 14:07:41.451" critical="yes" starttime="20201027 14:07:19.783"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:41.457" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:41.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:41.460" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:07:41.460" starttime="20201027 14:07:41.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:41.462" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:07:41.462" starttime="20201027 14:07:41.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:41.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:41.463" starttime="20201027 14:07:41.462"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:41.463" starttime="20201027 14:07:41.455"></status>
</kw>
<msg timestamp="20201027 14:07:41.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:41.464" starttime="20201027 14:07:41.454"></status>
</kw>
<msg timestamp="20201027 14:07:41.464" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:07:41.464" starttime="20201027 14:07:41.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:07:41.465" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:07:41.465" starttime="20201027 14:07:41.464"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:41.470" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:41.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:41.494" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:07:41.494" starttime="20201027 14:07:41.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:41.495" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:07:41.495" starttime="20201027 14:07:41.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:41.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:41.496" starttime="20201027 14:07:41.495"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:41.496" starttime="20201027 14:07:41.466"></status>
</kw>
<msg timestamp="20201027 14:07:41.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:41.497" starttime="20201027 14:07:41.466"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:41.497" starttime="20201027 14:07:41.465"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:41.497" starttime="20201027 14:07:41.465"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:41.497" starttime="20201027 14:07:41.453"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:41.497" starttime="20201027 14:07:41.453"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:41.502" level="INFO">Running command 'ozone sh key put 61545-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:48.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:48.092" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:07:48.092" starttime="20201027 14:07:41.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:48.093" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:07:48.093" starttime="20201027 14:07:48.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:48.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:48.094" starttime="20201027 14:07:48.094"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:48.095" starttime="20201027 14:07:41.499"></status>
</kw>
<msg timestamp="20201027 14:07:48.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:48.095" starttime="20201027 14:07:41.498"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:48.095" starttime="20201027 14:07:41.497"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201027 14:07:48.097" level="INFO">${postfix} = 64515</msg>
<status status="PASS" endtime="20201027 14:07:48.097" starttime="20201027 14:07:48.097"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201027 14:07:48.098" level="INFO">${tmpfile} = /tmp/tempkey-64515</msg>
<status status="PASS" endtime="20201027 14:07:48.098" starttime="20201027 14:07:48.098"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:48.102" level="INFO">Running command 'ozone sh key get -f 61545-source/bucket1/key2 /tmp/tempkey-64515 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:54.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:54.631" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:07:54.631" starttime="20201027 14:07:48.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:54.632" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:07:54.632" starttime="20201027 14:07:54.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:54.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:54.633" starttime="20201027 14:07:54.633"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:54.634" starttime="20201027 14:07:48.099"></status>
</kw>
<msg timestamp="20201027 14:07:54.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:54.634" starttime="20201027 14:07:48.099"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:54.634" starttime="20201027 14:07:48.098"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201027 14:07:54.637" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-64515 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:54.639" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201027 14:07:54.639" starttime="20201027 14:07:54.634"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:54.644" level="INFO">Running command 'rm -f /tmp/tempkey-64515 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:54.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:54.648" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:07:54.648" starttime="20201027 14:07:54.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:54.649" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:07:54.649" starttime="20201027 14:07:54.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:54.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:54.650" starttime="20201027 14:07:54.649"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:54.650" starttime="20201027 14:07:54.641"></status>
</kw>
<msg timestamp="20201027 14:07:54.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:54.651" starttime="20201027 14:07:54.641"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:54.651" starttime="20201027 14:07:54.640"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 14:07:54.652" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201027 14:07:54.652" starttime="20201027 14:07:54.651"></status>
</kw>
<msg timestamp="20201027 14:07:54.652" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201027 14:07:54.652" starttime="20201027 14:07:48.096"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201027 14:07:54.653" starttime="20201027 14:07:54.652"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:54.653" starttime="20201027 14:07:48.096"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 14:07:54.653" critical="yes" starttime="20201027 14:07:41.452"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:54.661" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:54.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:54.663" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:07:54.663" starttime="20201027 14:07:54.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:54.664" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:07:54.664" starttime="20201027 14:07:54.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:54.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:54.665" starttime="20201027 14:07:54.665"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:54.666" starttime="20201027 14:07:54.657"></status>
</kw>
<msg timestamp="20201027 14:07:54.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:54.666" starttime="20201027 14:07:54.657"></status>
</kw>
<msg timestamp="20201027 14:07:54.666" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:07:54.666" starttime="20201027 14:07:54.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:07:54.667" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:07:54.667" starttime="20201027 14:07:54.666"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:54.678" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:54.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:54.686" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:07:54.686" starttime="20201027 14:07:54.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:54.688" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:07:54.688" starttime="20201027 14:07:54.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:54.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:54.689" starttime="20201027 14:07:54.688"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:54.689" starttime="20201027 14:07:54.669"></status>
</kw>
<msg timestamp="20201027 14:07:54.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:54.689" starttime="20201027 14:07:54.668"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:54.690" starttime="20201027 14:07:54.668"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:54.690" starttime="20201027 14:07:54.667"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:54.690" starttime="20201027 14:07:54.656"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:54.690" starttime="20201027 14:07:54.655"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:54.695" level="INFO">Running command 'ozone sh key list 61545-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:07:59.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:07:59.174" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201027 14:07:59.174" starttime="20201027 14:07:54.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:07:59.175" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201027 14:07:59.175" starttime="20201027 14:07:59.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:07:59.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:07:59.176" starttime="20201027 14:07:59.176"></status>
</kw>
<status status="PASS" endtime="20201027 14:07:59.176" starttime="20201027 14:07:54.691"></status>
</kw>
<msg timestamp="20201027 14:07:59.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:07:59.177" starttime="20201027 14:07:54.691"></status>
</kw>
<msg timestamp="20201027 14:07:59.177" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201027 14:07:59.177" starttime="20201027 14:07:54.690"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:07:59.182" level="INFO">Running command 'ozone sh key list 61545-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:03.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:03.358" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201027 14:08:03.358" starttime="20201027 14:07:59.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:03.359" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201027 14:08:03.359" starttime="20201027 14:08:03.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:03.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:03.360" starttime="20201027 14:08:03.359"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:03.360" starttime="20201027 14:07:59.178"></status>
</kw>
<msg timestamp="20201027 14:08:03.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:03.361" starttime="20201027 14:07:59.178"></status>
</kw>
<msg timestamp="20201027 14:08:03.361" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201027 14:08:03.361" starttime="20201027 14:07:59.177"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201027 14:08:03.362" starttime="20201027 14:08:03.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201027 14:08:03.362" starttime="20201027 14:08:03.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201027 14:08:03.363" starttime="20201027 14:08:03.362"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 14:08:03.363" critical="yes" starttime="20201027 14:07:54.654"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:03.370" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:03.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:03.373" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:08:03.373" starttime="20201027 14:08:03.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:03.374" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:08:03.374" starttime="20201027 14:08:03.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:03.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:03.375" starttime="20201027 14:08:03.374"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:03.375" starttime="20201027 14:08:03.367"></status>
</kw>
<msg timestamp="20201027 14:08:03.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:03.376" starttime="20201027 14:08:03.366"></status>
</kw>
<msg timestamp="20201027 14:08:03.376" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:08:03.376" starttime="20201027 14:08:03.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:08:03.377" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:08:03.377" starttime="20201027 14:08:03.376"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:03.381" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:03.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:03.402" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:08:03.402" starttime="20201027 14:08:03.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:03.404" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:08:03.404" starttime="20201027 14:08:03.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:03.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:03.404" starttime="20201027 14:08:03.404"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:03.405" starttime="20201027 14:08:03.379"></status>
</kw>
<msg timestamp="20201027 14:08:03.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:03.405" starttime="20201027 14:08:03.378"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:03.405" starttime="20201027 14:08:03.377"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:03.405" starttime="20201027 14:08:03.377"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:03.406" starttime="20201027 14:08:03.365"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:03.406" starttime="20201027 14:08:03.365"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:03.413" level="INFO">Running command 'ozone sh key delete 61545-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:07.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:07.761" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:08:07.761" starttime="20201027 14:08:03.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:07.763" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:08:07.763" starttime="20201027 14:08:07.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:07.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:07.763" starttime="20201027 14:08:07.763"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:07.764" starttime="20201027 14:08:03.407"></status>
</kw>
<msg timestamp="20201027 14:08:07.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:07.764" starttime="20201027 14:08:03.407"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:07.764" starttime="20201027 14:08:03.406"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:07.769" level="INFO">Running command 'ozone sh key list 61545-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:11.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:11.957" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201027 14:08:11.957" starttime="20201027 14:08:07.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:11.959" level="INFO">key1</msg>
<status status="PASS" endtime="20201027 14:08:11.959" starttime="20201027 14:08:11.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:11.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:11.960" starttime="20201027 14:08:11.959"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:11.960" starttime="20201027 14:08:07.766"></status>
</kw>
<msg timestamp="20201027 14:08:11.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:11.960" starttime="20201027 14:08:07.765"></status>
</kw>
<msg timestamp="20201027 14:08:11.960" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201027 14:08:11.960" starttime="20201027 14:08:07.765"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201027 14:08:11.961" starttime="20201027 14:08:11.961"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 14:08:11.961" critical="yes" starttime="20201027 14:08:03.364"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:11.969" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:11.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:11.971" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:08:11.971" starttime="20201027 14:08:11.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:11.972" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:08:11.972" starttime="20201027 14:08:11.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:11.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:11.973" starttime="20201027 14:08:11.973"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:11.973" starttime="20201027 14:08:11.965"></status>
</kw>
<msg timestamp="20201027 14:08:11.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:11.974" starttime="20201027 14:08:11.965"></status>
</kw>
<msg timestamp="20201027 14:08:11.974" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:08:11.974" starttime="20201027 14:08:11.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:08:11.975" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:08:11.975" starttime="20201027 14:08:11.975"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:11.982" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:11.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:11.993" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:08:11.994" starttime="20201027 14:08:11.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:11.995" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:08:11.995" starttime="20201027 14:08:11.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:11.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:11.996" starttime="20201027 14:08:11.995"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:11.996" starttime="20201027 14:08:11.977"></status>
</kw>
<msg timestamp="20201027 14:08:11.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:11.996" starttime="20201027 14:08:11.977"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:11.997" starttime="20201027 14:08:11.976"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:11.997" starttime="20201027 14:08:11.975"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:11.997" starttime="20201027 14:08:11.964"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:11.997" starttime="20201027 14:08:11.963"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:12.002" level="INFO">Running command 'ozone sh bucket list 61545-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:16.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:16.379" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:08:16.379" starttime="20201027 14:08:11.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:16.380" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "61545-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T14:07:15.787Z",
  "modificationTime" : "2020-10-27T14:07:15.787Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61545-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61545-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T14:06:50.912Z",
  "modificationTime" : "2020-10-27T14:07:11.164Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61545-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61545-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T14:07:24.069Z",
  "modificationTime" : "2020-10-27T14:07:24.069Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61545-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61545-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T14:06:42.915Z",
  "modificationTime" : "2020-10-27T14:07:07.264Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61545-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61545-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T14:06:46.903Z",
  "modificationTime" : "2020-10-27T14:06:46.903Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61545-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 14:08:16.381" starttime="20201027 14:08:16.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:16.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:16.381" starttime="20201027 14:08:16.381"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:16.382" starttime="20201027 14:08:11.998"></status>
</kw>
<msg timestamp="20201027 14:08:16.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:16.382" starttime="20201027 14:08:11.998"></status>
</kw>
<msg timestamp="20201027 14:08:16.382" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:08:16.383" starttime="20201027 14:08:11.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201027 14:08:16.384" starttime="20201027 14:08:16.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201027 14:08:16.384" starttime="20201027 14:08:16.384"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 14:08:16.384" critical="yes" starttime="20201027 14:08:11.962"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:16.394" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:16.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:16.397" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:08:16.397" starttime="20201027 14:08:16.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:16.398" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:08:16.399" starttime="20201027 14:08:16.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:16.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:16.400" starttime="20201027 14:08:16.399"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:16.400" starttime="20201027 14:08:16.391"></status>
</kw>
<msg timestamp="20201027 14:08:16.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:16.400" starttime="20201027 14:08:16.390"></status>
</kw>
<msg timestamp="20201027 14:08:16.400" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:08:16.400" starttime="20201027 14:08:16.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:08:16.401" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:08:16.401" starttime="20201027 14:08:16.401"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:16.407" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:16.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:16.426" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:08:16.426" starttime="20201027 14:08:16.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:16.427" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:08:16.428" starttime="20201027 14:08:16.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:16.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:16.428" starttime="20201027 14:08:16.428"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:16.429" starttime="20201027 14:08:16.403"></status>
</kw>
<msg timestamp="20201027 14:08:16.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:16.429" starttime="20201027 14:08:16.403"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:16.429" starttime="20201027 14:08:16.402"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:16.429" starttime="20201027 14:08:16.402"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:16.429" starttime="20201027 14:08:16.389"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:16.430" starttime="20201027 14:08:16.388"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:16.434" level="INFO">Running command 'ozone sh bucket info 61545-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:21.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:21.000" level="INFO">${output} = 61545-source bucket1</msg>
<status status="PASS" endtime="20201027 14:08:21.000" starttime="20201027 14:08:16.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:21.001" level="INFO">61545-source bucket1</msg>
<status status="PASS" endtime="20201027 14:08:21.001" starttime="20201027 14:08:21.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:21.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:21.002" starttime="20201027 14:08:21.001"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:21.002" starttime="20201027 14:08:16.431"></status>
</kw>
<msg timestamp="20201027 14:08:21.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:21.003" starttime="20201027 14:08:16.431"></status>
</kw>
<msg timestamp="20201027 14:08:21.003" level="INFO">${result} = 61545-source bucket1</msg>
<status status="PASS" endtime="20201027 14:08:21.003" starttime="20201027 14:08:16.430"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201027 14:08:21.004" starttime="20201027 14:08:21.003"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 14:08:21.004" critical="yes" starttime="20201027 14:08:16.388"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:21.012" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:21.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:21.014" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:08:21.014" starttime="20201027 14:08:21.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:21.015" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:08:21.015" starttime="20201027 14:08:21.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:21.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:21.016" starttime="20201027 14:08:21.015"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:21.017" starttime="20201027 14:08:21.008"></status>
</kw>
<msg timestamp="20201027 14:08:21.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:21.017" starttime="20201027 14:08:21.007"></status>
</kw>
<msg timestamp="20201027 14:08:21.017" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:08:21.017" starttime="20201027 14:08:21.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:08:21.018" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:08:21.018" starttime="20201027 14:08:21.017"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:21.024" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:21.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:21.049" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:08:21.049" starttime="20201027 14:08:21.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:21.050" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:08:21.050" starttime="20201027 14:08:21.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:21.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:21.051" starttime="20201027 14:08:21.051"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:21.052" starttime="20201027 14:08:21.020"></status>
</kw>
<msg timestamp="20201027 14:08:21.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:21.052" starttime="20201027 14:08:21.019"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:21.052" starttime="20201027 14:08:21.019"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:21.052" starttime="20201027 14:08:21.018"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:21.052" starttime="20201027 14:08:21.006"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:21.052" starttime="20201027 14:08:21.006"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:21.058" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 61545-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:25.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:25.794" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:08:25.795" starttime="20201027 14:08:21.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:25.796" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 14:08:25.796" starttime="20201027 14:08:25.795"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:25.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:25.797" starttime="20201027 14:08:25.796"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:25.797" starttime="20201027 14:08:21.053"></status>
</kw>
<msg timestamp="20201027 14:08:25.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:25.797" starttime="20201027 14:08:21.053"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:25.798" starttime="20201027 14:08:21.053"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:25.803" level="INFO">Running command 'ozone sh bucket getacl 61545-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:30.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:30.074" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201027 14:08:30.074" starttime="20201027 14:08:25.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:30.075" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201027 14:08:30.075" starttime="20201027 14:08:30.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:30.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:30.076" starttime="20201027 14:08:30.075"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:30.076" starttime="20201027 14:08:25.800"></status>
</kw>
<msg timestamp="20201027 14:08:30.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:30.076" starttime="20201027 14:08:25.800"></status>
</kw>
<msg timestamp="20201027 14:08:30.077" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201027 14:08:30.077" starttime="20201027 14:08:25.799"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201027 14:08:30.077" starttime="20201027 14:08:30.077"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:30.078" starttime="20201027 14:08:25.798"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:30.083" level="INFO">Running command 'ozone sh bucket getacl 61545-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:35.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:35.092" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:08:35.092" starttime="20201027 14:08:30.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:35.093" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:08:35.094" starttime="20201027 14:08:35.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:35.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:35.094" starttime="20201027 14:08:35.094"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:35.095" starttime="20201027 14:08:30.080"></status>
</kw>
<msg timestamp="20201027 14:08:35.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:35.095" starttime="20201027 14:08:30.080"></status>
</kw>
<msg timestamp="20201027 14:08:35.095" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201027 14:08:35.095" starttime="20201027 14:08:30.079"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201027 14:08:35.096" starttime="20201027 14:08:35.095"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:35.096" starttime="20201027 14:08:30.078"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:35.102" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 61545-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:39.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:39.132" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:08:39.133" starttime="20201027 14:08:35.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:39.134" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 14:08:39.134" starttime="20201027 14:08:39.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:39.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:39.135" starttime="20201027 14:08:39.134"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:39.135" starttime="20201027 14:08:35.098"></status>
</kw>
<msg timestamp="20201027 14:08:39.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:39.135" starttime="20201027 14:08:35.097"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:39.136" starttime="20201027 14:08:35.096"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:39.141" level="INFO">Running command 'ozone sh bucket getacl 61545-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:43.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:43.443" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:08:43.443" starttime="20201027 14:08:39.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:43.444" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:08:43.445" starttime="20201027 14:08:43.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:43.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:43.445" starttime="20201027 14:08:43.445"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:43.446" starttime="20201027 14:08:39.138"></status>
</kw>
<msg timestamp="20201027 14:08:43.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:43.446" starttime="20201027 14:08:39.138"></status>
</kw>
<msg timestamp="20201027 14:08:43.446" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201027 14:08:43.447" starttime="20201027 14:08:39.137"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201027 14:08:43.448" starttime="20201027 14:08:43.447"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:43.448" starttime="20201027 14:08:39.136"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:43.455" level="INFO">Running command 'ozone sh bucket getacl 61545-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:47.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:47.837" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201027 14:08:47.838" starttime="20201027 14:08:43.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:47.839" level="INFO">READ</msg>
<status status="PASS" endtime="20201027 14:08:47.839" starttime="20201027 14:08:47.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:47.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:47.840" starttime="20201027 14:08:47.839"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:47.840" starttime="20201027 14:08:43.451"></status>
</kw>
<msg timestamp="20201027 14:08:47.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:47.840" starttime="20201027 14:08:43.450"></status>
</kw>
<msg timestamp="20201027 14:08:47.841" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201027 14:08:47.841" starttime="20201027 14:08:43.449"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201027 14:08:47.842" starttime="20201027 14:08:47.841"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:47.842" starttime="20201027 14:08:43.448"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 14:08:47.842" critical="yes" starttime="20201027 14:08:21.005"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:47.849" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:47.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:47.852" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:08:47.852" starttime="20201027 14:08:47.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:47.854" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:08:47.854" starttime="20201027 14:08:47.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:47.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:47.855" starttime="20201027 14:08:47.854"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:47.855" starttime="20201027 14:08:47.846"></status>
</kw>
<msg timestamp="20201027 14:08:47.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:47.856" starttime="20201027 14:08:47.845"></status>
</kw>
<msg timestamp="20201027 14:08:47.856" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:08:47.856" starttime="20201027 14:08:47.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:08:47.857" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:08:47.857" starttime="20201027 14:08:47.856"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:47.862" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:47.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:47.875" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:08:47.875" starttime="20201027 14:08:47.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:47.876" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:08:47.876" starttime="20201027 14:08:47.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:47.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:47.877" starttime="20201027 14:08:47.876"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:47.877" starttime="20201027 14:08:47.859"></status>
</kw>
<msg timestamp="20201027 14:08:47.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:47.878" starttime="20201027 14:08:47.858"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:47.878" starttime="20201027 14:08:47.858"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:47.878" starttime="20201027 14:08:47.857"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:47.878" starttime="20201027 14:08:47.844"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:47.878" starttime="20201027 14:08:47.844"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:47.884" level="INFO">Running command 'ozone sh bucket link 61545-source/bucket2 61545-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:51.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:08:51.824" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:08:51.824" starttime="20201027 14:08:47.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:51.825" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:08:51.825" starttime="20201027 14:08:51.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:08:51.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:08:51.826" starttime="20201027 14:08:51.826"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:51.826" starttime="20201027 14:08:47.880"></status>
</kw>
<msg timestamp="20201027 14:08:51.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:08:51.827" starttime="20201027 14:08:47.879"></status>
</kw>
<status status="PASS" endtime="20201027 14:08:51.827" starttime="20201027 14:08:47.879"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:51.830" level="INFO">Running command 'ozone sh bucket create 61545-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:08:56.208" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 14:08:56.208" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:08:56.208" starttime="20201027 14:08:51.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:08:56.209" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201027 14:08:56.209" starttime="20201027 14:08:56.208"></status>
</kw>
<msg timestamp="20201027 14:08:56.210" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:08:56.210" starttime="20201027 14:08:51.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201027 14:08:56.211" starttime="20201027 14:08:56.210"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:08:56.217" level="INFO">Running command 'ozone sh bucket create 61545-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:00.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:00.094" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:00.094" starttime="20201027 14:08:56.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:00.095" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:09:00.095" starttime="20201027 14:09:00.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:00.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:00.096" starttime="20201027 14:09:00.096"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:00.096" starttime="20201027 14:08:56.212"></status>
</kw>
<msg timestamp="20201027 14:09:00.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:00.097" starttime="20201027 14:08:56.212"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:00.097" starttime="20201027 14:08:56.211"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:00.100" level="INFO">Running command 'ozone sh bucket link 61545-source/bucket1 61545-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:04.512" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 14:09:04.512" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:04.512" starttime="20201027 14:09:00.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:04.513" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201027 14:09:04.513" starttime="20201027 14:09:04.512"></status>
</kw>
<msg timestamp="20201027 14:09:04.514" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:04.514" starttime="20201027 14:09:00.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201027 14:09:04.514" starttime="20201027 14:09:04.514"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 14:09:04.515" critical="yes" starttime="20201027 14:08:47.843"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:04.521" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:04.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:04.525" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:09:04.525" starttime="20201027 14:09:04.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:04.526" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:09:04.526" starttime="20201027 14:09:04.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:04.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:04.527" starttime="20201027 14:09:04.526"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:04.527" starttime="20201027 14:09:04.518"></status>
</kw>
<msg timestamp="20201027 14:09:04.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:04.527" starttime="20201027 14:09:04.518"></status>
</kw>
<msg timestamp="20201027 14:09:04.528" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:09:04.528" starttime="20201027 14:09:04.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:09:04.528" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:09:04.529" starttime="20201027 14:09:04.528"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:04.533" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:04.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:04.561" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:09:04.561" starttime="20201027 14:09:04.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:04.562" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:09:04.562" starttime="20201027 14:09:04.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:04.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:04.563" starttime="20201027 14:09:04.563"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:04.563" starttime="20201027 14:09:04.530"></status>
</kw>
<msg timestamp="20201027 14:09:04.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:04.564" starttime="20201027 14:09:04.530"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:04.564" starttime="20201027 14:09:04.529"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:04.564" starttime="20201027 14:09:04.529"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:04.564" starttime="20201027 14:09:04.517"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:04.564" starttime="20201027 14:09:04.516"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:04.570" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:04.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:04.574" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:09:04.574" starttime="20201027 14:09:04.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:04.575" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:09:04.576" starttime="20201027 14:09:04.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:04.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:04.576" starttime="20201027 14:09:04.576"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:04.577" starttime="20201027 14:09:04.567"></status>
</kw>
<msg timestamp="20201027 14:09:04.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:04.577" starttime="20201027 14:09:04.566"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:04.577" starttime="20201027 14:09:04.566"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:04.582" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:04.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:04.585" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:09:04.585" starttime="20201027 14:09:04.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:04.587" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:09:04.587" starttime="20201027 14:09:04.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:04.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:04.588" starttime="20201027 14:09:04.587"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:04.588" starttime="20201027 14:09:04.579"></status>
</kw>
<msg timestamp="20201027 14:09:04.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:04.588" starttime="20201027 14:09:04.579"></status>
</kw>
<msg timestamp="20201027 14:09:04.588" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:09:04.589" starttime="20201027 14:09:04.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:09:04.589" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:09:04.589" starttime="20201027 14:09:04.589"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:04.595" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:04.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:04.629" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:09:04.629" starttime="20201027 14:09:04.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:04.630" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:09:04.630" starttime="20201027 14:09:04.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:04.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:04.631" starttime="20201027 14:09:04.630"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:04.632" starttime="20201027 14:09:04.591"></status>
</kw>
<msg timestamp="20201027 14:09:04.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:04.632" starttime="20201027 14:09:04.591"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:04.632" starttime="20201027 14:09:04.590"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:04.632" starttime="20201027 14:09:04.590"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:04.632" starttime="20201027 14:09:04.578"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:04.632" starttime="20201027 14:09:04.577"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:04.635" level="INFO">Running command 'ozone sh key list 61545-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:09.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:09.135" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:09.135" starttime="20201027 14:09:04.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:09.136" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "61545-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-10-27T14:06:29.844Z",
  "modificationTime" : "2020-10-27T14:06:34.353Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201027 14:09:09.136" starttime="20201027 14:09:09.135"></status>
</kw>
<msg timestamp="20201027 14:09:09.137" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:09.137" starttime="20201027 14:09:04.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201027 14:09:09.137" starttime="20201027 14:09:09.137"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:09.137" starttime="20201027 14:09:04.565"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:09.137" starttime="20201027 14:09:04.565"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 14:09:09.138" critical="yes" starttime="20201027 14:09:04.515"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:09.144" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:09.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:09.147" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:09:09.147" starttime="20201027 14:09:09.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:09.148" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:09:09.148" starttime="20201027 14:09:09.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:09.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:09.149" starttime="20201027 14:09:09.148"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:09.150" starttime="20201027 14:09:09.142"></status>
</kw>
<msg timestamp="20201027 14:09:09.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:09.150" starttime="20201027 14:09:09.141"></status>
</kw>
<msg timestamp="20201027 14:09:09.150" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:09:09.150" starttime="20201027 14:09:09.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:09:09.151" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:09:09.151" starttime="20201027 14:09:09.151"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:09.157" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:09.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:09.174" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:09:09.174" starttime="20201027 14:09:09.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:09.175" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:09:09.175" starttime="20201027 14:09:09.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:09.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:09.176" starttime="20201027 14:09:09.175"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:09.176" starttime="20201027 14:09:09.153"></status>
</kw>
<msg timestamp="20201027 14:09:09.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:09.176" starttime="20201027 14:09:09.153"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:09.177" starttime="20201027 14:09:09.152"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:09.177" starttime="20201027 14:09:09.152"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:09.177" starttime="20201027 14:09:09.140"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:09.177" starttime="20201027 14:09:09.140"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:09.184" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:09.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:09.186" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:09:09.186" starttime="20201027 14:09:09.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:09.188" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:09:09.188" starttime="20201027 14:09:09.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:09.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:09.188" starttime="20201027 14:09:09.188"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:09.189" starttime="20201027 14:09:09.179"></status>
</kw>
<msg timestamp="20201027 14:09:09.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:09.189" starttime="20201027 14:09:09.179"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:09.189" starttime="20201027 14:09:09.178"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:09.196" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:09.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:09.199" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:09:09.199" starttime="20201027 14:09:09.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:09.200" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:09:09.200" starttime="20201027 14:09:09.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:09.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:09.201" starttime="20201027 14:09:09.200"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:09.201" starttime="20201027 14:09:09.192"></status>
</kw>
<msg timestamp="20201027 14:09:09.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:09.202" starttime="20201027 14:09:09.191"></status>
</kw>
<msg timestamp="20201027 14:09:09.202" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:09:09.202" starttime="20201027 14:09:09.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:09:09.203" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:09:09.203" starttime="20201027 14:09:09.202"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:09.207" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:09.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:09.228" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:09:09.228" starttime="20201027 14:09:09.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:09.229" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:09:09.229" starttime="20201027 14:09:09.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:09.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:09.230" starttime="20201027 14:09:09.229"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:09.230" starttime="20201027 14:09:09.204"></status>
</kw>
<msg timestamp="20201027 14:09:09.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:09.231" starttime="20201027 14:09:09.204"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:09.231" starttime="20201027 14:09:09.203"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:09.231" starttime="20201027 14:09:09.203"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:09.231" starttime="20201027 14:09:09.190"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:09.231" starttime="20201027 14:09:09.190"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:09.235" level="INFO">Running command 'ozone sh key list 61545-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:13.020" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 14:09:13.020" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:13.020" starttime="20201027 14:09:09.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:13.021" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201027 14:09:13.021" starttime="20201027 14:09:13.020"></status>
</kw>
<msg timestamp="20201027 14:09:13.021" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:13.022" starttime="20201027 14:09:09.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201027 14:09:13.022" starttime="20201027 14:09:13.022"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:13.022" starttime="20201027 14:09:09.178"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:13.022" starttime="20201027 14:09:09.177"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 14:09:13.023" critical="yes" starttime="20201027 14:09:09.139"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:13.031" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:13.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:13.032" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:09:13.032" starttime="20201027 14:09:13.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:13.033" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:09:13.033" starttime="20201027 14:09:13.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:13.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:13.034" starttime="20201027 14:09:13.034"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:13.035" starttime="20201027 14:09:13.027"></status>
</kw>
<msg timestamp="20201027 14:09:13.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:13.035" starttime="20201027 14:09:13.026"></status>
</kw>
<msg timestamp="20201027 14:09:13.035" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:09:13.035" starttime="20201027 14:09:13.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:09:13.036" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:09:13.036" starttime="20201027 14:09:13.035"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:13.049" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:13.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:13.072" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:09:13.072" starttime="20201027 14:09:13.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:13.073" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:09:13.073" starttime="20201027 14:09:13.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:13.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:13.074" starttime="20201027 14:09:13.074"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:13.074" starttime="20201027 14:09:13.038"></status>
</kw>
<msg timestamp="20201027 14:09:13.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:13.075" starttime="20201027 14:09:13.037"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:13.075" starttime="20201027 14:09:13.037"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:13.075" starttime="20201027 14:09:13.036"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:13.075" starttime="20201027 14:09:13.025"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:13.075" starttime="20201027 14:09:13.025"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:13.081" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:13.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:13.085" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:09:13.085" starttime="20201027 14:09:13.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:13.086" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:09:13.086" starttime="20201027 14:09:13.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:13.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:13.089" starttime="20201027 14:09:13.086"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:13.089" starttime="20201027 14:09:13.077"></status>
</kw>
<msg timestamp="20201027 14:09:13.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:13.089" starttime="20201027 14:09:13.077"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:13.089" starttime="20201027 14:09:13.077"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:13.095" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:13.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:13.099" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:09:13.099" starttime="20201027 14:09:13.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:13.100" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:09:13.100" starttime="20201027 14:09:13.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:13.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:13.101" starttime="20201027 14:09:13.101"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:13.102" starttime="20201027 14:09:13.091"></status>
</kw>
<msg timestamp="20201027 14:09:13.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:13.102" starttime="20201027 14:09:13.091"></status>
</kw>
<msg timestamp="20201027 14:09:13.102" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:09:13.102" starttime="20201027 14:09:13.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:09:13.103" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:09:13.103" starttime="20201027 14:09:13.102"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:13.108" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:13.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:13.133" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:09:13.135" starttime="20201027 14:09:13.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:13.136" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:09:13.136" starttime="20201027 14:09:13.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:13.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:13.137" starttime="20201027 14:09:13.136"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:13.137" starttime="20201027 14:09:13.105"></status>
</kw>
<msg timestamp="20201027 14:09:13.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:13.137" starttime="20201027 14:09:13.104"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:13.137" starttime="20201027 14:09:13.104"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:13.138" starttime="20201027 14:09:13.103"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:13.138" starttime="20201027 14:09:13.090"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:13.138" starttime="20201027 14:09:13.090"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:13.145" level="INFO">Running command 'ozone sh bucket info 61545-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:17.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:17.360" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:17.360" starttime="20201027 14:09:13.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:17.361" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "61545-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T14:06:50.912Z",
  "modificationTime" : "2020-10-27T14:07:11.164Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61545-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 14:09:17.361" starttime="20201027 14:09:17.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:17.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:17.362" starttime="20201027 14:09:17.361"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:17.362" starttime="20201027 14:09:13.139"></status>
</kw>
<msg timestamp="20201027 14:09:17.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:17.363" starttime="20201027 14:09:13.139"></status>
</kw>
<msg timestamp="20201027 14:09:17.363" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:17.363" starttime="20201027 14:09:13.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201027 14:09:17.364" starttime="20201027 14:09:17.363"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201027 14:09:17.364" starttime="20201027 14:09:17.364"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:17.369" level="INFO">Running command 'ozone sh key list 61545-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:21.256" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 14:09:21.256" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:21.256" starttime="20201027 14:09:17.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:21.257" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201027 14:09:21.257" starttime="20201027 14:09:21.256"></status>
</kw>
<msg timestamp="20201027 14:09:21.258" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:21.258" starttime="20201027 14:09:17.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201027 14:09:21.258" starttime="20201027 14:09:21.258"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:21.259" starttime="20201027 14:09:13.076"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:21.259" starttime="20201027 14:09:13.076"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 14:09:21.259" critical="yes" starttime="20201027 14:09:13.024"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:21.267" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:21.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:21.268" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:09:21.269" starttime="20201027 14:09:21.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:21.270" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:09:21.270" starttime="20201027 14:09:21.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:21.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:21.271" starttime="20201027 14:09:21.270"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:21.271" starttime="20201027 14:09:21.263"></status>
</kw>
<msg timestamp="20201027 14:09:21.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:21.271" starttime="20201027 14:09:21.262"></status>
</kw>
<msg timestamp="20201027 14:09:21.272" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:09:21.272" starttime="20201027 14:09:21.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:09:21.273" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:09:21.273" starttime="20201027 14:09:21.272"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:21.278" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:21.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:21.302" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:09:21.302" starttime="20201027 14:09:21.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:21.304" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:09:21.304" starttime="20201027 14:09:21.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:21.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:21.305" starttime="20201027 14:09:21.304"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:21.305" starttime="20201027 14:09:21.275"></status>
</kw>
<msg timestamp="20201027 14:09:21.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:21.305" starttime="20201027 14:09:21.274"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:21.305" starttime="20201027 14:09:21.273"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:21.306" starttime="20201027 14:09:21.273"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:21.306" starttime="20201027 14:09:21.261"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:21.306" starttime="20201027 14:09:21.261"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:21.310" level="INFO">Running command 'ozone sh bucket link 61545-target/loop1 61545-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:25.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:25.585" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:25.586" starttime="20201027 14:09:21.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:25.587" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:09:25.588" starttime="20201027 14:09:25.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:25.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:25.589" starttime="20201027 14:09:25.588"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:25.589" starttime="20201027 14:09:21.307"></status>
</kw>
<msg timestamp="20201027 14:09:25.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:25.589" starttime="20201027 14:09:21.307"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:25.590" starttime="20201027 14:09:21.306"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:25.595" level="INFO">Running command 'ozone sh bucket link 61545-target/loop2 61545-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:29.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:29.830" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:29.830" starttime="20201027 14:09:25.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:29.831" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:09:29.832" starttime="20201027 14:09:29.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:29.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:29.832" starttime="20201027 14:09:29.832"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:29.833" starttime="20201027 14:09:25.591"></status>
</kw>
<msg timestamp="20201027 14:09:29.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:29.833" starttime="20201027 14:09:25.590"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:29.833" starttime="20201027 14:09:25.590"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:29.839" level="INFO">Running command 'ozone sh bucket link 61545-target/loop3 61545-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:33.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:33.815" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:33.815" starttime="20201027 14:09:29.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:33.817" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:09:33.817" starttime="20201027 14:09:33.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:33.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:33.818" starttime="20201027 14:09:33.817"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:33.818" starttime="20201027 14:09:29.834"></status>
</kw>
<msg timestamp="20201027 14:09:33.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:33.818" starttime="20201027 14:09:29.834"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:33.819" starttime="20201027 14:09:29.833"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:33.822" level="INFO">Running command 'ozone sh key list 61545-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:37.720" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 14:09:37.720" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:37.720" starttime="20201027 14:09:33.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:37.721" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201027 14:09:37.721" starttime="20201027 14:09:37.720"></status>
</kw>
<msg timestamp="20201027 14:09:37.722" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:37.722" starttime="20201027 14:09:33.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201027 14:09:37.722" starttime="20201027 14:09:37.722"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 14:09:37.723" critical="yes" starttime="20201027 14:09:21.260"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:37.730" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:37.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:37.732" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:09:37.732" starttime="20201027 14:09:37.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:37.733" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:09:37.733" starttime="20201027 14:09:37.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:37.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:37.734" starttime="20201027 14:09:37.733"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:37.734" starttime="20201027 14:09:37.726"></status>
</kw>
<msg timestamp="20201027 14:09:37.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:37.735" starttime="20201027 14:09:37.726"></status>
</kw>
<msg timestamp="20201027 14:09:37.735" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:09:37.735" starttime="20201027 14:09:37.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:09:37.736" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:09:37.736" starttime="20201027 14:09:37.735"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:37.740" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:37.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:37.758" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:09:37.759" starttime="20201027 14:09:37.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:37.760" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:09:37.760" starttime="20201027 14:09:37.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:37.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:37.761" starttime="20201027 14:09:37.760"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:37.761" starttime="20201027 14:09:37.737"></status>
</kw>
<msg timestamp="20201027 14:09:37.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:37.761" starttime="20201027 14:09:37.737"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:37.762" starttime="20201027 14:09:37.736"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:37.762" starttime="20201027 14:09:37.736"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:37.762" starttime="20201027 14:09:37.725"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:37.762" starttime="20201027 14:09:37.724"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:37.767" level="INFO">Running command 'ozone sh bucket link 61545-source/bucket1 61545-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:41.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:41.777" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:41.777" starttime="20201027 14:09:37.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:41.778" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:09:41.778" starttime="20201027 14:09:41.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:41.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:41.779" starttime="20201027 14:09:41.778"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:41.779" starttime="20201027 14:09:37.763"></status>
</kw>
<msg timestamp="20201027 14:09:41.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:41.780" starttime="20201027 14:09:37.763"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:41.780" starttime="20201027 14:09:37.762"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:41.784" level="INFO">Running command 'ozone sh key put 61545-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:48.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:48.231" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:48.231" starttime="20201027 14:09:41.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:48.233" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:09:48.233" starttime="20201027 14:09:48.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:48.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:48.233" starttime="20201027 14:09:48.233"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:48.234" starttime="20201027 14:09:41.781"></status>
</kw>
<msg timestamp="20201027 14:09:48.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:48.234" starttime="20201027 14:09:41.781"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:48.234" starttime="20201027 14:09:41.780"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201027 14:09:48.237" level="INFO">${postfix} = 40291</msg>
<status status="PASS" endtime="20201027 14:09:48.237" starttime="20201027 14:09:48.236"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201027 14:09:48.238" level="INFO">${tmpfile} = /tmp/tempkey-40291</msg>
<status status="PASS" endtime="20201027 14:09:48.238" starttime="20201027 14:09:48.237"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:48.244" level="INFO">Running command 'ozone sh key get -f 61545-target/link1/key3 /tmp/tempkey-40291 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:54.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:54.305" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:54.305" starttime="20201027 14:09:48.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:54.306" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:09:54.306" starttime="20201027 14:09:54.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:54.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:54.307" starttime="20201027 14:09:54.306"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:54.307" starttime="20201027 14:09:48.239"></status>
</kw>
<msg timestamp="20201027 14:09:54.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:54.307" starttime="20201027 14:09:48.239"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:54.308" starttime="20201027 14:09:48.238"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201027 14:09:54.310" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-40291 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:54.313" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201027 14:09:54.313" starttime="20201027 14:09:54.308"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:54.318" level="INFO">Running command 'rm -f /tmp/tempkey-40291 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:54.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:54.321" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:09:54.321" starttime="20201027 14:09:54.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:54.322" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:09:54.322" starttime="20201027 14:09:54.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:54.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:54.323" starttime="20201027 14:09:54.322"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:54.323" starttime="20201027 14:09:54.315"></status>
</kw>
<msg timestamp="20201027 14:09:54.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:54.324" starttime="20201027 14:09:54.314"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:54.324" starttime="20201027 14:09:54.313"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 14:09:54.324" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201027 14:09:54.325" starttime="20201027 14:09:54.324"></status>
</kw>
<msg timestamp="20201027 14:09:54.325" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201027 14:09:54.325" starttime="20201027 14:09:48.235"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201027 14:09:54.326" starttime="20201027 14:09:54.325"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:54.326" starttime="20201027 14:09:48.235"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 14:09:54.326" critical="yes" starttime="20201027 14:09:37.723"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:54.333" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:54.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:54.336" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 14:09:54.336" starttime="20201027 14:09:54.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:54.338" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 14:09:54.338" starttime="20201027 14:09:54.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:54.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:54.339" starttime="20201027 14:09:54.338"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:54.340" starttime="20201027 14:09:54.330"></status>
</kw>
<msg timestamp="20201027 14:09:54.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:54.340" starttime="20201027 14:09:54.330"></status>
</kw>
<msg timestamp="20201027 14:09:54.340" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 14:09:54.340" starttime="20201027 14:09:54.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:09:54.341" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:09:54.341" starttime="20201027 14:09:54.341"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:54.346" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:54.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:54.359" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:09:54.359" starttime="20201027 14:09:54.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:54.360" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:09:54.361" starttime="20201027 14:09:54.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:54.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:54.361" starttime="20201027 14:09:54.361"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:54.362" starttime="20201027 14:09:54.343"></status>
</kw>
<msg timestamp="20201027 14:09:54.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:54.362" starttime="20201027 14:09:54.343"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:54.362" starttime="20201027 14:09:54.342"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:54.362" starttime="20201027 14:09:54.342"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:54.363" starttime="20201027 14:09:54.329"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:54.363" starttime="20201027 14:09:54.328"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:54.368" level="INFO">Running command 'ozone sh bucket delete 61545-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:09:58.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:09:58.201" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:09:58.201" starttime="20201027 14:09:54.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:09:58.202" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 14:09:58.202" starttime="20201027 14:09:58.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:09:58.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:09:58.203" starttime="20201027 14:09:58.203"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:58.204" starttime="20201027 14:09:54.364"></status>
</kw>
<msg timestamp="20201027 14:09:58.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:09:58.204" starttime="20201027 14:09:54.363"></status>
</kw>
<status status="PASS" endtime="20201027 14:09:58.204" starttime="20201027 14:09:54.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:09:58.208" level="INFO">Running command 'ozone sh bucket list 61545-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:10:02.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:10:02.298" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:10:02.298" starttime="20201027 14:09:58.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:10:02.300" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "61545-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T14:08:59.900Z",
  "modificationTime" : "2020-10-27T14:08:59.900Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61545-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T14:07:15.787Z",
  "modificationTime" : "2020-10-27T14:07:15.787Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61545-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61545-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T14:06:50.912Z",
  "modificationTime" : "2020-10-27T14:07:11.164Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61545-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61545-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T14:08:51.728Z",
  "modificationTime" : "2020-10-27T14:08:51.728Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61545-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61545-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T14:09:41.610Z",
  "modificationTime" : "2020-10-27T14:09:41.610Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61545-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61545-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T14:09:33.636Z",
  "modificationTime" : "2020-10-27T14:09:33.636Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61545-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61545-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T14:09:25.326Z",
  "modificationTime" : "2020-10-27T14:09:25.326Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61545-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61545-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T14:09:29.540Z",
  "modificationTime" : "2020-10-27T14:09:29.540Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61545-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61545-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T14:06:42.915Z",
  "modificationTime" : "2020-10-27T14:07:07.264Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61545-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "61545-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T14:06:46.903Z",
  "modificationTime" : "2020-10-27T14:06:46.903Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "61545-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 14:10:02.300" starttime="20201027 14:10:02.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:10:02.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:10:02.301" starttime="20201027 14:10:02.300"></status>
</kw>
<status status="PASS" endtime="20201027 14:10:02.301" starttime="20201027 14:09:58.205"></status>
</kw>
<msg timestamp="20201027 14:10:02.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:10:02.301" starttime="20201027 14:09:58.205"></status>
</kw>
<msg timestamp="20201027 14:10:02.302" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 14:10:02.302" starttime="20201027 14:09:58.204"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201027 14:10:02.302" starttime="20201027 14:10:02.302"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:10:02.308" level="INFO">Running command 'ozone sh key list 61545-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:10:06.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:10:06.463" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201027 14:10:06.463" starttime="20201027 14:10:02.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:10:06.464" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201027 14:10:06.464" starttime="20201027 14:10:06.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:10:06.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:10:06.465" starttime="20201027 14:10:06.464"></status>
</kw>
<status status="PASS" endtime="20201027 14:10:06.465" starttime="20201027 14:10:02.303"></status>
</kw>
<msg timestamp="20201027 14:10:06.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:10:06.465" starttime="20201027 14:10:02.303"></status>
</kw>
<msg timestamp="20201027 14:10:06.466" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201027 14:10:06.466" starttime="20201027 14:10:02.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201027 14:10:06.466" starttime="20201027 14:10:06.466"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 14:10:06.467" critical="yes" starttime="20201027 14:09:54.327"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201027 14:10:06.470" starttime="20201027 14:06:12.491"></status>
</suite>
<status status="PASS" elapsedtime="268155" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
