<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201027 14:03:12.916" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:58:50.109" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:58:54.561" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 13:58:54.561" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 13:58:54.562" starttime="20201027 13:58:50.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:58:54.563" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 13:58:54.563" starttime="20201027 13:58:54.562"></status>
</kw>
<msg timestamp="20201027 13:58:54.563" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 13:58:54.563" starttime="20201027 13:58:50.103"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:58:54.571" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:58:58.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:58:58.674" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 13:58:58.674" starttime="20201027 13:58:54.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:58:58.675" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 13:58:58.675" starttime="20201027 13:58:58.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:58:58.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:58:58.676" starttime="20201027 13:58:58.675"></status>
</kw>
<status status="PASS" endtime="20201027 13:58:58.676" starttime="20201027 13:58:54.566"></status>
</kw>
<msg timestamp="20201027 13:58:58.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:58:58.677" starttime="20201027 13:58:54.565"></status>
</kw>
<msg timestamp="20201027 13:58:58.677" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 13:58:58.677" starttime="20201027 13:58:54.565"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201027 13:58:58.678" starttime="20201027 13:58:58.677"></status>
</kw>
<status status="PASS" endtime="20201027 13:58:58.678" starttime="20201027 13:58:54.564"></status>
</kw>
<status status="PASS" endtime="20201027 13:58:58.678" starttime="20201027 13:58:54.564"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:58:58.683" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:59:02.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:59:02.388" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 13:59:02.388" starttime="20201027 13:58:58.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:59:02.389" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 13:59:02.389" starttime="20201027 13:59:02.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:59:02.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:59:02.390" starttime="20201027 13:59:02.390"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:02.391" starttime="20201027 13:58:58.680"></status>
</kw>
<msg timestamp="20201027 13:59:02.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:59:02.391" starttime="20201027 13:58:58.680"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:02.391" starttime="20201027 13:58:58.679"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:02.391" starttime="20201027 13:58:58.679"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:02.391" starttime="20201027 13:58:58.678"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201027 13:59:02.392" starttime="20201027 13:59:02.392"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:59:02.396" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:59:06.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:59:06.696" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 13:59:06.696" starttime="20201027 13:59:02.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:59:06.697" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T13:59:02.172Z",
  "modificationTime" : "2020-10-27T13:59:02.172Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 13:59:06.698" starttime="20201027 13:59:06.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:59:06.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:59:06.698" starttime="20201027 13:59:06.698"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:06.699" starttime="20201027 13:59:02.393"></status>
</kw>
<msg timestamp="20201027 13:59:06.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:59:06.699" starttime="20201027 13:59:02.393"></status>
</kw>
<msg timestamp="20201027 13:59:06.699" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 13:59:06.699" starttime="20201027 13:59:02.392"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201027 13:59:06.700" starttime="20201027 13:59:06.699"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:59:06.704" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:59:06.704" starttime="20201027 13:59:06.704"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:59:06.705" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:59:06.705" starttime="20201027 13:59:06.705"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:06.706" starttime="20201027 13:59:06.703"></status>
</kw>
<msg timestamp="20201027 13:59:06.706" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:59:06.706" starttime="20201027 13:59:06.703"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:06.706" starttime="20201027 13:59:06.702"></status>
</kw>
<msg timestamp="20201027 13:59:06.706" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 13:59:06.706" starttime="20201027 13:59:06.701"></status>
</kw>
<msg timestamp="20201027 13:59:06.707" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 13:59:06.707" starttime="20201027 13:59:06.700"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:59:06.710" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:59:10.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:59:10.824" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 13:59:10.824" starttime="20201027 13:59:06.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:59:10.825" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 13:59:10.825" starttime="20201027 13:59:10.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:59:10.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:59:10.826" starttime="20201027 13:59:10.825"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:10.826" starttime="20201027 13:59:06.708"></status>
</kw>
<msg timestamp="20201027 13:59:10.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:59:10.827" starttime="20201027 13:59:06.707"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:10.827" starttime="20201027 13:59:06.707"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:59:10.831" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:59:20.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:59:20.215" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 13:59:20.215" starttime="20201027 13:59:10.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:59:20.216" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 13:59:20.216" starttime="20201027 13:59:20.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:59:20.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:59:20.217" starttime="20201027 13:59:20.216"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:20.217" starttime="20201027 13:59:10.828"></status>
</kw>
<msg timestamp="20201027 13:59:20.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:59:20.218" starttime="20201027 13:59:10.828"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:20.218" starttime="20201027 13:59:10.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:59:20.222" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:59:26.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:59:26.421" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 13:59:26.421" starttime="20201027 13:59:20.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:59:26.426" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 13:59:26.426" starttime="20201027 13:59:26.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:59:26.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:59:26.427" starttime="20201027 13:59:26.426"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:26.427" starttime="20201027 13:59:20.219"></status>
</kw>
<msg timestamp="20201027 13:59:26.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:59:26.427" starttime="20201027 13:59:20.219"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:26.428" starttime="20201027 13:59:20.218"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:59:26.433" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:59:32.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:59:32.335" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 13:59:32.336" starttime="20201027 13:59:26.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:59:32.337" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 13:59:32.337" starttime="20201027 13:59:32.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:59:32.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:59:32.338" starttime="20201027 13:59:32.337"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:32.338" starttime="20201027 13:59:26.429"></status>
</kw>
<msg timestamp="20201027 13:59:32.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:59:32.338" starttime="20201027 13:59:26.429"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:32.338" starttime="20201027 13:59:26.428"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 13:59:32.339" critical="yes" starttime="20201027 13:58:50.102"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 13:59:32.344" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 13:59:32.344" starttime="20201027 13:59:32.343"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 13:59:32.345" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 13:59:32.345" starttime="20201027 13:59:32.344"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:32.345" starttime="20201027 13:59:32.343"></status>
</kw>
<msg timestamp="20201027 13:59:32.345" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 13:59:32.345" starttime="20201027 13:59:32.342"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:32.346" starttime="20201027 13:59:32.342"></status>
</kw>
<msg timestamp="20201027 13:59:32.346" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 13:59:32.346" starttime="20201027 13:59:32.341"></status>
</kw>
<msg timestamp="20201027 13:59:32.346" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 13:59:32.346" starttime="20201027 13:59:32.340"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:59:32.350" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:59:36.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:59:36.189" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 13:59:36.189" starttime="20201027 13:59:32.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:59:36.190" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 13:59:36.190" starttime="20201027 13:59:36.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:59:36.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:59:36.191" starttime="20201027 13:59:36.190"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:36.191" starttime="20201027 13:59:32.347"></status>
</kw>
<msg timestamp="20201027 13:59:36.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:59:36.192" starttime="20201027 13:59:32.347"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:36.192" starttime="20201027 13:59:32.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:59:36.197" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:59:40.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:59:40.279" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 13:59:40.279" starttime="20201027 13:59:36.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:59:40.280" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 13:59:40.280" starttime="20201027 13:59:40.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:59:40.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:59:40.281" starttime="20201027 13:59:40.280"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:40.281" starttime="20201027 13:59:36.193"></status>
</kw>
<msg timestamp="20201027 13:59:40.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:59:40.282" starttime="20201027 13:59:36.193"></status>
</kw>
<status status="PASS" endtime="20201027 13:59:40.282" starttime="20201027 13:59:36.192"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 13:59:40.282" critical="yes" starttime="20201027 13:59:32.339"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201027 13:59:40.283" starttime="20201027 13:58:50.035"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 14:02:01.817" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 14:02:01.817" starttime="20201027 14:02:01.816"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 14:02:01.818" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 14:02:01.818" starttime="20201027 14:02:01.817"></status>
</kw>
<status status="PASS" endtime="20201027 14:02:01.818" starttime="20201027 14:02:01.816"></status>
</kw>
<msg timestamp="20201027 14:02:01.818" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 14:02:01.818" starttime="20201027 14:02:01.815"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 14:02:01.819" starttime="20201027 14:02:01.819"></status>
</kw>
<msg timestamp="20201027 14:02:01.819" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 14:02:01.819" starttime="20201027 14:02:01.818"></status>
</kw>
<status status="PASS" endtime="20201027 14:02:01.820" starttime="20201027 14:02:01.815"></status>
</kw>
<msg timestamp="20201027 14:02:01.820" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 14:02:01.820" starttime="20201027 14:02:01.814"></status>
</kw>
<msg timestamp="20201027 14:02:01.820" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 14:02:01.820" starttime="20201027 14:02:01.813"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 14:02:01.821" level="INFO">${random} = 51626</msg>
<status status="PASS" endtime="20201027 14:02:01.821" starttime="20201027 14:02:01.820"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:02:01.829" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-51626 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:02:05.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:02:05.847" level="INFO">${output} = 2020-10-27 14:02:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 14:02:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201027 14:02:05.847" starttime="20201027 14:02:01.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:02:05.848" level="INFO">2020-10-27 14:02:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 14:02:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 14:02:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 14:02:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 14:02:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6F4D9F0D94E6-&gt;6d0c7cc9-a737-49e7-9651-3252d6ff42b4
2020-10-27 14:02:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201027 14:02:05.848" starttime="20201027 14:02:05.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:02:05.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:02:05.849" starttime="20201027 14:02:05.848"></status>
</kw>
<status status="PASS" endtime="20201027 14:02:05.849" starttime="20201027 14:02:01.822"></status>
</kw>
<msg timestamp="20201027 14:02:05.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:02:05.849" starttime="20201027 14:02:01.821"></status>
</kw>
<msg timestamp="20201027 14:02:05.850" level="INFO">${result} = 2020-10-27 14:02:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 14:02:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201027 14:02:05.850" starttime="20201027 14:02:01.821"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:02:05.856" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:02:08.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:02:08.218" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:59 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 14:00 ofs://om/volume1/bucket1/ozone-05122
-rw-...</msg>
<status status="PASS" endtime="20201027 14:02:08.218" starttime="20201027 14:02:05.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:02:08.219" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:59 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 14:00 ofs://om/volume1/bucket1/ozone-05122
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 14:02 ofs://om/volume1/bucket1/ozone-51626
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:59 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 14:01 ofs://om/volume1/bucket1/wordcount-12.txt</msg>
<status status="PASS" endtime="20201027 14:02:08.219" starttime="20201027 14:02:08.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:02:08.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:02:08.220" starttime="20201027 14:02:08.219"></status>
</kw>
<status status="PASS" endtime="20201027 14:02:08.220" starttime="20201027 14:02:05.851"></status>
</kw>
<msg timestamp="20201027 14:02:08.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:02:08.220" starttime="20201027 14:02:05.851"></status>
</kw>
<msg timestamp="20201027 14:02:08.220" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:59 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 14:00 ofs://om/volume1/bucket1/ozone-05122
-rw-...</msg>
<status status="PASS" endtime="20201027 14:02:08.220" starttime="20201027 14:02:05.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 14:02:08.221" starttime="20201027 14:02:08.220"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 14:02:08.221" critical="yes" starttime="20201027 14:02:01.812"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 14:02:08.222" starttime="20201027 14:02:01.752"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 14:00:18.521" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 14:00:18.521" starttime="20201027 14:00:18.521"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 14:00:18.522" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 14:00:18.522" starttime="20201027 14:00:18.522"></status>
</kw>
<status status="PASS" endtime="20201027 14:00:18.522" starttime="20201027 14:00:18.520"></status>
</kw>
<msg timestamp="20201027 14:00:18.523" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 14:00:18.523" starttime="20201027 14:00:18.520"></status>
</kw>
<status status="PASS" endtime="20201027 14:00:18.523" starttime="20201027 14:00:18.519"></status>
</kw>
<msg timestamp="20201027 14:00:18.523" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 14:00:18.523" starttime="20201027 14:00:18.519"></status>
</kw>
<msg timestamp="20201027 14:00:18.523" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 14:00:18.523" starttime="20201027 14:00:18.517"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 14:00:18.524" level="INFO">${random} = 05122</msg>
<status status="PASS" endtime="20201027 14:00:18.524" starttime="20201027 14:00:18.523"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:00:18.529" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-05122 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:00:23.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:00:23.365" level="INFO">${output} = 2020-10-27 14:00:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 14:00:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201027 14:00:23.365" starttime="20201027 14:00:18.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:00:23.367" level="INFO">2020-10-27 14:00:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 14:00:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 14:00:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 14:00:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 14:00:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EA5AFAD18AA4-&gt;6d0c7cc9-a737-49e7-9651-3252d6ff42b4
2020-10-27 14:00:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201027 14:00:23.368" starttime="20201027 14:00:23.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:00:23.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:00:23.369" starttime="20201027 14:00:23.368"></status>
</kw>
<status status="PASS" endtime="20201027 14:00:23.369" starttime="20201027 14:00:18.525"></status>
</kw>
<msg timestamp="20201027 14:00:23.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:00:23.370" starttime="20201027 14:00:18.524"></status>
</kw>
<msg timestamp="20201027 14:00:23.370" level="INFO">${result} = 2020-10-27 14:00:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 14:00:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201027 14:00:23.370" starttime="20201027 14:00:18.524"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:00:23.376" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:00:25.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:00:25.661" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:59 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 14:00 o3fs://bucket1.volume1.om/ozone-05122
dr...</msg>
<status status="PASS" endtime="20201027 14:00:25.661" starttime="20201027 14:00:23.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:00:25.662" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:59 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 14:00 o3fs://bucket1.volume1.om/ozone-05122
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:59 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 14:00:25.662" starttime="20201027 14:00:25.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:00:25.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:00:25.663" starttime="20201027 14:00:25.662"></status>
</kw>
<status status="PASS" endtime="20201027 14:00:25.663" starttime="20201027 14:00:23.372"></status>
</kw>
<msg timestamp="20201027 14:00:25.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:00:25.663" starttime="20201027 14:00:23.371"></status>
</kw>
<msg timestamp="20201027 14:00:25.664" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 13:59 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 14:00 o3fs://bucket1.volume1.om/ozone-05122
dr...</msg>
<status status="PASS" endtime="20201027 14:00:25.664" starttime="20201027 14:00:23.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 14:00:25.665" starttime="20201027 14:00:25.664"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 14:00:25.665" critical="yes" starttime="20201027 14:00:18.516"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 14:00:25.666" starttime="20201027 14:00:18.454"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:00:12.571" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:00:12.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:00:12.573" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201027 14:00:12.574" starttime="20201027 14:00:12.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:00:12.575" level="INFO">rm</msg>
<status status="PASS" endtime="20201027 14:00:12.575" starttime="20201027 14:00:12.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:00:12.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:00:12.575" starttime="20201027 14:00:12.575"></status>
</kw>
<status status="PASS" endtime="20201027 14:00:12.576" starttime="20201027 14:00:12.566"></status>
</kw>
<msg timestamp="20201027 14:00:12.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:00:12.576" starttime="20201027 14:00:12.565"></status>
</kw>
<msg timestamp="20201027 14:00:12.577" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201027 14:00:12.577" starttime="20201027 14:00:12.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 14:00:12.578" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 14:00:12.579" starttime="20201027 14:00:12.577"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:00:12.585" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:00:12.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:00:12.607" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 14:00:12.607" starttime="20201027 14:00:12.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:00:12.608" level="INFO"></msg>
<status status="PASS" endtime="20201027 14:00:12.608" starttime="20201027 14:00:12.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:00:12.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:00:12.609" starttime="20201027 14:00:12.608"></status>
</kw>
<status status="PASS" endtime="20201027 14:00:12.609" starttime="20201027 14:00:12.580"></status>
</kw>
<msg timestamp="20201027 14:00:12.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:00:12.609" starttime="20201027 14:00:12.580"></status>
</kw>
<status status="PASS" endtime="20201027 14:00:12.609" starttime="20201027 14:00:12.579"></status>
</kw>
<status status="PASS" endtime="20201027 14:00:12.609" starttime="20201027 14:00:12.579"></status>
</kw>
<status status="PASS" endtime="20201027 14:00:12.609" starttime="20201027 14:00:12.564"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 14:00:12.610" critical="yes" starttime="20201027 14:00:12.564"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201027 14:00:12.611" starttime="20201027 14:00:12.509"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:58:44.395" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:58:44.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:58:44.398" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201027 13:58:44.398" starttime="20201027 13:58:44.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:58:44.399" level="INFO">om</msg>
<status status="PASS" endtime="20201027 13:58:44.399" starttime="20201027 13:58:44.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:58:44.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:58:44.401" starttime="20201027 13:58:44.400"></status>
</kw>
<status status="PASS" endtime="20201027 13:58:44.401" starttime="20201027 13:58:44.391"></status>
</kw>
<msg timestamp="20201027 13:58:44.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:58:44.401" starttime="20201027 13:58:44.390"></status>
</kw>
<msg timestamp="20201027 13:58:44.402" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201027 13:58:44.402" starttime="20201027 13:58:44.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 13:58:44.403" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 13:58:44.403" starttime="20201027 13:58:44.402"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:58:44.408" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:58:44.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:58:44.420" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:58:44.420" starttime="20201027 13:58:44.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:58:44.421" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:58:44.421" starttime="20201027 13:58:44.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:58:44.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:58:44.422" starttime="20201027 13:58:44.421"></status>
</kw>
<status status="PASS" endtime="20201027 13:58:44.422" starttime="20201027 13:58:44.404"></status>
</kw>
<msg timestamp="20201027 13:58:44.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:58:44.423" starttime="20201027 13:58:44.404"></status>
</kw>
<status status="PASS" endtime="20201027 13:58:44.423" starttime="20201027 13:58:44.403"></status>
</kw>
<status status="PASS" endtime="20201027 13:58:44.423" starttime="20201027 13:58:44.403"></status>
</kw>
<status status="PASS" endtime="20201027 13:58:44.423" starttime="20201027 13:58:44.389"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 13:58:44.424" critical="yes" starttime="20201027 13:58:44.388"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201027 13:58:44.424" starttime="20201027 13:58:44.326"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:02:13.842" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:02:13.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:02:13.848" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 14:02:13.848" starttime="20201027 14:02:13.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:02:13.849" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 14:02:13.849" starttime="20201027 14:02:13.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:02:13.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:02:13.850" starttime="20201027 14:02:13.849"></status>
</kw>
<status status="PASS" endtime="20201027 14:02:13.850" starttime="20201027 14:02:13.836"></status>
</kw>
<msg timestamp="20201027 14:02:13.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:02:13.850" starttime="20201027 14:02:13.836"></status>
</kw>
<msg timestamp="20201027 14:02:13.851" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 14:02:13.851" starttime="20201027 14:02:13.836"></status>
</kw>
<msg timestamp="20201027 14:02:13.851" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 14:02:13.851" starttime="20201027 14:02:13.835"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 14:02:13.855" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 14:02:13.855" starttime="20201027 14:02:13.854"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 14:02:13.856" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 14:02:13.856" starttime="20201027 14:02:13.855"></status>
</kw>
<status status="PASS" endtime="20201027 14:02:13.856" starttime="20201027 14:02:13.854"></status>
</kw>
<msg timestamp="20201027 14:02:13.856" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 14:02:13.856" starttime="20201027 14:02:13.853"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 14:02:13.857" starttime="20201027 14:02:13.857"></status>
</kw>
<msg timestamp="20201027 14:02:13.857" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 14:02:13.857" starttime="20201027 14:02:13.856"></status>
</kw>
<status status="PASS" endtime="20201027 14:02:13.857" starttime="20201027 14:02:13.853"></status>
</kw>
<msg timestamp="20201027 14:02:13.857" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 14:02:13.858" starttime="20201027 14:02:13.852"></status>
</kw>
<msg timestamp="20201027 14:02:13.858" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 14:02:13.858" starttime="20201027 14:02:13.851"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:02:13.861" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:03:01.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:03:01.435" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 14:02:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 14:02:16 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201027 14:03:01.435" starttime="20201027 14:02:13.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:03:01.436" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 14:02:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 14:02:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 14:02:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 14:02:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 14:02:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F4EDACD95B76-&gt;6d0c7cc9-a737-49e7-9651-3252d6ff42b4
2020-10-27 14:02:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 14:02:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-10-27 14:02:18 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-10-27 14:02:18 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603807338561, maxDate=1604412138561, sequenceNumber=3, masterKeyId=2))
2020-10-27 14:02:18 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d3 bf f7 d2 d6 2e 38 d3 c7 a9 f3 d8 2e 40 03 48 01 5a 0d 32 37 30 38 37 30 35 33 39 35 30 30 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-27 14:02:18 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603807338561, maxDate=1604412138561, sequenceNumber=3, masterKeyId=2)
2020-10-27 14:02:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 14:02:21 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 14:02:26 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 14:02:26 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603807088827_0003
2020-10-27 14:02:26 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d3 bf f7 d2 d6 2e 38 d3 c7 a9 f3 d8 2e 40 03 48 01 5a 0d 32 37 30 38 37 30 35 33 39 35 30 30 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603807338561, maxDate=1604412138561, sequenceNumber=3, masterKeyId=2)]
2020-10-27 14:02:27 INFO  Configuration:2795 - resource-types.xml not found
2020-10-27 14:02:27 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-27 14:02:27 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-27 14:02:28 INFO  YarnClientImpl:329 - Submitted application application_1603807088827_0003
2020-10-27 14:02:28 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603807088827_0003/
2020-10-27 14:02:28 INFO  Job:1619 - Running job: job_1603807088827_0003
2020-10-27 14:02:36 INFO  Job:1640 - Job job_1603807088827_0003 running in uber mode : false
2020-10-27 14:02:36 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 14:02:48 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 14:02:49 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 14:02:50 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 14:02:55 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 14:03:00 INFO  Job:1658 - Job job_1603807088827_0003 completed successfully
2020-10-27 14:03:00 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1070949
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51590
		Total time spent by all reduces in occupied slots (ms)=8470
		Total time spent by all map tasks (ms)=25795
		Total time spent by all reduce tasks (ms)=4235
		Total vcore-milliseconds taken by all map tasks=25795
		Total vcore-milliseconds taken by all reduce tasks=4235
		Total megabyte-milliseconds taken by all map tasks=52828160
		Total megabyte-milliseconds taken by all reduce tasks=8673280
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1055
		CPU time spent (ms)=8410
		Physical memory (bytes) snapshot=1431638016
		Virtual memory (bytes) snapshot=14311481344
		Total committed heap usage (bytes)=1367343104
		Peak Map Physical memory (bytes)=386539520
		Peak Map Virtual memory (bytes)=3577257984
		Peak Reduce Physical memory (bytes)=302505984
		Peak Reduce Virtual memory (bytes)=3596541952
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 42.88 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201027 14:03:01.436" starttime="20201027 14:03:01.435"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:03:01.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:03:01.437" starttime="20201027 14:03:01.436"></status>
</kw>
<status status="PASS" endtime="20201027 14:03:01.437" starttime="20201027 14:02:13.859"></status>
</kw>
<msg timestamp="20201027 14:03:01.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:03:01.437" starttime="20201027 14:02:13.858"></status>
</kw>
<msg timestamp="20201027 14:03:01.438" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 14:02:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 14:02:16 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201027 14:03:01.438" starttime="20201027 14:02:13.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 14:03:01.439" starttime="20201027 14:03:01.438"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 14:03:01.439" critical="yes" starttime="20201027 14:02:13.834"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:03:01.446" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:03:01.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:03:01.451" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 14:03:01.451" starttime="20201027 14:03:01.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:03:01.452" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 14:03:01.452" starttime="20201027 14:03:01.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:03:01.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:03:01.453" starttime="20201027 14:03:01.453"></status>
</kw>
<status status="PASS" endtime="20201027 14:03:01.453" starttime="20201027 14:03:01.442"></status>
</kw>
<msg timestamp="20201027 14:03:01.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:03:01.454" starttime="20201027 14:03:01.441"></status>
</kw>
<msg timestamp="20201027 14:03:01.454" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 14:03:01.454" starttime="20201027 14:03:01.441"></status>
</kw>
<msg timestamp="20201027 14:03:01.454" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 14:03:01.454" starttime="20201027 14:03:01.440"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 14:03:01.455" level="INFO">${random} = 12</msg>
<status status="PASS" endtime="20201027 14:03:01.455" starttime="20201027 14:03:01.454"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 14:03:01.463" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 14:03:01.463" starttime="20201027 14:03:01.462"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 14:03:01.463" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 14:03:01.463" starttime="20201027 14:03:01.463"></status>
</kw>
<status status="PASS" endtime="20201027 14:03:01.464" starttime="20201027 14:03:01.462"></status>
</kw>
<msg timestamp="20201027 14:03:01.464" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 14:03:01.464" starttime="20201027 14:03:01.461"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 14:03:01.465" starttime="20201027 14:03:01.465"></status>
</kw>
<msg timestamp="20201027 14:03:01.465" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 14:03:01.465" starttime="20201027 14:03:01.464"></status>
</kw>
<status status="PASS" endtime="20201027 14:03:01.466" starttime="20201027 14:03:01.459"></status>
</kw>
<msg timestamp="20201027 14:03:01.466" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 14:03:01.466" starttime="20201027 14:03:01.456"></status>
</kw>
<msg timestamp="20201027 14:03:01.466" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 14:03:01.466" starttime="20201027 14:03:01.455"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 14:03:01.471" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 14:03:01.471" starttime="20201027 14:03:01.471"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 14:03:01.473" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 14:03:01.473" starttime="20201027 14:03:01.471"></status>
</kw>
<status status="PASS" endtime="20201027 14:03:01.473" starttime="20201027 14:03:01.470"></status>
</kw>
<msg timestamp="20201027 14:03:01.473" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 14:03:01.473" starttime="20201027 14:03:01.470"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 14:03:01.475" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201027 14:03:01.475" starttime="20201027 14:03:01.474"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 14:03:01.476" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201027 14:03:01.476" starttime="20201027 14:03:01.475"></status>
</kw>
<status status="PASS" endtime="20201027 14:03:01.476" starttime="20201027 14:03:01.474"></status>
</kw>
<msg timestamp="20201027 14:03:01.476" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201027 14:03:01.476" starttime="20201027 14:03:01.473"></status>
</kw>
<status status="PASS" endtime="20201027 14:03:01.476" starttime="20201027 14:03:01.469"></status>
</kw>
<msg timestamp="20201027 14:03:01.476" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 14:03:01.476" starttime="20201027 14:03:01.467"></status>
</kw>
<msg timestamp="20201027 14:03:01.477" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 14:03:01.477" starttime="20201027 14:03:01.466"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 14:03:01.480" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 14:03:01.480" starttime="20201027 14:03:01.480"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 14:03:01.481" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 14:03:01.481" starttime="20201027 14:03:01.480"></status>
</kw>
<status status="PASS" endtime="20201027 14:03:01.481" starttime="20201027 14:03:01.479"></status>
</kw>
<msg timestamp="20201027 14:03:01.481" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 14:03:01.481" starttime="20201027 14:03:01.479"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 14:03:01.483" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201027 14:03:01.483" starttime="20201027 14:03:01.482"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 14:03:01.483" level="INFO">${result} = /wordcount-12.txt</msg>
<status status="PASS" endtime="20201027 14:03:01.483" starttime="20201027 14:03:01.483"></status>
</kw>
<status status="PASS" endtime="20201027 14:03:01.484" starttime="20201027 14:03:01.482"></status>
</kw>
<msg timestamp="20201027 14:03:01.484" level="INFO">${path_with_leading} = /wordcount-12.txt</msg>
<status status="PASS" endtime="20201027 14:03:01.484" starttime="20201027 14:03:01.481"></status>
</kw>
<status status="PASS" endtime="20201027 14:03:01.484" starttime="20201027 14:03:01.478"></status>
</kw>
<msg timestamp="20201027 14:03:01.484" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-12.txt</msg>
<status status="PASS" endtime="20201027 14:03:01.484" starttime="20201027 14:03:01.477"></status>
</kw>
<msg timestamp="20201027 14:03:01.484" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-12.txt</msg>
<status status="PASS" endtime="20201027 14:03:01.484" starttime="20201027 14:03:01.477"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:03:01.490" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-12.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:03:04.396" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 14:03:04.397" level="INFO">${output} = 2020-10-27 14:03:03 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-10-27 14:03:03 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
20...</msg>
<status status="PASS" endtime="20201027 14:03:04.397" starttime="20201027 14:03:01.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:03:04.398" level="INFO">2020-10-27 14:03:03 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-10-27 14:03:03 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-10-27 14:03:04 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603807384212, maxDate=1604412184212, sequenceNumber=4, masterKeyId=2))
2020-10-27 14:03:04 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ac a4 fa d2 d6 2e 38 ac ac ac f3 d8 2e 40 04 48 01 5a 0d 32 37 30 38 37 30 35 33 39 35 30 30 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-27 14:03:04 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603807384212, maxDate=1604412184212, sequenceNumber=4, masterKeyId=2)
org.apache.hadoop.mapred.FileAlreadyExistsException: Output directory ofs://om/volume1/bucket1/wordcount-12.txt already exists
	at org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.checkOutputSpecs(FileOutputFormat.java:164)
	at org.apache.hadoop.mapreduce.JobSubmitter.checkSpecs(JobSubmitter.java:277)
	at org.apache.hadoop.mapreduce.JobSubmitter.submitJobInternal(JobSubmitter.java:143)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1570)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1567)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1567)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1588)
	at org.apache.hadoop.examples.WordCount.main(WordCount.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)</msg>
<status status="PASS" endtime="20201027 14:03:04.398" starttime="20201027 14:03:04.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:03:04.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201027 14:03:04.399" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20201027 14:03:04.399" starttime="20201027 14:03:04.398"></status>
</kw>
<status status="FAIL" endtime="20201027 14:03:04.400" starttime="20201027 14:03:01.485"></status>
</kw>
<msg timestamp="20201027 14:03:04.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201027 14:03:04.400" starttime="20201027 14:03:01.485"></status>
</kw>
<status status="FAIL" endtime="20201027 14:03:04.400" starttime="20201027 14:03:01.485"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201027 14:03:04.400" critical="yes" starttime="20201027 14:03:01.440">255 != 0</status>
</test>
<doc>Execute MR jobs</doc>
<status status="FAIL" endtime="20201027 14:03:04.402" starttime="20201027 14:02:13.773"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:00:31.522" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:00:31.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:00:31.529" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 14:00:31.529" starttime="20201027 14:00:31.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:00:31.530" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 14:00:31.530" starttime="20201027 14:00:31.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:00:31.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:00:31.531" starttime="20201027 14:00:31.530"></status>
</kw>
<status status="PASS" endtime="20201027 14:00:31.531" starttime="20201027 14:00:31.517"></status>
</kw>
<msg timestamp="20201027 14:00:31.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:00:31.531" starttime="20201027 14:00:31.516"></status>
</kw>
<msg timestamp="20201027 14:00:31.531" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 14:00:31.531" starttime="20201027 14:00:31.516"></status>
</kw>
<msg timestamp="20201027 14:00:31.532" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 14:00:31.532" starttime="20201027 14:00:31.515"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 14:00:31.535" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 14:00:31.535" starttime="20201027 14:00:31.535"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 14:00:31.536" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 14:00:31.536" starttime="20201027 14:00:31.535"></status>
</kw>
<status status="PASS" endtime="20201027 14:00:31.536" starttime="20201027 14:00:31.534"></status>
</kw>
<msg timestamp="20201027 14:00:31.536" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 14:00:31.536" starttime="20201027 14:00:31.534"></status>
</kw>
<status status="PASS" endtime="20201027 14:00:31.537" starttime="20201027 14:00:31.533"></status>
</kw>
<msg timestamp="20201027 14:00:31.537" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 14:00:31.537" starttime="20201027 14:00:31.532"></status>
</kw>
<msg timestamp="20201027 14:00:31.537" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 14:00:31.537" starttime="20201027 14:00:31.532"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:00:31.542" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:01:18.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:01:18.038" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 14:00:34 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 14:00:34 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201027 14:01:18.038" starttime="20201027 14:00:31.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:01:18.040" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 14:00:34 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 14:00:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 14:00:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 14:00:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 14:00:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-11DAD8EF3688-&gt;6d0c7cc9-a737-49e7-9651-3252d6ff42b4
2020-10-27 14:00:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 14:00:38 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-10-27 14:00:38 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-10-27 14:00:39 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603807238933, maxDate=1604412038933, sequenceNumber=1, masterKeyId=2))
2020-10-27 14:00:39 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e5 b3 f1 d2 d6 2e 38 e5 bb a3 f3 d8 2e 40 01 48 01 5a 0d 32 37 30 38 37 30 35 33 39 35 30 30 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-27 14:00:39 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603807238933, maxDate=1604412038933, sequenceNumber=1, masterKeyId=2)
2020-10-27 14:00:39 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 14:00:39 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 14:00:39 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603807088827_0001
2020-10-27 14:00:39 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e5 b3 f1 d2 d6 2e 38 e5 bb a3 f3 d8 2e 40 01 48 01 5a 0d 32 37 30 38 37 30 35 33 39 35 30 30 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603807238933, maxDate=1604412038933, sequenceNumber=1, masterKeyId=2)]
2020-10-27 14:00:40 INFO  Configuration:2795 - resource-types.xml not found
2020-10-27 14:00:40 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-27 14:00:40 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-27 14:00:42 INFO  YarnClientImpl:329 - Submitted application application_1603807088827_0001
2020-10-27 14:00:42 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603807088827_0001/
2020-10-27 14:00:42 INFO  Job:1619 - Running job: job_1603807088827_0001
2020-10-27 14:00:55 INFO  Job:1640 - Job job_1603807088827_0001 running in uber mode : false
2020-10-27 14:00:55 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 14:01:06 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 14:01:08 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 14:01:09 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 14:01:16 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 14:01:17 INFO  Job:1658 - Job job_1603807088827_0001 completed successfully
2020-10-27 14:01:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1071161
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=54694
		Total time spent by all reduces in occupied slots (ms)=13886
		Total time spent by all map tasks (ms)=27347
		Total time spent by all reduce tasks (ms)=6943
		Total vcore-milliseconds taken by all map tasks=27347
		Total vcore-milliseconds taken by all reduce tasks=6943
		Total megabyte-milliseconds taken by all map tasks=56006656
		Total megabyte-milliseconds taken by all reduce tasks=14219264
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1104
		CPU time spent (ms)=8760
		Physical memory (bytes) snapshot=1492770816
		Virtual memory (bytes) snapshot=14326616064
		Total committed heap usage (bytes)=1487405056
		Peak Map Physical memory (bytes)=380043264
		Peak Map Virtual memory (bytes)=3578310656
		Peak Reduce Physical memory (bytes)=380420096
		Peak Reduce Virtual memory (bytes)=3598729216
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.306 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201027 14:01:18.040" starttime="20201027 14:01:18.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:01:18.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:01:18.041" starttime="20201027 14:01:18.040"></status>
</kw>
<status status="PASS" endtime="20201027 14:01:18.041" starttime="20201027 14:00:31.539"></status>
</kw>
<msg timestamp="20201027 14:01:18.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:01:18.041" starttime="20201027 14:00:31.539"></status>
</kw>
<msg timestamp="20201027 14:01:18.042" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 14:00:34 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 14:00:34 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201027 14:01:18.042" starttime="20201027 14:00:31.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 14:01:18.043" starttime="20201027 14:01:18.042"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 14:01:18.043" critical="yes" starttime="20201027 14:00:31.515"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:01:18.050" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:01:18.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:01:18.053" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 14:01:18.053" starttime="20201027 14:01:18.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:01:18.054" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 14:01:18.055" starttime="20201027 14:01:18.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:01:18.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:01:18.055" starttime="20201027 14:01:18.055"></status>
</kw>
<status status="PASS" endtime="20201027 14:01:18.056" starttime="20201027 14:01:18.045"></status>
</kw>
<msg timestamp="20201027 14:01:18.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:01:18.056" starttime="20201027 14:01:18.045"></status>
</kw>
<msg timestamp="20201027 14:01:18.056" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 14:01:18.056" starttime="20201027 14:01:18.044"></status>
</kw>
<msg timestamp="20201027 14:01:18.056" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 14:01:18.056" starttime="20201027 14:01:18.044"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 14:01:18.057" level="INFO">${random} = 12</msg>
<status status="PASS" endtime="20201027 14:01:18.057" starttime="20201027 14:01:18.056"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 14:01:18.061" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 14:01:18.061" starttime="20201027 14:01:18.060"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 14:01:18.061" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 14:01:18.061" starttime="20201027 14:01:18.061"></status>
</kw>
<status status="PASS" endtime="20201027 14:01:18.061" starttime="20201027 14:01:18.060"></status>
</kw>
<msg timestamp="20201027 14:01:18.062" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 14:01:18.062" starttime="20201027 14:01:18.059"></status>
</kw>
<status status="PASS" endtime="20201027 14:01:18.062" starttime="20201027 14:01:18.058"></status>
</kw>
<msg timestamp="20201027 14:01:18.062" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 14:01:18.062" starttime="20201027 14:01:18.058"></status>
</kw>
<msg timestamp="20201027 14:01:18.062" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 14:01:18.062" starttime="20201027 14:01:18.057"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 14:01:18.066" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 14:01:18.066" starttime="20201027 14:01:18.065"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 14:01:18.066" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 14:01:18.067" starttime="20201027 14:01:18.066"></status>
</kw>
<status status="PASS" endtime="20201027 14:01:18.067" starttime="20201027 14:01:18.065"></status>
</kw>
<msg timestamp="20201027 14:01:18.067" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 14:01:18.067" starttime="20201027 14:01:18.064"></status>
</kw>
<status status="PASS" endtime="20201027 14:01:18.067" starttime="20201027 14:01:18.064"></status>
</kw>
<msg timestamp="20201027 14:01:18.067" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 14:01:18.067" starttime="20201027 14:01:18.063"></status>
</kw>
<msg timestamp="20201027 14:01:18.068" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 14:01:18.068" starttime="20201027 14:01:18.063"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 14:01:18.071" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 14:01:18.071" starttime="20201027 14:01:18.070"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 14:01:18.072" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 14:01:18.072" starttime="20201027 14:01:18.071"></status>
</kw>
<status status="PASS" endtime="20201027 14:01:18.072" starttime="20201027 14:01:18.070"></status>
</kw>
<msg timestamp="20201027 14:01:18.072" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 14:01:18.072" starttime="20201027 14:01:18.069"></status>
</kw>
<status status="PASS" endtime="20201027 14:01:18.072" starttime="20201027 14:01:18.069"></status>
</kw>
<msg timestamp="20201027 14:01:18.072" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-12.txt</msg>
<status status="PASS" endtime="20201027 14:01:18.072" starttime="20201027 14:01:18.068"></status>
</kw>
<msg timestamp="20201027 14:01:18.073" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-12.txt</msg>
<status status="PASS" endtime="20201027 14:01:18.073" starttime="20201027 14:01:18.068"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 14:01:18.078" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-12.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 14:01:55.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 14:01:55.555" level="INFO">${output} = 2020-10-27 14:01:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-10-27 14:01:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
20...</msg>
<status status="PASS" endtime="20201027 14:01:55.555" starttime="20201027 14:01:18.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 14:01:55.556" level="INFO">2020-10-27 14:01:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-10-27 14:01:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-10-27 14:01:20 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603807280676, maxDate=1604412080676, sequenceNumber=2, masterKeyId=2))
2020-10-27 14:01:20 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c0 fb f3 d2 d6 2e 38 c0 83 a6 f3 d8 2e 40 02 48 01 5a 0d 32 37 30 38 37 30 35 33 39 35 30 30 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-27 14:01:20 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603807280676, maxDate=1604412080676, sequenceNumber=2, masterKeyId=2)
2020-10-27 14:01:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 14:01:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 14:01:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 14:01:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 14:01:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 14:01:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AE9F41C9E0D4-&gt;6d0c7cc9-a737-49e7-9651-3252d6ff42b4
2020-10-27 14:01:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 14:01:24 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 14:01:24 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 14:01:25 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603807088827_0002
2020-10-27 14:01:25 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c0 fb f3 d2 d6 2e 38 c0 83 a6 f3 d8 2e 40 02 48 01 5a 0d 32 37 30 38 37 30 35 33 39 35 30 30 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1603807280676, maxDate=1604412080676, sequenceNumber=2, masterKeyId=2)]
2020-10-27 14:01:25 INFO  Configuration:2795 - resource-types.xml not found
2020-10-27 14:01:25 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-27 14:01:25 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-27 14:01:26 INFO  YarnClientImpl:329 - Submitted application application_1603807088827_0002
2020-10-27 14:01:26 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603807088827_0002/
2020-10-27 14:01:26 INFO  Job:1619 - Running job: job_1603807088827_0002
2020-10-27 14:01:35 INFO  Job:1640 - Job job_1603807088827_0002 running in uber mode : false
2020-10-27 14:01:35 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 14:01:46 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 14:01:49 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 14:01:54 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 14:01:55 INFO  Job:1658 - Job job_1603807088827_0002 completed successfully
2020-10-27 14:01:55 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1133705
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=52146
		Total time spent by all reduces in occupied slots (ms)=8706
		Total time spent by all map tasks (ms)=26073
		Total time spent by all reduce tasks (ms)=4353
		Total vcore-milliseconds taken by all map tasks=26073
		Total vcore-milliseconds taken by all reduce tasks=4353
		Total megabyte-milliseconds taken by all map tasks=53397504
		Total megabyte-milliseconds taken by all reduce tasks=8914944
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1130
		CPU time spent (ms)=8820
		Physical memory (bytes) snapshot=1514008576
		Virtual memory (bytes) snapshot=14322618368
		Total committed heap usage (bytes)=1245184000
		Peak Map Physical memory (bytes)=383369216
		Peak Map Virtual memory (bytes)=3576942592
		Peak Reduce Physical memory (bytes)=378540032
		Peak Reduce Virtual memory (bytes)=3598540800
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201027 14:01:55.557" starttime="20201027 14:01:55.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 14:01:55.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 14:01:55.558" starttime="20201027 14:01:55.557"></status>
</kw>
<status status="PASS" endtime="20201027 14:01:55.558" starttime="20201027 14:01:18.074"></status>
</kw>
<msg timestamp="20201027 14:01:55.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 14:01:55.558" starttime="20201027 14:01:18.073"></status>
</kw>
<msg timestamp="20201027 14:01:55.559" level="INFO">${output} = 2020-10-27 14:01:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-10-27 14:01:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
20...</msg>
<status status="PASS" endtime="20201027 14:01:55.559" starttime="20201027 14:01:18.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 14:01:55.559" starttime="20201027 14:01:55.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 14:01:55.560" starttime="20201027 14:01:55.559"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 14:01:55.560" critical="yes" starttime="20201027 14:01:18.043"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 14:01:55.561" starttime="20201027 14:00:31.453"></status>
</suite>
<status status="FAIL" elapsedtime="198867" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="9">Critical Tests</stat>
<stat fail="1" pass="9">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="ozonesecure-mr" pass="9">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="1" id="s1-s6" name="mapreduce-ofs" pass="1">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
