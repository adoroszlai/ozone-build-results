<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201027 13:54:43.242" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20201027 13:51:43.566" starttime="20201027 13:51:43.565"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:51:43.573" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:51:43.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:51:43.661" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 27 Oct 2020 13:51:43 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 27 Oct 2020 13:15:52 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201027 13:51:43.661" starttime="20201027 13:51:43.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:51:43.662" level="INFO">HTTP/1.1 200 OK
Date: Tue, 27 Oct 2020 13:51:43 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 27 Oct 2020 13:15:52 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20201027 13:51:43.662" starttime="20201027 13:51:43.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:51:43.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:51:43.663" starttime="20201027 13:51:43.662"></status>
</kw>
<status status="PASS" endtime="20201027 13:51:43.663" starttime="20201027 13:51:43.567"></status>
</kw>
<msg timestamp="20201027 13:51:43.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:51:43.663" starttime="20201027 13:51:43.567"></status>
</kw>
<msg timestamp="20201027 13:51:43.664" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 27 Oct 2020 13:51:43 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 27 Oct 2020 13:15:52 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201027 13:51:43.664" starttime="20201027 13:51:43.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20201027 13:51:43.664" starttime="20201027 13:51:43.664"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 13:51:43.665" critical="yes" starttime="20201027 13:51:43.564"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201027 13:51:43.667" starttime="20201027 13:51:43.667"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:51:43.671" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:52:55.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:52:55.034" level="INFO">${output} = 2020-10-27 13:51:45,420 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 13:51:45,575 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 13:52:55.034" starttime="20201027 13:51:43.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:52:55.036" level="INFO">2020-10-27 13:51:45,420 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 13:51:45,575 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-27 13:51:45,575 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-27 13:51:47,517 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-27 13:51:47,518 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-10-27 13:51:47,518 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-10-27 13:51:47,519 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-10-27 13:51:47,519 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-27 13:51:47,519 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-27 13:51:47,519 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-10-27 13:51:47,532 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-10-27 13:51:47,536 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-27 13:51:47,552 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-10-27 13:51:47,589 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-44119, with hadoop as owner.
2020-10-27 13:51:47,920 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-64679, with hadoop as owner.
2020-10-27 13:51:47,929 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-42071, with hadoop as owner.
2020-10-27 13:51:47,934 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-81774, with hadoop as owner.
2020-10-27 13:51:47,942 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-99610, with hadoop as owner.
2020-10-27 13:51:47,961 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-44119/bucket-0-04816, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,087 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-64679/bucket-0-29850, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,098 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-42071/bucket-0-33761, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,108 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-81774/bucket-0-92885, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,124 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-99610/bucket-0-99292, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,137 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-44119/bucket-1-92772, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,154 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-64679/bucket-1-10511, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,161 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-42071/bucket-1-41703, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,169 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-81774/bucket-1-92638, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,184 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-99610/bucket-1-04246, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,199 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-44119/bucket-2-68754, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,209 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-64679/bucket-2-19453, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,214 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-42071/bucket-2-16910, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,222 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-81774/bucket-2-02305, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,228 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-99610/bucket-2-67366, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,235 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-44119/bucket-3-73689, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,241 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-64679/bucket-3-51308, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,245 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-42071/bucket-3-92999, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,252 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-81774/bucket-3-25011, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,258 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-99610/bucket-3-66542, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,262 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-44119/bucket-4-98671, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,266 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-64679/bucket-4-51711, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,271 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-42071/bucket-4-20925, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,275 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-81774/bucket-4-42735, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,279 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-99610/bucket-4-61215, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 13:51:48,560 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-10-27 13:51:49,560 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-10-27 13:51:49,660 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-27 13:51:50,364 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 13:51:50,365 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-E62004804220-&gt;6955fde9-20ac-462b-8fc0-3732eba611b4
2020-10-27 13:51:50,366 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 13:51:50,561 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-10-27 13:51:51,562 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-10-27 13:51:52,562 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-10-27 13:51:52,782 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-EE257FF46852-&gt;5dc51fed-695c-4f74-b632-77637eb01bda
2020-10-27 13:51:52,783 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 13:51:53,599 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-10-27 13:51:54,600 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-10-27 13:51:55,601 [Thread-7] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2020-10-27 13:51:56,604 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-10-27 13:51:57,613 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-10-27 13:51:58,615 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-10-27 13:51:59,616 [Thread-7] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2020-10-27 13:52:00,616 [Thread-7] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2020-10-27 13:52:01,619 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-10-27 13:52:02,620 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-10-27 13:52:03,620 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-10-27 13:52:04,621 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-10-27 13:52:05,621 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-10-27 13:52:06,622 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-10-27 13:52:07,623 [Thread-7] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-10-27 13:52:08,623 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-10-27 13:52:09,624 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-10-27 13:52:10,630 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-10-27 13:52:11,631 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-10-27 13:52:12,631 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-10-27 13:52:13,632 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-10-27 13:52:14,632 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-10-27 13:52:15,633 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-10-27 13:52:16,633 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-10-27 13:52:17,634 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-10-27 13:52:18,635 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-10-27 13:52:19,635 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-10-27 13:52:20,635 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-10-27 13:52:21,636 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-10-27 13:52:22,637 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-10-27 13:52:23,637 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-10-27 13:52:24,638 [Thread-7] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-10-27 13:52:25,638 [Thread-7] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-10-27 13:52:26,639 [Thread-7] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-10-27 13:52:27,639 [Thread-7] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-10-27 13:52:28,640 [Thread-7] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-10-27 13:52:29,640 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-10-27 13:52:30,641 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-10-27 13:52:31,641 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-10-27 13:52:32,642 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-10-27 13:52:33,642 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-10-27 13:52:34,643 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-10-27 13:52:35,643 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-10-27 13:52:36,644 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-10-27 13:52:37,644 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-10-27 13:52:38,645 [Thread-7] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-10-27 13:52:39,645 [Thread-7] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-10-27 13:52:40,646 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-10-27 13:52:41,646 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-10-27 13:52:42,647 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-10-27 13:52:43,647 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-10-27 13:52:44,647 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-10-27 13:52:45,648 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-10-27 13:52:46,648 [Thread-7] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-10-27 13:52:47,649 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-10-27 13:52:48,649 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-10-27 13:52:49,650 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,372
Average Time spent in bucket creation: 00:00:00,232
Average Time spent in key creation: 00:00:02,248
Average Time spent in key write: 00:00:01,356
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:08,853
***************************************************</msg>
<status status="PASS" endtime="20201027 13:52:55.036" starttime="20201027 13:52:55.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:52:55.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:52:55.037" starttime="20201027 13:52:55.036"></status>
</kw>
<status status="PASS" endtime="20201027 13:52:55.037" starttime="20201027 13:51:43.668"></status>
</kw>
<msg timestamp="20201027 13:52:55.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:52:55.037" starttime="20201027 13:51:43.668"></status>
</kw>
<msg timestamp="20201027 13:52:55.037" level="INFO">${result} = 2020-10-27 13:51:45,420 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 13:51:45,575 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 13:52:55.037" starttime="20201027 13:51:43.668"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20201027 13:52:55.039" starttime="20201027 13:52:55.038"></status>
</kw>
<status status="PASS" endtime="20201027 13:52:55.039" starttime="20201027 13:52:55.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20201027 13:52:55.039" starttime="20201027 13:52:55.039"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 13:52:55.039" critical="yes" starttime="20201027 13:51:43.666"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201027 13:52:55.041" starttime="20201027 13:51:43.504"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:52:59.571" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:53:02.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:53:02.059" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201027 13:53:02.059" starttime="20201027 13:52:59.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:53:02.060" level="INFO">State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2</msg>
<status status="PASS" endtime="20201027 13:53:02.061" starttime="20201027 13:53:02.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:53:02.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:53:02.061" starttime="20201027 13:53:02.061"></status>
</kw>
<status status="PASS" endtime="20201027 13:53:02.062" starttime="20201027 13:52:59.567"></status>
</kw>
<msg timestamp="20201027 13:53:02.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:53:02.062" starttime="20201027 13:52:59.566"></status>
</kw>
<msg timestamp="20201027 13:53:02.062" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201027 13:53:02.062" starttime="20201027 13:52:59.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20201027 13:53:02.063" starttime="20201027 13:53:02.063"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 13:53:02.063" critical="yes" starttime="20201027 13:52:59.565"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:53:02.069" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:53:04.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:53:04.566" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201027 13:53:04.566" starttime="20201027 13:53:02.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:53:04.568" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20201027 13:53:04.568" starttime="20201027 13:53:04.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:53:04.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:53:04.569" starttime="20201027 13:53:04.568"></status>
</kw>
<status status="PASS" endtime="20201027 13:53:04.569" starttime="20201027 13:53:02.066"></status>
</kw>
<msg timestamp="20201027 13:53:04.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:53:04.569" starttime="20201027 13:53:02.065"></status>
</kw>
<msg timestamp="20201027 13:53:04.570" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201027 13:53:04.570" starttime="20201027 13:53:02.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20201027 13:53:04.570" starttime="20201027 13:53:04.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20201027 13:53:04.571" starttime="20201027 13:53:04.570"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 13:53:04.571" critical="yes" starttime="20201027 13:53:02.064"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201027 13:53:04.572" starttime="20201027 13:52:59.508"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:53:09.213" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:53:11.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:53:11.976" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:53:11.976" starttime="20201027 13:53:09.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:53:11.977" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:53:11.977" starttime="20201027 13:53:11.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:53:11.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:53:11.978" starttime="20201027 13:53:11.978"></status>
</kw>
<status status="PASS" endtime="20201027 13:53:11.979" starttime="20201027 13:53:09.208"></status>
</kw>
<msg timestamp="20201027 13:53:11.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:53:11.979" starttime="20201027 13:53:09.208"></status>
</kw>
<msg timestamp="20201027 13:53:11.979" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:53:11.979" starttime="20201027 13:53:09.207"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201027 13:53:11.980" starttime="20201027 13:53:11.979"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:53:11.984" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:53:14.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:53:14.904" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:53:14.904" starttime="20201027 13:53:11.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:53:14.905" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:53:14.905" starttime="20201027 13:53:14.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:53:14.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:53:14.906" starttime="20201027 13:53:14.905"></status>
</kw>
<status status="PASS" endtime="20201027 13:53:14.906" starttime="20201027 13:53:11.981"></status>
</kw>
<msg timestamp="20201027 13:53:14.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:53:14.906" starttime="20201027 13:53:11.980"></status>
</kw>
<msg timestamp="20201027 13:53:14.907" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:53:14.907" starttime="20201027 13:53:11.980"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201027 13:53:14.907" starttime="20201027 13:53:14.907"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:53:14.911" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:53:20.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:53:20.047" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:53:20.047" starttime="20201027 13:53:14.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:53:20.049" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:53:20.049" starttime="20201027 13:53:20.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:53:20.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:53:20.049" starttime="20201027 13:53:20.049"></status>
</kw>
<status status="PASS" endtime="20201027 13:53:20.050" starttime="20201027 13:53:14.909"></status>
</kw>
<msg timestamp="20201027 13:53:20.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:53:20.050" starttime="20201027 13:53:14.908"></status>
</kw>
<msg timestamp="20201027 13:53:20.050" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:53:20.051" starttime="20201027 13:53:14.908"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201027 13:53:20.051" starttime="20201027 13:53:20.051"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 13:53:20.052" critical="yes" starttime="20201027 13:53:09.206"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201027 13:53:20.053" starttime="20201027 13:53:09.146"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 13:54:01.692" level="INFO">${random} = 16223</msg>
<status status="PASS" endtime="20201027 13:54:01.693" starttime="20201027 13:54:01.692"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:54:01.698" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-16223 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:54:36.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:54:36.435" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:54:36.435" starttime="20201027 13:54:01.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:54:36.436" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:54:36.436" starttime="20201027 13:54:36.435"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:54:36.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:54:36.437" starttime="20201027 13:54:36.436"></status>
</kw>
<status status="PASS" endtime="20201027 13:54:36.437" starttime="20201027 13:54:01.694"></status>
</kw>
<msg timestamp="20201027 13:54:36.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:54:36.438" starttime="20201027 13:54:01.693"></status>
</kw>
<msg timestamp="20201027 13:54:36.438" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:54:36.438" starttime="20201027 13:54:01.693"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201027 13:54:36.439" starttime="20201027 13:54:36.438"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 13:54:36.439" critical="yes" starttime="20201027 13:54:01.691"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201027 13:54:36.440" starttime="20201027 13:54:01.633"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 13:53:26.437" level="INFO">${random} = 69991</msg>
<status status="PASS" endtime="20201027 13:53:26.437" starttime="20201027 13:53:26.436"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:53:26.443" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-69991 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:53:31.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:53:31.228" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:53:31.228" starttime="20201027 13:53:26.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:53:31.229" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:53:31.229" starttime="20201027 13:53:31.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:53:31.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:53:31.230" starttime="20201027 13:53:31.229"></status>
</kw>
<status status="PASS" endtime="20201027 13:53:31.230" starttime="20201027 13:53:26.438"></status>
</kw>
<msg timestamp="20201027 13:53:31.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:53:31.230" starttime="20201027 13:53:26.438"></status>
</kw>
<msg timestamp="20201027 13:53:31.230" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:53:31.230" starttime="20201027 13:53:26.437"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201027 13:53:31.231" starttime="20201027 13:53:31.231"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 13:53:31.231" critical="yes" starttime="20201027 13:53:26.436"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201027 13:53:31.232" starttime="20201027 13:53:26.380"></status>
</suite>
<status status="PASS" elapsedtime="127167" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
