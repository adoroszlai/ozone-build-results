<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201027 13:29:48.353" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1" name="ozone-ha">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 13:27:20.571" level="INFO">${random} = 45352</msg>
<status status="PASS" endtime="20201027 13:27:20.571" starttime="20201027 13:27:20.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201027 13:27:20.573" level="INFO">${prefix} = 45352</msg>
<status status="PASS" endtime="20201027 13:27:20.574" starttime="20201027 13:27:20.572"></status>
</kw>
<status status="PASS" endtime="20201027 13:27:20.574" starttime="20201027 13:27:20.570"></status>
</kw>
<test id="s1-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:27:20.590" level="INFO">Running command 'ozone sh volume info /45352-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:27:27.301" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 13:27:27.301" level="INFO">${output} = VOLUME_NOT_FOUND Volume 45352-rpcbasic is not found</msg>
<status status="PASS" endtime="20201027 13:27:27.301" starttime="20201027 13:27:20.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:27:27.302" level="INFO">VOLUME_NOT_FOUND Volume 45352-rpcbasic is not found</msg>
<status status="PASS" endtime="20201027 13:27:27.302" starttime="20201027 13:27:27.301"></status>
</kw>
<msg timestamp="20201027 13:27:27.303" level="INFO">${result} = VOLUME_NOT_FOUND Volume 45352-rpcbasic is not found</msg>
<status status="PASS" endtime="20201027 13:27:27.303" starttime="20201027 13:27:20.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201027 13:27:27.303" starttime="20201027 13:27:27.303"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:27:27.312" level="INFO">Running command 'ozone sh volume create /45352-rpcbasic --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:27:29.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:27:29.903" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:27:29.903" starttime="20201027 13:27:27.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:27:29.904" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:27:29.904" starttime="20201027 13:27:29.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:27:29.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:27:29.906" starttime="20201027 13:27:29.904"></status>
</kw>
<status status="PASS" endtime="20201027 13:27:29.906" starttime="20201027 13:27:27.304"></status>
</kw>
<msg timestamp="20201027 13:27:29.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:27:29.907" starttime="20201027 13:27:27.304"></status>
</kw>
<msg timestamp="20201027 13:27:29.907" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201027 13:27:29.907" starttime="20201027 13:27:27.303"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201027 13:27:29.907" starttime="20201027 13:27:29.907"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:27:29.919" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="45352-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:27:32.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:27:32.629" level="INFO">${output} = {
  "metadata": {},
  "name": "45352-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-27T13:27:29.736Z",
  "mo...</msg>
<status status="PASS" endtime="20201027 13:27:32.629" starttime="20201027 13:27:29.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:27:32.631" level="INFO">{
  "metadata": {},
  "name": "45352-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-27T13:27:29.736Z",
  "modificationTime": "2020-10-27T13:27:32.397692Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20201027 13:27:32.631" starttime="20201027 13:27:32.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:27:32.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:27:32.632" starttime="20201027 13:27:32.631"></status>
</kw>
<status status="PASS" endtime="20201027 13:27:32.632" starttime="20201027 13:27:29.909"></status>
</kw>
<msg timestamp="20201027 13:27:32.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:27:32.633" starttime="20201027 13:27:29.908"></status>
</kw>
<msg timestamp="20201027 13:27:32.633" level="INFO">${result} = {
  "metadata": {},
  "name": "45352-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-27T13:27:29.736Z",
  "mo...</msg>
<status status="PASS" endtime="20201027 13:27:32.633" starttime="20201027 13:27:29.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201027 13:27:32.634" starttime="20201027 13:27:32.633"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:27:32.643" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="45352-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:27:34.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:27:34.906" level="INFO">${output} = {
  "metadata": {},
  "name": "45352-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-27T13:27:29.736Z",
  "mo...</msg>
<status status="PASS" endtime="20201027 13:27:34.906" starttime="20201027 13:27:32.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:27:34.907" level="INFO">{
  "metadata": {},
  "name": "45352-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-27T13:27:29.736Z",
  "modificationTime": "2020-10-27T13:27:34.671741Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20201027 13:27:34.907" starttime="20201027 13:27:34.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:27:34.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:27:34.908" starttime="20201027 13:27:34.907"></status>
</kw>
<status status="PASS" endtime="20201027 13:27:34.908" starttime="20201027 13:27:32.635"></status>
</kw>
<msg timestamp="20201027 13:27:34.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:27:34.908" starttime="20201027 13:27:32.635"></status>
</kw>
<msg timestamp="20201027 13:27:34.909" level="INFO">${result} = {
  "metadata": {},
  "name": "45352-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-27T13:27:29.736Z",
  "mo...</msg>
<status status="PASS" endtime="20201027 13:27:34.909" starttime="20201027 13:27:32.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201027 13:27:34.909" starttime="20201027 13:27:34.909"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --count-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:27:34.914" level="INFO">Running command 'ozone sh volume setquota /45352-rpcbasic --space-quota 10TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:27:36.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:27:36.940" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:27:36.941" starttime="20201027 13:27:34.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:27:36.942" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:27:36.942" starttime="20201027 13:27:36.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:27:36.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:27:36.943" starttime="20201027 13:27:36.942"></status>
</kw>
<status status="PASS" endtime="20201027 13:27:36.943" starttime="20201027 13:27:34.911"></status>
</kw>
<msg timestamp="20201027 13:27:36.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:27:36.943" starttime="20201027 13:27:34.910"></status>
</kw>
<status status="PASS" endtime="20201027 13:27:36.943" starttime="20201027 13:27:34.910"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:27:36.948" level="INFO">Running command 'ozone sh volume info /45352-rpcbasic | jq -r '. | select(.name=="45352-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:27:39.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:27:39.269" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20201027 13:27:39.269" starttime="20201027 13:27:36.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:27:39.271" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20201027 13:27:39.271" starttime="20201027 13:27:39.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:27:39.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:27:39.272" starttime="20201027 13:27:39.271"></status>
</kw>
<status status="PASS" endtime="20201027 13:27:39.272" starttime="20201027 13:27:36.945"></status>
</kw>
<msg timestamp="20201027 13:27:39.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:27:39.272" starttime="20201027 13:27:36.945"></status>
</kw>
<msg timestamp="20201027 13:27:39.272" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20201027 13:27:39.273" starttime="20201027 13:27:36.944"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20201027 13:27:39.273" starttime="20201027 13:27:39.273"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --count-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:27:39.278" level="INFO">Running command 'ozone sh bucket create /45352-rpcbasic/bb1 --space-quota 10TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:27:41.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:27:41.444" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:27:41.444" starttime="20201027 13:27:39.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:27:41.445" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:27:41.445" starttime="20201027 13:27:41.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:27:41.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:27:41.446" starttime="20201027 13:27:41.445"></status>
</kw>
<status status="PASS" endtime="20201027 13:27:41.446" starttime="20201027 13:27:39.275"></status>
</kw>
<msg timestamp="20201027 13:27:41.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:27:41.446" starttime="20201027 13:27:39.274"></status>
</kw>
<status status="PASS" endtime="20201027 13:27:41.447" starttime="20201027 13:27:39.273"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:27:41.452" level="INFO">Running command 'ozone sh bucket info /45352-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:27:43.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:27:43.743" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20201027 13:27:43.743" starttime="20201027 13:27:41.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:27:43.745" level="INFO">DISK</msg>
<status status="PASS" endtime="20201027 13:27:43.745" starttime="20201027 13:27:43.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:27:43.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:27:43.746" starttime="20201027 13:27:43.745"></status>
</kw>
<status status="PASS" endtime="20201027 13:27:43.746" starttime="20201027 13:27:41.449"></status>
</kw>
<msg timestamp="20201027 13:27:43.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:27:43.746" starttime="20201027 13:27:41.449"></status>
</kw>
<msg timestamp="20201027 13:27:43.746" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20201027 13:27:43.746" starttime="20201027 13:27:41.447"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20201027 13:27:43.747" starttime="20201027 13:27:43.747"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:27:43.751" level="INFO">Running command 'ozone sh bucket info /45352-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:27:45.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:27:45.980" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20201027 13:27:45.981" starttime="20201027 13:27:43.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:27:45.983" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20201027 13:27:45.983" starttime="20201027 13:27:45.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:27:45.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:27:45.984" starttime="20201027 13:27:45.984"></status>
</kw>
<status status="PASS" endtime="20201027 13:27:45.985" starttime="20201027 13:27:43.749"></status>
</kw>
<msg timestamp="20201027 13:27:45.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:27:45.985" starttime="20201027 13:27:43.748"></status>
</kw>
<msg timestamp="20201027 13:27:45.985" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20201027 13:27:45.985" starttime="20201027 13:27:43.747"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20201027 13:27:45.989" starttime="20201027 13:27:45.985"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:27:45.994" level="INFO">Running command 'ozone sh bucket info /45352-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:27:48.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:27:48.293" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20201027 13:27:48.293" starttime="20201027 13:27:45.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:27:48.295" level="INFO">100</msg>
<status status="PASS" endtime="20201027 13:27:48.295" starttime="20201027 13:27:48.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:27:48.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:27:48.295" starttime="20201027 13:27:48.295"></status>
</kw>
<status status="PASS" endtime="20201027 13:27:48.296" starttime="20201027 13:27:45.990"></status>
</kw>
<msg timestamp="20201027 13:27:48.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:27:48.296" starttime="20201027 13:27:45.990"></status>
</kw>
<msg timestamp="20201027 13:27:48.296" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20201027 13:27:48.296" starttime="20201027 13:27:45.989"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20201027 13:27:48.297" starttime="20201027 13:27:48.297"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --count-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:27:48.302" level="INFO">Running command 'ozone sh bucket setquota /45352-rpcbasic/bb1 --space-quota 1TB --count-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:27:50.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:27:50.486" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:27:50.486" starttime="20201027 13:27:48.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:27:50.487" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:27:50.487" starttime="20201027 13:27:50.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:27:50.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:27:50.488" starttime="20201027 13:27:50.487"></status>
</kw>
<status status="PASS" endtime="20201027 13:27:50.488" starttime="20201027 13:27:48.298"></status>
</kw>
<msg timestamp="20201027 13:27:50.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:27:50.488" starttime="20201027 13:27:48.298"></status>
</kw>
<status status="PASS" endtime="20201027 13:27:50.488" starttime="20201027 13:27:48.297"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:27:50.499" level="INFO">Running command 'ozone sh bucket info /45352-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:27:52.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:27:52.612" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20201027 13:27:52.612" starttime="20201027 13:27:50.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:27:52.613" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20201027 13:27:52.613" starttime="20201027 13:27:52.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:27:52.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:27:52.614" starttime="20201027 13:27:52.613"></status>
</kw>
<status status="PASS" endtime="20201027 13:27:52.614" starttime="20201027 13:27:50.491"></status>
</kw>
<msg timestamp="20201027 13:27:52.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:27:52.615" starttime="20201027 13:27:50.490"></status>
</kw>
<msg timestamp="20201027 13:27:52.615" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20201027 13:27:52.615" starttime="20201027 13:27:50.489"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20201027 13:27:52.616" starttime="20201027 13:27:52.615"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:27:52.620" level="INFO">Running command 'ozone sh bucket info /45352-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:27:55.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:27:55.028" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20201027 13:27:55.028" starttime="20201027 13:27:52.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:27:55.030" level="INFO">1000</msg>
<status status="PASS" endtime="20201027 13:27:55.030" starttime="20201027 13:27:55.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:27:55.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:27:55.031" starttime="20201027 13:27:55.030"></status>
</kw>
<status status="PASS" endtime="20201027 13:27:55.031" starttime="20201027 13:27:52.617"></status>
</kw>
<msg timestamp="20201027 13:27:55.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:27:55.032" starttime="20201027 13:27:52.617"></status>
</kw>
<msg timestamp="20201027 13:27:55.032" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20201027 13:27:55.032" starttime="20201027 13:27:52.616"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20201027 13:27:55.033" starttime="20201027 13:27:55.032"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:27:55.037" level="INFO">Running command 'ozone sh bucket list /45352-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:27:57.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:27:57.212" level="INFO">${output} = 45352-rpcbasic</msg>
<status status="PASS" endtime="20201027 13:27:57.212" starttime="20201027 13:27:55.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:27:57.214" level="INFO">45352-rpcbasic</msg>
<status status="PASS" endtime="20201027 13:27:57.214" starttime="20201027 13:27:57.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:27:57.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:27:57.215" starttime="20201027 13:27:57.214"></status>
</kw>
<status status="PASS" endtime="20201027 13:27:57.215" starttime="20201027 13:27:55.034"></status>
</kw>
<msg timestamp="20201027 13:27:57.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:27:57.215" starttime="20201027 13:27:55.034"></status>
</kw>
<msg timestamp="20201027 13:27:57.215" level="INFO">${result} = 45352-rpcbasic</msg>
<status status="PASS" endtime="20201027 13:27:57.215" starttime="20201027 13:27:55.033"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20201027 13:27:57.216" starttime="20201027 13:27:57.216"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:27:57.221" level="INFO">Running command 'ozone sh key put /45352-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:02.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:02.616" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:02.616" starttime="20201027 13:27:57.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:02.617" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:02.617" starttime="20201027 13:28:02.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:02.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:02.617" starttime="20201027 13:28:02.617"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:02.618" starttime="20201027 13:27:57.218"></status>
</kw>
<msg timestamp="20201027 13:28:02.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:02.618" starttime="20201027 13:27:57.218"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:02.618" starttime="20201027 13:27:57.217"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:02.623" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:02.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:02.625" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:02.625" starttime="20201027 13:28:02.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:02.626" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:02.626" starttime="20201027 13:28:02.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:02.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:02.627" starttime="20201027 13:28:02.626"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:02.627" starttime="20201027 13:28:02.619"></status>
</kw>
<msg timestamp="20201027 13:28:02.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:02.627" starttime="20201027 13:28:02.619"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:02.628" starttime="20201027 13:28:02.619"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:02.631" level="INFO">Running command 'ozone sh key get /45352-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:06.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:06.499" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:06.499" starttime="20201027 13:28:02.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:06.500" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:06.500" starttime="20201027 13:28:06.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:06.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:06.501" starttime="20201027 13:28:06.500"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:06.501" starttime="20201027 13:28:02.629"></status>
</kw>
<msg timestamp="20201027 13:28:06.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:06.502" starttime="20201027 13:28:02.629"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:06.502" starttime="20201027 13:28:02.628"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:06.506" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:06.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:06.508" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:06.508" starttime="20201027 13:28:06.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:06.509" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:06.509" starttime="20201027 13:28:06.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:06.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:06.510" starttime="20201027 13:28:06.509"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:06.510" starttime="20201027 13:28:06.503"></status>
</kw>
<msg timestamp="20201027 13:28:06.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:06.510" starttime="20201027 13:28:06.503"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:06.511" starttime="20201027 13:28:06.502"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:06.515" level="INFO">Running command 'ozone sh key put -t RATIS /45352-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:10.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:10.733" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:10.733" starttime="20201027 13:28:06.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:10.734" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:10.734" starttime="20201027 13:28:10.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:10.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:10.735" starttime="20201027 13:28:10.735"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:10.735" starttime="20201027 13:28:06.512"></status>
</kw>
<msg timestamp="20201027 13:28:10.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:10.736" starttime="20201027 13:28:06.512"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:10.736" starttime="20201027 13:28:06.511"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:10.740" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:10.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:10.742" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:10.742" starttime="20201027 13:28:10.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:10.743" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:10.743" starttime="20201027 13:28:10.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:10.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:10.744" starttime="20201027 13:28:10.743"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:10.744" starttime="20201027 13:28:10.737"></status>
</kw>
<msg timestamp="20201027 13:28:10.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:10.744" starttime="20201027 13:28:10.737"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:10.745" starttime="20201027 13:28:10.736"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:10.749" level="INFO">Running command 'ozone sh key get /45352-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:14.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:14.526" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:14.526" starttime="20201027 13:28:10.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:14.527" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:14.527" starttime="20201027 13:28:14.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:14.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:14.528" starttime="20201027 13:28:14.527"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:14.528" starttime="20201027 13:28:10.746"></status>
</kw>
<msg timestamp="20201027 13:28:14.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:14.528" starttime="20201027 13:28:10.746"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:14.529" starttime="20201027 13:28:10.745"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:14.533" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:14.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:14.535" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:14.535" starttime="20201027 13:28:14.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:14.536" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:14.536" starttime="20201027 13:28:14.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:14.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:14.536" starttime="20201027 13:28:14.536"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:14.537" starttime="20201027 13:28:14.530"></status>
</kw>
<msg timestamp="20201027 13:28:14.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:14.537" starttime="20201027 13:28:14.529"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:14.537" starttime="20201027 13:28:14.529"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:14.542" level="INFO">Running command 'ozone sh key info /45352-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:16.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:16.960" level="INFO">${output} = {
  "volumeName": "45352-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-10-27T13:28:08.597Z",
  "modificationTime": "2020-10-27T13:28:10.269Z",
...</msg>
<status status="PASS" endtime="20201027 13:28:16.960" starttime="20201027 13:28:14.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:16.962" level="INFO">{
  "volumeName": "45352-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-10-27T13:28:08.597Z",
  "modificationTime": "2020-10-27T13:28:10.269Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 105106983393361920,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20201027 13:28:16.962" starttime="20201027 13:28:16.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:16.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:16.963" starttime="20201027 13:28:16.962"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:16.963" starttime="20201027 13:28:14.539"></status>
</kw>
<msg timestamp="20201027 13:28:16.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:16.963" starttime="20201027 13:28:14.538"></status>
</kw>
<msg timestamp="20201027 13:28:16.964" level="INFO">${result} = {
  "volumeName": "45352-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-10-27T13:28:08.597Z",
  "modificationTime": "2020-10-27T13:28:10.269Z",
...</msg>
<status status="PASS" endtime="20201027 13:28:16.964" starttime="20201027 13:28:14.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20201027 13:28:16.964" starttime="20201027 13:28:16.964"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:16.968" level="INFO">Running command 'ozone sh key delete /45352-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:18.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:18.953" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:18.953" starttime="20201027 13:28:16.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:18.955" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:18.955" starttime="20201027 13:28:18.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:18.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:18.956" starttime="20201027 13:28:18.955"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:18.956" starttime="20201027 13:28:16.965"></status>
</kw>
<msg timestamp="20201027 13:28:18.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:18.956" starttime="20201027 13:28:16.965"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:18.956" starttime="20201027 13:28:16.964"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:18.961" level="INFO">Running command 'ozone sh key cp /45352-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:23.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:23.483" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:23.483" starttime="20201027 13:28:18.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:23.484" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:23.485" starttime="20201027 13:28:23.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:23.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:23.485" starttime="20201027 13:28:23.485"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:23.486" starttime="20201027 13:28:18.958"></status>
</kw>
<msg timestamp="20201027 13:28:23.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:23.486" starttime="20201027 13:28:18.957"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:23.486" starttime="20201027 13:28:18.957"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:23.491" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:23.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:23.493" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:23.493" starttime="20201027 13:28:23.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:23.494" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:23.494" starttime="20201027 13:28:23.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:23.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:23.495" starttime="20201027 13:28:23.494"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:23.495" starttime="20201027 13:28:23.488"></status>
</kw>
<msg timestamp="20201027 13:28:23.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:23.495" starttime="20201027 13:28:23.487"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:23.496" starttime="20201027 13:28:23.486"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:23.500" level="INFO">Running command 'ozone sh key get /45352-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:27.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:27.567" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:27.567" starttime="20201027 13:28:23.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:27.568" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:27.569" starttime="20201027 13:28:27.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:27.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:27.569" starttime="20201027 13:28:27.569"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:27.570" starttime="20201027 13:28:23.497"></status>
</kw>
<msg timestamp="20201027 13:28:27.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:27.570" starttime="20201027 13:28:23.496"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:27.570" starttime="20201027 13:28:23.496"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:27.574" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:27.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:27.576" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:27.577" starttime="20201027 13:28:27.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:27.577" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:27.578" starttime="20201027 13:28:27.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:27.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:27.578" starttime="20201027 13:28:27.578"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:27.579" starttime="20201027 13:28:27.571"></status>
</kw>
<msg timestamp="20201027 13:28:27.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:27.579" starttime="20201027 13:28:27.571"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:27.579" starttime="20201027 13:28:27.570"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:27.583" level="INFO">Running command 'ozone sh key delete /45352-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:29.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:29.622" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:29.622" starttime="20201027 13:28:27.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:29.623" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:29.623" starttime="20201027 13:28:29.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:29.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:29.624" starttime="20201027 13:28:29.624"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:29.625" starttime="20201027 13:28:27.580"></status>
</kw>
<msg timestamp="20201027 13:28:29.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:29.625" starttime="20201027 13:28:27.580"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:29.625" starttime="20201027 13:28:27.579"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:29.629" level="INFO">Running command 'ozone sh key get /45352-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:31.795" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 13:28:31.795" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201027 13:28:31.795" starttime="20201027 13:28:29.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:31.796" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201027 13:28:31.796" starttime="20201027 13:28:31.795"></status>
</kw>
<msg timestamp="20201027 13:28:31.797" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201027 13:28:31.797" starttime="20201027 13:28:29.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20201027 13:28:31.797" starttime="20201027 13:28:31.797"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:31.802" level="INFO">Running command 'ozone sh key get --force /45352-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:35.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:35.723" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:35.723" starttime="20201027 13:28:31.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:35.724" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:35.724" starttime="20201027 13:28:35.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:35.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:35.725" starttime="20201027 13:28:35.724"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:35.725" starttime="20201027 13:28:31.799"></status>
</kw>
<msg timestamp="20201027 13:28:35.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:35.725" starttime="20201027 13:28:31.798"></status>
</kw>
<msg timestamp="20201027 13:28:35.725" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201027 13:28:35.725" starttime="20201027 13:28:31.798"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20201027 13:28:35.726" starttime="20201027 13:28:35.725"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:35.732" level="INFO">Running command 'ozone sh key info /45352-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:38.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:38.244" level="INFO">${output} = {
  "volumeName": "45352-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-10-27T13:27:59.255Z",
  "modificationTime": "2020-10-27T13:28:02.209Z",
  "rep...</msg>
<status status="PASS" endtime="20201027 13:28:38.244" starttime="20201027 13:28:35.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:38.245" level="INFO">{
  "volumeName": "45352-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-10-27T13:27:59.255Z",
  "modificationTime": "2020-10-27T13:28:02.209Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105106982778699780,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20201027 13:28:38.245" starttime="20201027 13:28:38.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:38.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:38.246" starttime="20201027 13:28:38.245"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:38.246" starttime="20201027 13:28:35.728"></status>
</kw>
<msg timestamp="20201027 13:28:38.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:38.246" starttime="20201027 13:28:35.727"></status>
</kw>
<msg timestamp="20201027 13:28:38.247" level="INFO">${result} = {
  "volumeName": "45352-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-10-27T13:27:59.255Z",
  "modificationTime": "2020-10-27T13:28:02.209Z",
  "rep...</msg>
<status status="PASS" endtime="20201027 13:28:38.247" starttime="20201027 13:28:35.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201027 13:28:38.247" starttime="20201027 13:28:38.247"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:38.252" level="INFO">Running command 'ozone sh key list /45352-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:40.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:40.572" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201027 13:28:40.572" starttime="20201027 13:28:38.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:40.573" level="INFO">key1</msg>
<status status="PASS" endtime="20201027 13:28:40.573" starttime="20201027 13:28:40.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:40.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:40.574" starttime="20201027 13:28:40.573"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:40.575" starttime="20201027 13:28:38.249"></status>
</kw>
<msg timestamp="20201027 13:28:40.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:40.575" starttime="20201027 13:28:38.248"></status>
</kw>
<msg timestamp="20201027 13:28:40.575" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20201027 13:28:40.575" starttime="20201027 13:28:38.247"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201027 13:28:40.576" starttime="20201027 13:28:40.575"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:40.581" level="INFO">Running command 'ozone sh key rename /45352-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:42.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:42.779" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:42.779" starttime="20201027 13:28:40.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:42.780" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:42.780" starttime="20201027 13:28:42.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:42.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:42.781" starttime="20201027 13:28:42.780"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:42.781" starttime="20201027 13:28:40.578"></status>
</kw>
<msg timestamp="20201027 13:28:42.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:42.781" starttime="20201027 13:28:40.578"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:42.782" starttime="20201027 13:28:40.576"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:42.786" level="INFO">Running command 'ozone sh key list /45352-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:45.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:45.160" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20201027 13:28:45.160" starttime="20201027 13:28:42.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:45.161" level="INFO">key2</msg>
<status status="PASS" endtime="20201027 13:28:45.162" starttime="20201027 13:28:45.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:45.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:45.162" starttime="20201027 13:28:45.162"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:45.163" starttime="20201027 13:28:42.783"></status>
</kw>
<msg timestamp="20201027 13:28:45.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:45.163" starttime="20201027 13:28:42.782"></status>
</kw>
<msg timestamp="20201027 13:28:45.163" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20201027 13:28:45.163" starttime="20201027 13:28:42.782"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201027 13:28:45.164" starttime="20201027 13:28:45.163"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:45.169" level="INFO">Running command 'ozone sh key delete /45352-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:47.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:47.229" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:47.229" starttime="20201027 13:28:45.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:47.230" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:47.230" starttime="20201027 13:28:47.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:47.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:47.231" starttime="20201027 13:28:47.230"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:47.231" starttime="20201027 13:28:45.165"></status>
</kw>
<msg timestamp="20201027 13:28:47.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:47.232" starttime="20201027 13:28:45.165"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:47.232" starttime="20201027 13:28:45.164"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:47.232" starttime="20201027 13:27:57.217"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:47.232" starttime="20201027 13:27:57.216"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:47.237" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /45352-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:49.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:49.452" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:49.452" starttime="20201027 13:28:47.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:49.454" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:49.454" starttime="20201027 13:28:49.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:49.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:49.455" starttime="20201027 13:28:49.454"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:49.455" starttime="20201027 13:28:47.233"></status>
</kw>
<msg timestamp="20201027 13:28:49.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:49.455" starttime="20201027 13:28:47.233"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:49.455" starttime="20201027 13:28:47.232"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:49.461" level="INFO">Running command 'ozone sh bucket info /45352-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:51.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:51.901" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 13:28:51.901" starttime="20201027 13:28:49.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:51.902" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 13:28:51.903" starttime="20201027 13:28:51.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:51.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:51.903" starttime="20201027 13:28:51.903"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:51.904" starttime="20201027 13:28:49.457"></status>
</kw>
<msg timestamp="20201027 13:28:51.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:51.904" starttime="20201027 13:28:49.457"></status>
</kw>
<msg timestamp="20201027 13:28:51.904" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 13:28:51.904" starttime="20201027 13:28:49.456"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 13:28:51.905" starttime="20201027 13:28:51.904"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --count-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:51.910" level="INFO">Running command 'ozone sh bucket clrquota --count-quota /45352-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:54.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:54.034" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:54.034" starttime="20201027 13:28:51.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:54.035" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:54.036" starttime="20201027 13:28:54.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:54.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:54.037" starttime="20201027 13:28:54.036"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:54.037" starttime="20201027 13:28:51.906"></status>
</kw>
<msg timestamp="20201027 13:28:54.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:54.037" starttime="20201027 13:28:51.906"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:54.038" starttime="20201027 13:28:51.905"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:54.044" level="INFO">Running command 'ozone sh bucket info /45352-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:56.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:56.303" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 13:28:56.303" starttime="20201027 13:28:54.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:56.305" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 13:28:56.305" starttime="20201027 13:28:56.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:56.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:56.305" starttime="20201027 13:28:56.305"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:56.306" starttime="20201027 13:28:54.039"></status>
</kw>
<msg timestamp="20201027 13:28:56.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:56.306" starttime="20201027 13:28:54.039"></status>
</kw>
<msg timestamp="20201027 13:28:56.307" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 13:28:56.307" starttime="20201027 13:28:54.038"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 13:28:56.307" starttime="20201027 13:28:56.307"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:56.312" level="INFO">Running command 'ozone sh volume clrquota --space-quota /45352-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:28:58.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:28:58.442" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:28:58.442" starttime="20201027 13:28:56.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:28:58.443" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:28:58.443" starttime="20201027 13:28:58.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:28:58.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:28:58.444" starttime="20201027 13:28:58.443"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:58.444" starttime="20201027 13:28:56.309"></status>
</kw>
<msg timestamp="20201027 13:28:58.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:28:58.444" starttime="20201027 13:28:56.308"></status>
</kw>
<status status="PASS" endtime="20201027 13:28:58.444" starttime="20201027 13:28:56.307"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:28:58.450" level="INFO">Running command 'ozone sh volume info /45352-rpcbasic | jq -r '. | select(.name=="45352-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:00.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:00.812" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 13:29:00.812" starttime="20201027 13:28:58.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:00.813" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 13:29:00.813" starttime="20201027 13:29:00.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:00.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:00.814" starttime="20201027 13:29:00.813"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:00.814" starttime="20201027 13:28:58.446"></status>
</kw>
<msg timestamp="20201027 13:29:00.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:00.815" starttime="20201027 13:28:58.445"></status>
</kw>
<msg timestamp="20201027 13:29:00.815" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 13:29:00.815" starttime="20201027 13:28:58.444"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 13:29:00.816" starttime="20201027 13:29:00.815"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --count-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:29:00.820" level="INFO">Running command 'ozone sh volume clrquota --count-quota /45352-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:03.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:03.018" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:29:03.019" starttime="20201027 13:29:00.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:03.020" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:29:03.020" starttime="20201027 13:29:03.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:03.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:03.020" starttime="20201027 13:29:03.020"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:03.021" starttime="20201027 13:29:00.817"></status>
</kw>
<msg timestamp="20201027 13:29:03.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:03.021" starttime="20201027 13:29:00.817"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:03.021" starttime="20201027 13:29:00.816"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:29:03.025" level="INFO">Running command 'ozone sh volume info /45352-rpcbasic | jq -r '. | select(.name=="45352-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:05.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:05.386" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 13:29:05.386" starttime="20201027 13:29:03.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:05.387" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 13:29:05.387" starttime="20201027 13:29:05.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:05.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:05.388" starttime="20201027 13:29:05.387"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:05.388" starttime="20201027 13:29:03.023"></status>
</kw>
<msg timestamp="20201027 13:29:05.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:05.389" starttime="20201027 13:29:03.022"></status>
</kw>
<msg timestamp="20201027 13:29:05.389" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 13:29:05.389" starttime="20201027 13:29:03.021"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 13:29:05.390" starttime="20201027 13:29:05.389"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:29:05.393" level="INFO">Running command 'ozone sh bucket delete /45352-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:07.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:07.800" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:29:07.800" starttime="20201027 13:29:05.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:07.801" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:29:07.801" starttime="20201027 13:29:07.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:07.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:07.802" starttime="20201027 13:29:07.801"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:07.802" starttime="20201027 13:29:05.391"></status>
</kw>
<msg timestamp="20201027 13:29:07.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:07.802" starttime="20201027 13:29:05.390"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:07.802" starttime="20201027 13:29:05.390"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:29:07.808" level="INFO">Running command 'ozone sh volume delete /45352-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:09.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:09.945" level="INFO">${output} = Volume 45352-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201027 13:29:09.945" starttime="20201027 13:29:07.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:09.947" level="INFO">Volume 45352-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201027 13:29:09.947" starttime="20201027 13:29:09.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:09.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:09.948" starttime="20201027 13:29:09.947"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:09.948" starttime="20201027 13:29:07.804"></status>
</kw>
<msg timestamp="20201027 13:29:09.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:09.949" starttime="20201027 13:29:07.803"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:09.949" starttime="20201027 13:29:07.802"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:29:09.952" level="INFO">Running command 'ozone sh volume create /45352-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:12.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:12.193" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:29:12.193" starttime="20201027 13:29:09.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:12.195" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:29:12.195" starttime="20201027 13:29:12.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:12.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:12.195" starttime="20201027 13:29:12.195"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:12.196" starttime="20201027 13:29:09.950"></status>
</kw>
<msg timestamp="20201027 13:29:12.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:12.196" starttime="20201027 13:29:09.950"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:12.196" starttime="20201027 13:29:09.949"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:29:12.202" level="INFO">Running command 'ozone sh volume info /45352-rpcbasic | jq -r '. | select(.name=="45352-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:14.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:14.683" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 13:29:14.683" starttime="20201027 13:29:12.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:14.685" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 13:29:14.685" starttime="20201027 13:29:14.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:14.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:14.686" starttime="20201027 13:29:14.685"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:14.686" starttime="20201027 13:29:12.198"></status>
</kw>
<msg timestamp="20201027 13:29:14.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:14.688" starttime="20201027 13:29:12.198"></status>
</kw>
<msg timestamp="20201027 13:29:14.689" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 13:29:14.689" starttime="20201027 13:29:12.197"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 13:29:14.690" starttime="20201027 13:29:14.689"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:29:14.698" level="INFO">Running command 'ozone sh volume info /45352-rpcbasic | jq -r '. | select(.name=="45352-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:17.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:17.037" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 13:29:17.037" starttime="20201027 13:29:14.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:17.038" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 13:29:17.038" starttime="20201027 13:29:17.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:17.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:17.039" starttime="20201027 13:29:17.039"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:17.039" starttime="20201027 13:29:14.691"></status>
</kw>
<msg timestamp="20201027 13:29:17.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:17.040" starttime="20201027 13:29:14.691"></status>
</kw>
<msg timestamp="20201027 13:29:17.040" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 13:29:17.040" starttime="20201027 13:29:14.690"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 13:29:17.041" starttime="20201027 13:29:17.040"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:29:17.045" level="INFO">Running command 'ozone sh bucket create /45352-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:19.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:19.215" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:29:19.215" starttime="20201027 13:29:17.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:19.216" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:29:19.216" starttime="20201027 13:29:19.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:19.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:19.217" starttime="20201027 13:29:19.217"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:19.218" starttime="20201027 13:29:17.042"></status>
</kw>
<msg timestamp="20201027 13:29:19.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:19.218" starttime="20201027 13:29:17.041"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:19.218" starttime="20201027 13:29:17.041"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:29:19.222" level="INFO">Running command 'ozone sh bucket info /45352-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:21.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:21.569" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 13:29:21.569" starttime="20201027 13:29:19.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:21.570" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 13:29:21.570" starttime="20201027 13:29:21.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:21.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:21.571" starttime="20201027 13:29:21.570"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:21.571" starttime="20201027 13:29:19.219"></status>
</kw>
<msg timestamp="20201027 13:29:21.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:21.571" starttime="20201027 13:29:19.219"></status>
</kw>
<msg timestamp="20201027 13:29:21.572" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 13:29:21.572" starttime="20201027 13:29:19.218"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 13:29:21.572" starttime="20201027 13:29:21.572"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:29:21.577" level="INFO">Running command 'ozone sh bucket info /45352-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:23.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:23.811" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 13:29:23.811" starttime="20201027 13:29:21.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:23.812" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 13:29:23.812" starttime="20201027 13:29:23.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:23.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:23.813" starttime="20201027 13:29:23.813"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:23.814" starttime="20201027 13:29:21.574"></status>
</kw>
<msg timestamp="20201027 13:29:23.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:23.814" starttime="20201027 13:29:21.574"></status>
</kw>
<msg timestamp="20201027 13:29:23.814" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 13:29:23.814" starttime="20201027 13:29:21.573"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 13:29:23.815" starttime="20201027 13:29:23.814"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 0TB --count-quota 0</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:29:23.820" level="INFO">Running command 'ozone sh volume setquota /45352-rpcbasic --space-quota 0TB --count-quota 0 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:25.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:25.924" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:29:25.924" starttime="20201027 13:29:23.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:25.926" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:29:25.926" starttime="20201027 13:29:25.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:25.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:25.927" starttime="20201027 13:29:25.926"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:25.927" starttime="20201027 13:29:23.816"></status>
</kw>
<msg timestamp="20201027 13:29:25.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:25.927" starttime="20201027 13:29:23.816"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:25.927" starttime="20201027 13:29:23.815"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:29:25.933" level="INFO">Running command 'ozone sh volume info /45352-rpcbasic | jq -r '. | select(.name=="45352-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:28.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:28.316" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 13:29:28.316" starttime="20201027 13:29:25.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:28.317" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 13:29:28.317" starttime="20201027 13:29:28.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:28.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:28.318" starttime="20201027 13:29:28.317"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:28.318" starttime="20201027 13:29:25.929"></status>
</kw>
<msg timestamp="20201027 13:29:28.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:28.319" starttime="20201027 13:29:25.929"></status>
</kw>
<msg timestamp="20201027 13:29:28.319" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 13:29:28.319" starttime="20201027 13:29:25.928"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 13:29:28.320" starttime="20201027 13:29:28.319"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:29:28.325" level="INFO">Running command 'ozone sh volume info /45352-rpcbasic | jq -r '. | select(.name=="45352-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:30.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:30.544" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 13:29:30.544" starttime="20201027 13:29:28.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:30.545" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 13:29:30.545" starttime="20201027 13:29:30.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:30.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:30.546" starttime="20201027 13:29:30.545"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:30.546" starttime="20201027 13:29:28.321"></status>
</kw>
<msg timestamp="20201027 13:29:30.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:30.546" starttime="20201027 13:29:28.321"></status>
</kw>
<msg timestamp="20201027 13:29:30.547" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 13:29:30.547" starttime="20201027 13:29:28.320"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 13:29:30.547" starttime="20201027 13:29:30.547"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 0TB --count-quota 0</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:29:30.551" level="INFO">Running command 'ozone sh bucket setquota /45352-rpcbasic/bb1 --space-quota 0TB --count-quota 0 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:32.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:32.510" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:29:32.510" starttime="20201027 13:29:30.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:32.512" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:29:32.512" starttime="20201027 13:29:32.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:32.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:32.513" starttime="20201027 13:29:32.512"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:32.513" starttime="20201027 13:29:30.548"></status>
</kw>
<msg timestamp="20201027 13:29:32.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:32.513" starttime="20201027 13:29:30.548"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:32.514" starttime="20201027 13:29:30.547"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:29:32.518" level="INFO">Running command 'ozone sh bucket info /45352-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:34.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:34.749" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 13:29:34.749" starttime="20201027 13:29:32.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:34.750" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 13:29:34.750" starttime="20201027 13:29:34.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:34.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:34.750" starttime="20201027 13:29:34.750"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:34.751" starttime="20201027 13:29:32.515"></status>
</kw>
<msg timestamp="20201027 13:29:34.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:34.751" starttime="20201027 13:29:32.515"></status>
</kw>
<msg timestamp="20201027 13:29:34.752" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 13:29:34.752" starttime="20201027 13:29:32.514"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 13:29:34.752" starttime="20201027 13:29:34.752"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:29:34.757" level="INFO">Running command 'ozone sh bucket info /45352-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:37.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:37.174" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 13:29:37.174" starttime="20201027 13:29:34.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:37.175" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 13:29:37.175" starttime="20201027 13:29:37.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:37.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:37.176" starttime="20201027 13:29:37.175"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:37.176" starttime="20201027 13:29:34.754"></status>
</kw>
<msg timestamp="20201027 13:29:37.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:37.176" starttime="20201027 13:29:34.753"></status>
</kw>
<msg timestamp="20201027 13:29:37.177" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 13:29:37.177" starttime="20201027 13:29:34.752"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 13:29:37.177" starttime="20201027 13:29:37.177"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:29:37.181" level="INFO">Running command 'ozone sh bucket delete /45352-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:39.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:39.340" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 13:29:39.340" starttime="20201027 13:29:37.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:39.341" level="INFO"></msg>
<status status="PASS" endtime="20201027 13:29:39.341" starttime="20201027 13:29:39.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:39.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:39.342" starttime="20201027 13:29:39.341"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:39.342" starttime="20201027 13:29:37.178"></status>
</kw>
<msg timestamp="20201027 13:29:39.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:39.342" starttime="20201027 13:29:37.178"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:39.343" starttime="20201027 13:29:37.177"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 13:29:39.347" level="INFO">Running command 'ozone sh volume delete /45352-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 13:29:41.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 13:29:41.581" level="INFO">${output} = Volume 45352-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201027 13:29:41.581" starttime="20201027 13:29:39.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 13:29:41.582" level="INFO">Volume 45352-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201027 13:29:41.582" starttime="20201027 13:29:41.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 13:29:41.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 13:29:41.583" starttime="20201027 13:29:41.582"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:41.583" starttime="20201027 13:29:39.344"></status>
</kw>
<msg timestamp="20201027 13:29:41.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 13:29:41.583" starttime="20201027 13:29:39.343"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:41.584" starttime="20201027 13:29:39.343"></status>
</kw>
<status status="PASS" endtime="20201027 13:29:41.584" starttime="20201027 13:27:20.579"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 13:29:41.584" critical="yes" starttime="20201027 13:27:20.574"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20201027 13:29:41.585" starttime="20201027 13:27:20.417"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-ha" pass="1">ozone-ha</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
