<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201027 01:57:00.743" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:41:54.900" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:41:57.477" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 01:41:57.477" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 01:41:57.477" starttime="20201027 01:41:54.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:41:57.478" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 01:41:57.478" starttime="20201027 01:41:57.477"></status>
</kw>
<msg timestamp="20201027 01:41:57.479" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 01:41:57.479" starttime="20201027 01:41:54.894"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:41:57.485" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:41:59.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:41:59.855" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:41:59.855" starttime="20201027 01:41:57.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:41:59.857" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:41:59.857" starttime="20201027 01:41:59.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:41:59.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:41:59.857" starttime="20201027 01:41:59.857"></status>
</kw>
<status status="PASS" endtime="20201027 01:41:59.858" starttime="20201027 01:41:57.481"></status>
</kw>
<msg timestamp="20201027 01:41:59.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:41:59.858" starttime="20201027 01:41:57.481"></status>
</kw>
<msg timestamp="20201027 01:41:59.858" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201027 01:41:59.858" starttime="20201027 01:41:57.480"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201027 01:41:59.859" starttime="20201027 01:41:59.858"></status>
</kw>
<status status="PASS" endtime="20201027 01:41:59.859" starttime="20201027 01:41:57.479"></status>
</kw>
<status status="PASS" endtime="20201027 01:41:59.859" starttime="20201027 01:41:57.479"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:41:59.866" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:42:02.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:42:02.137" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:42:02.137" starttime="20201027 01:41:59.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:42:02.138" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:42:02.138" starttime="20201027 01:42:02.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:42:02.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:42:02.139" starttime="20201027 01:42:02.138"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:02.139" starttime="20201027 01:41:59.861"></status>
</kw>
<msg timestamp="20201027 01:42:02.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:42:02.139" starttime="20201027 01:41:59.861"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:02.140" starttime="20201027 01:41:59.860"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:02.140" starttime="20201027 01:41:59.860"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:02.140" starttime="20201027 01:41:59.859"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201027 01:42:02.140" starttime="20201027 01:42:02.140"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:42:02.147" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:42:04.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:42:04.726" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T01:42:02.098Z",
  "modificat...</msg>
<status status="PASS" endtime="20201027 01:42:04.726" starttime="20201027 01:42:02.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:42:04.727" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T01:42:02.098Z",
  "modificationTime" : "2020-10-27T01:42:02.098Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 01:42:04.727" starttime="20201027 01:42:04.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:42:04.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:42:04.728" starttime="20201027 01:42:04.728"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:04.728" starttime="20201027 01:42:02.142"></status>
</kw>
<msg timestamp="20201027 01:42:04.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:42:04.729" starttime="20201027 01:42:02.141"></status>
</kw>
<msg timestamp="20201027 01:42:04.729" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T01:42:02.098Z",
  "modificat...</msg>
<status status="PASS" endtime="20201027 01:42:04.729" starttime="20201027 01:42:02.141"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201027 01:42:04.729" starttime="20201027 01:42:04.729"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:42:04.733" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:42:04.733" starttime="20201027 01:42:04.733"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:42:04.734" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:42:04.734" starttime="20201027 01:42:04.734"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:04.734" starttime="20201027 01:42:04.733"></status>
</kw>
<msg timestamp="20201027 01:42:04.734" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:42:04.734" starttime="20201027 01:42:04.732"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:04.735" starttime="20201027 01:42:04.731"></status>
</kw>
<msg timestamp="20201027 01:42:04.735" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 01:42:04.735" starttime="20201027 01:42:04.730"></status>
</kw>
<msg timestamp="20201027 01:42:04.735" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 01:42:04.735" starttime="20201027 01:42:04.730"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:42:04.749" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:42:07.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:42:07.122" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:42:07.122" starttime="20201027 01:42:04.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:42:07.123" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:42:07.124" starttime="20201027 01:42:07.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:42:07.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:42:07.124" starttime="20201027 01:42:07.124"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:07.125" starttime="20201027 01:42:04.736"></status>
</kw>
<msg timestamp="20201027 01:42:07.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:42:07.125" starttime="20201027 01:42:04.736"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:07.125" starttime="20201027 01:42:04.735"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:42:07.129" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:42:13.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:42:13.022" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:42:13.022" starttime="20201027 01:42:07.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:42:13.023" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:42:13.023" starttime="20201027 01:42:13.022"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:42:13.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:42:13.024" starttime="20201027 01:42:13.023"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:13.024" starttime="20201027 01:42:07.127"></status>
</kw>
<msg timestamp="20201027 01:42:13.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:42:13.025" starttime="20201027 01:42:07.126"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:13.025" starttime="20201027 01:42:07.125"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:42:13.030" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:42:17.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:42:17.661" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:42:17.661" starttime="20201027 01:42:13.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:42:17.663" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:42:17.663" starttime="20201027 01:42:17.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:42:17.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:42:17.663" starttime="20201027 01:42:17.663"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:17.664" starttime="20201027 01:42:13.026"></status>
</kw>
<msg timestamp="20201027 01:42:17.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:42:17.664" starttime="20201027 01:42:13.026"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:17.664" starttime="20201027 01:42:13.025"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:42:17.670" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:42:22.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:42:22.043" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:42:22.043" starttime="20201027 01:42:17.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:42:22.045" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:42:22.045" starttime="20201027 01:42:22.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:42:22.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:42:22.045" starttime="20201027 01:42:22.045"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:22.046" starttime="20201027 01:42:17.665"></status>
</kw>
<msg timestamp="20201027 01:42:22.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:42:22.046" starttime="20201027 01:42:17.665"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:22.046" starttime="20201027 01:42:17.664"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 01:42:22.046" critical="yes" starttime="20201027 01:41:54.893"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:42:22.052" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:42:22.053" starttime="20201027 01:42:22.052"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:42:22.053" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:42:22.053" starttime="20201027 01:42:22.053"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:22.053" starttime="20201027 01:42:22.051"></status>
</kw>
<msg timestamp="20201027 01:42:22.053" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:42:22.053" starttime="20201027 01:42:22.051"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:22.054" starttime="20201027 01:42:22.050"></status>
</kw>
<msg timestamp="20201027 01:42:22.054" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 01:42:22.054" starttime="20201027 01:42:22.050"></status>
</kw>
<msg timestamp="20201027 01:42:22.054" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 01:42:22.054" starttime="20201027 01:42:22.049"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:42:22.059" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:42:24.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:42:24.465" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:42:24.465" starttime="20201027 01:42:22.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:42:24.466" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:42:24.467" starttime="20201027 01:42:24.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:42:24.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:42:24.467" starttime="20201027 01:42:24.467"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:24.468" starttime="20201027 01:42:22.055"></status>
</kw>
<msg timestamp="20201027 01:42:24.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:42:24.468" starttime="20201027 01:42:22.055"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:24.468" starttime="20201027 01:42:22.054"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:42:24.472" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:42:26.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:42:26.907" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:42:26.907" starttime="20201027 01:42:24.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:42:26.908" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:42:26.909" starttime="20201027 01:42:26.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:42:26.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:42:26.909" starttime="20201027 01:42:26.909"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:26.910" starttime="20201027 01:42:24.469"></status>
</kw>
<msg timestamp="20201027 01:42:26.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:42:26.910" starttime="20201027 01:42:24.469"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:26.910" starttime="20201027 01:42:24.468"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 01:42:26.910" critical="yes" starttime="20201027 01:42:22.048"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201027 01:42:26.911" starttime="20201027 01:41:54.833"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 01:44:12.120" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 01:44:12.120" starttime="20201027 01:44:12.119"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:44:12.120" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 01:44:12.120" starttime="20201027 01:44:12.120"></status>
</kw>
<status status="PASS" endtime="20201027 01:44:12.120" starttime="20201027 01:44:12.119"></status>
</kw>
<msg timestamp="20201027 01:44:12.120" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 01:44:12.120" starttime="20201027 01:44:12.118"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 01:44:12.121" starttime="20201027 01:44:12.121"></status>
</kw>
<msg timestamp="20201027 01:44:12.121" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 01:44:12.121" starttime="20201027 01:44:12.121"></status>
</kw>
<status status="PASS" endtime="20201027 01:44:12.122" starttime="20201027 01:44:12.118"></status>
</kw>
<msg timestamp="20201027 01:44:12.122" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 01:44:12.122" starttime="20201027 01:44:12.117"></status>
</kw>
<msg timestamp="20201027 01:44:12.122" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 01:44:12.122" starttime="20201027 01:44:12.115"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 01:44:12.123" level="INFO">${random} = 96274</msg>
<status status="PASS" endtime="20201027 01:44:12.123" starttime="20201027 01:44:12.122"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:44:12.129" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-96274 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:44:16.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:44:16.012" level="INFO">${output} = 2020-10-27 01:44:14 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:44:14 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 ...</msg>
<status status="PASS" endtime="20201027 01:44:16.012" starttime="20201027 01:44:12.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:44:16.014" level="INFO">2020-10-27 01:44:14 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:44:14 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 01:44:14 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-27 01:44:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 01:44:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-513822087550-&gt;388fe278-a712-467b-bd1f-f5ee56042f38
2020-10-27 01:44:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201027 01:44:16.014" starttime="20201027 01:44:16.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:44:16.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:44:16.014" starttime="20201027 01:44:16.014"></status>
</kw>
<status status="PASS" endtime="20201027 01:44:16.015" starttime="20201027 01:44:12.123"></status>
</kw>
<msg timestamp="20201027 01:44:16.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:44:16.015" starttime="20201027 01:44:12.123"></status>
</kw>
<msg timestamp="20201027 01:44:16.015" level="INFO">${result} = 2020-10-27 01:44:14 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:44:14 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 ...</msg>
<status status="PASS" endtime="20201027 01:44:16.015" starttime="20201027 01:44:12.123"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:44:16.022" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:44:18.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:44:18.044" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:42 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 01:42 ofs://om/volume1/bucket1/ozone-35164
-rw-...</msg>
<status status="PASS" endtime="20201027 01:44:18.044" starttime="20201027 01:44:16.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:44:18.046" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:42 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 01:42 ofs://om/volume1/bucket1/ozone-35164
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 01:44 ofs://om/volume1/bucket1/ozone-96274
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:42 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:43 ofs://om/volume1/bucket1/wordcount-88.txt</msg>
<status status="PASS" endtime="20201027 01:44:18.046" starttime="20201027 01:44:18.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:44:18.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:44:18.046" starttime="20201027 01:44:18.046"></status>
</kw>
<status status="PASS" endtime="20201027 01:44:18.047" starttime="20201027 01:44:16.016"></status>
</kw>
<msg timestamp="20201027 01:44:18.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:44:18.047" starttime="20201027 01:44:16.016"></status>
</kw>
<msg timestamp="20201027 01:44:18.047" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:42 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 01:42 ofs://om/volume1/bucket1/ozone-35164
-rw-...</msg>
<status status="PASS" endtime="20201027 01:44:18.047" starttime="20201027 01:44:16.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 01:44:18.048" starttime="20201027 01:44:18.047"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 01:44:18.048" critical="yes" starttime="20201027 01:44:12.114"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 01:44:18.049" starttime="20201027 01:44:12.055"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:42:32.539" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:42:32.539" starttime="20201027 01:42:32.538"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:42:32.540" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:42:32.540" starttime="20201027 01:42:32.539"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:32.540" starttime="20201027 01:42:32.534"></status>
</kw>
<msg timestamp="20201027 01:42:32.540" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:42:32.540" starttime="20201027 01:42:32.534"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:32.540" starttime="20201027 01:42:32.533"></status>
</kw>
<msg timestamp="20201027 01:42:32.540" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 01:42:32.540" starttime="20201027 01:42:32.532"></status>
</kw>
<msg timestamp="20201027 01:42:32.541" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 01:42:32.541" starttime="20201027 01:42:32.530"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 01:42:32.541" level="INFO">${random} = 35164</msg>
<status status="PASS" endtime="20201027 01:42:32.541" starttime="20201027 01:42:32.541"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:42:32.548" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-35164 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:42:36.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:42:36.516" level="INFO">${output} = 2020-10-27 01:42:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:42:34 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 ...</msg>
<status status="PASS" endtime="20201027 01:42:36.516" starttime="20201027 01:42:32.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:42:36.517" level="INFO">2020-10-27 01:42:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:42:34 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 01:42:34 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-27 01:42:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 01:42:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-63F19F31CE54-&gt;388fe278-a712-467b-bd1f-f5ee56042f38
2020-10-27 01:42:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201027 01:42:36.517" starttime="20201027 01:42:36.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:42:36.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:42:36.518" starttime="20201027 01:42:36.517"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:36.518" starttime="20201027 01:42:32.542"></status>
</kw>
<msg timestamp="20201027 01:42:36.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:42:36.518" starttime="20201027 01:42:32.542"></status>
</kw>
<msg timestamp="20201027 01:42:36.518" level="INFO">${result} = 2020-10-27 01:42:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:42:34 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 ...</msg>
<status status="PASS" endtime="20201027 01:42:36.518" starttime="20201027 01:42:32.541"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:42:36.523" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:42:38.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:42:38.663" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:42 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 01:42 o3fs://bucket1.volume1.om/ozone-35164
dr...</msg>
<status status="PASS" endtime="20201027 01:42:38.664" starttime="20201027 01:42:36.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:42:38.665" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:42 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 01:42 o3fs://bucket1.volume1.om/ozone-35164
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:42 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 01:42:38.665" starttime="20201027 01:42:38.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:42:38.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:42:38.666" starttime="20201027 01:42:38.665"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:38.666" starttime="20201027 01:42:36.519"></status>
</kw>
<msg timestamp="20201027 01:42:38.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:42:38.666" starttime="20201027 01:42:36.519"></status>
</kw>
<msg timestamp="20201027 01:42:38.666" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:42 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 01:42 o3fs://bucket1.volume1.om/ozone-35164
dr...</msg>
<status status="PASS" endtime="20201027 01:42:38.666" starttime="20201027 01:42:36.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 01:42:38.667" starttime="20201027 01:42:38.667"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 01:42:38.667" critical="yes" starttime="20201027 01:42:32.530"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 01:42:38.669" starttime="20201027 01:42:32.478"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:44:23.815" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:44:23.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:44:23.820" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 01:44:23.820" starttime="20201027 01:44:23.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:44:23.821" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 01:44:23.821" starttime="20201027 01:44:23.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:44:23.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:44:23.821" starttime="20201027 01:44:23.821"></status>
</kw>
<status status="PASS" endtime="20201027 01:44:23.822" starttime="20201027 01:44:23.808"></status>
</kw>
<msg timestamp="20201027 01:44:23.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:44:23.822" starttime="20201027 01:44:23.808"></status>
</kw>
<msg timestamp="20201027 01:44:23.822" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 01:44:23.822" starttime="20201027 01:44:23.807"></status>
</kw>
<msg timestamp="20201027 01:44:23.822" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 01:44:23.822" starttime="20201027 01:44:23.807"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 01:44:23.825" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 01:44:23.826" starttime="20201027 01:44:23.825"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:44:23.826" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 01:44:23.826" starttime="20201027 01:44:23.826"></status>
</kw>
<status status="PASS" endtime="20201027 01:44:23.826" starttime="20201027 01:44:23.825"></status>
</kw>
<msg timestamp="20201027 01:44:23.826" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 01:44:23.827" starttime="20201027 01:44:23.824"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 01:44:23.827" starttime="20201027 01:44:23.827"></status>
</kw>
<msg timestamp="20201027 01:44:23.828" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 01:44:23.828" starttime="20201027 01:44:23.827"></status>
</kw>
<status status="PASS" endtime="20201027 01:44:23.828" starttime="20201027 01:44:23.824"></status>
</kw>
<msg timestamp="20201027 01:44:23.828" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 01:44:23.828" starttime="20201027 01:44:23.823"></status>
</kw>
<msg timestamp="20201027 01:44:23.828" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 01:44:23.828" starttime="20201027 01:44:23.822"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:44:23.834" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:45:01.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:45:01.793" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 01:44:26 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:44:26 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201027 01:45:01.793" starttime="20201027 01:44:23.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:45:01.795" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 01:44:26 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:44:26 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 01:44:26 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-27 01:44:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 01:44:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4A84F56A5257-&gt;388fe278-a712-467b-bd1f-f5ee56042f38
2020-10-27 01:44:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 01:44:27 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-10-27 01:44:27 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 01:44:27 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-27 01:44:28 INFO  JobSubmitter:198 - number of splits:3
2020-10-27 01:44:28 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603762877676_0003
2020-10-27 01:44:28 INFO  YarnClientImpl:273 - Submitted application application_1603762877676_0003
2020-10-27 01:44:28 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603762877676_0003/
2020-10-27 01:44:28 INFO  Job:1339 - Running job: job_1603762877676_0003
2020-10-27 01:44:37 INFO  Job:1360 - Job job_1603762877676_0003 running in uber mode : false
2020-10-27 01:44:37 INFO  Job:1367 -  map 0% reduce 0%
2020-10-27 01:44:44 INFO  Job:1367 -  map 33% reduce 0%
2020-10-27 01:44:50 INFO  Job:1367 -  map 67% reduce 0%
2020-10-27 01:44:56 INFO  Job:1367 -  map 100% reduce 0%
2020-10-27 01:45:00 INFO  Job:1367 -  map 100% reduce 100%
2020-10-27 01:45:01 INFO  Job:1378 - Job job_1603762877676_0003 completed successfully
2020-10-27 01:45:01 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615237
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48484
		Total time spent by all reduces in occupied slots (ms)=16968
		Total time spent by all map tasks (ms)=12121
		Total time spent by all reduce tasks (ms)=4242
		Total vcore-milliseconds taken by all map tasks=12121
		Total vcore-milliseconds taken by all reduce tasks=4242
		Total megabyte-milliseconds taken by all map tasks=49647616
		Total megabyte-milliseconds taken by all reduce tasks=17375232
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=830
		CPU time spent (ms)=8750
		Physical memory (bytes) snapshot=1144549376
		Virtual memory (bytes) snapshot=16063283200
		Total committed heap usage (bytes)=1061158912
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.774 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201027 01:45:01.795" starttime="20201027 01:45:01.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:45:01.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:45:01.796" starttime="20201027 01:45:01.795"></status>
</kw>
<status status="PASS" endtime="20201027 01:45:01.796" starttime="20201027 01:44:23.829"></status>
</kw>
<msg timestamp="20201027 01:45:01.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:45:01.797" starttime="20201027 01:44:23.829"></status>
</kw>
<msg timestamp="20201027 01:45:01.797" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 01:44:26 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:44:26 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201027 01:45:01.797" starttime="20201027 01:44:23.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 01:45:01.798" starttime="20201027 01:45:01.798"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 01:45:01.798" critical="yes" starttime="20201027 01:44:23.806"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:45:01.805" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:45:01.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:45:01.810" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 01:45:01.810" starttime="20201027 01:45:01.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:45:01.812" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 01:45:01.812" starttime="20201027 01:45:01.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:45:01.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:45:01.812" starttime="20201027 01:45:01.812"></status>
</kw>
<status status="PASS" endtime="20201027 01:45:01.813" starttime="20201027 01:45:01.802"></status>
</kw>
<msg timestamp="20201027 01:45:01.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:45:01.813" starttime="20201027 01:45:01.801"></status>
</kw>
<msg timestamp="20201027 01:45:01.813" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 01:45:01.813" starttime="20201027 01:45:01.801"></status>
</kw>
<msg timestamp="20201027 01:45:01.813" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 01:45:01.813" starttime="20201027 01:45:01.801"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 01:45:01.814" level="INFO">${random} = 93</msg>
<status status="PASS" endtime="20201027 01:45:01.814" starttime="20201027 01:45:01.814"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 01:45:01.817" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 01:45:01.818" starttime="20201027 01:45:01.817"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:45:01.818" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 01:45:01.818" starttime="20201027 01:45:01.818"></status>
</kw>
<status status="PASS" endtime="20201027 01:45:01.818" starttime="20201027 01:45:01.817"></status>
</kw>
<msg timestamp="20201027 01:45:01.818" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 01:45:01.818" starttime="20201027 01:45:01.816"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 01:45:01.819" starttime="20201027 01:45:01.819"></status>
</kw>
<msg timestamp="20201027 01:45:01.819" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 01:45:01.819" starttime="20201027 01:45:01.818"></status>
</kw>
<status status="PASS" endtime="20201027 01:45:01.820" starttime="20201027 01:45:01.816"></status>
</kw>
<msg timestamp="20201027 01:45:01.820" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 01:45:01.820" starttime="20201027 01:45:01.815"></status>
</kw>
<msg timestamp="20201027 01:45:01.820" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 01:45:01.820" starttime="20201027 01:45:01.814"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 01:45:01.822" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 01:45:01.822" starttime="20201027 01:45:01.822"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:45:01.823" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 01:45:01.823" starttime="20201027 01:45:01.823"></status>
</kw>
<status status="PASS" endtime="20201027 01:45:01.823" starttime="20201027 01:45:01.822"></status>
</kw>
<msg timestamp="20201027 01:45:01.823" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 01:45:01.823" starttime="20201027 01:45:01.821"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:45:01.825" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201027 01:45:01.825" starttime="20201027 01:45:01.824"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:45:01.826" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201027 01:45:01.826" starttime="20201027 01:45:01.825"></status>
</kw>
<status status="PASS" endtime="20201027 01:45:01.826" starttime="20201027 01:45:01.824"></status>
</kw>
<msg timestamp="20201027 01:45:01.826" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201027 01:45:01.826" starttime="20201027 01:45:01.823"></status>
</kw>
<status status="PASS" endtime="20201027 01:45:01.826" starttime="20201027 01:45:01.821"></status>
</kw>
<msg timestamp="20201027 01:45:01.826" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 01:45:01.826" starttime="20201027 01:45:01.820"></status>
</kw>
<msg timestamp="20201027 01:45:01.826" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 01:45:01.826" starttime="20201027 01:45:01.820"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 01:45:01.830" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 01:45:01.830" starttime="20201027 01:45:01.829"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:45:01.830" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 01:45:01.830" starttime="20201027 01:45:01.830"></status>
</kw>
<status status="PASS" endtime="20201027 01:45:01.830" starttime="20201027 01:45:01.829"></status>
</kw>
<msg timestamp="20201027 01:45:01.830" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 01:45:01.830" starttime="20201027 01:45:01.828"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:45:01.832" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201027 01:45:01.832" starttime="20201027 01:45:01.831"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:45:01.832" level="INFO">${result} = /wordcount-93.txt</msg>
<status status="PASS" endtime="20201027 01:45:01.832" starttime="20201027 01:45:01.832"></status>
</kw>
<status status="PASS" endtime="20201027 01:45:01.832" starttime="20201027 01:45:01.831"></status>
</kw>
<msg timestamp="20201027 01:45:01.833" level="INFO">${path_with_leading} = /wordcount-93.txt</msg>
<status status="PASS" endtime="20201027 01:45:01.833" starttime="20201027 01:45:01.830"></status>
</kw>
<status status="PASS" endtime="20201027 01:45:01.833" starttime="20201027 01:45:01.828"></status>
</kw>
<msg timestamp="20201027 01:45:01.833" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-93.txt</msg>
<status status="PASS" endtime="20201027 01:45:01.833" starttime="20201027 01:45:01.827"></status>
</kw>
<msg timestamp="20201027 01:45:01.833" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-93.txt</msg>
<status status="PASS" endtime="20201027 01:45:01.833" starttime="20201027 01:45:01.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:45:01.837" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-93.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:45:37.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:45:37.639" level="INFO">${output} = 2020-10-27 01:45:03 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-10-27 01:45:04 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201027 01:45:37.639" starttime="20201027 01:45:01.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:45:37.641" level="INFO">2020-10-27 01:45:03 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-10-27 01:45:04 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 01:45:04 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:45:04 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 01:45:04 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-27 01:45:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 01:45:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C666FAE2E5B3-&gt;388fe278-a712-467b-bd1f-f5ee56042f38
2020-10-27 01:45:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 01:45:05 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-27 01:45:06 INFO  JobSubmitter:198 - number of splits:3
2020-10-27 01:45:06 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603762877676_0004
2020-10-27 01:45:06 INFO  YarnClientImpl:273 - Submitted application application_1603762877676_0004
2020-10-27 01:45:06 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603762877676_0004/
2020-10-27 01:45:06 INFO  Job:1339 - Running job: job_1603762877676_0004
2020-10-27 01:45:14 INFO  Job:1360 - Job job_1603762877676_0004 running in uber mode : false
2020-10-27 01:45:14 INFO  Job:1367 -  map 0% reduce 0%
2020-10-27 01:45:21 INFO  Job:1367 -  map 33% reduce 0%
2020-10-27 01:45:27 INFO  Job:1367 -  map 67% reduce 0%
2020-10-27 01:45:32 INFO  Job:1367 -  map 100% reduce 0%
2020-10-27 01:45:37 INFO  Job:1367 -  map 100% reduce 100%
2020-10-27 01:45:37 INFO  Job:1378 - Job job_1603762877676_0004 completed successfully
2020-10-27 01:45:37 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45604
		Total time spent by all reduces in occupied slots (ms)=16792
		Total time spent by all map tasks (ms)=11401
		Total time spent by all reduce tasks (ms)=4198
		Total vcore-milliseconds taken by all map tasks=11401
		Total vcore-milliseconds taken by all reduce tasks=4198
		Total megabyte-milliseconds taken by all map tasks=46698496
		Total megabyte-milliseconds taken by all reduce tasks=17195008
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=753
		CPU time spent (ms)=8260
		Physical memory (bytes) snapshot=1119748096
		Virtual memory (bytes) snapshot=16050335744
		Total committed heap usage (bytes)=1055916032
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201027 01:45:37.641" starttime="20201027 01:45:37.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:45:37.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:45:37.642" starttime="20201027 01:45:37.641"></status>
</kw>
<status status="PASS" endtime="20201027 01:45:37.642" starttime="20201027 01:45:01.834"></status>
</kw>
<msg timestamp="20201027 01:45:37.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:45:37.644" starttime="20201027 01:45:01.834"></status>
</kw>
<msg timestamp="20201027 01:45:37.645" level="INFO">${output} = 2020-10-27 01:45:03 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-10-27 01:45:04 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201027 01:45:37.645" starttime="20201027 01:45:01.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 01:45:37.646" starttime="20201027 01:45:37.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 01:45:37.647" starttime="20201027 01:45:37.646"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 01:45:37.647" critical="yes" starttime="20201027 01:45:01.800"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 01:45:37.648" starttime="20201027 01:44:23.755"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:42:44.228" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:42:44.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:42:44.234" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 01:42:44.234" starttime="20201027 01:42:44.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:42:44.236" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 01:42:44.236" starttime="20201027 01:42:44.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:42:44.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:42:44.237" starttime="20201027 01:42:44.236"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:44.237" starttime="20201027 01:42:44.221"></status>
</kw>
<msg timestamp="20201027 01:42:44.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:42:44.237" starttime="20201027 01:42:44.221"></status>
</kw>
<msg timestamp="20201027 01:42:44.237" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 01:42:44.237" starttime="20201027 01:42:44.221"></status>
</kw>
<msg timestamp="20201027 01:42:44.237" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 01:42:44.237" starttime="20201027 01:42:44.220"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:42:44.241" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:42:44.241" starttime="20201027 01:42:44.241"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:42:44.242" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:42:44.242" starttime="20201027 01:42:44.241"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:44.242" starttime="20201027 01:42:44.240"></status>
</kw>
<msg timestamp="20201027 01:42:44.242" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:42:44.242" starttime="20201027 01:42:44.240"></status>
</kw>
<status status="PASS" endtime="20201027 01:42:44.242" starttime="20201027 01:42:44.239"></status>
</kw>
<msg timestamp="20201027 01:42:44.242" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 01:42:44.242" starttime="20201027 01:42:44.238"></status>
</kw>
<msg timestamp="20201027 01:42:44.243" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 01:42:44.243" starttime="20201027 01:42:44.238"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:42:44.247" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:43:28.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:43:28.840" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 01:42:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:42:46 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201027 01:43:28.840" starttime="20201027 01:42:44.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:43:28.842" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 01:42:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:42:46 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 01:42:46 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-27 01:42:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 01:42:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-666674E7FEEB-&gt;388fe278-a712-467b-bd1f-f5ee56042f38
2020-10-27 01:42:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 01:42:48 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-10-27 01:42:48 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-27 01:42:48 INFO  JobSubmitter:198 - number of splits:3
2020-10-27 01:42:49 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603762877676_0001
2020-10-27 01:42:49 INFO  YarnClientImpl:273 - Submitted application application_1603762877676_0001
2020-10-27 01:42:49 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603762877676_0001/
2020-10-27 01:42:49 INFO  Job:1339 - Running job: job_1603762877676_0001
2020-10-27 01:43:01 INFO  Job:1360 - Job job_1603762877676_0001 running in uber mode : false
2020-10-27 01:43:01 INFO  Job:1367 -  map 0% reduce 0%
2020-10-27 01:43:08 INFO  Job:1367 -  map 33% reduce 0%
2020-10-27 01:43:14 INFO  Job:1367 -  map 67% reduce 0%
2020-10-27 01:43:20 INFO  Job:1367 -  map 100% reduce 0%
2020-10-27 01:43:24 INFO  Job:1367 -  map 100% reduce 100%
2020-10-27 01:43:28 INFO  Job:1378 - Job job_1603762877676_0001 completed successfully
2020-10-27 01:43:28 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615457
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45800
		Total time spent by all reduces in occupied slots (ms)=17412
		Total time spent by all map tasks (ms)=11450
		Total time spent by all reduce tasks (ms)=4353
		Total vcore-milliseconds taken by all map tasks=11450
		Total vcore-milliseconds taken by all reduce tasks=4353
		Total megabyte-milliseconds taken by all map tasks=46899200
		Total megabyte-milliseconds taken by all reduce tasks=17829888
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=841
		CPU time spent (ms)=8150
		Physical memory (bytes) snapshot=1154691072
		Virtual memory (bytes) snapshot=16078766080
		Total committed heap usage (bytes)=1054867456
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.214 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201027 01:43:28.842" starttime="20201027 01:43:28.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:43:28.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:43:28.843" starttime="20201027 01:43:28.842"></status>
</kw>
<status status="PASS" endtime="20201027 01:43:28.843" starttime="20201027 01:42:44.244"></status>
</kw>
<msg timestamp="20201027 01:43:28.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:43:28.843" starttime="20201027 01:42:44.243"></status>
</kw>
<msg timestamp="20201027 01:43:28.844" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 01:42:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:42:46 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201027 01:43:28.844" starttime="20201027 01:42:44.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 01:43:28.844" starttime="20201027 01:43:28.844"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 01:43:28.844" critical="yes" starttime="20201027 01:42:44.219"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:43:28.850" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:43:28.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:43:28.856" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 01:43:28.856" starttime="20201027 01:43:28.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:43:28.857" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 01:43:28.857" starttime="20201027 01:43:28.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:43:28.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:43:28.858" starttime="20201027 01:43:28.857"></status>
</kw>
<status status="PASS" endtime="20201027 01:43:28.858" starttime="20201027 01:43:28.847"></status>
</kw>
<msg timestamp="20201027 01:43:28.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:43:28.858" starttime="20201027 01:43:28.846"></status>
</kw>
<msg timestamp="20201027 01:43:28.858" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 01:43:28.858" starttime="20201027 01:43:28.846"></status>
</kw>
<msg timestamp="20201027 01:43:28.858" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 01:43:28.858" starttime="20201027 01:43:28.846"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 01:43:28.859" level="INFO">${random} = 88</msg>
<status status="PASS" endtime="20201027 01:43:28.859" starttime="20201027 01:43:28.859"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:43:28.862" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:43:28.862" starttime="20201027 01:43:28.862"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:43:28.863" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:43:28.863" starttime="20201027 01:43:28.863"></status>
</kw>
<status status="PASS" endtime="20201027 01:43:28.863" starttime="20201027 01:43:28.862"></status>
</kw>
<msg timestamp="20201027 01:43:28.863" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:43:28.863" starttime="20201027 01:43:28.861"></status>
</kw>
<status status="PASS" endtime="20201027 01:43:28.863" starttime="20201027 01:43:28.860"></status>
</kw>
<msg timestamp="20201027 01:43:28.864" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 01:43:28.864" starttime="20201027 01:43:28.860"></status>
</kw>
<msg timestamp="20201027 01:43:28.864" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 01:43:28.864" starttime="20201027 01:43:28.859"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:43:28.866" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:43:28.866" starttime="20201027 01:43:28.866"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:43:28.867" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:43:28.867" starttime="20201027 01:43:28.867"></status>
</kw>
<status status="PASS" endtime="20201027 01:43:28.867" starttime="20201027 01:43:28.866"></status>
</kw>
<msg timestamp="20201027 01:43:28.867" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:43:28.867" starttime="20201027 01:43:28.865"></status>
</kw>
<status status="PASS" endtime="20201027 01:43:28.867" starttime="20201027 01:43:28.865"></status>
</kw>
<msg timestamp="20201027 01:43:28.868" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 01:43:28.868" starttime="20201027 01:43:28.864"></status>
</kw>
<msg timestamp="20201027 01:43:28.868" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 01:43:28.868" starttime="20201027 01:43:28.864"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:43:28.870" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:43:28.870" starttime="20201027 01:43:28.870"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:43:28.871" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:43:28.871" starttime="20201027 01:43:28.871"></status>
</kw>
<status status="PASS" endtime="20201027 01:43:28.871" starttime="20201027 01:43:28.870"></status>
</kw>
<msg timestamp="20201027 01:43:28.871" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:43:28.871" starttime="20201027 01:43:28.869"></status>
</kw>
<status status="PASS" endtime="20201027 01:43:28.871" starttime="20201027 01:43:28.869"></status>
</kw>
<msg timestamp="20201027 01:43:28.872" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-88.txt</msg>
<status status="PASS" endtime="20201027 01:43:28.872" starttime="20201027 01:43:28.868"></status>
</kw>
<msg timestamp="20201027 01:43:28.872" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-88.txt</msg>
<status status="PASS" endtime="20201027 01:43:28.872" starttime="20201027 01:43:28.868"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:43:28.876" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-88.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:44:06.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:44:06.174" level="INFO">${output} = 2020-10-27 01:43:31 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-10-27 01:43:31 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201027 01:44:06.174" starttime="20201027 01:43:28.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:44:06.176" level="INFO">2020-10-27 01:43:31 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-10-27 01:43:31 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 01:43:31 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:43:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 01:43:31 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-27 01:43:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 01:43:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-43F5B6A361F9-&gt;388fe278-a712-467b-bd1f-f5ee56042f38
2020-10-27 01:43:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 01:43:33 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-27 01:43:33 INFO  JobSubmitter:198 - number of splits:3
2020-10-27 01:43:33 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603762877676_0002
2020-10-27 01:43:33 INFO  YarnClientImpl:273 - Submitted application application_1603762877676_0002
2020-10-27 01:43:34 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603762877676_0002/
2020-10-27 01:43:34 INFO  Job:1339 - Running job: job_1603762877676_0002
2020-10-27 01:43:41 INFO  Job:1360 - Job job_1603762877676_0002 running in uber mode : false
2020-10-27 01:43:41 INFO  Job:1367 -  map 0% reduce 0%
2020-10-27 01:43:49 INFO  Job:1367 -  map 33% reduce 0%
2020-10-27 01:43:54 INFO  Job:1367 -  map 67% reduce 0%
2020-10-27 01:44:00 INFO  Job:1367 -  map 100% reduce 0%
2020-10-27 01:44:05 INFO  Job:1367 -  map 100% reduce 100%
2020-10-27 01:44:05 INFO  Job:1378 - Job job_1603762877676_0002 completed successfully
2020-10-27 01:44:05 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47800
		Total time spent by all reduces in occupied slots (ms)=17492
		Total time spent by all map tasks (ms)=11950
		Total time spent by all reduce tasks (ms)=4373
		Total vcore-milliseconds taken by all map tasks=11950
		Total vcore-milliseconds taken by all reduce tasks=4373
		Total megabyte-milliseconds taken by all map tasks=48947200
		Total megabyte-milliseconds taken by all reduce tasks=17911808
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=723
		CPU time spent (ms)=8220
		Physical memory (bytes) snapshot=1141452800
		Virtual memory (bytes) snapshot=16066220032
		Total committed heap usage (bytes)=1055916032
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201027 01:44:06.177" starttime="20201027 01:44:06.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:44:06.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:44:06.178" starttime="20201027 01:44:06.177"></status>
</kw>
<status status="PASS" endtime="20201027 01:44:06.178" starttime="20201027 01:43:28.873"></status>
</kw>
<msg timestamp="20201027 01:44:06.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:44:06.178" starttime="20201027 01:43:28.872"></status>
</kw>
<msg timestamp="20201027 01:44:06.179" level="INFO">${output} = 2020-10-27 01:43:31 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-10-27 01:43:31 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201027 01:44:06.179" starttime="20201027 01:43:28.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 01:44:06.180" starttime="20201027 01:44:06.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 01:44:06.181" starttime="20201027 01:44:06.180"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 01:44:06.181" critical="yes" starttime="20201027 01:43:28.845"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 01:44:06.182" starttime="20201027 01:42:44.159"></status>
</suite>
<status status="PASS" elapsedtime="200179" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:47:28.465" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:47:31.144" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 01:47:31.145" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 01:47:31.145" starttime="20201027 01:47:28.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:47:31.146" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 01:47:31.146" starttime="20201027 01:47:31.145"></status>
</kw>
<msg timestamp="20201027 01:47:31.148" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 01:47:31.148" starttime="20201027 01:47:28.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:47:31.156" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:47:33.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:47:33.692" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:47:33.692" starttime="20201027 01:47:31.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:47:33.693" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:47:33.694" starttime="20201027 01:47:33.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:47:33.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:47:33.694" starttime="20201027 01:47:33.694"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:33.695" starttime="20201027 01:47:31.150"></status>
</kw>
<msg timestamp="20201027 01:47:33.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:47:33.695" starttime="20201027 01:47:31.150"></status>
</kw>
<msg timestamp="20201027 01:47:33.695" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201027 01:47:33.695" starttime="20201027 01:47:31.150"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201027 01:47:33.696" starttime="20201027 01:47:33.695"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:33.696" starttime="20201027 01:47:31.149"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:33.696" starttime="20201027 01:47:31.149"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:47:33.701" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:47:36.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:47:36.059" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:47:36.059" starttime="20201027 01:47:33.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:47:36.060" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:47:36.060" starttime="20201027 01:47:36.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:47:36.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:47:36.061" starttime="20201027 01:47:36.060"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:36.061" starttime="20201027 01:47:33.698"></status>
</kw>
<msg timestamp="20201027 01:47:36.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:47:36.061" starttime="20201027 01:47:33.697"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:36.062" starttime="20201027 01:47:33.697"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:36.062" starttime="20201027 01:47:33.696"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:36.062" starttime="20201027 01:47:33.696"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201027 01:47:36.062" starttime="20201027 01:47:36.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:47:36.066" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:47:38.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:47:38.642" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T01:47:36.019Z",
  "modificat...</msg>
<status status="PASS" endtime="20201027 01:47:38.642" starttime="20201027 01:47:36.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:47:38.643" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T01:47:36.019Z",
  "modificationTime" : "2020-10-27T01:47:36.019Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 01:47:38.643" starttime="20201027 01:47:38.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:47:38.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:47:38.644" starttime="20201027 01:47:38.644"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:38.644" starttime="20201027 01:47:36.064"></status>
</kw>
<msg timestamp="20201027 01:47:38.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:47:38.645" starttime="20201027 01:47:36.063"></status>
</kw>
<msg timestamp="20201027 01:47:38.645" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T01:47:36.019Z",
  "modificat...</msg>
<status status="PASS" endtime="20201027 01:47:38.645" starttime="20201027 01:47:36.063"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201027 01:47:38.646" starttime="20201027 01:47:38.645"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:47:38.650" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:47:38.650" starttime="20201027 01:47:38.649"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:47:38.651" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:47:38.651" starttime="20201027 01:47:38.650"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:38.651" starttime="20201027 01:47:38.649"></status>
</kw>
<msg timestamp="20201027 01:47:38.651" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:47:38.651" starttime="20201027 01:47:38.648"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:38.651" starttime="20201027 01:47:38.648"></status>
</kw>
<msg timestamp="20201027 01:47:38.651" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 01:47:38.651" starttime="20201027 01:47:38.647"></status>
</kw>
<msg timestamp="20201027 01:47:38.652" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 01:47:38.652" starttime="20201027 01:47:38.646"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:47:38.657" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:47:41.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:47:41.014" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:47:41.014" starttime="20201027 01:47:38.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:47:41.016" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:47:41.016" starttime="20201027 01:47:41.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:47:41.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:47:41.017" starttime="20201027 01:47:41.016"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:41.017" starttime="20201027 01:47:38.652"></status>
</kw>
<msg timestamp="20201027 01:47:41.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:47:41.017" starttime="20201027 01:47:38.652"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:41.017" starttime="20201027 01:47:38.652"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:47:41.021" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:47:47.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:47:47.149" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:47:47.149" starttime="20201027 01:47:41.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:47:47.150" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:47:47.150" starttime="20201027 01:47:47.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:47:47.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:47:47.151" starttime="20201027 01:47:47.150"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:47.152" starttime="20201027 01:47:41.019"></status>
</kw>
<msg timestamp="20201027 01:47:47.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:47:47.153" starttime="20201027 01:47:41.018"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:47.154" starttime="20201027 01:47:41.017"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:47:47.158" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:47:51.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:47:51.603" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:47:51.603" starttime="20201027 01:47:47.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:47:51.604" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:47:51.604" starttime="20201027 01:47:51.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:47:51.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:47:51.605" starttime="20201027 01:47:51.605"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:51.606" starttime="20201027 01:47:47.155"></status>
</kw>
<msg timestamp="20201027 01:47:51.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:47:51.606" starttime="20201027 01:47:47.155"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:51.606" starttime="20201027 01:47:47.154"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:47:51.611" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:47:56.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:47:56.170" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:47:56.170" starttime="20201027 01:47:51.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:47:56.171" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:47:56.171" starttime="20201027 01:47:56.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:47:56.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:47:56.172" starttime="20201027 01:47:56.172"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:56.173" starttime="20201027 01:47:51.607"></status>
</kw>
<msg timestamp="20201027 01:47:56.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:47:56.173" starttime="20201027 01:47:51.607"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:56.173" starttime="20201027 01:47:51.606"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 01:47:56.173" critical="yes" starttime="20201027 01:47:28.457"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:47:56.179" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:47:56.179" starttime="20201027 01:47:56.179"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:47:56.180" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:47:56.180" starttime="20201027 01:47:56.179"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:56.180" starttime="20201027 01:47:56.178"></status>
</kw>
<msg timestamp="20201027 01:47:56.180" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:47:56.180" starttime="20201027 01:47:56.178"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:56.180" starttime="20201027 01:47:56.177"></status>
</kw>
<msg timestamp="20201027 01:47:56.181" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 01:47:56.181" starttime="20201027 01:47:56.176"></status>
</kw>
<msg timestamp="20201027 01:47:56.181" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 01:47:56.181" starttime="20201027 01:47:56.175"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:47:56.184" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:47:58.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:47:58.648" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:47:58.648" starttime="20201027 01:47:56.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:47:58.649" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:47:58.649" starttime="20201027 01:47:58.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:47:58.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:47:58.650" starttime="20201027 01:47:58.649"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:58.650" starttime="20201027 01:47:56.182"></status>
</kw>
<msg timestamp="20201027 01:47:58.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:47:58.651" starttime="20201027 01:47:56.181"></status>
</kw>
<status status="PASS" endtime="20201027 01:47:58.651" starttime="20201027 01:47:56.181"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:47:58.656" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:48:01.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:48:01.234" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:48:01.234" starttime="20201027 01:47:58.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:48:01.235" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:48:01.235" starttime="20201027 01:48:01.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:48:01.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:48:01.236" starttime="20201027 01:48:01.236"></status>
</kw>
<status status="PASS" endtime="20201027 01:48:01.237" starttime="20201027 01:47:58.652"></status>
</kw>
<msg timestamp="20201027 01:48:01.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:48:01.237" starttime="20201027 01:47:58.652"></status>
</kw>
<status status="PASS" endtime="20201027 01:48:01.237" starttime="20201027 01:47:58.651"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 01:48:01.238" critical="yes" starttime="20201027 01:47:56.174"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201027 01:48:01.239" starttime="20201027 01:47:28.387"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 01:49:55.763" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 01:49:55.763" starttime="20201027 01:49:55.763"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:49:55.764" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 01:49:55.764" starttime="20201027 01:49:55.763"></status>
</kw>
<status status="PASS" endtime="20201027 01:49:55.764" starttime="20201027 01:49:55.762"></status>
</kw>
<msg timestamp="20201027 01:49:55.764" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 01:49:55.764" starttime="20201027 01:49:55.762"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 01:49:55.765" starttime="20201027 01:49:55.765"></status>
</kw>
<msg timestamp="20201027 01:49:55.765" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 01:49:55.765" starttime="20201027 01:49:55.764"></status>
</kw>
<status status="PASS" endtime="20201027 01:49:55.765" starttime="20201027 01:49:55.761"></status>
</kw>
<msg timestamp="20201027 01:49:55.765" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 01:49:55.765" starttime="20201027 01:49:55.761"></status>
</kw>
<msg timestamp="20201027 01:49:55.765" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 01:49:55.766" starttime="20201027 01:49:55.759"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 01:49:55.766" level="INFO">${random} = 66962</msg>
<status status="PASS" endtime="20201027 01:49:55.766" starttime="20201027 01:49:55.766"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:49:55.773" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-66962 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:49:59.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:49:59.748" level="INFO">${output} = 2020-10-27 01:49:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:57 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 01:49:59.748" starttime="20201027 01:49:55.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:49:59.749" level="INFO">2020-10-27 01:49:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:57 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-27 01:49:57 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:49:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 01:49:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 01:49:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 01:49:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CAFC5871AEAE-&gt;3f570ddf-64d9-4e86-8041-94fdcf14cb1d
2020-10-27 01:49:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 01:49:59 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 01:49:59.750" starttime="20201027 01:49:59.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:49:59.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:49:59.750" starttime="20201027 01:49:59.750"></status>
</kw>
<status status="PASS" endtime="20201027 01:49:59.751" starttime="20201027 01:49:55.767"></status>
</kw>
<msg timestamp="20201027 01:49:59.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:49:59.751" starttime="20201027 01:49:55.767"></status>
</kw>
<msg timestamp="20201027 01:49:59.751" level="INFO">${result} = 2020-10-27 01:49:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:57 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 01:49:59.751" starttime="20201027 01:49:55.766"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:49:59.756" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:50:01.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:50:01.843" level="INFO">${output} = 2020-10-27 01:50:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:01 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 01:50:01.843" starttime="20201027 01:49:59.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:50:01.845" level="INFO">2020-10-27 01:50:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:01 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:47 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-27 01:48 ofs://om/volume1/bucket1/ozone-17285
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-27 01:49 ofs://om/volume1/bucket1/ozone-66962
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:47 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:49 ofs://om/volume1/bucket1/wordcount-72.txt
2020-10-27 01:50:01 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 01:50:01.845" starttime="20201027 01:50:01.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:50:01.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:50:01.845" starttime="20201027 01:50:01.845"></status>
</kw>
<status status="PASS" endtime="20201027 01:50:01.846" starttime="20201027 01:49:59.752"></status>
</kw>
<msg timestamp="20201027 01:50:01.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:50:01.846" starttime="20201027 01:49:59.752"></status>
</kw>
<msg timestamp="20201027 01:50:01.846" level="INFO">${result} = 2020-10-27 01:50:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:01 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 01:50:01.846" starttime="20201027 01:49:59.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 01:50:01.847" starttime="20201027 01:50:01.846"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 01:50:01.847" critical="yes" starttime="20201027 01:49:55.759"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 01:50:01.848" starttime="20201027 01:49:55.708"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:48:06.884" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:48:06.884" starttime="20201027 01:48:06.884"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:48:06.885" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:48:06.885" starttime="20201027 01:48:06.884"></status>
</kw>
<status status="PASS" endtime="20201027 01:48:06.885" starttime="20201027 01:48:06.883"></status>
</kw>
<msg timestamp="20201027 01:48:06.885" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:48:06.885" starttime="20201027 01:48:06.883"></status>
</kw>
<status status="PASS" endtime="20201027 01:48:06.885" starttime="20201027 01:48:06.882"></status>
</kw>
<msg timestamp="20201027 01:48:06.885" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 01:48:06.885" starttime="20201027 01:48:06.882"></status>
</kw>
<msg timestamp="20201027 01:48:06.886" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 01:48:06.886" starttime="20201027 01:48:06.880"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 01:48:06.886" level="INFO">${random} = 17285</msg>
<status status="PASS" endtime="20201027 01:48:06.886" starttime="20201027 01:48:06.886"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:48:06.892" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-17285 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:48:10.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:48:10.959" level="INFO">${output} = 2020-10-27 01:48:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:08 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 01:48:10.959" starttime="20201027 01:48:06.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:48:10.961" level="INFO">2020-10-27 01:48:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:09 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-27 01:48:09 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:48:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 01:48:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 01:48:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 01:48:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-29661468E1D3-&gt;3f570ddf-64d9-4e86-8041-94fdcf14cb1d
2020-10-27 01:48:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 01:48:10 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 01:48:10.961" starttime="20201027 01:48:10.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:48:10.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:48:10.962" starttime="20201027 01:48:10.961"></status>
</kw>
<status status="PASS" endtime="20201027 01:48:10.962" starttime="20201027 01:48:06.887"></status>
</kw>
<msg timestamp="20201027 01:48:10.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:48:10.962" starttime="20201027 01:48:06.887"></status>
</kw>
<msg timestamp="20201027 01:48:10.962" level="INFO">${result} = 2020-10-27 01:48:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:08 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 01:48:10.962" starttime="20201027 01:48:06.886"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:48:10.968" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:48:13.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:48:13.021" level="INFO">${output} = 2020-10-27 01:48:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:12 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 01:48:13.021" starttime="20201027 01:48:10.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:48:13.022" level="INFO">2020-10-27 01:48:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:12 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:47 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-27 01:48 o3fs://bucket1.volume1.om/ozone-17285
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:47 o3fs://bucket1.volume1.om/user
2020-10-27 01:48:13 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 01:48:13.022" starttime="20201027 01:48:13.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:48:13.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:48:13.023" starttime="20201027 01:48:13.022"></status>
</kw>
<status status="PASS" endtime="20201027 01:48:13.023" starttime="20201027 01:48:10.963"></status>
</kw>
<msg timestamp="20201027 01:48:13.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:48:13.023" starttime="20201027 01:48:10.963"></status>
</kw>
<msg timestamp="20201027 01:48:13.023" level="INFO">${result} = 2020-10-27 01:48:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:12 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 01:48:13.023" starttime="20201027 01:48:10.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 01:48:13.024" starttime="20201027 01:48:13.023"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 01:48:13.024" critical="yes" starttime="20201027 01:48:06.880"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 01:48:13.025" starttime="20201027 01:48:06.830"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:50:07.391" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:50:07.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:50:07.396" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 01:50:07.396" starttime="20201027 01:50:07.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:50:07.397" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 01:50:07.397" starttime="20201027 01:50:07.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:50:07.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:50:07.398" starttime="20201027 01:50:07.398"></status>
</kw>
<status status="PASS" endtime="20201027 01:50:07.398" starttime="20201027 01:50:07.385"></status>
</kw>
<msg timestamp="20201027 01:50:07.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:50:07.398" starttime="20201027 01:50:07.385"></status>
</kw>
<msg timestamp="20201027 01:50:07.399" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 01:50:07.399" starttime="20201027 01:50:07.385"></status>
</kw>
<msg timestamp="20201027 01:50:07.399" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 01:50:07.399" starttime="20201027 01:50:07.384"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 01:50:07.402" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 01:50:07.402" starttime="20201027 01:50:07.402"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:50:07.403" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 01:50:07.403" starttime="20201027 01:50:07.402"></status>
</kw>
<status status="PASS" endtime="20201027 01:50:07.403" starttime="20201027 01:50:07.401"></status>
</kw>
<msg timestamp="20201027 01:50:07.403" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 01:50:07.403" starttime="20201027 01:50:07.401"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 01:50:07.404" starttime="20201027 01:50:07.404"></status>
</kw>
<msg timestamp="20201027 01:50:07.404" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 01:50:07.404" starttime="20201027 01:50:07.403"></status>
</kw>
<status status="PASS" endtime="20201027 01:50:07.404" starttime="20201027 01:50:07.400"></status>
</kw>
<msg timestamp="20201027 01:50:07.404" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 01:50:07.404" starttime="20201027 01:50:07.400"></status>
</kw>
<msg timestamp="20201027 01:50:07.405" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 01:50:07.405" starttime="20201027 01:50:07.399"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:50:07.410" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:50:48.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:50:48.090" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 01:50:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50...</msg>
<status status="PASS" endtime="20201027 01:50:48.090" starttime="20201027 01:50:07.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:50:48.091" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 01:50:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:09 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-27 01:50:09 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:50:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 01:50:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 01:50:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 01:50:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8EB00B07CAE8-&gt;3f570ddf-64d9-4e86-8041-94fdcf14cb1d
2020-10-27 01:50:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 01:50:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:11 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-10-27 01:50:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 01:50:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:11 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 01:50:12 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 01:50:12 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603763186256_0003
2020-10-27 01:50:12 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 01:50:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:12 INFO  Configuration:2752 - resource-types.xml not found
2020-10-27 01:50:12 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-27 01:50:12 INFO  YarnClientImpl:324 - Submitted application application_1603763186256_0003
2020-10-27 01:50:12 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603763186256_0003/
2020-10-27 01:50:12 INFO  Job:1619 - Running job: job_1603763186256_0003
2020-10-27 01:50:21 INFO  Job:1640 - Job job_1603763186256_0003 running in uber mode : false
2020-10-27 01:50:21 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 01:50:29 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 01:50:34 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 01:50:40 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 01:50:46 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 01:50:47 INFO  Job:1658 - Job job_1603763186256_0003 completed successfully
2020-10-27 01:50:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:47 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021325
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46084
		Total time spent by all reduces in occupied slots (ms)=17596
		Total time spent by all map tasks (ms)=11521
		Total time spent by all reduce tasks (ms)=4399
		Total vcore-milliseconds taken by all map tasks=11521
		Total vcore-milliseconds taken by all reduce tasks=4399
		Total megabyte-milliseconds taken by all map tasks=47190016
		Total megabyte-milliseconds taken by all reduce tasks=18018304
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=752
		CPU time spent (ms)=7970
		Physical memory (bytes) snapshot=1159794688
		Virtual memory (bytes) snapshot=16064159744
		Total committed heap usage (bytes)=1065353216
		Peak Map Physical memory (bytes)=289173504
		Peak Map Virtual memory (bytes)=4011151360
		Peak Reduce Physical memory (bytes)=300564480
		Peak Reduce Virtual memory (bytes)=4034936832
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.292 seconds
2020-10-27 01:50:47 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-27 01:50:47 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 01:50:48.091" starttime="20201027 01:50:48.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:50:48.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:50:48.092" starttime="20201027 01:50:48.091"></status>
</kw>
<status status="PASS" endtime="20201027 01:50:48.092" starttime="20201027 01:50:07.405"></status>
</kw>
<msg timestamp="20201027 01:50:48.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:50:48.093" starttime="20201027 01:50:07.405"></status>
</kw>
<msg timestamp="20201027 01:50:48.093" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 01:50:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50...</msg>
<status status="PASS" endtime="20201027 01:50:48.093" starttime="20201027 01:50:07.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 01:50:48.094" starttime="20201027 01:50:48.093"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 01:50:48.094" critical="yes" starttime="20201027 01:50:07.384"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:50:48.100" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:50:48.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:50:48.106" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 01:50:48.106" starttime="20201027 01:50:48.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:50:48.107" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 01:50:48.107" starttime="20201027 01:50:48.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:50:48.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:50:48.108" starttime="20201027 01:50:48.107"></status>
</kw>
<status status="PASS" endtime="20201027 01:50:48.108" starttime="20201027 01:50:48.097"></status>
</kw>
<msg timestamp="20201027 01:50:48.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:50:48.108" starttime="20201027 01:50:48.097"></status>
</kw>
<msg timestamp="20201027 01:50:48.108" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 01:50:48.108" starttime="20201027 01:50:48.096"></status>
</kw>
<msg timestamp="20201027 01:50:48.108" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 01:50:48.108" starttime="20201027 01:50:48.096"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 01:50:48.110" level="INFO">${random} = 00</msg>
<status status="PASS" endtime="20201027 01:50:48.110" starttime="20201027 01:50:48.109"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 01:50:48.115" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 01:50:48.115" starttime="20201027 01:50:48.115"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:50:48.116" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 01:50:48.116" starttime="20201027 01:50:48.115"></status>
</kw>
<status status="PASS" endtime="20201027 01:50:48.116" starttime="20201027 01:50:48.114"></status>
</kw>
<msg timestamp="20201027 01:50:48.116" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 01:50:48.116" starttime="20201027 01:50:48.114"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 01:50:48.117" starttime="20201027 01:50:48.117"></status>
</kw>
<msg timestamp="20201027 01:50:48.117" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 01:50:48.117" starttime="20201027 01:50:48.116"></status>
</kw>
<status status="PASS" endtime="20201027 01:50:48.117" starttime="20201027 01:50:48.113"></status>
</kw>
<msg timestamp="20201027 01:50:48.117" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 01:50:48.117" starttime="20201027 01:50:48.111"></status>
</kw>
<msg timestamp="20201027 01:50:48.118" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 01:50:48.118" starttime="20201027 01:50:48.110"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 01:50:48.121" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 01:50:48.121" starttime="20201027 01:50:48.120"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:50:48.121" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 01:50:48.121" starttime="20201027 01:50:48.121"></status>
</kw>
<status status="PASS" endtime="20201027 01:50:48.121" starttime="20201027 01:50:48.120"></status>
</kw>
<msg timestamp="20201027 01:50:48.121" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 01:50:48.121" starttime="20201027 01:50:48.119"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:50:48.123" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201027 01:50:48.123" starttime="20201027 01:50:48.122"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:50:48.123" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201027 01:50:48.123" starttime="20201027 01:50:48.123"></status>
</kw>
<status status="PASS" endtime="20201027 01:50:48.123" starttime="20201027 01:50:48.122"></status>
</kw>
<msg timestamp="20201027 01:50:48.124" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201027 01:50:48.124" starttime="20201027 01:50:48.122"></status>
</kw>
<status status="PASS" endtime="20201027 01:50:48.124" starttime="20201027 01:50:48.119"></status>
</kw>
<msg timestamp="20201027 01:50:48.124" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 01:50:48.124" starttime="20201027 01:50:48.118"></status>
</kw>
<msg timestamp="20201027 01:50:48.124" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 01:50:48.124" starttime="20201027 01:50:48.118"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 01:50:48.127" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 01:50:48.127" starttime="20201027 01:50:48.126"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:50:48.128" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 01:50:48.128" starttime="20201027 01:50:48.127"></status>
</kw>
<status status="PASS" endtime="20201027 01:50:48.128" starttime="20201027 01:50:48.126"></status>
</kw>
<msg timestamp="20201027 01:50:48.128" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 01:50:48.128" starttime="20201027 01:50:48.126"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:50:48.129" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201027 01:50:48.129" starttime="20201027 01:50:48.129"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:50:48.130" level="INFO">${result} = /wordcount-00.txt</msg>
<status status="PASS" endtime="20201027 01:50:48.130" starttime="20201027 01:50:48.129"></status>
</kw>
<status status="PASS" endtime="20201027 01:50:48.130" starttime="20201027 01:50:48.128"></status>
</kw>
<msg timestamp="20201027 01:50:48.130" level="INFO">${path_with_leading} = /wordcount-00.txt</msg>
<status status="PASS" endtime="20201027 01:50:48.130" starttime="20201027 01:50:48.128"></status>
</kw>
<status status="PASS" endtime="20201027 01:50:48.130" starttime="20201027 01:50:48.125"></status>
</kw>
<msg timestamp="20201027 01:50:48.130" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-00.txt</msg>
<status status="PASS" endtime="20201027 01:50:48.130" starttime="20201027 01:50:48.125"></status>
</kw>
<msg timestamp="20201027 01:50:48.130" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-00.txt</msg>
<status status="PASS" endtime="20201027 01:50:48.130" starttime="20201027 01:50:48.124"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:50:48.136" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-00.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:51:27.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:51:27.071" level="INFO">${output} = 2020-10-27 01:50:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 01:51:27.071" starttime="20201027 01:50:48.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:51:27.072" level="INFO">2020-10-27 01:50:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-10-27 01:50:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 01:50:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:50 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-27 01:50:50 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:50:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 01:50:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 01:50:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 01:50:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6DA41F67FC00-&gt;3f570ddf-64d9-4e86-8041-94fdcf14cb1d
2020-10-27 01:50:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 01:50:52 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 01:50:52 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 01:50:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603763186256_0004
2020-10-27 01:50:52 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 01:50:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:52 INFO  Configuration:2752 - resource-types.xml not found
2020-10-27 01:50:52 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-27 01:50:53 INFO  YarnClientImpl:324 - Submitted application application_1603763186256_0004
2020-10-27 01:50:53 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603763186256_0004/
2020-10-27 01:50:53 INFO  Job:1619 - Running job: job_1603763186256_0004
2020-10-27 01:51:01 INFO  Job:1640 - Job job_1603763186256_0004 running in uber mode : false
2020-10-27 01:51:01 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 01:51:08 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 01:51:14 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 01:51:20 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 01:51:25 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 01:51:26 INFO  Job:1658 - Job job_1603763186256_0004 completed successfully
2020-10-27 01:51:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:51:26 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45504
		Total time spent by all reduces in occupied slots (ms)=16972
		Total time spent by all map tasks (ms)=11376
		Total time spent by all reduce tasks (ms)=4243
		Total vcore-milliseconds taken by all map tasks=11376
		Total vcore-milliseconds taken by all reduce tasks=4243
		Total megabyte-milliseconds taken by all map tasks=46596096
		Total megabyte-milliseconds taken by all reduce tasks=17379328
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=725
		CPU time spent (ms)=8110
		Physical memory (bytes) snapshot=1172770816
		Virtual memory (bytes) snapshot=16067358720
		Total committed heap usage (bytes)=1061683200
		Peak Map Physical memory (bytes)=295084032
		Peak Map Virtual memory (bytes)=4013916160
		Peak Reduce Physical memory (bytes)=295931904
		Peak Reduce Virtual memory (bytes)=4033736704
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-27 01:51:26 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 01:51:27.072" starttime="20201027 01:51:27.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:51:27.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:51:27.073" starttime="20201027 01:51:27.072"></status>
</kw>
<status status="PASS" endtime="20201027 01:51:27.073" starttime="20201027 01:50:48.131"></status>
</kw>
<msg timestamp="20201027 01:51:27.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:51:27.073" starttime="20201027 01:50:48.131"></status>
</kw>
<msg timestamp="20201027 01:51:27.074" level="INFO">${output} = 2020-10-27 01:50:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:50:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 01:51:27.074" starttime="20201027 01:50:48.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 01:51:27.075" starttime="20201027 01:51:27.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 01:51:27.075" starttime="20201027 01:51:27.075"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 01:51:27.075" critical="yes" starttime="20201027 01:50:48.095"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 01:51:27.076" starttime="20201027 01:50:07.333"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:48:18.662" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:48:18.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:48:18.672" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 01:48:18.672" starttime="20201027 01:48:18.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:48:18.673" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 01:48:18.673" starttime="20201027 01:48:18.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:48:18.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:48:18.674" starttime="20201027 01:48:18.673"></status>
</kw>
<status status="PASS" endtime="20201027 01:48:18.674" starttime="20201027 01:48:18.656"></status>
</kw>
<msg timestamp="20201027 01:48:18.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:48:18.674" starttime="20201027 01:48:18.656"></status>
</kw>
<msg timestamp="20201027 01:48:18.675" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 01:48:18.675" starttime="20201027 01:48:18.655"></status>
</kw>
<msg timestamp="20201027 01:48:18.675" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 01:48:18.675" starttime="20201027 01:48:18.655"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:48:18.678" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:48:18.678" starttime="20201027 01:48:18.678"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:48:18.679" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:48:18.679" starttime="20201027 01:48:18.679"></status>
</kw>
<status status="PASS" endtime="20201027 01:48:18.679" starttime="20201027 01:48:18.678"></status>
</kw>
<msg timestamp="20201027 01:48:18.679" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:48:18.680" starttime="20201027 01:48:18.677"></status>
</kw>
<status status="PASS" endtime="20201027 01:48:18.680" starttime="20201027 01:48:18.677"></status>
</kw>
<msg timestamp="20201027 01:48:18.680" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 01:48:18.680" starttime="20201027 01:48:18.676"></status>
</kw>
<msg timestamp="20201027 01:48:18.680" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 01:48:18.680" starttime="20201027 01:48:18.675"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:48:18.685" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:49:06.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:49:06.345" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 01:48:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48...</msg>
<status status="PASS" endtime="20201027 01:49:06.345" starttime="20201027 01:48:18.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:49:06.347" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 01:48:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:21 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-27 01:48:21 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:48:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 01:48:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 01:48:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 01:48:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BC24CC3F4684-&gt;3f570ddf-64d9-4e86-8041-94fdcf14cb1d
2020-10-27 01:48:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 01:48:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-10-27 01:48:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:25 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 01:48:25 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 01:48:26 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603763186256_0001
2020-10-27 01:48:26 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 01:48:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:26 INFO  Configuration:2752 - resource-types.xml not found
2020-10-27 01:48:26 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-27 01:48:26 INFO  YarnClientImpl:324 - Submitted application application_1603763186256_0001
2020-10-27 01:48:27 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603763186256_0001/
2020-10-27 01:48:27 INFO  Job:1619 - Running job: job_1603763186256_0001
2020-10-27 01:48:39 INFO  Job:1640 - Job job_1603763186256_0001 running in uber mode : false
2020-10-27 01:48:39 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 01:48:46 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 01:48:53 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 01:48:59 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 01:49:04 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 01:49:05 INFO  Job:1658 - Job job_1603763186256_0001 completed successfully
2020-10-27 01:49:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:05 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48260
		Total time spent by all reduces in occupied slots (ms)=17592
		Total time spent by all map tasks (ms)=12065
		Total time spent by all reduce tasks (ms)=4398
		Total vcore-milliseconds taken by all map tasks=12065
		Total vcore-milliseconds taken by all reduce tasks=4398
		Total megabyte-milliseconds taken by all map tasks=49418240
		Total megabyte-milliseconds taken by all reduce tasks=18014208
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=824
		CPU time spent (ms)=8180
		Physical memory (bytes) snapshot=1169145856
		Virtual memory (bytes) snapshot=16063995904
		Total committed heap usage (bytes)=1071120384
		Peak Map Physical memory (bytes)=296656896
		Peak Map Virtual memory (bytes)=4020105216
		Peak Reduce Physical memory (bytes)=301391872
		Peak Reduce Virtual memory (bytes)=4033327104
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 43.263 seconds
2020-10-27 01:49:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:05 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-27 01:49:06 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 01:49:06.347" starttime="20201027 01:49:06.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:49:06.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:49:06.348" starttime="20201027 01:49:06.347"></status>
</kw>
<status status="PASS" endtime="20201027 01:49:06.348" starttime="20201027 01:48:18.681"></status>
</kw>
<msg timestamp="20201027 01:49:06.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:49:06.349" starttime="20201027 01:48:18.681"></status>
</kw>
<msg timestamp="20201027 01:49:06.349" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 01:48:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:48...</msg>
<status status="PASS" endtime="20201027 01:49:06.349" starttime="20201027 01:48:18.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 01:49:06.350" starttime="20201027 01:49:06.349"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 01:49:06.350" critical="yes" starttime="20201027 01:48:18.654"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:49:06.355" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:49:06.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:49:06.362" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 01:49:06.362" starttime="20201027 01:49:06.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:49:06.363" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 01:49:06.364" starttime="20201027 01:49:06.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:49:06.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:49:06.364" starttime="20201027 01:49:06.364"></status>
</kw>
<status status="PASS" endtime="20201027 01:49:06.364" starttime="20201027 01:49:06.352"></status>
</kw>
<msg timestamp="20201027 01:49:06.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:49:06.365" starttime="20201027 01:49:06.352"></status>
</kw>
<msg timestamp="20201027 01:49:06.365" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 01:49:06.365" starttime="20201027 01:49:06.352"></status>
</kw>
<msg timestamp="20201027 01:49:06.365" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 01:49:06.365" starttime="20201027 01:49:06.351"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 01:49:06.366" level="INFO">${random} = 72</msg>
<status status="PASS" endtime="20201027 01:49:06.366" starttime="20201027 01:49:06.365"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:49:06.369" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:49:06.369" starttime="20201027 01:49:06.369"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:49:06.370" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:49:06.370" starttime="20201027 01:49:06.369"></status>
</kw>
<status status="PASS" endtime="20201027 01:49:06.370" starttime="20201027 01:49:06.368"></status>
</kw>
<msg timestamp="20201027 01:49:06.370" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:49:06.370" starttime="20201027 01:49:06.368"></status>
</kw>
<status status="PASS" endtime="20201027 01:49:06.370" starttime="20201027 01:49:06.367"></status>
</kw>
<msg timestamp="20201027 01:49:06.370" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 01:49:06.370" starttime="20201027 01:49:06.366"></status>
</kw>
<msg timestamp="20201027 01:49:06.370" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 01:49:06.370" starttime="20201027 01:49:06.366"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:49:06.373" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:49:06.373" starttime="20201027 01:49:06.373"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:49:06.374" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:49:06.374" starttime="20201027 01:49:06.373"></status>
</kw>
<status status="PASS" endtime="20201027 01:49:06.374" starttime="20201027 01:49:06.372"></status>
</kw>
<msg timestamp="20201027 01:49:06.374" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:49:06.374" starttime="20201027 01:49:06.372"></status>
</kw>
<status status="PASS" endtime="20201027 01:49:06.374" starttime="20201027 01:49:06.371"></status>
</kw>
<msg timestamp="20201027 01:49:06.374" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 01:49:06.374" starttime="20201027 01:49:06.371"></status>
</kw>
<msg timestamp="20201027 01:49:06.374" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 01:49:06.374" starttime="20201027 01:49:06.370"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:49:06.377" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:49:06.377" starttime="20201027 01:49:06.377"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:49:06.378" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:49:06.378" starttime="20201027 01:49:06.377"></status>
</kw>
<status status="PASS" endtime="20201027 01:49:06.378" starttime="20201027 01:49:06.376"></status>
</kw>
<msg timestamp="20201027 01:49:06.378" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:49:06.378" starttime="20201027 01:49:06.376"></status>
</kw>
<status status="PASS" endtime="20201027 01:49:06.378" starttime="20201027 01:49:06.375"></status>
</kw>
<msg timestamp="20201027 01:49:06.378" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-72.txt</msg>
<status status="PASS" endtime="20201027 01:49:06.378" starttime="20201027 01:49:06.375"></status>
</kw>
<msg timestamp="20201027 01:49:06.378" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-72.txt</msg>
<status status="PASS" endtime="20201027 01:49:06.378" starttime="20201027 01:49:06.374"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:49:06.384" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-72.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:49:50.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:49:50.050" level="INFO">${output} = 2020-10-27 01:49:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:08 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 01:49:50.050" starttime="20201027 01:49:06.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:49:50.052" level="INFO">2020-10-27 01:49:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-10-27 01:49:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 01:49:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:09 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-27 01:49:09 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-27 01:49:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 01:49:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 01:49:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 01:49:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2B42DE0E5C91-&gt;3f570ddf-64d9-4e86-8041-94fdcf14cb1d
2020-10-27 01:49:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 01:49:10 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 01:49:13 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 01:49:13 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603763186256_0002
2020-10-27 01:49:13 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 01:49:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:13 INFO  Configuration:2752 - resource-types.xml not found
2020-10-27 01:49:13 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-27 01:49:14 INFO  YarnClientImpl:324 - Submitted application application_1603763186256_0002
2020-10-27 01:49:14 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603763186256_0002/
2020-10-27 01:49:14 INFO  Job:1619 - Running job: job_1603763186256_0002
2020-10-27 01:49:23 INFO  Job:1640 - Job job_1603763186256_0002 running in uber mode : false
2020-10-27 01:49:23 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 01:49:30 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 01:49:36 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 01:49:42 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 01:49:48 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 01:49:49 INFO  Job:1658 - Job job_1603763186256_0002 completed successfully
2020-10-27 01:49:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:49 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47756
		Total time spent by all reduces in occupied slots (ms)=17784
		Total time spent by all map tasks (ms)=11939
		Total time spent by all reduce tasks (ms)=4446
		Total vcore-milliseconds taken by all map tasks=11939
		Total vcore-milliseconds taken by all reduce tasks=4446
		Total megabyte-milliseconds taken by all map tasks=48902144
		Total megabyte-milliseconds taken by all reduce tasks=18210816
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=835
		CPU time spent (ms)=8600
		Physical memory (bytes) snapshot=1167224832
		Virtual memory (bytes) snapshot=16069099520
		Total committed heap usage (bytes)=1229979648
		Peak Map Physical memory (bytes)=293879808
		Peak Map Virtual memory (bytes)=4013580288
		Peak Reduce Physical memory (bytes)=296517632
		Peak Reduce Virtual memory (bytes)=4032184320
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-27 01:49:49 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 01:49:50.052" starttime="20201027 01:49:50.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:49:50.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:49:50.053" starttime="20201027 01:49:50.052"></status>
</kw>
<status status="PASS" endtime="20201027 01:49:50.053" starttime="20201027 01:49:06.379"></status>
</kw>
<msg timestamp="20201027 01:49:50.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:49:50.053" starttime="20201027 01:49:06.379"></status>
</kw>
<msg timestamp="20201027 01:49:50.054" level="INFO">${output} = 2020-10-27 01:49:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 01:49:08 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 01:49:50.054" starttime="20201027 01:49:06.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 01:49:50.054" starttime="20201027 01:49:50.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 01:49:50.055" starttime="20201027 01:49:50.055"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 01:49:50.055" critical="yes" starttime="20201027 01:49:06.350"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 01:49:50.056" starttime="20201027 01:48:18.596"></status>
</suite>
<status status="PASS" elapsedtime="216390" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:52:42.218" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:52:46.531" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 01:52:46.531" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 01:52:46.531" starttime="20201027 01:52:42.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:52:46.532" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 01:52:46.532" starttime="20201027 01:52:46.531"></status>
</kw>
<msg timestamp="20201027 01:52:46.532" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 01:52:46.532" starttime="20201027 01:52:42.208"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:52:46.539" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:52:50.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:52:50.587" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:52:50.587" starttime="20201027 01:52:46.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:52:50.588" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:52:50.588" starttime="20201027 01:52:50.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:52:50.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:52:50.589" starttime="20201027 01:52:50.589"></status>
</kw>
<status status="PASS" endtime="20201027 01:52:50.589" starttime="20201027 01:52:46.535"></status>
</kw>
<msg timestamp="20201027 01:52:50.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:52:50.590" starttime="20201027 01:52:46.534"></status>
</kw>
<msg timestamp="20201027 01:52:50.590" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201027 01:52:50.590" starttime="20201027 01:52:46.534"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201027 01:52:50.590" starttime="20201027 01:52:50.590"></status>
</kw>
<status status="PASS" endtime="20201027 01:52:50.590" starttime="20201027 01:52:46.533"></status>
</kw>
<status status="PASS" endtime="20201027 01:52:50.591" starttime="20201027 01:52:46.533"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:52:50.597" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:52:53.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:52:53.853" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:52:53.853" starttime="20201027 01:52:50.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:52:53.854" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:52:53.854" starttime="20201027 01:52:53.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:52:53.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:52:53.855" starttime="20201027 01:52:53.854"></status>
</kw>
<status status="PASS" endtime="20201027 01:52:53.855" starttime="20201027 01:52:50.592"></status>
</kw>
<msg timestamp="20201027 01:52:53.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:52:53.855" starttime="20201027 01:52:50.592"></status>
</kw>
<status status="PASS" endtime="20201027 01:52:53.855" starttime="20201027 01:52:50.592"></status>
</kw>
<status status="PASS" endtime="20201027 01:52:53.856" starttime="20201027 01:52:50.591"></status>
</kw>
<status status="PASS" endtime="20201027 01:52:53.856" starttime="20201027 01:52:50.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201027 01:52:53.857" starttime="20201027 01:52:53.856"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:52:53.861" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:52:57.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:52:57.589" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T01:52:53.717Z",
  "modificat...</msg>
<status status="PASS" endtime="20201027 01:52:57.590" starttime="20201027 01:52:53.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:52:57.591" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T01:52:53.717Z",
  "modificationTime" : "2020-10-27T01:52:53.717Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 01:52:57.592" starttime="20201027 01:52:57.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:52:57.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:52:57.592" starttime="20201027 01:52:57.592"></status>
</kw>
<status status="PASS" endtime="20201027 01:52:57.593" starttime="20201027 01:52:53.858"></status>
</kw>
<msg timestamp="20201027 01:52:57.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:52:57.593" starttime="20201027 01:52:53.857"></status>
</kw>
<msg timestamp="20201027 01:52:57.593" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T01:52:53.717Z",
  "modificat...</msg>
<status status="PASS" endtime="20201027 01:52:57.593" starttime="20201027 01:52:53.857"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201027 01:52:57.594" starttime="20201027 01:52:57.593"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:52:57.598" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:52:57.598" starttime="20201027 01:52:57.597"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:52:57.598" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:52:57.598" starttime="20201027 01:52:57.598"></status>
</kw>
<status status="PASS" endtime="20201027 01:52:57.599" starttime="20201027 01:52:57.597"></status>
</kw>
<msg timestamp="20201027 01:52:57.599" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:52:57.599" starttime="20201027 01:52:57.596"></status>
</kw>
<status status="PASS" endtime="20201027 01:52:57.599" starttime="20201027 01:52:57.595"></status>
</kw>
<msg timestamp="20201027 01:52:57.599" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 01:52:57.599" starttime="20201027 01:52:57.595"></status>
</kw>
<msg timestamp="20201027 01:52:57.602" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 01:52:57.602" starttime="20201027 01:52:57.594"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:52:57.608" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:53:01.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:53:01.156" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:53:01.157" starttime="20201027 01:52:57.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:53:01.158" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:53:01.158" starttime="20201027 01:53:01.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:53:01.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:53:01.159" starttime="20201027 01:53:01.158"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:01.159" starttime="20201027 01:52:57.603"></status>
</kw>
<msg timestamp="20201027 01:53:01.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:53:01.160" starttime="20201027 01:52:57.603"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:01.160" starttime="20201027 01:52:57.602"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:53:01.165" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:53:09.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:53:09.506" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:53:09.506" starttime="20201027 01:53:01.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:53:09.508" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:53:09.508" starttime="20201027 01:53:09.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:53:09.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:53:09.509" starttime="20201027 01:53:09.508"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:09.509" starttime="20201027 01:53:01.161"></status>
</kw>
<msg timestamp="20201027 01:53:09.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:53:09.509" starttime="20201027 01:53:01.161"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:09.509" starttime="20201027 01:53:01.160"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:53:09.514" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:53:15.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:53:15.545" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:53:15.545" starttime="20201027 01:53:09.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:53:15.546" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:53:15.546" starttime="20201027 01:53:15.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:53:15.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:53:15.547" starttime="20201027 01:53:15.546"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:15.547" starttime="20201027 01:53:09.511"></status>
</kw>
<msg timestamp="20201027 01:53:15.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:53:15.547" starttime="20201027 01:53:09.510"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:15.548" starttime="20201027 01:53:09.510"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:53:15.554" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:53:21.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:53:21.449" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:53:21.450" starttime="20201027 01:53:15.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:53:21.451" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:53:21.451" starttime="20201027 01:53:21.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:53:21.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:53:21.452" starttime="20201027 01:53:21.451"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:21.452" starttime="20201027 01:53:15.549"></status>
</kw>
<msg timestamp="20201027 01:53:21.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:53:21.452" starttime="20201027 01:53:15.548"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:21.452" starttime="20201027 01:53:15.548"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 01:53:21.453" critical="yes" starttime="20201027 01:52:42.207"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:53:21.459" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:53:21.459" starttime="20201027 01:53:21.458"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:53:21.459" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:53:21.459" starttime="20201027 01:53:21.459"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:21.460" starttime="20201027 01:53:21.458"></status>
</kw>
<msg timestamp="20201027 01:53:21.460" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:53:21.460" starttime="20201027 01:53:21.457"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:21.460" starttime="20201027 01:53:21.456"></status>
</kw>
<msg timestamp="20201027 01:53:21.460" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 01:53:21.460" starttime="20201027 01:53:21.456"></status>
</kw>
<msg timestamp="20201027 01:53:21.460" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 01:53:21.461" starttime="20201027 01:53:21.455"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:53:21.464" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:53:25.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:53:25.003" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:53:25.004" starttime="20201027 01:53:21.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:53:25.005" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:53:25.005" starttime="20201027 01:53:25.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:53:25.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:53:25.006" starttime="20201027 01:53:25.005"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:25.006" starttime="20201027 01:53:21.461"></status>
</kw>
<msg timestamp="20201027 01:53:25.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:53:25.006" starttime="20201027 01:53:21.461"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:25.006" starttime="20201027 01:53:21.461"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:53:25.011" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:53:28.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:53:28.374" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:53:28.374" starttime="20201027 01:53:25.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:53:28.375" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:53:28.375" starttime="20201027 01:53:28.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:53:28.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:53:28.376" starttime="20201027 01:53:28.375"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:28.376" starttime="20201027 01:53:25.008"></status>
</kw>
<msg timestamp="20201027 01:53:28.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:53:28.376" starttime="20201027 01:53:25.007"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:28.377" starttime="20201027 01:53:25.007"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 01:53:28.377" critical="yes" starttime="20201027 01:53:21.454"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201027 01:53:28.378" starttime="20201027 01:52:42.138"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 01:55:19.444" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 01:55:19.444" starttime="20201027 01:55:19.444"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:55:19.445" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 01:55:19.445" starttime="20201027 01:55:19.445"></status>
</kw>
<status status="PASS" endtime="20201027 01:55:19.445" starttime="20201027 01:55:19.444"></status>
</kw>
<msg timestamp="20201027 01:55:19.445" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 01:55:19.446" starttime="20201027 01:55:19.443"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 01:55:19.446" starttime="20201027 01:55:19.446"></status>
</kw>
<msg timestamp="20201027 01:55:19.447" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 01:55:19.447" starttime="20201027 01:55:19.446"></status>
</kw>
<status status="PASS" endtime="20201027 01:55:19.447" starttime="20201027 01:55:19.443"></status>
</kw>
<msg timestamp="20201027 01:55:19.447" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 01:55:19.447" starttime="20201027 01:55:19.442"></status>
</kw>
<msg timestamp="20201027 01:55:19.447" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 01:55:19.447" starttime="20201027 01:55:19.441"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 01:55:19.448" level="INFO">${random} = 50360</msg>
<status status="PASS" endtime="20201027 01:55:19.448" starttime="20201027 01:55:19.447"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:55:19.456" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-50360 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:55:23.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:55:23.376" level="INFO">${output} = 2020-10-27 01:55:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 01:55:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201027 01:55:23.376" starttime="20201027 01:55:19.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:55:23.378" level="INFO">2020-10-27 01:55:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 01:55:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 01:55:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 01:55:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 01:55:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E7F98F72CFD5-&gt;579569b9-3a29-40f0-8e4b-676524e053ed
2020-10-27 01:55:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201027 01:55:23.378" starttime="20201027 01:55:23.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:55:23.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:55:23.379" starttime="20201027 01:55:23.378"></status>
</kw>
<status status="PASS" endtime="20201027 01:55:23.379" starttime="20201027 01:55:19.448"></status>
</kw>
<msg timestamp="20201027 01:55:23.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:55:23.379" starttime="20201027 01:55:19.448"></status>
</kw>
<msg timestamp="20201027 01:55:23.379" level="INFO">${result} = 2020-10-27 01:55:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 01:55:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201027 01:55:23.379" starttime="20201027 01:55:19.448"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:55:23.383" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:55:25.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:55:25.434" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:53 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 01:53 ofs://om/volume1/bucket1/ozone-03068
-rw-...</msg>
<status status="PASS" endtime="20201027 01:55:25.434" starttime="20201027 01:55:23.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:55:25.435" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:53 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 01:53 ofs://om/volume1/bucket1/ozone-03068
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 01:55 ofs://om/volume1/bucket1/ozone-50360
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:53 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:54 ofs://om/volume1/bucket1/wordcount-09.txt</msg>
<status status="PASS" endtime="20201027 01:55:25.435" starttime="20201027 01:55:25.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:55:25.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:55:25.436" starttime="20201027 01:55:25.436"></status>
</kw>
<status status="PASS" endtime="20201027 01:55:25.436" starttime="20201027 01:55:23.380"></status>
</kw>
<msg timestamp="20201027 01:55:25.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:55:25.437" starttime="20201027 01:55:23.380"></status>
</kw>
<msg timestamp="20201027 01:55:25.437" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:53 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 01:53 ofs://om/volume1/bucket1/ozone-03068
-rw-...</msg>
<status status="PASS" endtime="20201027 01:55:25.437" starttime="20201027 01:55:23.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 01:55:25.437" starttime="20201027 01:55:25.437"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 01:55:25.438" critical="yes" starttime="20201027 01:55:19.440"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 01:55:25.438" starttime="20201027 01:55:19.387"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:53:33.919" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:53:33.919" starttime="20201027 01:53:33.918"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:53:33.920" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:53:33.920" starttime="20201027 01:53:33.919"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:33.920" starttime="20201027 01:53:33.918"></status>
</kw>
<msg timestamp="20201027 01:53:33.920" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:53:33.920" starttime="20201027 01:53:33.918"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:33.920" starttime="20201027 01:53:33.917"></status>
</kw>
<msg timestamp="20201027 01:53:33.920" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 01:53:33.920" starttime="20201027 01:53:33.917"></status>
</kw>
<msg timestamp="20201027 01:53:33.920" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 01:53:33.920" starttime="20201027 01:53:33.915"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 01:53:33.921" level="INFO">${random} = 03068</msg>
<status status="PASS" endtime="20201027 01:53:33.921" starttime="20201027 01:53:33.920"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:53:33.927" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-03068 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:53:38.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:53:38.048" level="INFO">${output} = 2020-10-27 01:53:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 01:53:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201027 01:53:38.048" starttime="20201027 01:53:33.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:53:38.049" level="INFO">2020-10-27 01:53:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 01:53:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 01:53:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 01:53:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 01:53:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E3B1D1B22A2E-&gt;579569b9-3a29-40f0-8e4b-676524e053ed
2020-10-27 01:53:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201027 01:53:38.049" starttime="20201027 01:53:38.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:53:38.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:53:38.050" starttime="20201027 01:53:38.050"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:38.051" starttime="20201027 01:53:33.922"></status>
</kw>
<msg timestamp="20201027 01:53:38.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:53:38.051" starttime="20201027 01:53:33.921"></status>
</kw>
<msg timestamp="20201027 01:53:38.051" level="INFO">${result} = 2020-10-27 01:53:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 01:53:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201027 01:53:38.051" starttime="20201027 01:53:33.921"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:53:38.058" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:53:40.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:53:40.246" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:53 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 01:53 o3fs://bucket1.volume1.om/ozone-03068
dr...</msg>
<status status="PASS" endtime="20201027 01:53:40.247" starttime="20201027 01:53:38.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:53:40.248" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:53 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 01:53 o3fs://bucket1.volume1.om/ozone-03068
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:53 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 01:53:40.248" starttime="20201027 01:53:40.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:53:40.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:53:40.249" starttime="20201027 01:53:40.249"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:40.249" starttime="20201027 01:53:38.052"></status>
</kw>
<msg timestamp="20201027 01:53:40.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:53:40.250" starttime="20201027 01:53:38.052"></status>
</kw>
<msg timestamp="20201027 01:53:40.250" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 01:53 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 01:53 o3fs://bucket1.volume1.om/ozone-03068
dr...</msg>
<status status="PASS" endtime="20201027 01:53:40.250" starttime="20201027 01:53:38.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 01:53:40.250" starttime="20201027 01:53:40.250"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 01:53:40.251" critical="yes" starttime="20201027 01:53:33.914"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 01:53:40.254" starttime="20201027 01:53:33.865"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:55:30.942" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:55:30.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:55:30.949" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 01:55:30.949" starttime="20201027 01:55:30.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:55:30.951" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 01:55:30.951" starttime="20201027 01:55:30.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:55:30.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:55:30.951" starttime="20201027 01:55:30.951"></status>
</kw>
<status status="PASS" endtime="20201027 01:55:30.952" starttime="20201027 01:55:30.937"></status>
</kw>
<msg timestamp="20201027 01:55:30.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:55:30.952" starttime="20201027 01:55:30.937"></status>
</kw>
<msg timestamp="20201027 01:55:30.952" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 01:55:30.952" starttime="20201027 01:55:30.936"></status>
</kw>
<msg timestamp="20201027 01:55:30.952" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 01:55:30.952" starttime="20201027 01:55:30.936"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 01:55:30.956" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 01:55:30.956" starttime="20201027 01:55:30.955"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:55:30.956" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 01:55:30.956" starttime="20201027 01:55:30.956"></status>
</kw>
<status status="PASS" endtime="20201027 01:55:30.956" starttime="20201027 01:55:30.955"></status>
</kw>
<msg timestamp="20201027 01:55:30.957" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 01:55:30.957" starttime="20201027 01:55:30.954"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 01:55:30.957" starttime="20201027 01:55:30.957"></status>
</kw>
<msg timestamp="20201027 01:55:30.958" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 01:55:30.958" starttime="20201027 01:55:30.957"></status>
</kw>
<status status="PASS" endtime="20201027 01:55:30.958" starttime="20201027 01:55:30.954"></status>
</kw>
<msg timestamp="20201027 01:55:30.958" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 01:55:30.958" starttime="20201027 01:55:30.953"></status>
</kw>
<msg timestamp="20201027 01:55:30.958" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 01:55:30.958" starttime="20201027 01:55:30.952"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:55:30.962" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:56:11.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:56:11.949" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 01:55:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 01:55:33 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201027 01:56:11.950" starttime="20201027 01:55:30.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:56:11.951" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 01:55:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 01:55:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 01:55:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 01:55:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 01:55:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CAF37AA4BC0F-&gt;579569b9-3a29-40f0-8e4b-676524e053ed
2020-10-27 01:55:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 01:55:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-27 01:55:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 01:55:35 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 01:55:36 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 01:55:36 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603763538347_0003
2020-10-27 01:55:36 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 01:55:36 INFO  Configuration:2795 - resource-types.xml not found
2020-10-27 01:55:36 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-27 01:55:36 INFO  YarnClientImpl:329 - Submitted application application_1603763538347_0003
2020-10-27 01:55:36 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603763538347_0003/
2020-10-27 01:55:36 INFO  Job:1619 - Running job: job_1603763538347_0003
2020-10-27 01:55:44 INFO  Job:1640 - Job job_1603763538347_0003 running in uber mode : false
2020-10-27 01:55:44 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 01:55:52 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 01:55:58 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 01:56:04 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 01:56:10 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 01:56:11 INFO  Job:1658 - Job job_1603763538347_0003 completed successfully
2020-10-27 01:56:11 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061429
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=753
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47104
		Total time spent by all reduces in occupied slots (ms)=17140
		Total time spent by all map tasks (ms)=11776
		Total time spent by all reduce tasks (ms)=4285
		Total vcore-milliseconds taken by all map tasks=11776
		Total vcore-milliseconds taken by all reduce tasks=4285
		Total megabyte-milliseconds taken by all map tasks=48234496
		Total megabyte-milliseconds taken by all reduce tasks=17551360
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=399
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=793
		CPU time spent (ms)=8460
		Physical memory (bytes) snapshot=1482309632
		Virtual memory (bytes) snapshot=16078098432
		Total committed heap usage (bytes)=1721761792
		Peak Map Physical memory (bytes)=370585600
		Peak Map Virtual memory (bytes)=4016558080
		Peak Reduce Physical memory (bytes)=378130432
		Peak Reduce Virtual memory (bytes)=4036472832
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.244 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201027 01:56:11.951" starttime="20201027 01:56:11.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:56:11.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:56:11.952" starttime="20201027 01:56:11.951"></status>
</kw>
<status status="PASS" endtime="20201027 01:56:11.952" starttime="20201027 01:55:30.959"></status>
</kw>
<msg timestamp="20201027 01:56:11.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:56:11.953" starttime="20201027 01:55:30.959"></status>
</kw>
<msg timestamp="20201027 01:56:11.954" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 01:55:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 01:55:33 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201027 01:56:11.954" starttime="20201027 01:55:30.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 01:56:11.954" starttime="20201027 01:56:11.954"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 01:56:11.954" critical="yes" starttime="20201027 01:55:30.935"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:56:11.962" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:56:11.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:56:11.970" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 01:56:11.970" starttime="20201027 01:56:11.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:56:11.971" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 01:56:11.971" starttime="20201027 01:56:11.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:56:11.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:56:11.972" starttime="20201027 01:56:11.972"></status>
</kw>
<status status="PASS" endtime="20201027 01:56:11.972" starttime="20201027 01:56:11.958"></status>
</kw>
<msg timestamp="20201027 01:56:11.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:56:11.973" starttime="20201027 01:56:11.957"></status>
</kw>
<msg timestamp="20201027 01:56:11.973" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 01:56:11.973" starttime="20201027 01:56:11.957"></status>
</kw>
<msg timestamp="20201027 01:56:11.973" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 01:56:11.973" starttime="20201027 01:56:11.957"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 01:56:11.974" level="INFO">${random} = 11</msg>
<status status="PASS" endtime="20201027 01:56:11.974" starttime="20201027 01:56:11.973"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 01:56:11.977" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 01:56:11.977" starttime="20201027 01:56:11.977"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:56:11.978" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 01:56:11.978" starttime="20201027 01:56:11.978"></status>
</kw>
<status status="PASS" endtime="20201027 01:56:11.978" starttime="20201027 01:56:11.977"></status>
</kw>
<msg timestamp="20201027 01:56:11.978" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 01:56:11.978" starttime="20201027 01:56:11.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 01:56:11.979" starttime="20201027 01:56:11.979"></status>
</kw>
<msg timestamp="20201027 01:56:11.979" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 01:56:11.979" starttime="20201027 01:56:11.978"></status>
</kw>
<status status="PASS" endtime="20201027 01:56:11.980" starttime="20201027 01:56:11.975"></status>
</kw>
<msg timestamp="20201027 01:56:11.980" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 01:56:11.980" starttime="20201027 01:56:11.975"></status>
</kw>
<msg timestamp="20201027 01:56:11.980" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 01:56:11.980" starttime="20201027 01:56:11.974"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 01:56:11.983" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 01:56:11.984" starttime="20201027 01:56:11.983"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:56:11.984" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 01:56:11.984" starttime="20201027 01:56:11.984"></status>
</kw>
<status status="PASS" endtime="20201027 01:56:11.984" starttime="20201027 01:56:11.982"></status>
</kw>
<msg timestamp="20201027 01:56:11.984" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 01:56:11.985" starttime="20201027 01:56:11.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:56:11.986" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201027 01:56:11.986" starttime="20201027 01:56:11.986"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:56:11.987" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201027 01:56:11.987" starttime="20201027 01:56:11.986"></status>
</kw>
<status status="PASS" endtime="20201027 01:56:11.987" starttime="20201027 01:56:11.985"></status>
</kw>
<msg timestamp="20201027 01:56:11.987" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201027 01:56:11.987" starttime="20201027 01:56:11.985"></status>
</kw>
<status status="PASS" endtime="20201027 01:56:11.988" starttime="20201027 01:56:11.981"></status>
</kw>
<msg timestamp="20201027 01:56:11.988" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 01:56:11.988" starttime="20201027 01:56:11.981"></status>
</kw>
<msg timestamp="20201027 01:56:11.988" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 01:56:11.988" starttime="20201027 01:56:11.980"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 01:56:11.991" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 01:56:11.991" starttime="20201027 01:56:11.990"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:56:11.991" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 01:56:11.991" starttime="20201027 01:56:11.991"></status>
</kw>
<status status="PASS" endtime="20201027 01:56:11.992" starttime="20201027 01:56:11.990"></status>
</kw>
<msg timestamp="20201027 01:56:11.992" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 01:56:11.992" starttime="20201027 01:56:11.990"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:56:11.993" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201027 01:56:11.993" starttime="20201027 01:56:11.993"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:56:11.993" level="INFO">${result} = /wordcount-11.txt</msg>
<status status="PASS" endtime="20201027 01:56:11.994" starttime="20201027 01:56:11.993"></status>
</kw>
<status status="PASS" endtime="20201027 01:56:11.994" starttime="20201027 01:56:11.992"></status>
</kw>
<msg timestamp="20201027 01:56:11.994" level="INFO">${path_with_leading} = /wordcount-11.txt</msg>
<status status="PASS" endtime="20201027 01:56:11.994" starttime="20201027 01:56:11.992"></status>
</kw>
<status status="PASS" endtime="20201027 01:56:11.994" starttime="20201027 01:56:11.989"></status>
</kw>
<msg timestamp="20201027 01:56:11.994" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-11.txt</msg>
<status status="PASS" endtime="20201027 01:56:11.994" starttime="20201027 01:56:11.989"></status>
</kw>
<msg timestamp="20201027 01:56:11.994" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-11.txt</msg>
<status status="PASS" endtime="20201027 01:56:11.994" starttime="20201027 01:56:11.988"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:56:11.998" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-11.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:56:52.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:56:52.380" level="INFO">${output} = 2020-10-27 01:56:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-27 01:56:14 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201027 01:56:52.380" starttime="20201027 01:56:11.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:56:52.382" level="INFO">2020-10-27 01:56:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-27 01:56:14 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 01:56:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 01:56:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 01:56:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 01:56:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 01:56:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6B5861D53F3F-&gt;579569b9-3a29-40f0-8e4b-676524e053ed
2020-10-27 01:56:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 01:56:16 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 01:56:16 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 01:56:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603763538347_0004
2020-10-27 01:56:16 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 01:56:17 INFO  Configuration:2795 - resource-types.xml not found
2020-10-27 01:56:17 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-27 01:56:17 INFO  YarnClientImpl:329 - Submitted application application_1603763538347_0004
2020-10-27 01:56:17 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603763538347_0004/
2020-10-27 01:56:17 INFO  Job:1619 - Running job: job_1603763538347_0004
2020-10-27 01:56:25 INFO  Job:1640 - Job job_1603763538347_0004 running in uber mode : false
2020-10-27 01:56:25 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 01:56:33 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 01:56:39 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 01:56:45 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 01:56:50 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 01:56:51 INFO  Job:1658 - Job job_1603763538347_0004 completed successfully
2020-10-27 01:56:51 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50012
		Total time spent by all reduces in occupied slots (ms)=18336
		Total time spent by all map tasks (ms)=12503
		Total time spent by all reduce tasks (ms)=4584
		Total vcore-milliseconds taken by all map tasks=12503
		Total vcore-milliseconds taken by all reduce tasks=4584
		Total megabyte-milliseconds taken by all map tasks=51212288
		Total megabyte-milliseconds taken by all reduce tasks=18776064
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=903
		CPU time spent (ms)=9490
		Physical memory (bytes) snapshot=1493737472
		Virtual memory (bytes) snapshot=16098709504
		Total committed heap usage (bytes)=1685585920
		Peak Map Physical memory (bytes)=376524800
		Peak Map Virtual memory (bytes)=4022820864
		Peak Reduce Physical memory (bytes)=376283136
		Peak Reduce Virtual memory (bytes)=4042342400
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201027 01:56:52.382" starttime="20201027 01:56:52.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:56:52.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:56:52.383" starttime="20201027 01:56:52.382"></status>
</kw>
<status status="PASS" endtime="20201027 01:56:52.383" starttime="20201027 01:56:11.995"></status>
</kw>
<msg timestamp="20201027 01:56:52.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:56:52.383" starttime="20201027 01:56:11.995"></status>
</kw>
<msg timestamp="20201027 01:56:52.384" level="INFO">${output} = 2020-10-27 01:56:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-27 01:56:14 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201027 01:56:52.384" starttime="20201027 01:56:11.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 01:56:52.386" starttime="20201027 01:56:52.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 01:56:52.386" starttime="20201027 01:56:52.386"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 01:56:52.386" critical="yes" starttime="20201027 01:56:11.956"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 01:56:52.388" starttime="20201027 01:55:30.885"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:53:45.901" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:53:45.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:53:45.907" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 01:53:45.907" starttime="20201027 01:53:45.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:53:45.908" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 01:53:45.908" starttime="20201027 01:53:45.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:53:45.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:53:45.909" starttime="20201027 01:53:45.908"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:45.909" starttime="20201027 01:53:45.897"></status>
</kw>
<msg timestamp="20201027 01:53:45.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:53:45.909" starttime="20201027 01:53:45.896"></status>
</kw>
<msg timestamp="20201027 01:53:45.909" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 01:53:45.910" starttime="20201027 01:53:45.896"></status>
</kw>
<msg timestamp="20201027 01:53:45.910" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 01:53:45.910" starttime="20201027 01:53:45.896"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:53:45.913" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:53:45.913" starttime="20201027 01:53:45.913"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:53:45.914" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:53:45.914" starttime="20201027 01:53:45.913"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:45.914" starttime="20201027 01:53:45.912"></status>
</kw>
<msg timestamp="20201027 01:53:45.914" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:53:45.914" starttime="20201027 01:53:45.912"></status>
</kw>
<status status="PASS" endtime="20201027 01:53:45.914" starttime="20201027 01:53:45.911"></status>
</kw>
<msg timestamp="20201027 01:53:45.914" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 01:53:45.914" starttime="20201027 01:53:45.911"></status>
</kw>
<msg timestamp="20201027 01:53:45.914" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 01:53:45.915" starttime="20201027 01:53:45.910"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:53:45.920" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:54:33.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:54:33.472" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 01:53:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 01:53:48 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201027 01:54:33.472" starttime="20201027 01:53:45.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:54:33.474" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 01:53:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 01:53:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 01:53:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 01:53:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 01:53:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-635329B6DFDD-&gt;579569b9-3a29-40f0-8e4b-676524e053ed
2020-10-27 01:53:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 01:53:49 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-27 01:53:50 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 01:53:50 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 01:53:50 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603763538347_0001
2020-10-27 01:53:50 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 01:53:51 INFO  Configuration:2795 - resource-types.xml not found
2020-10-27 01:53:51 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-27 01:53:51 INFO  YarnClientImpl:329 - Submitted application application_1603763538347_0001
2020-10-27 01:53:51 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603763538347_0001/
2020-10-27 01:53:51 INFO  Job:1619 - Running job: job_1603763538347_0001
2020-10-27 01:54:04 INFO  Job:1640 - Job job_1603763538347_0001 running in uber mode : false
2020-10-27 01:54:04 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 01:54:11 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 01:54:17 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 01:54:23 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 01:54:31 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 01:54:32 INFO  Job:1658 - Job job_1603763538347_0001 completed successfully
2020-10-27 01:54:32 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47780
		Total time spent by all reduces in occupied slots (ms)=28160
		Total time spent by all map tasks (ms)=11945
		Total time spent by all reduce tasks (ms)=7040
		Total vcore-milliseconds taken by all map tasks=11945
		Total vcore-milliseconds taken by all reduce tasks=7040
		Total megabyte-milliseconds taken by all map tasks=48926720
		Total megabyte-milliseconds taken by all reduce tasks=28835840
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=843
		CPU time spent (ms)=8590
		Physical memory (bytes) snapshot=1473327104
		Virtual memory (bytes) snapshot=16078823424
		Total committed heap usage (bytes)=1678770176
		Peak Map Physical memory (bytes)=373936128
		Peak Map Virtual memory (bytes)=4015816704
		Peak Reduce Physical memory (bytes)=376696832
		Peak Reduce Virtual memory (bytes)=4037869568
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 43.002 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201027 01:54:33.474" starttime="20201027 01:54:33.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:54:33.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:54:33.475" starttime="20201027 01:54:33.474"></status>
</kw>
<status status="PASS" endtime="20201027 01:54:33.475" starttime="20201027 01:53:45.915"></status>
</kw>
<msg timestamp="20201027 01:54:33.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:54:33.475" starttime="20201027 01:53:45.915"></status>
</kw>
<msg timestamp="20201027 01:54:33.475" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 01:53:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 01:53:48 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201027 01:54:33.476" starttime="20201027 01:53:45.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 01:54:33.476" starttime="20201027 01:54:33.476"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 01:54:33.476" critical="yes" starttime="20201027 01:53:45.895"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:54:33.481" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:54:33.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:54:33.488" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 01:54:33.488" starttime="20201027 01:54:33.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:54:33.489" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 01:54:33.489" starttime="20201027 01:54:33.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:54:33.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:54:33.490" starttime="20201027 01:54:33.489"></status>
</kw>
<status status="PASS" endtime="20201027 01:54:33.490" starttime="20201027 01:54:33.479"></status>
</kw>
<msg timestamp="20201027 01:54:33.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:54:33.490" starttime="20201027 01:54:33.478"></status>
</kw>
<msg timestamp="20201027 01:54:33.490" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 01:54:33.490" starttime="20201027 01:54:33.478"></status>
</kw>
<msg timestamp="20201027 01:54:33.490" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 01:54:33.491" starttime="20201027 01:54:33.478"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 01:54:33.491" level="INFO">${random} = 09</msg>
<status status="PASS" endtime="20201027 01:54:33.491" starttime="20201027 01:54:33.491"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:54:33.494" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:54:33.495" starttime="20201027 01:54:33.494"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:54:33.495" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:54:33.495" starttime="20201027 01:54:33.495"></status>
</kw>
<status status="PASS" endtime="20201027 01:54:33.495" starttime="20201027 01:54:33.494"></status>
</kw>
<msg timestamp="20201027 01:54:33.495" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:54:33.495" starttime="20201027 01:54:33.493"></status>
</kw>
<status status="PASS" endtime="20201027 01:54:33.496" starttime="20201027 01:54:33.492"></status>
</kw>
<msg timestamp="20201027 01:54:33.496" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 01:54:33.496" starttime="20201027 01:54:33.492"></status>
</kw>
<msg timestamp="20201027 01:54:33.496" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 01:54:33.496" starttime="20201027 01:54:33.491"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:54:33.499" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:54:33.499" starttime="20201027 01:54:33.498"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:54:33.499" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:54:33.499" starttime="20201027 01:54:33.499"></status>
</kw>
<status status="PASS" endtime="20201027 01:54:33.499" starttime="20201027 01:54:33.498"></status>
</kw>
<msg timestamp="20201027 01:54:33.500" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:54:33.500" starttime="20201027 01:54:33.498"></status>
</kw>
<status status="PASS" endtime="20201027 01:54:33.500" starttime="20201027 01:54:33.497"></status>
</kw>
<msg timestamp="20201027 01:54:33.500" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 01:54:33.500" starttime="20201027 01:54:33.497"></status>
</kw>
<msg timestamp="20201027 01:54:33.500" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 01:54:33.500" starttime="20201027 01:54:33.496"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 01:54:33.503" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 01:54:33.503" starttime="20201027 01:54:33.502"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 01:54:33.503" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 01:54:33.503" starttime="20201027 01:54:33.503"></status>
</kw>
<status status="PASS" endtime="20201027 01:54:33.503" starttime="20201027 01:54:33.502"></status>
</kw>
<msg timestamp="20201027 01:54:33.503" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 01:54:33.503" starttime="20201027 01:54:33.502"></status>
</kw>
<status status="PASS" endtime="20201027 01:54:33.504" starttime="20201027 01:54:33.501"></status>
</kw>
<msg timestamp="20201027 01:54:33.504" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-09.txt</msg>
<status status="PASS" endtime="20201027 01:54:33.504" starttime="20201027 01:54:33.501"></status>
</kw>
<msg timestamp="20201027 01:54:33.504" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-09.txt</msg>
<status status="PASS" endtime="20201027 01:54:33.504" starttime="20201027 01:54:33.500"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:54:33.508" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-09.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:55:13.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:55:13.764" level="INFO">${output} = 2020-10-27 01:54:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-27 01:54:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201027 01:55:13.764" starttime="20201027 01:54:33.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:55:13.766" level="INFO">2020-10-27 01:54:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-27 01:54:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 01:54:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 01:54:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 01:54:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 01:54:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 01:54:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DC5AA48D93CB-&gt;579569b9-3a29-40f0-8e4b-676524e053ed
2020-10-27 01:54:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 01:54:37 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 01:54:37 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 01:54:38 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603763538347_0002
2020-10-27 01:54:38 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 01:54:38 INFO  Configuration:2795 - resource-types.xml not found
2020-10-27 01:54:38 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-27 01:54:38 INFO  YarnClientImpl:329 - Submitted application application_1603763538347_0002
2020-10-27 01:54:38 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603763538347_0002/
2020-10-27 01:54:38 INFO  Job:1619 - Running job: job_1603763538347_0002
2020-10-27 01:54:48 INFO  Job:1640 - Job job_1603763538347_0002 running in uber mode : false
2020-10-27 01:54:48 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 01:54:55 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 01:55:01 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 01:55:07 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 01:55:12 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 01:55:13 INFO  Job:1658 - Job job_1603763538347_0002 completed successfully
2020-10-27 01:55:13 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124185
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47704
		Total time spent by all reduces in occupied slots (ms)=17704
		Total time spent by all map tasks (ms)=11926
		Total time spent by all reduce tasks (ms)=4426
		Total vcore-milliseconds taken by all map tasks=11926
		Total vcore-milliseconds taken by all reduce tasks=4426
		Total megabyte-milliseconds taken by all map tasks=48848896
		Total megabyte-milliseconds taken by all reduce tasks=18128896
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=805
		CPU time spent (ms)=9220
		Physical memory (bytes) snapshot=1489981440
		Virtual memory (bytes) snapshot=16089739264
		Total committed heap usage (bytes)=1688731648
		Peak Map Physical memory (bytes)=376733696
		Peak Map Virtual memory (bytes)=4018794496
		Peak Reduce Physical memory (bytes)=373297152
		Peak Reduce Virtual memory (bytes)=4037009408
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201027 01:55:13.766" starttime="20201027 01:55:13.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:55:13.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:55:13.767" starttime="20201027 01:55:13.766"></status>
</kw>
<status status="PASS" endtime="20201027 01:55:13.767" starttime="20201027 01:54:33.505"></status>
</kw>
<msg timestamp="20201027 01:55:13.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:55:13.767" starttime="20201027 01:54:33.505"></status>
</kw>
<msg timestamp="20201027 01:55:13.768" level="INFO">${output} = 2020-10-27 01:54:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-27 01:54:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201027 01:55:13.768" starttime="20201027 01:54:33.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 01:55:13.768" starttime="20201027 01:55:13.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 01:55:13.769" starttime="20201027 01:55:13.768"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 01:55:13.769" critical="yes" starttime="20201027 01:54:33.477"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 01:55:13.770" starttime="20201027 01:53:45.845"></status>
</suite>
<status status="PASS" elapsedtime="228108" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="644677" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
