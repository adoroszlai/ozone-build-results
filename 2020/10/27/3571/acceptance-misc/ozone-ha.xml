<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201027 01:40:38.830" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1" name="ozone-ha">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 01:37:50.782" level="INFO">${random} = 67044</msg>
<status status="PASS" endtime="20201027 01:37:50.782" starttime="20201027 01:37:50.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201027 01:37:50.783" level="INFO">${prefix} = 67044</msg>
<status status="PASS" endtime="20201027 01:37:50.783" starttime="20201027 01:37:50.782"></status>
</kw>
<status status="PASS" endtime="20201027 01:37:50.783" starttime="20201027 01:37:50.781"></status>
</kw>
<test id="s1-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:37:50.805" level="INFO">Running command 'ozone sh volume info /67044-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:37:58.350" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 01:37:58.351" level="INFO">${output} = VOLUME_NOT_FOUND Volume 67044-rpcbasic is not found</msg>
<status status="PASS" endtime="20201027 01:37:58.351" starttime="20201027 01:37:50.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:37:58.352" level="INFO">VOLUME_NOT_FOUND Volume 67044-rpcbasic is not found</msg>
<status status="PASS" endtime="20201027 01:37:58.352" starttime="20201027 01:37:58.352"></status>
</kw>
<msg timestamp="20201027 01:37:58.353" level="INFO">${result} = VOLUME_NOT_FOUND Volume 67044-rpcbasic is not found</msg>
<status status="PASS" endtime="20201027 01:37:58.353" starttime="20201027 01:37:50.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201027 01:37:58.355" starttime="20201027 01:37:58.353"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:37:58.360" level="INFO">Running command 'ozone sh volume create /67044-rpcbasic --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:01.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:01.428" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:38:01.428" starttime="20201027 01:37:58.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:01.430" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:38:01.430" starttime="20201027 01:38:01.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:01.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:01.431" starttime="20201027 01:38:01.430"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:01.431" starttime="20201027 01:37:58.357"></status>
</kw>
<msg timestamp="20201027 01:38:01.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:01.431" starttime="20201027 01:37:58.357"></status>
</kw>
<msg timestamp="20201027 01:38:01.431" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201027 01:38:01.432" starttime="20201027 01:37:58.356"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201027 01:38:01.432" starttime="20201027 01:38:01.432"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:01.441" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="67044-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:04.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:04.620" level="INFO">${output} = {
  "metadata": {},
  "name": "67044-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-27T01:38:01.177Z",
  "mo...</msg>
<status status="PASS" endtime="20201027 01:38:04.620" starttime="20201027 01:38:01.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:04.622" level="INFO">{
  "metadata": {},
  "name": "67044-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-27T01:38:01.177Z",
  "modificationTime": "2020-10-27T01:38:04.311823Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20201027 01:38:04.622" starttime="20201027 01:38:04.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:04.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:04.624" starttime="20201027 01:38:04.623"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:04.624" starttime="20201027 01:38:01.433"></status>
</kw>
<msg timestamp="20201027 01:38:04.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:04.624" starttime="20201027 01:38:01.433"></status>
</kw>
<msg timestamp="20201027 01:38:04.624" level="INFO">${result} = {
  "metadata": {},
  "name": "67044-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-27T01:38:01.177Z",
  "mo...</msg>
<status status="PASS" endtime="20201027 01:38:04.624" starttime="20201027 01:38:01.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201027 01:38:04.625" starttime="20201027 01:38:04.625"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:04.632" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="67044-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:07.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:07.142" level="INFO">${output} = {
  "metadata": {},
  "name": "67044-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-27T01:38:01.177Z",
  "mo...</msg>
<status status="PASS" endtime="20201027 01:38:07.142" starttime="20201027 01:38:04.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:07.144" level="INFO">{
  "metadata": {},
  "name": "67044-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-27T01:38:01.177Z",
  "modificationTime": "2020-10-27T01:38:06.873445Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20201027 01:38:07.144" starttime="20201027 01:38:07.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:07.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:07.145" starttime="20201027 01:38:07.144"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:07.145" starttime="20201027 01:38:04.626"></status>
</kw>
<msg timestamp="20201027 01:38:07.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:07.145" starttime="20201027 01:38:04.626"></status>
</kw>
<msg timestamp="20201027 01:38:07.145" level="INFO">${result} = {
  "metadata": {},
  "name": "67044-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-27T01:38:01.177Z",
  "mo...</msg>
<status status="PASS" endtime="20201027 01:38:07.145" starttime="20201027 01:38:04.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201027 01:38:07.146" starttime="20201027 01:38:07.145"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --count-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:07.151" level="INFO">Running command 'ozone sh volume setquota /67044-rpcbasic --space-quota 10TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:09.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:09.667" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:38:09.667" starttime="20201027 01:38:07.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:09.668" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:38:09.668" starttime="20201027 01:38:09.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:09.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:09.669" starttime="20201027 01:38:09.668"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:09.669" starttime="20201027 01:38:07.147"></status>
</kw>
<msg timestamp="20201027 01:38:09.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:09.669" starttime="20201027 01:38:07.147"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:09.670" starttime="20201027 01:38:07.146"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:09.676" level="INFO">Running command 'ozone sh volume info /67044-rpcbasic | jq -r '. | select(.name=="67044-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:12.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:12.252" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20201027 01:38:12.252" starttime="20201027 01:38:09.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:12.254" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20201027 01:38:12.254" starttime="20201027 01:38:12.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:12.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:12.255" starttime="20201027 01:38:12.254"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:12.255" starttime="20201027 01:38:09.671"></status>
</kw>
<msg timestamp="20201027 01:38:12.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:12.256" starttime="20201027 01:38:09.671"></status>
</kw>
<msg timestamp="20201027 01:38:12.256" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20201027 01:38:12.256" starttime="20201027 01:38:09.670"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20201027 01:38:12.256" starttime="20201027 01:38:12.256"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --count-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:12.263" level="INFO">Running command 'ozone sh bucket create /67044-rpcbasic/bb1 --space-quota 10TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:14.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:14.790" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:38:14.790" starttime="20201027 01:38:12.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:14.791" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:38:14.791" starttime="20201027 01:38:14.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:14.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:14.792" starttime="20201027 01:38:14.792"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:14.793" starttime="20201027 01:38:12.258"></status>
</kw>
<msg timestamp="20201027 01:38:14.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:14.793" starttime="20201027 01:38:12.257"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:14.793" starttime="20201027 01:38:12.257"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:14.800" level="INFO">Running command 'ozone sh bucket info /67044-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:17.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:17.572" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20201027 01:38:17.572" starttime="20201027 01:38:14.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:17.573" level="INFO">DISK</msg>
<status status="PASS" endtime="20201027 01:38:17.573" starttime="20201027 01:38:17.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:17.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:17.574" starttime="20201027 01:38:17.573"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:17.574" starttime="20201027 01:38:14.794"></status>
</kw>
<msg timestamp="20201027 01:38:17.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:17.574" starttime="20201027 01:38:14.794"></status>
</kw>
<msg timestamp="20201027 01:38:17.575" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20201027 01:38:17.575" starttime="20201027 01:38:14.793"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20201027 01:38:17.575" starttime="20201027 01:38:17.575"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:17.581" level="INFO">Running command 'ozone sh bucket info /67044-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:20.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:20.272" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20201027 01:38:20.272" starttime="20201027 01:38:17.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:20.273" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20201027 01:38:20.274" starttime="20201027 01:38:20.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:20.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:20.275" starttime="20201027 01:38:20.274"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:20.275" starttime="20201027 01:38:17.577"></status>
</kw>
<msg timestamp="20201027 01:38:20.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:20.275" starttime="20201027 01:38:17.576"></status>
</kw>
<msg timestamp="20201027 01:38:20.275" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20201027 01:38:20.275" starttime="20201027 01:38:17.575"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20201027 01:38:20.276" starttime="20201027 01:38:20.276"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:20.280" level="INFO">Running command 'ozone sh bucket info /67044-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:22.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:22.973" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20201027 01:38:22.973" starttime="20201027 01:38:20.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:22.975" level="INFO">100</msg>
<status status="PASS" endtime="20201027 01:38:22.975" starttime="20201027 01:38:22.974"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:22.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:22.975" starttime="20201027 01:38:22.975"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:22.976" starttime="20201027 01:38:20.277"></status>
</kw>
<msg timestamp="20201027 01:38:22.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:22.976" starttime="20201027 01:38:20.277"></status>
</kw>
<msg timestamp="20201027 01:38:22.976" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20201027 01:38:22.976" starttime="20201027 01:38:20.276"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20201027 01:38:22.977" starttime="20201027 01:38:22.976"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --count-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:22.984" level="INFO">Running command 'ozone sh bucket setquota /67044-rpcbasic/bb1 --space-quota 1TB --count-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:25.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:25.388" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:38:25.388" starttime="20201027 01:38:22.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:25.389" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:38:25.390" starttime="20201027 01:38:25.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:25.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:25.390" starttime="20201027 01:38:25.390"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:25.390" starttime="20201027 01:38:22.978"></status>
</kw>
<msg timestamp="20201027 01:38:25.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:25.391" starttime="20201027 01:38:22.978"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:25.391" starttime="20201027 01:38:22.977"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:25.400" level="INFO">Running command 'ozone sh bucket info /67044-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:27.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:27.934" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20201027 01:38:27.934" starttime="20201027 01:38:25.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:27.936" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20201027 01:38:27.936" starttime="20201027 01:38:27.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:27.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:27.936" starttime="20201027 01:38:27.936"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:27.937" starttime="20201027 01:38:25.396"></status>
</kw>
<msg timestamp="20201027 01:38:27.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:27.937" starttime="20201027 01:38:25.395"></status>
</kw>
<msg timestamp="20201027 01:38:27.937" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20201027 01:38:27.937" starttime="20201027 01:38:25.391"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20201027 01:38:27.938" starttime="20201027 01:38:27.938"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:27.943" level="INFO">Running command 'ozone sh bucket info /67044-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:30.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:30.348" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20201027 01:38:30.348" starttime="20201027 01:38:27.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:30.350" level="INFO">1000</msg>
<status status="PASS" endtime="20201027 01:38:30.350" starttime="20201027 01:38:30.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:30.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:30.351" starttime="20201027 01:38:30.350"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:30.351" starttime="20201027 01:38:27.939"></status>
</kw>
<msg timestamp="20201027 01:38:30.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:30.351" starttime="20201027 01:38:27.939"></status>
</kw>
<msg timestamp="20201027 01:38:30.351" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20201027 01:38:30.351" starttime="20201027 01:38:27.938"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20201027 01:38:30.352" starttime="20201027 01:38:30.352"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:30.357" level="INFO">Running command 'ozone sh bucket list /67044-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:32.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:32.991" level="INFO">${output} = 67044-rpcbasic</msg>
<status status="PASS" endtime="20201027 01:38:32.992" starttime="20201027 01:38:30.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:32.994" level="INFO">67044-rpcbasic</msg>
<status status="PASS" endtime="20201027 01:38:32.994" starttime="20201027 01:38:32.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:32.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:32.995" starttime="20201027 01:38:32.994"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:32.995" starttime="20201027 01:38:30.353"></status>
</kw>
<msg timestamp="20201027 01:38:32.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:32.995" starttime="20201027 01:38:30.353"></status>
</kw>
<msg timestamp="20201027 01:38:32.995" level="INFO">${result} = 67044-rpcbasic</msg>
<status status="PASS" endtime="20201027 01:38:32.995" starttime="20201027 01:38:30.352"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20201027 01:38:32.996" starttime="20201027 01:38:32.996"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:33.001" level="INFO">Running command 'ozone sh key put /67044-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:39.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:39.616" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:38:39.616" starttime="20201027 01:38:32.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:39.618" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:38:39.618" starttime="20201027 01:38:39.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:39.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:39.619" starttime="20201027 01:38:39.618"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:39.619" starttime="20201027 01:38:32.998"></status>
</kw>
<msg timestamp="20201027 01:38:39.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:39.619" starttime="20201027 01:38:32.998"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:39.619" starttime="20201027 01:38:32.997"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:39.623" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:39.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:39.626" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:38:39.626" starttime="20201027 01:38:39.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:39.627" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:38:39.627" starttime="20201027 01:38:39.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:39.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:39.628" starttime="20201027 01:38:39.628"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:39.628" starttime="20201027 01:38:39.620"></status>
</kw>
<msg timestamp="20201027 01:38:39.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:39.629" starttime="20201027 01:38:39.620"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:39.629" starttime="20201027 01:38:39.619"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:39.634" level="INFO">Running command 'ozone sh key get /67044-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:44.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:44.339" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:38:44.339" starttime="20201027 01:38:39.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:44.341" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:38:44.341" starttime="20201027 01:38:44.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:44.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:44.341" starttime="20201027 01:38:44.341"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:44.342" starttime="20201027 01:38:39.630"></status>
</kw>
<msg timestamp="20201027 01:38:44.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:44.342" starttime="20201027 01:38:39.630"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:44.342" starttime="20201027 01:38:39.629"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:44.346" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:44.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:44.351" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:38:44.351" starttime="20201027 01:38:44.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:44.353" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:38:44.353" starttime="20201027 01:38:44.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:44.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:44.353" starttime="20201027 01:38:44.353"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:44.354" starttime="20201027 01:38:44.343"></status>
</kw>
<msg timestamp="20201027 01:38:44.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:44.354" starttime="20201027 01:38:44.343"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:44.354" starttime="20201027 01:38:44.342"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:44.359" level="INFO">Running command 'ozone sh key put -t RATIS /67044-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:49.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:49.162" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:38:49.162" starttime="20201027 01:38:44.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:49.164" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:38:49.164" starttime="20201027 01:38:49.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:49.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:49.165" starttime="20201027 01:38:49.164"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:49.165" starttime="20201027 01:38:44.355"></status>
</kw>
<msg timestamp="20201027 01:38:49.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:49.165" starttime="20201027 01:38:44.355"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:49.166" starttime="20201027 01:38:44.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:49.170" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:49.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:49.172" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:38:49.172" starttime="20201027 01:38:49.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:49.173" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:38:49.174" starttime="20201027 01:38:49.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:49.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:49.174" starttime="20201027 01:38:49.174"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:49.175" starttime="20201027 01:38:49.167"></status>
</kw>
<msg timestamp="20201027 01:38:49.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:49.175" starttime="20201027 01:38:49.166"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:49.175" starttime="20201027 01:38:49.166"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:49.181" level="INFO">Running command 'ozone sh key get /67044-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:53.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:53.758" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:38:53.758" starttime="20201027 01:38:49.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:53.759" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:38:53.759" starttime="20201027 01:38:53.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:53.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:53.760" starttime="20201027 01:38:53.760"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:53.760" starttime="20201027 01:38:49.176"></status>
</kw>
<msg timestamp="20201027 01:38:53.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:53.761" starttime="20201027 01:38:49.176"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:53.761" starttime="20201027 01:38:49.175"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:53.765" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:53.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:53.768" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:38:53.768" starttime="20201027 01:38:53.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:53.769" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:38:53.769" starttime="20201027 01:38:53.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:53.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:53.770" starttime="20201027 01:38:53.769"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:53.770" starttime="20201027 01:38:53.762"></status>
</kw>
<msg timestamp="20201027 01:38:53.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:53.770" starttime="20201027 01:38:53.762"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:53.770" starttime="20201027 01:38:53.761"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:53.775" level="INFO">Running command 'ozone sh key info /67044-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:56.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:56.545" level="INFO">${output} = {
  "volumeName": "67044-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-10-27T01:38:46.629Z",
  "modificationTime": "2020-10-27T01:38:48.744Z",
...</msg>
<status status="PASS" endtime="20201027 01:38:56.545" starttime="20201027 01:38:53.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:56.547" level="INFO">{
  "volumeName": "67044-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-10-27T01:38:46.629Z",
  "modificationTime": "2020-10-27T01:38:48.744Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 105104194052227070,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20201027 01:38:56.547" starttime="20201027 01:38:56.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:56.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:56.548" starttime="20201027 01:38:56.547"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:56.548" starttime="20201027 01:38:53.772"></status>
</kw>
<msg timestamp="20201027 01:38:56.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:56.548" starttime="20201027 01:38:53.772"></status>
</kw>
<msg timestamp="20201027 01:38:56.548" level="INFO">${result} = {
  "volumeName": "67044-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-10-27T01:38:46.629Z",
  "modificationTime": "2020-10-27T01:38:48.744Z",
...</msg>
<status status="PASS" endtime="20201027 01:38:56.549" starttime="20201027 01:38:53.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20201027 01:38:56.549" starttime="20201027 01:38:56.549"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:56.555" level="INFO">Running command 'ozone sh key delete /67044-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:38:59.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:38:59.120" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:38:59.120" starttime="20201027 01:38:56.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:38:59.121" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:38:59.121" starttime="20201027 01:38:59.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:38:59.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:38:59.122" starttime="20201027 01:38:59.121"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:59.122" starttime="20201027 01:38:56.550"></status>
</kw>
<msg timestamp="20201027 01:38:59.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:38:59.123" starttime="20201027 01:38:56.550"></status>
</kw>
<status status="PASS" endtime="20201027 01:38:59.123" starttime="20201027 01:38:56.549"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:38:59.138" level="INFO">Running command 'ozone sh key cp /67044-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:04.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:04.769" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:39:04.769" starttime="20201027 01:38:59.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:04.771" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:39:04.771" starttime="20201027 01:39:04.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:04.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:04.772" starttime="20201027 01:39:04.771"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:04.772" starttime="20201027 01:38:59.125"></status>
</kw>
<msg timestamp="20201027 01:39:04.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:04.772" starttime="20201027 01:38:59.124"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:04.772" starttime="20201027 01:38:59.123"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:04.778" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:04.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:04.791" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:39:04.791" starttime="20201027 01:39:04.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:04.792" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:39:04.792" starttime="20201027 01:39:04.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:04.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:04.796" starttime="20201027 01:39:04.793"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:04.796" starttime="20201027 01:39:04.774"></status>
</kw>
<msg timestamp="20201027 01:39:04.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:04.797" starttime="20201027 01:39:04.773"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:04.797" starttime="20201027 01:39:04.773"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:04.804" level="INFO">Running command 'ozone sh key get /67044-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:09.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:09.367" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:39:09.367" starttime="20201027 01:39:04.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:09.369" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:39:09.369" starttime="20201027 01:39:09.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:09.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:09.370" starttime="20201027 01:39:09.369"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:09.370" starttime="20201027 01:39:04.799"></status>
</kw>
<msg timestamp="20201027 01:39:09.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:09.370" starttime="20201027 01:39:04.799"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:09.370" starttime="20201027 01:39:04.797"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:09.375" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:09.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:09.378" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:39:09.378" starttime="20201027 01:39:09.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:09.379" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:39:09.379" starttime="20201027 01:39:09.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:09.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:09.379" starttime="20201027 01:39:09.379"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:09.380" starttime="20201027 01:39:09.372"></status>
</kw>
<msg timestamp="20201027 01:39:09.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:09.380" starttime="20201027 01:39:09.371"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:09.380" starttime="20201027 01:39:09.371"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:09.385" level="INFO">Running command 'ozone sh key delete /67044-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:11.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:11.706" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:39:11.706" starttime="20201027 01:39:09.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:11.707" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:39:11.707" starttime="20201027 01:39:11.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:11.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:11.708" starttime="20201027 01:39:11.707"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:11.709" starttime="20201027 01:39:09.381"></status>
</kw>
<msg timestamp="20201027 01:39:11.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:11.709" starttime="20201027 01:39:09.381"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:11.709" starttime="20201027 01:39:09.380"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:11.713" level="INFO">Running command 'ozone sh key get /67044-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:14.181" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 01:39:14.181" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201027 01:39:14.181" starttime="20201027 01:39:11.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:14.182" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201027 01:39:14.182" starttime="20201027 01:39:14.181"></status>
</kw>
<msg timestamp="20201027 01:39:14.183" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201027 01:39:14.183" starttime="20201027 01:39:11.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20201027 01:39:14.183" starttime="20201027 01:39:14.183"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:14.188" level="INFO">Running command 'ozone sh key get --force /67044-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:18.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:18.588" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:39:18.588" starttime="20201027 01:39:14.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:18.589" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:39:18.589" starttime="20201027 01:39:18.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:18.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:18.590" starttime="20201027 01:39:18.590"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:18.590" starttime="20201027 01:39:14.184"></status>
</kw>
<msg timestamp="20201027 01:39:18.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:18.591" starttime="20201027 01:39:14.184"></status>
</kw>
<msg timestamp="20201027 01:39:18.591" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201027 01:39:18.591" starttime="20201027 01:39:14.183"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20201027 01:39:18.591" starttime="20201027 01:39:18.591"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:18.600" level="INFO">Running command 'ozone sh key info /67044-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:21.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:21.341" level="INFO">${output} = {
  "volumeName": "67044-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-10-27T01:38:35.264Z",
  "modificationTime": "2020-10-27T01:38:39.173Z",
  "rep...</msg>
<status status="PASS" endtime="20201027 01:39:21.341" starttime="20201027 01:39:18.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:21.342" level="INFO">{
  "volumeName": "67044-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-10-27T01:38:35.264Z",
  "modificationTime": "2020-10-27T01:38:39.173Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105104193305051140,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20201027 01:39:21.342" starttime="20201027 01:39:21.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:21.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:21.343" starttime="20201027 01:39:21.343"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:21.344" starttime="20201027 01:39:18.595"></status>
</kw>
<msg timestamp="20201027 01:39:21.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:21.344" starttime="20201027 01:39:18.594"></status>
</kw>
<msg timestamp="20201027 01:39:21.344" level="INFO">${result} = {
  "volumeName": "67044-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-10-27T01:38:35.264Z",
  "modificationTime": "2020-10-27T01:38:39.173Z",
  "rep...</msg>
<status status="PASS" endtime="20201027 01:39:21.344" starttime="20201027 01:39:18.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201027 01:39:21.345" starttime="20201027 01:39:21.345"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:21.350" level="INFO">Running command 'ozone sh key list /67044-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:23.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:23.994" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201027 01:39:23.994" starttime="20201027 01:39:21.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:23.996" level="INFO">key1</msg>
<status status="PASS" endtime="20201027 01:39:23.996" starttime="20201027 01:39:23.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:23.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:23.997" starttime="20201027 01:39:23.996"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:23.997" starttime="20201027 01:39:21.346"></status>
</kw>
<msg timestamp="20201027 01:39:23.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:23.997" starttime="20201027 01:39:21.346"></status>
</kw>
<msg timestamp="20201027 01:39:23.997" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20201027 01:39:23.997" starttime="20201027 01:39:21.345"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201027 01:39:23.998" starttime="20201027 01:39:23.997"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:24.004" level="INFO">Running command 'ozone sh key rename /67044-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:26.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:26.501" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:39:26.501" starttime="20201027 01:39:24.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:26.502" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:39:26.503" starttime="20201027 01:39:26.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:26.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:26.503" starttime="20201027 01:39:26.503"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:26.504" starttime="20201027 01:39:23.999"></status>
</kw>
<msg timestamp="20201027 01:39:26.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:26.504" starttime="20201027 01:39:23.999"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:26.504" starttime="20201027 01:39:23.998"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:26.511" level="INFO">Running command 'ozone sh key list /67044-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:29.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:29.259" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20201027 01:39:29.259" starttime="20201027 01:39:26.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:29.261" level="INFO">key2</msg>
<status status="PASS" endtime="20201027 01:39:29.261" starttime="20201027 01:39:29.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:29.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:29.262" starttime="20201027 01:39:29.261"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:29.262" starttime="20201027 01:39:26.505"></status>
</kw>
<msg timestamp="20201027 01:39:29.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:29.262" starttime="20201027 01:39:26.505"></status>
</kw>
<msg timestamp="20201027 01:39:29.263" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20201027 01:39:29.263" starttime="20201027 01:39:26.504"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201027 01:39:29.263" starttime="20201027 01:39:29.263"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:29.269" level="INFO">Running command 'ozone sh key delete /67044-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:31.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:31.686" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:39:31.686" starttime="20201027 01:39:29.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:31.687" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:39:31.687" starttime="20201027 01:39:31.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:31.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:31.690" starttime="20201027 01:39:31.687"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:31.690" starttime="20201027 01:39:29.265"></status>
</kw>
<msg timestamp="20201027 01:39:31.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:31.690" starttime="20201027 01:39:29.264"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:31.691" starttime="20201027 01:39:29.263"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:31.691" starttime="20201027 01:38:32.997"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:31.691" starttime="20201027 01:38:32.996"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:31.696" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /67044-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:34.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:34.447" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:39:34.447" starttime="20201027 01:39:31.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:34.449" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:39:34.449" starttime="20201027 01:39:34.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:34.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:34.449" starttime="20201027 01:39:34.449"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:34.450" starttime="20201027 01:39:31.692"></status>
</kw>
<msg timestamp="20201027 01:39:34.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:34.450" starttime="20201027 01:39:31.692"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:34.450" starttime="20201027 01:39:31.691"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:34.456" level="INFO">Running command 'ozone sh bucket info /67044-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:37.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:37.178" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 01:39:37.178" starttime="20201027 01:39:34.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:37.180" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 01:39:37.180" starttime="20201027 01:39:37.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:37.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:37.181" starttime="20201027 01:39:37.180"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:37.181" starttime="20201027 01:39:34.452"></status>
</kw>
<msg timestamp="20201027 01:39:37.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:37.181" starttime="20201027 01:39:34.451"></status>
</kw>
<msg timestamp="20201027 01:39:37.181" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 01:39:37.181" starttime="20201027 01:39:34.450"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 01:39:37.182" starttime="20201027 01:39:37.181"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --count-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:37.186" level="INFO">Running command 'ozone sh bucket clrquota --count-quota /67044-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:39.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:39.430" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:39:39.430" starttime="20201027 01:39:37.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:39.432" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:39:39.432" starttime="20201027 01:39:39.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:39.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:39.433" starttime="20201027 01:39:39.432"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:39.433" starttime="20201027 01:39:37.183"></status>
</kw>
<msg timestamp="20201027 01:39:39.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:39.433" starttime="20201027 01:39:37.183"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:39.433" starttime="20201027 01:39:37.182"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:39.440" level="INFO">Running command 'ozone sh bucket info /67044-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:42.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:42.066" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 01:39:42.066" starttime="20201027 01:39:39.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:42.068" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 01:39:42.068" starttime="20201027 01:39:42.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:42.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:42.069" starttime="20201027 01:39:42.068"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:42.069" starttime="20201027 01:39:39.435"></status>
</kw>
<msg timestamp="20201027 01:39:42.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:42.069" starttime="20201027 01:39:39.435"></status>
</kw>
<msg timestamp="20201027 01:39:42.069" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 01:39:42.069" starttime="20201027 01:39:39.434"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 01:39:42.070" starttime="20201027 01:39:42.070"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:42.074" level="INFO">Running command 'ozone sh volume clrquota --space-quota /67044-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:44.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:44.269" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:39:44.269" starttime="20201027 01:39:42.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:44.270" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:39:44.271" starttime="20201027 01:39:44.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:44.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:44.271" starttime="20201027 01:39:44.271"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:44.272" starttime="20201027 01:39:42.071"></status>
</kw>
<msg timestamp="20201027 01:39:44.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:44.272" starttime="20201027 01:39:42.071"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:44.272" starttime="20201027 01:39:42.070"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:44.277" level="INFO">Running command 'ozone sh volume info /67044-rpcbasic | jq -r '. | select(.name=="67044-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:46.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:46.628" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 01:39:46.628" starttime="20201027 01:39:44.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:46.629" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 01:39:46.629" starttime="20201027 01:39:46.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:46.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:46.630" starttime="20201027 01:39:46.630"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:46.630" starttime="20201027 01:39:44.273"></status>
</kw>
<msg timestamp="20201027 01:39:46.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:46.631" starttime="20201027 01:39:44.273"></status>
</kw>
<msg timestamp="20201027 01:39:46.631" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 01:39:46.631" starttime="20201027 01:39:44.272"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 01:39:46.632" starttime="20201027 01:39:46.631"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --count-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:46.637" level="INFO">Running command 'ozone sh volume clrquota --count-quota /67044-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:49.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:49.102" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:39:49.102" starttime="20201027 01:39:46.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:49.103" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:39:49.104" starttime="20201027 01:39:49.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:49.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:49.104" starttime="20201027 01:39:49.104"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:49.105" starttime="20201027 01:39:46.633"></status>
</kw>
<msg timestamp="20201027 01:39:49.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:49.105" starttime="20201027 01:39:46.632"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:49.105" starttime="20201027 01:39:46.632"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:49.111" level="INFO">Running command 'ozone sh volume info /67044-rpcbasic | jq -r '. | select(.name=="67044-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:51.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:51.614" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 01:39:51.614" starttime="20201027 01:39:49.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:51.615" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 01:39:51.615" starttime="20201027 01:39:51.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:51.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:51.616" starttime="20201027 01:39:51.616"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:51.617" starttime="20201027 01:39:49.106"></status>
</kw>
<msg timestamp="20201027 01:39:51.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:51.617" starttime="20201027 01:39:49.106"></status>
</kw>
<msg timestamp="20201027 01:39:51.617" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 01:39:51.617" starttime="20201027 01:39:49.105"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 01:39:51.618" starttime="20201027 01:39:51.617"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:51.624" level="INFO">Running command 'ozone sh bucket delete /67044-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:53.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:53.713" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:39:53.713" starttime="20201027 01:39:51.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:53.714" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:39:53.714" starttime="20201027 01:39:53.713"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:53.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:53.715" starttime="20201027 01:39:53.714"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:53.715" starttime="20201027 01:39:51.619"></status>
</kw>
<msg timestamp="20201027 01:39:53.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:53.716" starttime="20201027 01:39:51.619"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:53.716" starttime="20201027 01:39:51.618"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:53.721" level="INFO">Running command 'ozone sh volume delete /67044-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:56.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:56.116" level="INFO">${output} = Volume 67044-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201027 01:39:56.116" starttime="20201027 01:39:53.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:56.117" level="INFO">Volume 67044-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201027 01:39:56.117" starttime="20201027 01:39:56.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:56.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:56.118" starttime="20201027 01:39:56.117"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:56.118" starttime="20201027 01:39:53.717"></status>
</kw>
<msg timestamp="20201027 01:39:56.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:56.119" starttime="20201027 01:39:53.717"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:56.119" starttime="20201027 01:39:53.716"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:56.124" level="INFO">Running command 'ozone sh volume create /67044-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:39:58.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:39:58.366" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:39:58.367" starttime="20201027 01:39:56.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:39:58.368" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:39:58.368" starttime="20201027 01:39:58.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:39:58.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:39:58.369" starttime="20201027 01:39:58.369"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:58.370" starttime="20201027 01:39:56.120"></status>
</kw>
<msg timestamp="20201027 01:39:58.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:39:58.370" starttime="20201027 01:39:56.120"></status>
</kw>
<status status="PASS" endtime="20201027 01:39:58.370" starttime="20201027 01:39:56.119"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:39:58.375" level="INFO">Running command 'ozone sh volume info /67044-rpcbasic | jq -r '. | select(.name=="67044-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:40:00.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:40:00.859" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 01:40:00.859" starttime="20201027 01:39:58.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:40:00.861" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 01:40:00.861" starttime="20201027 01:40:00.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:40:00.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:40:00.862" starttime="20201027 01:40:00.861"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:00.862" starttime="20201027 01:39:58.371"></status>
</kw>
<msg timestamp="20201027 01:40:00.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:40:00.862" starttime="20201027 01:39:58.371"></status>
</kw>
<msg timestamp="20201027 01:40:00.862" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 01:40:00.862" starttime="20201027 01:39:58.370"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 01:40:00.863" starttime="20201027 01:40:00.863"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:40:00.870" level="INFO">Running command 'ozone sh volume info /67044-rpcbasic | jq -r '. | select(.name=="67044-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:40:03.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:40:03.478" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 01:40:03.478" starttime="20201027 01:40:00.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:40:03.480" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 01:40:03.480" starttime="20201027 01:40:03.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:40:03.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:40:03.481" starttime="20201027 01:40:03.480"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:03.481" starttime="20201027 01:40:00.864"></status>
</kw>
<msg timestamp="20201027 01:40:03.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:40:03.481" starttime="20201027 01:40:00.864"></status>
</kw>
<msg timestamp="20201027 01:40:03.482" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 01:40:03.482" starttime="20201027 01:40:00.863"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 01:40:03.482" starttime="20201027 01:40:03.482"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:40:03.487" level="INFO">Running command 'ozone sh bucket create /67044-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:40:05.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:40:05.972" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:40:05.972" starttime="20201027 01:40:03.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:40:05.973" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:40:05.973" starttime="20201027 01:40:05.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:40:05.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:40:05.974" starttime="20201027 01:40:05.973"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:05.974" starttime="20201027 01:40:03.483"></status>
</kw>
<msg timestamp="20201027 01:40:05.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:40:05.974" starttime="20201027 01:40:03.483"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:05.975" starttime="20201027 01:40:03.482"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:40:05.981" level="INFO">Running command 'ozone sh bucket info /67044-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:40:08.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:40:08.434" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 01:40:08.434" starttime="20201027 01:40:05.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:40:08.435" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 01:40:08.435" starttime="20201027 01:40:08.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:40:08.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:40:08.436" starttime="20201027 01:40:08.435"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:08.436" starttime="20201027 01:40:05.976"></status>
</kw>
<msg timestamp="20201027 01:40:08.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:40:08.436" starttime="20201027 01:40:05.976"></status>
</kw>
<msg timestamp="20201027 01:40:08.437" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 01:40:08.437" starttime="20201027 01:40:05.975"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 01:40:08.437" starttime="20201027 01:40:08.437"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:40:08.443" level="INFO">Running command 'ozone sh bucket info /67044-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:40:10.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:40:10.965" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 01:40:10.965" starttime="20201027 01:40:08.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:40:10.967" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 01:40:10.967" starttime="20201027 01:40:10.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:40:10.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:40:10.968" starttime="20201027 01:40:10.967"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:10.968" starttime="20201027 01:40:08.439"></status>
</kw>
<msg timestamp="20201027 01:40:10.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:40:10.968" starttime="20201027 01:40:08.438"></status>
</kw>
<msg timestamp="20201027 01:40:10.969" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 01:40:10.969" starttime="20201027 01:40:08.437"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 01:40:10.969" starttime="20201027 01:40:10.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 0TB --count-quota 0</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:40:10.975" level="INFO">Running command 'ozone sh volume setquota /67044-rpcbasic --space-quota 0TB --count-quota 0 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:40:13.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:40:13.230" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:40:13.230" starttime="20201027 01:40:10.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:40:13.231" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:40:13.231" starttime="20201027 01:40:13.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:40:13.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:40:13.232" starttime="20201027 01:40:13.232"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:13.232" starttime="20201027 01:40:10.970"></status>
</kw>
<msg timestamp="20201027 01:40:13.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:40:13.233" starttime="20201027 01:40:10.970"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:13.233" starttime="20201027 01:40:10.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:40:13.239" level="INFO">Running command 'ozone sh volume info /67044-rpcbasic | jq -r '. | select(.name=="67044-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:40:15.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:40:15.582" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 01:40:15.582" starttime="20201027 01:40:13.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:40:15.583" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 01:40:15.583" starttime="20201027 01:40:15.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:40:15.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:40:15.584" starttime="20201027 01:40:15.583"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:15.584" starttime="20201027 01:40:13.234"></status>
</kw>
<msg timestamp="20201027 01:40:15.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:40:15.584" starttime="20201027 01:40:13.234"></status>
</kw>
<msg timestamp="20201027 01:40:15.585" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 01:40:15.585" starttime="20201027 01:40:13.233"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 01:40:15.585" starttime="20201027 01:40:15.585"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:40:15.590" level="INFO">Running command 'ozone sh volume info /67044-rpcbasic | jq -r '. | select(.name=="67044-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:40:18.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:40:18.273" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 01:40:18.273" starttime="20201027 01:40:15.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:40:18.274" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 01:40:18.274" starttime="20201027 01:40:18.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:40:18.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:40:18.275" starttime="20201027 01:40:18.274"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:18.275" starttime="20201027 01:40:15.587"></status>
</kw>
<msg timestamp="20201027 01:40:18.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:40:18.275" starttime="20201027 01:40:15.586"></status>
</kw>
<msg timestamp="20201027 01:40:18.276" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 01:40:18.276" starttime="20201027 01:40:15.585"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 01:40:18.276" starttime="20201027 01:40:18.276"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 0TB --count-quota 0</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:40:18.281" level="INFO">Running command 'ozone sh bucket setquota /67044-rpcbasic/bb1 --space-quota 0TB --count-quota 0 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:40:20.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:40:20.701" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:40:20.701" starttime="20201027 01:40:18.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:40:20.703" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:40:20.703" starttime="20201027 01:40:20.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:40:20.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:40:20.704" starttime="20201027 01:40:20.703"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:20.704" starttime="20201027 01:40:18.278"></status>
</kw>
<msg timestamp="20201027 01:40:20.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:40:20.704" starttime="20201027 01:40:18.277"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:20.704" starttime="20201027 01:40:18.277"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:40:20.709" level="INFO">Running command 'ozone sh bucket info /67044-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:40:23.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:40:23.337" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 01:40:23.337" starttime="20201027 01:40:20.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:40:23.339" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 01:40:23.339" starttime="20201027 01:40:23.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:40:23.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:40:23.340" starttime="20201027 01:40:23.339"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:23.340" starttime="20201027 01:40:20.706"></status>
</kw>
<msg timestamp="20201027 01:40:23.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:40:23.340" starttime="20201027 01:40:20.705"></status>
</kw>
<msg timestamp="20201027 01:40:23.340" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 01:40:23.341" starttime="20201027 01:40:20.705"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 01:40:23.341" starttime="20201027 01:40:23.341"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:40:23.347" level="INFO">Running command 'ozone sh bucket info /67044-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:40:25.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:40:25.871" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201027 01:40:25.872" starttime="20201027 01:40:23.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:40:25.873" level="INFO">-1</msg>
<status status="PASS" endtime="20201027 01:40:25.873" starttime="20201027 01:40:25.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:40:25.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:40:25.874" starttime="20201027 01:40:25.873"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:25.874" starttime="20201027 01:40:23.342"></status>
</kw>
<msg timestamp="20201027 01:40:25.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:40:25.874" starttime="20201027 01:40:23.342"></status>
</kw>
<msg timestamp="20201027 01:40:25.875" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201027 01:40:25.875" starttime="20201027 01:40:23.341"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201027 01:40:25.875" starttime="20201027 01:40:25.875"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:40:25.880" level="INFO">Running command 'ozone sh bucket delete /67044-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:40:27.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:40:27.989" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:40:27.989" starttime="20201027 01:40:25.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:40:27.990" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:40:27.990" starttime="20201027 01:40:27.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:40:27.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:40:27.991" starttime="20201027 01:40:27.990"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:27.991" starttime="20201027 01:40:25.877"></status>
</kw>
<msg timestamp="20201027 01:40:27.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:40:27.991" starttime="20201027 01:40:25.876"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:27.992" starttime="20201027 01:40:25.876"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:40:27.996" level="INFO">Running command 'ozone sh volume delete /67044-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:40:30.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:40:30.635" level="INFO">${output} = Volume 67044-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201027 01:40:30.635" starttime="20201027 01:40:27.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:40:30.638" level="INFO">Volume 67044-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201027 01:40:30.638" starttime="20201027 01:40:30.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:40:30.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:40:30.639" starttime="20201027 01:40:30.639"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:30.640" starttime="20201027 01:40:27.993"></status>
</kw>
<msg timestamp="20201027 01:40:30.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:40:30.640" starttime="20201027 01:40:27.993"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:30.640" starttime="20201027 01:40:27.992"></status>
</kw>
<status status="PASS" endtime="20201027 01:40:30.640" starttime="20201027 01:37:50.788"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 01:40:30.641" critical="yes" starttime="20201027 01:37:50.784"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20201027 01:40:30.643" starttime="20201027 01:37:50.579"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-ha" pass="1">ozone-ha</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
