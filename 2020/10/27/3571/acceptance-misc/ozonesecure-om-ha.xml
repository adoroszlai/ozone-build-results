<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201027 02:29:59.011" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:25:16.962" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:25:29.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:25:29.472" level="INFO">${output} = 2020-10-27 02:25:18,689 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 02:25:18,940 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 02:25:29.472" starttime="20201027 02:25:16.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:25:29.473" level="INFO">2020-10-27 02:25:18,689 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 02:25:18,940 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-27 02:25:18,940 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-27 02:25:22,883 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-27 02:25:22,884 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-10-27 02:25:22,884 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-10-27 02:25:22,884 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-10-27 02:25:22,884 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-27 02:25:22,884 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-27 02:25:22,886 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-10-27 02:25:22,888 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-27 02:25:22,897 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 02:25:22,937 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-26725, with testuser/scm@EXAMPLE.COM as owner.
2020-10-27 02:25:23,553 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-26725/bucket-0-21884, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 02:25:23,923 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 02:25:24,924 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 02:25:25,927 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 02:25:26,284 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-27 02:25:26,928 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,591
Average Time spent in bucket creation: 00:00:00,286
Average Time spent in key creation: 00:00:01,473
Average Time spent in key write: 00:00:01,501
Total bytes written: 10240
Total Execution time: 00:00:09,666
***************************************************</msg>
<status status="PASS" endtime="20201027 02:25:29.473" starttime="20201027 02:25:29.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:25:29.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:25:29.474" starttime="20201027 02:25:29.474"></status>
</kw>
<status status="PASS" endtime="20201027 02:25:29.475" starttime="20201027 02:25:16.957"></status>
</kw>
<msg timestamp="20201027 02:25:29.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:25:29.475" starttime="20201027 02:25:16.957"></status>
</kw>
<msg timestamp="20201027 02:25:29.475" level="INFO">${result} = 2020-10-27 02:25:18,689 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 02:25:18,940 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 02:25:29.476" starttime="20201027 02:25:16.956"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201027 02:25:29.477" starttime="20201027 02:25:29.476"></status>
</kw>
<status status="PASS" endtime="20201027 02:25:29.477" starttime="20201027 02:25:29.476"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 02:25:29.477" critical="yes" starttime="20201027 02:25:16.955"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:25:29.483" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:25:40.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:25:40.934" level="INFO">${output} = 2020-10-27 02:25:31,439 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 02:25:31,720 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 02:25:40.934" starttime="20201027 02:25:29.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:25:40.937" level="INFO">2020-10-27 02:25:31,439 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 02:25:31,720 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-27 02:25:31,721 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-27 02:25:31,899 [main] INFO freon.BaseFreonGenerator: Executing test with prefix kwdbarp5em
2020-10-27 02:25:31,918 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-27 02:25:32,927 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 02:25:33,928 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 02:25:34,180 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-10-27 02:25:34,254 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 02:25:34,928 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 02:25:35,063 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-27 02:25:35,933 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 02:25:35,960 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 02:25:35,961 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-01DC475A12D6-&gt;53da4954-efeb-45f6-accb-5133364b1d0b
2020-10-27 02:25:35,962 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 02:25:36,934 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 02:25:37,935 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 02:25:38,936 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 02:25:39,937 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-27 02:25:40,541 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=5138.871009, max=5138.871009, mean=5138.871009, stddev=0.0, median=5138.871009, p75=5138.871009, p95=5138.871009, p98=5138.871009, p99=5138.871009, p999=5138.871009, mean_rate=0.16096177825081884, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-27 02:25:40,542 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2020-10-27 02:25:40,550 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-27 02:25:40,550 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201027 02:25:40.937" starttime="20201027 02:25:40.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:25:40.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:25:40.937" starttime="20201027 02:25:40.937"></status>
</kw>
<status status="PASS" endtime="20201027 02:25:40.938" starttime="20201027 02:25:29.480"></status>
</kw>
<msg timestamp="20201027 02:25:40.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:25:40.938" starttime="20201027 02:25:29.480"></status>
</kw>
<msg timestamp="20201027 02:25:40.938" level="INFO">${result} = 2020-10-27 02:25:31,439 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 02:25:31,720 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 02:25:40.938" starttime="20201027 02:25:29.479"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201027 02:25:40.939" starttime="20201027 02:25:40.939"></status>
</kw>
<status status="PASS" endtime="20201027 02:25:40.939" starttime="20201027 02:25:40.938"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 02:25:40.940" critical="yes" starttime="20201027 02:25:29.478"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:25:40.947" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:25:46.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:25:46.017" level="INFO">${output} = 2020-10-27 02:25:42,939 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 02:25:43,151 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 02:25:46.017" starttime="20201027 02:25:40.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:25:46.018" level="INFO">2020-10-27 02:25:42,939 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 02:25:43,151 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-27 02:25:43,152 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-27 02:25:43,314 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bn9tmhczuh
2020-10-27 02:25:43,328 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-27 02:25:44,330 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 02:25:45,330 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-27 02:25:45,987 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=267.184598, max=267.184598, mean=267.184598, stddev=0.0, median=267.184598, p75=267.184598, p95=267.184598, p98=267.184598, p99=267.184598, p999=267.184598, mean_rate=0.876117642578358, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-27 02:25:45,988 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-27 02:25:45,991 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-27 02:25:45,991 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201027 02:25:46.019" starttime="20201027 02:25:46.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:25:46.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:25:46.019" starttime="20201027 02:25:46.019"></status>
</kw>
<status status="PASS" endtime="20201027 02:25:46.020" starttime="20201027 02:25:40.942"></status>
</kw>
<msg timestamp="20201027 02:25:46.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:25:46.020" starttime="20201027 02:25:40.942"></status>
</kw>
<msg timestamp="20201027 02:25:46.020" level="INFO">${result} = 2020-10-27 02:25:42,939 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 02:25:43,151 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 02:25:46.020" starttime="20201027 02:25:40.941"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201027 02:25:46.021" starttime="20201027 02:25:46.021"></status>
</kw>
<status status="PASS" endtime="20201027 02:25:46.021" starttime="20201027 02:25:46.020"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 02:25:46.022" critical="yes" starttime="20201027 02:25:40.940"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:25:46.028" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:25:51.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:25:51.041" level="INFO">${output} = 2020-10-27 02:25:47,951 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 02:25:48,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 02:25:51.041" starttime="20201027 02:25:46.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:25:51.043" level="INFO">2020-10-27 02:25:47,951 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 02:25:48,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-27 02:25:48,167 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-27 02:25:48,332 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ysysfo41h6
2020-10-27 02:25:48,350 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-27 02:25:49,351 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 02:25:50,352 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-27 02:25:50,967 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=101.408578, max=101.408578, mean=101.408578, stddev=0.0, median=101.408578, p75=101.408578, p95=101.408578, p98=101.408578, p99=101.408578, p999=101.408578, mean_rate=0.9616687047696194, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-27 02:25:50,968 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-27 02:25:50,970 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-27 02:25:50,970 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201027 02:25:51.043" starttime="20201027 02:25:51.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:25:51.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:25:51.043" starttime="20201027 02:25:51.043"></status>
</kw>
<status status="PASS" endtime="20201027 02:25:51.044" starttime="20201027 02:25:46.025"></status>
</kw>
<msg timestamp="20201027 02:25:51.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:25:51.044" starttime="20201027 02:25:46.024"></status>
</kw>
<msg timestamp="20201027 02:25:51.044" level="INFO">${result} = 2020-10-27 02:25:47,951 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 02:25:48,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 02:25:51.044" starttime="20201027 02:25:46.024"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201027 02:25:51.045" starttime="20201027 02:25:51.045"></status>
</kw>
<status status="PASS" endtime="20201027 02:25:51.045" starttime="20201027 02:25:51.045"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 02:25:51.046" critical="yes" starttime="20201027 02:25:46.023"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201027 02:25:51.047" starttime="20201027 02:25:16.929"></status>
</suite>
<status status="PASS" endtime="20201027 02:25:51.050" starttime="20201027 02:25:16.900"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:25:10.438" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:25:10.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:25:10.442" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:25:10.442" starttime="20201027 02:25:10.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:25:10.443" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:25:10.443" starttime="20201027 02:25:10.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:25:10.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:25:10.444" starttime="20201027 02:25:10.444"></status>
</kw>
<status status="PASS" endtime="20201027 02:25:10.444" starttime="20201027 02:25:10.433"></status>
</kw>
<msg timestamp="20201027 02:25:10.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:25:10.445" starttime="20201027 02:25:10.433"></status>
</kw>
<msg timestamp="20201027 02:25:10.445" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:25:10.445" starttime="20201027 02:25:10.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:25:10.446" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:25:10.446" starttime="20201027 02:25:10.445"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:25:10.451" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:25:10.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:25:10.464" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:25:10.464" starttime="20201027 02:25:10.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:25:10.465" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:25:10.465" starttime="20201027 02:25:10.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:25:10.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:25:10.466" starttime="20201027 02:25:10.465"></status>
</kw>
<status status="PASS" endtime="20201027 02:25:10.466" starttime="20201027 02:25:10.447"></status>
</kw>
<msg timestamp="20201027 02:25:10.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:25:10.466" starttime="20201027 02:25:10.447"></status>
</kw>
<status status="PASS" endtime="20201027 02:25:10.466" starttime="20201027 02:25:10.446"></status>
</kw>
<status status="PASS" endtime="20201027 02:25:10.467" starttime="20201027 02:25:10.446"></status>
</kw>
<status status="PASS" endtime="20201027 02:25:10.467" starttime="20201027 02:25:10.431"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 02:25:10.467" critical="yes" starttime="20201027 02:25:10.430"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201027 02:25:10.468" starttime="20201027 02:25:10.377"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 02:25:57.635" level="INFO">${random} = 68087</msg>
<status status="PASS" endtime="20201027 02:25:57.635" starttime="20201027 02:25:57.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201027 02:25:57.637" level="INFO">${source} = 68087-source</msg>
<status status="PASS" endtime="20201027 02:25:57.637" starttime="20201027 02:25:57.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201027 02:25:57.638" level="INFO">${target} = 68087-target</msg>
<status status="PASS" endtime="20201027 02:25:57.638" starttime="20201027 02:25:57.637"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:25:57.644" level="INFO">Running command 'ozone sh volume create 68087-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:26:01.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:26:01.450" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:26:01.450" starttime="20201027 02:25:57.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:26:01.451" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:26:01.451" starttime="20201027 02:26:01.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:26:01.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:26:01.452" starttime="20201027 02:26:01.451"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:01.452" starttime="20201027 02:25:57.639"></status>
</kw>
<msg timestamp="20201027 02:26:01.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:26:01.452" starttime="20201027 02:25:57.639"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:01.453" starttime="20201027 02:25:57.638"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:26:01.458" level="INFO">Running command 'ozone sh volume create 68087-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:26:05.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:26:05.443" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:26:05.443" starttime="20201027 02:26:01.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:26:05.444" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:26:05.444" starttime="20201027 02:26:05.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:26:05.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:26:05.444" starttime="20201027 02:26:05.444"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:05.445" starttime="20201027 02:26:01.454"></status>
</kw>
<msg timestamp="20201027 02:26:05.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:26:05.445" starttime="20201027 02:26:01.453"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:05.445" starttime="20201027 02:26:01.453"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:26:05.452" level="INFO">Running command 'ozone sh bucket create 68087-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:26:09.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:26:09.591" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:26:09.592" starttime="20201027 02:26:05.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:26:09.593" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:26:09.593" starttime="20201027 02:26:09.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:26:09.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:26:09.593" starttime="20201027 02:26:09.593"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:09.594" starttime="20201027 02:26:05.447"></status>
</kw>
<msg timestamp="20201027 02:26:09.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:26:09.594" starttime="20201027 02:26:05.447"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:09.594" starttime="20201027 02:26:05.446"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:26:09.598" level="INFO">Running command 'ozone sh key put 68087-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:26:16.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:26:16.059" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:26:16.059" starttime="20201027 02:26:09.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:26:16.060" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:26:16.060" starttime="20201027 02:26:16.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:26:16.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:26:16.061" starttime="20201027 02:26:16.060"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:16.061" starttime="20201027 02:26:09.595"></status>
</kw>
<msg timestamp="20201027 02:26:16.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:26:16.061" starttime="20201027 02:26:09.595"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:16.062" starttime="20201027 02:26:09.594"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:26:16.066" level="INFO">Running command 'ozone sh bucket create 68087-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:26:19.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:26:19.923" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:26:19.923" starttime="20201027 02:26:16.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:26:19.924" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:26:19.924" starttime="20201027 02:26:19.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:26:19.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:26:19.925" starttime="20201027 02:26:19.925"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:19.925" starttime="20201027 02:26:16.062"></status>
</kw>
<msg timestamp="20201027 02:26:19.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:26:19.926" starttime="20201027 02:26:16.062"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:19.926" starttime="20201027 02:26:16.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:26:19.931" level="INFO">Running command 'ozone sh bucket link 68087-source/readable-bucket 68087-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:26:24.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:26:24.035" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:26:24.035" starttime="20201027 02:26:19.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:26:24.037" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:26:24.037" starttime="20201027 02:26:24.036"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:26:24.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:26:24.037" starttime="20201027 02:26:24.037"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:24.038" starttime="20201027 02:26:19.927"></status>
</kw>
<msg timestamp="20201027 02:26:24.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:26:24.038" starttime="20201027 02:26:19.927"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:24.038" starttime="20201027 02:26:19.926"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:26:24.044" level="INFO">Running command 'ozone sh bucket link 68087-source/readable-bucket 68087-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:26:27.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:26:27.847" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:26:27.847" starttime="20201027 02:26:24.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:26:27.848" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:26:27.848" starttime="20201027 02:26:27.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:26:27.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:26:27.849" starttime="20201027 02:26:27.848"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:27.849" starttime="20201027 02:26:24.039"></status>
</kw>
<msg timestamp="20201027 02:26:27.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:26:27.849" starttime="20201027 02:26:24.039"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:27.849" starttime="20201027 02:26:24.039"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:26:27.853" level="INFO">Running command 'ozone sh bucket link 68087-source/unreadable-bucket 68087-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:26:31.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:26:31.862" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:26:31.862" starttime="20201027 02:26:27.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:26:31.863" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:26:31.863" starttime="20201027 02:26:31.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:26:31.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:26:31.864" starttime="20201027 02:26:31.863"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:31.864" starttime="20201027 02:26:27.850"></status>
</kw>
<msg timestamp="20201027 02:26:31.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:26:31.865" starttime="20201027 02:26:27.850"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:31.865" starttime="20201027 02:26:27.850"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:26:31.869" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 68087-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:26:35.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:26:35.947" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:26:35.947" starttime="20201027 02:26:31.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:26:35.949" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 02:26:35.949" starttime="20201027 02:26:35.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:26:35.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:26:35.949" starttime="20201027 02:26:35.949"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:35.950" starttime="20201027 02:26:31.866"></status>
</kw>
<msg timestamp="20201027 02:26:35.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:26:35.950" starttime="20201027 02:26:31.865"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:35.950" starttime="20201027 02:26:31.865"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:26:35.955" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 68087-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:26:40.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:26:40.082" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:26:40.082" starttime="20201027 02:26:35.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:26:40.083" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 02:26:40.083" starttime="20201027 02:26:40.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:26:40.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:26:40.084" starttime="20201027 02:26:40.083"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:40.084" starttime="20201027 02:26:35.951"></status>
</kw>
<msg timestamp="20201027 02:26:40.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:26:40.084" starttime="20201027 02:26:35.951"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:40.085" starttime="20201027 02:26:35.950"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:26:40.089" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 68087-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:26:43.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:26:43.889" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:26:43.890" starttime="20201027 02:26:40.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:26:43.892" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 02:26:43.892" starttime="20201027 02:26:43.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:26:43.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:26:43.892" starttime="20201027 02:26:43.892"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:43.893" starttime="20201027 02:26:40.086"></status>
</kw>
<msg timestamp="20201027 02:26:43.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:26:43.893" starttime="20201027 02:26:40.085"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:43.893" starttime="20201027 02:26:40.085"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:26:43.898" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 68087-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:26:47.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:26:47.873" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:26:47.873" starttime="20201027 02:26:43.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:26:47.874" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 02:26:47.875" starttime="20201027 02:26:47.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:26:47.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:26:47.875" starttime="20201027 02:26:47.875"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:47.876" starttime="20201027 02:26:43.894"></status>
</kw>
<msg timestamp="20201027 02:26:47.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:26:47.876" starttime="20201027 02:26:43.894"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:47.876" starttime="20201027 02:26:43.894"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:26:47.881" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 68087-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:26:51.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:26:51.823" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:26:51.823" starttime="20201027 02:26:47.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:26:51.824" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 02:26:51.824" starttime="20201027 02:26:51.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:26:51.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:26:51.824" starttime="20201027 02:26:51.824"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:51.825" starttime="20201027 02:26:47.877"></status>
</kw>
<msg timestamp="20201027 02:26:51.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:26:51.825" starttime="20201027 02:26:47.877"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:51.825" starttime="20201027 02:26:47.876"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:51.826" starttime="20201027 02:26:05.446"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:51.826" starttime="20201027 02:26:05.445"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:51.826" starttime="20201027 02:25:57.635"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:26:51.833" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:26:51.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:26:51.836" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:26:51.836" starttime="20201027 02:26:51.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:26:51.837" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:26:51.837" starttime="20201027 02:26:51.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:26:51.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:26:51.838" starttime="20201027 02:26:51.838"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:51.838" starttime="20201027 02:26:51.830"></status>
</kw>
<msg timestamp="20201027 02:26:51.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:26:51.839" starttime="20201027 02:26:51.829"></status>
</kw>
<msg timestamp="20201027 02:26:51.839" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:26:51.839" starttime="20201027 02:26:51.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:26:51.841" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:26:51.841" starttime="20201027 02:26:51.839"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:26:51.847" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:26:51.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:26:51.863" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:26:51.863" starttime="20201027 02:26:51.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:26:51.864" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:26:51.864" starttime="20201027 02:26:51.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:26:51.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:26:51.865" starttime="20201027 02:26:51.865"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:51.865" starttime="20201027 02:26:51.842"></status>
</kw>
<msg timestamp="20201027 02:26:51.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:26:51.866" starttime="20201027 02:26:51.842"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:51.866" starttime="20201027 02:26:51.841"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:51.866" starttime="20201027 02:26:51.841"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:51.866" starttime="20201027 02:26:51.828"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:51.866" starttime="20201027 02:26:51.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:26:51.872" level="INFO">Running command 'ozone sh bucket link 68087-source/no-such-bucket 68087-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:26:56.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:26:56.074" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:26:56.074" starttime="20201027 02:26:51.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:26:56.076" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:26:56.076" starttime="20201027 02:26:56.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:26:56.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:26:56.077" starttime="20201027 02:26:56.076"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:56.077" starttime="20201027 02:26:51.867"></status>
</kw>
<msg timestamp="20201027 02:26:56.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:26:56.077" starttime="20201027 02:26:51.867"></status>
</kw>
<status status="PASS" endtime="20201027 02:26:56.077" starttime="20201027 02:26:51.866"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:26:56.081" level="INFO">Running command 'ozone sh key list 68087-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:00.103" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 02:27:00.103" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:27:00.103" starttime="20201027 02:26:56.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:00.105" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201027 02:27:00.105" starttime="20201027 02:27:00.104"></status>
</kw>
<msg timestamp="20201027 02:27:00.105" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:27:00.105" starttime="20201027 02:26:56.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201027 02:27:00.106" starttime="20201027 02:27:00.105"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 02:27:00.106" critical="yes" starttime="20201027 02:26:51.826"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:00.116" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:00.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:00.118" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:27:00.118" starttime="20201027 02:27:00.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:00.119" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:27:00.119" starttime="20201027 02:27:00.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:00.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:00.119" starttime="20201027 02:27:00.119"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:00.120" starttime="20201027 02:27:00.111"></status>
</kw>
<msg timestamp="20201027 02:27:00.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:00.120" starttime="20201027 02:27:00.111"></status>
</kw>
<msg timestamp="20201027 02:27:00.120" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:27:00.120" starttime="20201027 02:27:00.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:27:00.121" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:27:00.121" starttime="20201027 02:27:00.120"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:00.127" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:00.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:00.144" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:27:00.145" starttime="20201027 02:27:00.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:00.146" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:27:00.146" starttime="20201027 02:27:00.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:00.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:00.147" starttime="20201027 02:27:00.146"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:00.147" starttime="20201027 02:27:00.122"></status>
</kw>
<msg timestamp="20201027 02:27:00.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:00.147" starttime="20201027 02:27:00.122"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:00.148" starttime="20201027 02:27:00.121"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:00.148" starttime="20201027 02:27:00.121"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:00.148" starttime="20201027 02:27:00.110"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:00.148" starttime="20201027 02:27:00.109"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:00.153" level="INFO">Running command 'ozone sh bucket link 68087-source/bucket1 68087-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:04.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:04.368" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:27:04.368" starttime="20201027 02:27:00.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:04.369" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:27:04.369" starttime="20201027 02:27:04.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:04.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:04.370" starttime="20201027 02:27:04.369"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:04.370" starttime="20201027 02:27:00.149"></status>
</kw>
<msg timestamp="20201027 02:27:04.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:04.370" starttime="20201027 02:27:00.149"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:04.371" starttime="20201027 02:27:00.148"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:04.376" level="INFO">Running command 'ozone sh bucket create 68087-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:08.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:08.696" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:27:08.696" starttime="20201027 02:27:04.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:08.697" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:27:08.697" starttime="20201027 02:27:08.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:08.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:08.698" starttime="20201027 02:27:08.697"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:08.698" starttime="20201027 02:27:04.372"></status>
</kw>
<msg timestamp="20201027 02:27:08.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:08.698" starttime="20201027 02:27:04.372"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:08.699" starttime="20201027 02:27:04.371"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:08.704" level="INFO">Running command 'ozone sh key put 68087-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:18.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:18.127" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:27:18.127" starttime="20201027 02:27:08.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:18.128" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:27:18.128" starttime="20201027 02:27:18.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:18.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:18.129" starttime="20201027 02:27:18.128"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:18.129" starttime="20201027 02:27:08.700"></status>
</kw>
<msg timestamp="20201027 02:27:18.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:18.129" starttime="20201027 02:27:08.700"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:18.130" starttime="20201027 02:27:08.699"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201027 02:27:18.131" level="INFO">${postfix} = 07046</msg>
<status status="PASS" endtime="20201027 02:27:18.131" starttime="20201027 02:27:18.131"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201027 02:27:18.132" level="INFO">${tmpfile} = /tmp/tempkey-07046</msg>
<status status="PASS" endtime="20201027 02:27:18.132" starttime="20201027 02:27:18.132"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:18.144" level="INFO">Running command 'ozone sh key get -f 68087-target/link1/key1 /tmp/tempkey-07046 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:25.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:25.163" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:27:25.163" starttime="20201027 02:27:18.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:25.164" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:27:25.165" starttime="20201027 02:27:25.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:25.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:25.165" starttime="20201027 02:27:25.165"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:25.166" starttime="20201027 02:27:18.133"></status>
</kw>
<msg timestamp="20201027 02:27:25.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:25.166" starttime="20201027 02:27:18.133"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:25.166" starttime="20201027 02:27:18.132"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201027 02:27:25.169" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-07046 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:25.173" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201027 02:27:25.173" starttime="20201027 02:27:25.166"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:25.180" level="INFO">Running command 'rm -f /tmp/tempkey-07046 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:25.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:25.183" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:27:25.183" starttime="20201027 02:27:25.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:25.184" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:27:25.185" starttime="20201027 02:27:25.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:25.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:25.185" starttime="20201027 02:27:25.185"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:25.185" starttime="20201027 02:27:25.176"></status>
</kw>
<msg timestamp="20201027 02:27:25.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:25.186" starttime="20201027 02:27:25.175"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:25.186" starttime="20201027 02:27:25.173"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 02:27:25.186" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201027 02:27:25.186" starttime="20201027 02:27:25.186"></status>
</kw>
<msg timestamp="20201027 02:27:25.187" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201027 02:27:25.187" starttime="20201027 02:27:18.130"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201027 02:27:25.187" starttime="20201027 02:27:25.187"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:25.187" starttime="20201027 02:27:18.130"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 02:27:25.188" critical="yes" starttime="20201027 02:27:00.108"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:25.195" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:25.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:25.196" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:27:25.196" starttime="20201027 02:27:25.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:25.197" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:27:25.197" starttime="20201027 02:27:25.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:25.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:25.198" starttime="20201027 02:27:25.198"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:25.198" starttime="20201027 02:27:25.191"></status>
</kw>
<msg timestamp="20201027 02:27:25.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:25.199" starttime="20201027 02:27:25.191"></status>
</kw>
<msg timestamp="20201027 02:27:25.199" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:27:25.199" starttime="20201027 02:27:25.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:27:25.200" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:27:25.200" starttime="20201027 02:27:25.199"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:25.208" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:25.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:25.222" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:27:25.222" starttime="20201027 02:27:25.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:25.223" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:27:25.223" starttime="20201027 02:27:25.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:25.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:25.224" starttime="20201027 02:27:25.224"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:25.224" starttime="20201027 02:27:25.201"></status>
</kw>
<msg timestamp="20201027 02:27:25.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:25.225" starttime="20201027 02:27:25.201"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:25.225" starttime="20201027 02:27:25.200"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:25.225" starttime="20201027 02:27:25.200"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:25.225" starttime="20201027 02:27:25.190"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:25.225" starttime="20201027 02:27:25.189"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:25.232" level="INFO">Running command 'ozone sh key put 68087-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:31.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:31.798" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:27:31.798" starttime="20201027 02:27:25.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:31.799" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:27:31.799" starttime="20201027 02:27:31.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:31.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:31.800" starttime="20201027 02:27:31.799"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:31.800" starttime="20201027 02:27:25.227"></status>
</kw>
<msg timestamp="20201027 02:27:31.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:31.800" starttime="20201027 02:27:25.226"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:31.801" starttime="20201027 02:27:25.225"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201027 02:27:31.802" level="INFO">${postfix} = 16377</msg>
<status status="PASS" endtime="20201027 02:27:31.802" starttime="20201027 02:27:31.802"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201027 02:27:31.803" level="INFO">${tmpfile} = /tmp/tempkey-16377</msg>
<status status="PASS" endtime="20201027 02:27:31.803" starttime="20201027 02:27:31.803"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:31.808" level="INFO">Running command 'ozone sh key get -f 68087-source/bucket1/key2 /tmp/tempkey-16377 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:38.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:38.377" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:27:38.377" starttime="20201027 02:27:31.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:38.379" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:27:38.379" starttime="20201027 02:27:38.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:38.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:38.380" starttime="20201027 02:27:38.379"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:38.380" starttime="20201027 02:27:31.804"></status>
</kw>
<msg timestamp="20201027 02:27:38.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:38.380" starttime="20201027 02:27:31.804"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:38.381" starttime="20201027 02:27:31.803"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201027 02:27:38.391" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-16377 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:38.400" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201027 02:27:38.400" starttime="20201027 02:27:38.381"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:38.412" level="INFO">Running command 'rm -f /tmp/tempkey-16377 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:38.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:38.423" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:27:38.423" starttime="20201027 02:27:38.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:38.424" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:27:38.424" starttime="20201027 02:27:38.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:38.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:38.425" starttime="20201027 02:27:38.425"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:38.426" starttime="20201027 02:27:38.402"></status>
</kw>
<msg timestamp="20201027 02:27:38.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:38.426" starttime="20201027 02:27:38.402"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:38.426" starttime="20201027 02:27:38.401"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 02:27:38.427" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201027 02:27:38.427" starttime="20201027 02:27:38.426"></status>
</kw>
<msg timestamp="20201027 02:27:38.427" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201027 02:27:38.427" starttime="20201027 02:27:31.801"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201027 02:27:38.428" starttime="20201027 02:27:38.428"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:38.428" starttime="20201027 02:27:31.801"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 02:27:38.430" critical="yes" starttime="20201027 02:27:25.189"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:38.448" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:38.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:38.460" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:27:38.460" starttime="20201027 02:27:38.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:38.461" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:27:38.461" starttime="20201027 02:27:38.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:38.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:38.462" starttime="20201027 02:27:38.462"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:38.462" starttime="20201027 02:27:38.437"></status>
</kw>
<msg timestamp="20201027 02:27:38.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:38.463" starttime="20201027 02:27:38.437"></status>
</kw>
<msg timestamp="20201027 02:27:38.463" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:27:38.463" starttime="20201027 02:27:38.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:27:38.464" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:27:38.464" starttime="20201027 02:27:38.463"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:38.477" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:38.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:38.531" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:27:38.531" starttime="20201027 02:27:38.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:38.532" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:27:38.533" starttime="20201027 02:27:38.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:38.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:38.533" starttime="20201027 02:27:38.533"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:38.534" starttime="20201027 02:27:38.465"></status>
</kw>
<msg timestamp="20201027 02:27:38.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:38.534" starttime="20201027 02:27:38.465"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:38.534" starttime="20201027 02:27:38.464"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:38.534" starttime="20201027 02:27:38.464"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:38.535" starttime="20201027 02:27:38.436"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:38.535" starttime="20201027 02:27:38.432"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:38.548" level="INFO">Running command 'ozone sh key list 68087-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:43.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:43.251" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201027 02:27:43.251" starttime="20201027 02:27:38.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:43.252" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201027 02:27:43.252" starttime="20201027 02:27:43.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:43.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:43.253" starttime="20201027 02:27:43.252"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:43.253" starttime="20201027 02:27:38.536"></status>
</kw>
<msg timestamp="20201027 02:27:43.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:43.253" starttime="20201027 02:27:38.536"></status>
</kw>
<msg timestamp="20201027 02:27:43.254" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201027 02:27:43.254" starttime="20201027 02:27:38.535"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:43.258" level="INFO">Running command 'ozone sh key list 68087-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:47.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:47.369" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201027 02:27:47.369" starttime="20201027 02:27:43.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:47.371" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201027 02:27:47.371" starttime="20201027 02:27:47.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:47.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:47.372" starttime="20201027 02:27:47.371"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:47.372" starttime="20201027 02:27:43.255"></status>
</kw>
<msg timestamp="20201027 02:27:47.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:47.372" starttime="20201027 02:27:43.254"></status>
</kw>
<msg timestamp="20201027 02:27:47.372" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201027 02:27:47.372" starttime="20201027 02:27:43.254"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201027 02:27:47.373" starttime="20201027 02:27:47.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201027 02:27:47.373" starttime="20201027 02:27:47.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201027 02:27:47.374" starttime="20201027 02:27:47.374"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 02:27:47.374" critical="yes" starttime="20201027 02:27:38.431"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:47.384" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:47.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:47.385" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:27:47.385" starttime="20201027 02:27:47.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:47.386" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:27:47.387" starttime="20201027 02:27:47.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:47.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:47.387" starttime="20201027 02:27:47.387"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:47.388" starttime="20201027 02:27:47.378"></status>
</kw>
<msg timestamp="20201027 02:27:47.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:47.388" starttime="20201027 02:27:47.378"></status>
</kw>
<msg timestamp="20201027 02:27:47.388" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:27:47.388" starttime="20201027 02:27:47.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:27:47.389" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:27:47.389" starttime="20201027 02:27:47.388"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:47.394" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:47.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:47.423" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:27:47.423" starttime="20201027 02:27:47.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:47.424" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:27:47.425" starttime="20201027 02:27:47.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:47.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:47.425" starttime="20201027 02:27:47.425"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:47.426" starttime="20201027 02:27:47.390"></status>
</kw>
<msg timestamp="20201027 02:27:47.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:47.426" starttime="20201027 02:27:47.390"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:47.426" starttime="20201027 02:27:47.389"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:47.426" starttime="20201027 02:27:47.389"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:47.426" starttime="20201027 02:27:47.377"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:47.426" starttime="20201027 02:27:47.376"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:47.433" level="INFO">Running command 'ozone sh key delete 68087-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:51.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:51.340" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:27:51.340" starttime="20201027 02:27:47.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:51.342" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:27:51.342" starttime="20201027 02:27:51.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:51.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:51.343" starttime="20201027 02:27:51.342"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:51.343" starttime="20201027 02:27:47.427"></status>
</kw>
<msg timestamp="20201027 02:27:51.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:51.343" starttime="20201027 02:27:47.427"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:51.343" starttime="20201027 02:27:47.427"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:51.349" level="INFO">Running command 'ozone sh key list 68087-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:55.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:55.510" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201027 02:27:55.511" starttime="20201027 02:27:51.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:55.512" level="INFO">key1</msg>
<status status="PASS" endtime="20201027 02:27:55.512" starttime="20201027 02:27:55.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:55.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:55.513" starttime="20201027 02:27:55.512"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:55.513" starttime="20201027 02:27:51.345"></status>
</kw>
<msg timestamp="20201027 02:27:55.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:55.513" starttime="20201027 02:27:51.344"></status>
</kw>
<msg timestamp="20201027 02:27:55.514" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201027 02:27:55.514" starttime="20201027 02:27:51.343"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201027 02:27:55.514" starttime="20201027 02:27:55.514"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 02:27:55.514" critical="yes" starttime="20201027 02:27:47.375"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:55.522" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:55.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:55.529" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:27:55.529" starttime="20201027 02:27:55.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:55.531" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:27:55.531" starttime="20201027 02:27:55.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:55.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:55.531" starttime="20201027 02:27:55.531"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:55.532" starttime="20201027 02:27:55.518"></status>
</kw>
<msg timestamp="20201027 02:27:55.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:55.532" starttime="20201027 02:27:55.518"></status>
</kw>
<msg timestamp="20201027 02:27:55.532" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:27:55.532" starttime="20201027 02:27:55.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:27:55.533" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:27:55.533" starttime="20201027 02:27:55.532"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:55.538" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:55.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:55.570" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:27:55.570" starttime="20201027 02:27:55.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:55.571" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:27:55.571" starttime="20201027 02:27:55.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:55.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:55.572" starttime="20201027 02:27:55.571"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:55.572" starttime="20201027 02:27:55.535"></status>
</kw>
<msg timestamp="20201027 02:27:55.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:55.573" starttime="20201027 02:27:55.534"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:55.573" starttime="20201027 02:27:55.534"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:55.573" starttime="20201027 02:27:55.533"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:55.573" starttime="20201027 02:27:55.517"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:55.573" starttime="20201027 02:27:55.516"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:55.579" level="INFO">Running command 'ozone sh bucket list 68087-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:59.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:59.722" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:27:59.722" starttime="20201027 02:27:55.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:59.723" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "68087-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T02:26:55.886Z",
  "modificationTime" : "2020-10-27T02:26:55.886Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68087-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "68087-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T02:26:31.667Z",
  "modificationTime" : "2020-10-27T02:26:51.718Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68087-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "68087-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T02:27:04.083Z",
  "modificationTime" : "2020-10-27T02:27:04.083Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68087-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "68087-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T02:26:23.751Z",
  "modificationTime" : "2020-10-27T02:26:47.777Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68087-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "68087-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T02:26:27.762Z",
  "modificationTime" : "2020-10-27T02:26:27.762Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68087-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 02:27:59.724" starttime="20201027 02:27:59.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:59.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:59.724" starttime="20201027 02:27:59.724"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:59.725" starttime="20201027 02:27:55.575"></status>
</kw>
<msg timestamp="20201027 02:27:59.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:59.725" starttime="20201027 02:27:55.575"></status>
</kw>
<msg timestamp="20201027 02:27:59.725" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:27:59.725" starttime="20201027 02:27:55.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201027 02:27:59.726" starttime="20201027 02:27:59.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201027 02:27:59.726" starttime="20201027 02:27:59.726"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 02:27:59.727" critical="yes" starttime="20201027 02:27:55.515"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:59.738" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:59.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:59.740" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:27:59.740" starttime="20201027 02:27:59.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:59.742" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:27:59.742" starttime="20201027 02:27:59.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:59.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:59.743" starttime="20201027 02:27:59.743"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:59.744" starttime="20201027 02:27:59.733"></status>
</kw>
<msg timestamp="20201027 02:27:59.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:59.744" starttime="20201027 02:27:59.733"></status>
</kw>
<msg timestamp="20201027 02:27:59.744" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:27:59.744" starttime="20201027 02:27:59.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:27:59.745" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:27:59.745" starttime="20201027 02:27:59.744"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:59.752" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:27:59.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:27:59.773" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:27:59.773" starttime="20201027 02:27:59.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:27:59.774" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:27:59.774" starttime="20201027 02:27:59.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:27:59.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:27:59.775" starttime="20201027 02:27:59.774"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:59.775" starttime="20201027 02:27:59.747"></status>
</kw>
<msg timestamp="20201027 02:27:59.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:27:59.775" starttime="20201027 02:27:59.747"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:59.776" starttime="20201027 02:27:59.746"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:59.776" starttime="20201027 02:27:59.745"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:59.776" starttime="20201027 02:27:59.732"></status>
</kw>
<status status="PASS" endtime="20201027 02:27:59.776" starttime="20201027 02:27:59.732"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:27:59.783" level="INFO">Running command 'ozone sh bucket info 68087-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:04.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:04.448" level="INFO">${output} = 68087-source bucket1</msg>
<status status="PASS" endtime="20201027 02:28:04.448" starttime="20201027 02:27:59.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:04.449" level="INFO">68087-source bucket1</msg>
<status status="PASS" endtime="20201027 02:28:04.449" starttime="20201027 02:28:04.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:04.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:04.450" starttime="20201027 02:28:04.449"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:04.451" starttime="20201027 02:27:59.778"></status>
</kw>
<msg timestamp="20201027 02:28:04.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:04.451" starttime="20201027 02:27:59.777"></status>
</kw>
<msg timestamp="20201027 02:28:04.451" level="INFO">${result} = 68087-source bucket1</msg>
<status status="PASS" endtime="20201027 02:28:04.451" starttime="20201027 02:27:59.776"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201027 02:28:04.452" starttime="20201027 02:28:04.451"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 02:28:04.452" critical="yes" starttime="20201027 02:27:59.730"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:04.460" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:04.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:04.463" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:28:04.463" starttime="20201027 02:28:04.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:04.464" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:28:04.464" starttime="20201027 02:28:04.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:04.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:04.465" starttime="20201027 02:28:04.465"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:04.466" starttime="20201027 02:28:04.456"></status>
</kw>
<msg timestamp="20201027 02:28:04.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:04.466" starttime="20201027 02:28:04.456"></status>
</kw>
<msg timestamp="20201027 02:28:04.466" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:28:04.466" starttime="20201027 02:28:04.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:28:04.467" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:28:04.467" starttime="20201027 02:28:04.466"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:04.472" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:04.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:04.491" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:28:04.491" starttime="20201027 02:28:04.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:04.499" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:28:04.500" starttime="20201027 02:28:04.491"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:04.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:04.504" starttime="20201027 02:28:04.500"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:04.504" starttime="20201027 02:28:04.468"></status>
</kw>
<msg timestamp="20201027 02:28:04.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:04.504" starttime="20201027 02:28:04.468"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:04.505" starttime="20201027 02:28:04.467"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:04.505" starttime="20201027 02:28:04.467"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:04.505" starttime="20201027 02:28:04.455"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:04.505" starttime="20201027 02:28:04.454"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:04.520" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 68087-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:08.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:08.428" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:28:08.428" starttime="20201027 02:28:04.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:08.430" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 02:28:08.430" starttime="20201027 02:28:08.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:08.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:08.431" starttime="20201027 02:28:08.430"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:08.431" starttime="20201027 02:28:04.511"></status>
</kw>
<msg timestamp="20201027 02:28:08.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:08.431" starttime="20201027 02:28:04.510"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:08.431" starttime="20201027 02:28:04.505"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:08.438" level="INFO">Running command 'ozone sh bucket getacl 68087-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:12.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:12.874" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201027 02:28:12.874" starttime="20201027 02:28:08.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:12.876" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201027 02:28:12.876" starttime="20201027 02:28:12.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:12.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:12.876" starttime="20201027 02:28:12.876"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:12.877" starttime="20201027 02:28:08.433"></status>
</kw>
<msg timestamp="20201027 02:28:12.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:12.877" starttime="20201027 02:28:08.433"></status>
</kw>
<msg timestamp="20201027 02:28:12.877" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201027 02:28:12.877" starttime="20201027 02:28:08.432"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201027 02:28:12.878" starttime="20201027 02:28:12.877"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:12.878" starttime="20201027 02:28:08.432"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:12.886" level="INFO">Running command 'ozone sh bucket getacl 68087-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:17.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:17.235" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:28:17.235" starttime="20201027 02:28:12.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:17.237" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:28:17.237" starttime="20201027 02:28:17.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:17.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:17.237" starttime="20201027 02:28:17.237"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:17.238" starttime="20201027 02:28:12.880"></status>
</kw>
<msg timestamp="20201027 02:28:17.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:17.238" starttime="20201027 02:28:12.880"></status>
</kw>
<msg timestamp="20201027 02:28:17.238" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201027 02:28:17.238" starttime="20201027 02:28:12.879"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201027 02:28:17.239" starttime="20201027 02:28:17.238"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:17.239" starttime="20201027 02:28:12.878"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:17.246" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 68087-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:21.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:21.165" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:28:21.165" starttime="20201027 02:28:17.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:21.166" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 02:28:21.166" starttime="20201027 02:28:21.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:21.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:21.167" starttime="20201027 02:28:21.166"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:21.167" starttime="20201027 02:28:17.241"></status>
</kw>
<msg timestamp="20201027 02:28:21.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:21.167" starttime="20201027 02:28:17.240"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:21.168" starttime="20201027 02:28:17.239"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:21.173" level="INFO">Running command 'ozone sh bucket getacl 68087-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:25.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:25.297" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:28:25.298" starttime="20201027 02:28:21.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:25.299" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:28:25.299" starttime="20201027 02:28:25.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:25.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:25.300" starttime="20201027 02:28:25.299"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:25.300" starttime="20201027 02:28:21.170"></status>
</kw>
<msg timestamp="20201027 02:28:25.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:25.300" starttime="20201027 02:28:21.170"></status>
</kw>
<msg timestamp="20201027 02:28:25.300" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201027 02:28:25.301" starttime="20201027 02:28:21.169"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201027 02:28:25.301" starttime="20201027 02:28:25.301"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:25.301" starttime="20201027 02:28:21.168"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:25.307" level="INFO">Running command 'ozone sh bucket getacl 68087-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:29.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:29.434" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201027 02:28:29.434" starttime="20201027 02:28:25.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:29.436" level="INFO">READ</msg>
<status status="PASS" endtime="20201027 02:28:29.436" starttime="20201027 02:28:29.435"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:29.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:29.436" starttime="20201027 02:28:29.436"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:29.437" starttime="20201027 02:28:25.303"></status>
</kw>
<msg timestamp="20201027 02:28:29.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:29.437" starttime="20201027 02:28:25.303"></status>
</kw>
<msg timestamp="20201027 02:28:29.437" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201027 02:28:29.437" starttime="20201027 02:28:25.302"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201027 02:28:29.438" starttime="20201027 02:28:29.437"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:29.438" starttime="20201027 02:28:25.301"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 02:28:29.438" critical="yes" starttime="20201027 02:28:04.453"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:29.446" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:29.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:29.449" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:28:29.449" starttime="20201027 02:28:29.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:29.450" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:28:29.450" starttime="20201027 02:28:29.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:29.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:29.451" starttime="20201027 02:28:29.450"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:29.451" starttime="20201027 02:28:29.442"></status>
</kw>
<msg timestamp="20201027 02:28:29.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:29.452" starttime="20201027 02:28:29.442"></status>
</kw>
<msg timestamp="20201027 02:28:29.452" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:28:29.452" starttime="20201027 02:28:29.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:28:29.453" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:28:29.453" starttime="20201027 02:28:29.452"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:29.460" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:29.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:29.488" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:28:29.488" starttime="20201027 02:28:29.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:29.489" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:28:29.489" starttime="20201027 02:28:29.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:29.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:29.490" starttime="20201027 02:28:29.490"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:29.490" starttime="20201027 02:28:29.454"></status>
</kw>
<msg timestamp="20201027 02:28:29.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:29.491" starttime="20201027 02:28:29.454"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:29.491" starttime="20201027 02:28:29.453"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:29.491" starttime="20201027 02:28:29.453"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:29.491" starttime="20201027 02:28:29.441"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:29.491" starttime="20201027 02:28:29.440"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:29.497" level="INFO">Running command 'ozone sh bucket link 68087-source/bucket2 68087-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:33.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:33.408" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:28:33.408" starttime="20201027 02:28:29.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:33.409" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:28:33.409" starttime="20201027 02:28:33.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:33.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:33.410" starttime="20201027 02:28:33.409"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:33.410" starttime="20201027 02:28:29.493"></status>
</kw>
<msg timestamp="20201027 02:28:33.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:33.410" starttime="20201027 02:28:29.492"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:33.411" starttime="20201027 02:28:29.492"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:33.417" level="INFO">Running command 'ozone sh bucket create 68087-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:37.886" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 02:28:37.886" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:28:37.886" starttime="20201027 02:28:33.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:37.887" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201027 02:28:37.887" starttime="20201027 02:28:37.886"></status>
</kw>
<msg timestamp="20201027 02:28:37.888" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:28:37.888" starttime="20201027 02:28:33.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201027 02:28:37.888" starttime="20201027 02:28:37.888"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:37.894" level="INFO">Running command 'ozone sh bucket create 68087-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:42.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:42.109" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:28:42.109" starttime="20201027 02:28:37.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:42.111" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:28:42.111" starttime="20201027 02:28:42.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:42.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:42.111" starttime="20201027 02:28:42.111"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:42.112" starttime="20201027 02:28:37.890"></status>
</kw>
<msg timestamp="20201027 02:28:42.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:42.112" starttime="20201027 02:28:37.889"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:42.112" starttime="20201027 02:28:37.889"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:42.117" level="INFO">Running command 'ozone sh bucket link 68087-source/bucket1 68087-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:46.519" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 02:28:46.520" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:28:46.520" starttime="20201027 02:28:42.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:46.521" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201027 02:28:46.521" starttime="20201027 02:28:46.520"></status>
</kw>
<msg timestamp="20201027 02:28:46.522" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:28:46.522" starttime="20201027 02:28:42.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201027 02:28:46.522" starttime="20201027 02:28:46.522"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 02:28:46.523" critical="yes" starttime="20201027 02:28:29.439"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:46.531" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:46.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:46.535" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:28:46.535" starttime="20201027 02:28:46.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:46.536" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:28:46.536" starttime="20201027 02:28:46.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:46.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:46.537" starttime="20201027 02:28:46.536"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:46.537" starttime="20201027 02:28:46.527"></status>
</kw>
<msg timestamp="20201027 02:28:46.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:46.537" starttime="20201027 02:28:46.527"></status>
</kw>
<msg timestamp="20201027 02:28:46.538" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:28:46.538" starttime="20201027 02:28:46.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:28:46.538" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:28:46.538" starttime="20201027 02:28:46.538"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:46.543" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:46.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:46.561" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:28:46.561" starttime="20201027 02:28:46.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:46.562" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:28:46.562" starttime="20201027 02:28:46.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:46.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:46.563" starttime="20201027 02:28:46.562"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:46.563" starttime="20201027 02:28:46.540"></status>
</kw>
<msg timestamp="20201027 02:28:46.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:46.563" starttime="20201027 02:28:46.540"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:46.564" starttime="20201027 02:28:46.539"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:46.564" starttime="20201027 02:28:46.539"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:46.564" starttime="20201027 02:28:46.526"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:46.564" starttime="20201027 02:28:46.525"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:46.571" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:46.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:46.577" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:28:46.577" starttime="20201027 02:28:46.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:46.579" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:28:46.580" starttime="20201027 02:28:46.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:46.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:46.581" starttime="20201027 02:28:46.580"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:46.581" starttime="20201027 02:28:46.566"></status>
</kw>
<msg timestamp="20201027 02:28:46.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:46.582" starttime="20201027 02:28:46.566"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:46.582" starttime="20201027 02:28:46.566"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:46.591" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:46.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:46.594" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:28:46.594" starttime="20201027 02:28:46.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:46.596" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:28:46.596" starttime="20201027 02:28:46.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:46.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:46.596" starttime="20201027 02:28:46.596"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:46.597" starttime="20201027 02:28:46.584"></status>
</kw>
<msg timestamp="20201027 02:28:46.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:46.597" starttime="20201027 02:28:46.584"></status>
</kw>
<msg timestamp="20201027 02:28:46.597" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:28:46.597" starttime="20201027 02:28:46.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:28:46.598" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:28:46.598" starttime="20201027 02:28:46.597"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:46.603" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:46.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:46.623" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:28:46.623" starttime="20201027 02:28:46.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:46.625" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:28:46.625" starttime="20201027 02:28:46.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:46.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:46.626" starttime="20201027 02:28:46.625"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:46.626" starttime="20201027 02:28:46.599"></status>
</kw>
<msg timestamp="20201027 02:28:46.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:46.626" starttime="20201027 02:28:46.599"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:46.626" starttime="20201027 02:28:46.599"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:46.627" starttime="20201027 02:28:46.598"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:46.627" starttime="20201027 02:28:46.582"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:46.627" starttime="20201027 02:28:46.582"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:46.631" level="INFO">Running command 'ozone sh key list 68087-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:50.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:50.802" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:28:50.802" starttime="20201027 02:28:46.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:50.803" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "68087-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-10-27T02:26:13.566Z",
  "modificationTime" : "2020-10-27T02:26:15.501Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201027 02:28:50.803" starttime="20201027 02:28:50.802"></status>
</kw>
<msg timestamp="20201027 02:28:50.803" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:28:50.804" starttime="20201027 02:28:46.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201027 02:28:50.804" starttime="20201027 02:28:50.804"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:50.804" starttime="20201027 02:28:46.565"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:50.804" starttime="20201027 02:28:46.564"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 02:28:50.805" critical="yes" starttime="20201027 02:28:46.524"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:50.813" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:50.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:50.815" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:28:50.816" starttime="20201027 02:28:50.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:50.817" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:28:50.817" starttime="20201027 02:28:50.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:50.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:50.817" starttime="20201027 02:28:50.817"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:50.818" starttime="20201027 02:28:50.808"></status>
</kw>
<msg timestamp="20201027 02:28:50.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:50.818" starttime="20201027 02:28:50.808"></status>
</kw>
<msg timestamp="20201027 02:28:50.818" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:28:50.818" starttime="20201027 02:28:50.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:28:50.819" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:28:50.819" starttime="20201027 02:28:50.818"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:50.826" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:50.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:50.851" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:28:50.851" starttime="20201027 02:28:50.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:50.853" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:28:50.853" starttime="20201027 02:28:50.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:50.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:50.854" starttime="20201027 02:28:50.853"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:50.854" starttime="20201027 02:28:50.820"></status>
</kw>
<msg timestamp="20201027 02:28:50.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:50.855" starttime="20201027 02:28:50.820"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:50.855" starttime="20201027 02:28:50.819"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:50.855" starttime="20201027 02:28:50.819"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:50.855" starttime="20201027 02:28:50.807"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:50.855" starttime="20201027 02:28:50.807"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:50.861" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:50.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:50.866" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:28:50.866" starttime="20201027 02:28:50.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:50.867" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:28:50.867" starttime="20201027 02:28:50.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:50.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:50.868" starttime="20201027 02:28:50.867"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:50.868" starttime="20201027 02:28:50.858"></status>
</kw>
<msg timestamp="20201027 02:28:50.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:50.869" starttime="20201027 02:28:50.858"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:50.869" starttime="20201027 02:28:50.857"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:50.875" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:50.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:50.877" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:28:50.877" starttime="20201027 02:28:50.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:50.878" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:28:50.878" starttime="20201027 02:28:50.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:50.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:50.879" starttime="20201027 02:28:50.878"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:50.879" starttime="20201027 02:28:50.870"></status>
</kw>
<msg timestamp="20201027 02:28:50.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:50.879" starttime="20201027 02:28:50.870"></status>
</kw>
<msg timestamp="20201027 02:28:50.879" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:28:50.879" starttime="20201027 02:28:50.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:28:50.880" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:28:50.880" starttime="20201027 02:28:50.880"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:50.886" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:50.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:50.905" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:28:50.905" starttime="20201027 02:28:50.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:50.906" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:28:50.906" starttime="20201027 02:28:50.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:50.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:50.907" starttime="20201027 02:28:50.906"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:50.907" starttime="20201027 02:28:50.882"></status>
</kw>
<msg timestamp="20201027 02:28:50.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:50.907" starttime="20201027 02:28:50.882"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:50.908" starttime="20201027 02:28:50.881"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:50.908" starttime="20201027 02:28:50.880"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:50.908" starttime="20201027 02:28:50.869"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:50.908" starttime="20201027 02:28:50.869"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:50.913" level="INFO">Running command 'ozone sh key list 68087-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:55.063" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 02:28:55.063" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:28:55.063" starttime="20201027 02:28:50.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:55.065" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201027 02:28:55.065" starttime="20201027 02:28:55.064"></status>
</kw>
<msg timestamp="20201027 02:28:55.066" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:28:55.066" starttime="20201027 02:28:50.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201027 02:28:55.066" starttime="20201027 02:28:55.066"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:55.067" starttime="20201027 02:28:50.856"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:55.067" starttime="20201027 02:28:50.856"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 02:28:55.067" critical="yes" starttime="20201027 02:28:50.805"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:55.076" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:55.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:55.079" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:28:55.079" starttime="20201027 02:28:55.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:55.081" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:28:55.081" starttime="20201027 02:28:55.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:55.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:55.082" starttime="20201027 02:28:55.081"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:55.082" starttime="20201027 02:28:55.071"></status>
</kw>
<msg timestamp="20201027 02:28:55.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:55.082" starttime="20201027 02:28:55.071"></status>
</kw>
<msg timestamp="20201027 02:28:55.082" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:28:55.082" starttime="20201027 02:28:55.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:28:55.083" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:28:55.083" starttime="20201027 02:28:55.083"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:55.090" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:55.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:55.100" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:28:55.101" starttime="20201027 02:28:55.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:55.102" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:28:55.102" starttime="20201027 02:28:55.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:55.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:55.102" starttime="20201027 02:28:55.102"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:55.103" starttime="20201027 02:28:55.085"></status>
</kw>
<msg timestamp="20201027 02:28:55.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:55.103" starttime="20201027 02:28:55.084"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:55.103" starttime="20201027 02:28:55.084"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:55.103" starttime="20201027 02:28:55.083"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:55.103" starttime="20201027 02:28:55.070"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:55.104" starttime="20201027 02:28:55.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:55.111" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:55.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:55.113" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:28:55.113" starttime="20201027 02:28:55.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:55.114" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:28:55.114" starttime="20201027 02:28:55.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:55.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:55.115" starttime="20201027 02:28:55.114"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:55.115" starttime="20201027 02:28:55.106"></status>
</kw>
<msg timestamp="20201027 02:28:55.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:55.116" starttime="20201027 02:28:55.105"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:55.116" starttime="20201027 02:28:55.105"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:55.121" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:55.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:55.126" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:28:55.126" starttime="20201027 02:28:55.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:55.127" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:28:55.127" starttime="20201027 02:28:55.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:55.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:55.128" starttime="20201027 02:28:55.127"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:55.128" starttime="20201027 02:28:55.117"></status>
</kw>
<msg timestamp="20201027 02:28:55.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:55.128" starttime="20201027 02:28:55.117"></status>
</kw>
<msg timestamp="20201027 02:28:55.128" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:28:55.128" starttime="20201027 02:28:55.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:28:55.129" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:28:55.129" starttime="20201027 02:28:55.128"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:55.134" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:55.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:55.151" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:28:55.151" starttime="20201027 02:28:55.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:55.152" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:28:55.152" starttime="20201027 02:28:55.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:55.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:55.153" starttime="20201027 02:28:55.153"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:55.154" starttime="20201027 02:28:55.130"></status>
</kw>
<msg timestamp="20201027 02:28:55.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:55.154" starttime="20201027 02:28:55.130"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:55.154" starttime="20201027 02:28:55.130"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:55.154" starttime="20201027 02:28:55.129"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:55.154" starttime="20201027 02:28:55.116"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:55.154" starttime="20201027 02:28:55.116"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:55.161" level="INFO">Running command 'ozone sh bucket info 68087-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:28:59.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:28:59.458" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:28:59.458" starttime="20201027 02:28:55.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:28:59.459" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "68087-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T02:26:31.667Z",
  "modificationTime" : "2020-10-27T02:26:51.718Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68087-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 02:28:59.459" starttime="20201027 02:28:59.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:28:59.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:28:59.460" starttime="20201027 02:28:59.459"></status>
</kw>
<status status="PASS" endtime="20201027 02:28:59.460" starttime="20201027 02:28:55.155"></status>
</kw>
<msg timestamp="20201027 02:28:59.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:28:59.460" starttime="20201027 02:28:55.155"></status>
</kw>
<msg timestamp="20201027 02:28:59.461" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:28:59.461" starttime="20201027 02:28:55.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201027 02:28:59.461" starttime="20201027 02:28:59.461"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201027 02:28:59.462" starttime="20201027 02:28:59.462"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:28:59.466" level="INFO">Running command 'ozone sh key list 68087-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:03.521" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 02:29:03.521" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:29:03.521" starttime="20201027 02:28:59.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:29:03.522" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201027 02:29:03.522" starttime="20201027 02:29:03.521"></status>
</kw>
<msg timestamp="20201027 02:29:03.523" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:29:03.523" starttime="20201027 02:28:59.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201027 02:29:03.523" starttime="20201027 02:29:03.523"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:03.524" starttime="20201027 02:28:55.104"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:03.524" starttime="20201027 02:28:55.104"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 02:29:03.524" critical="yes" starttime="20201027 02:28:55.068"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:29:03.531" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:03.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:29:03.534" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:29:03.534" starttime="20201027 02:29:03.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:29:03.535" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:29:03.536" starttime="20201027 02:29:03.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:29:03.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:29:03.536" starttime="20201027 02:29:03.536"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:03.537" starttime="20201027 02:29:03.527"></status>
</kw>
<msg timestamp="20201027 02:29:03.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:29:03.537" starttime="20201027 02:29:03.527"></status>
</kw>
<msg timestamp="20201027 02:29:03.537" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:29:03.537" starttime="20201027 02:29:03.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:29:03.538" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:29:03.538" starttime="20201027 02:29:03.537"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:29:03.544" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:03.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:29:03.562" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:29:03.562" starttime="20201027 02:29:03.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:29:03.563" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:29:03.563" starttime="20201027 02:29:03.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:29:03.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:29:03.564" starttime="20201027 02:29:03.564"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:03.565" starttime="20201027 02:29:03.539"></status>
</kw>
<msg timestamp="20201027 02:29:03.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:29:03.565" starttime="20201027 02:29:03.539"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:03.565" starttime="20201027 02:29:03.538"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:03.565" starttime="20201027 02:29:03.538"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:03.565" starttime="20201027 02:29:03.526"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:03.565" starttime="20201027 02:29:03.526"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:29:03.571" level="INFO">Running command 'ozone sh bucket link 68087-target/loop1 68087-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:07.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:29:07.494" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:29:07.495" starttime="20201027 02:29:03.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:29:07.496" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:29:07.496" starttime="20201027 02:29:07.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:29:07.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:29:07.497" starttime="20201027 02:29:07.496"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:07.497" starttime="20201027 02:29:03.566"></status>
</kw>
<msg timestamp="20201027 02:29:07.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:29:07.497" starttime="20201027 02:29:03.566"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:07.498" starttime="20201027 02:29:03.565"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:29:07.503" level="INFO">Running command 'ozone sh bucket link 68087-target/loop2 68087-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:11.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:29:11.445" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:29:11.445" starttime="20201027 02:29:07.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:29:11.446" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:29:11.446" starttime="20201027 02:29:11.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:29:11.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:29:11.447" starttime="20201027 02:29:11.446"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:11.448" starttime="20201027 02:29:07.499"></status>
</kw>
<msg timestamp="20201027 02:29:11.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:29:11.448" starttime="20201027 02:29:07.499"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:11.448" starttime="20201027 02:29:07.498"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:29:11.462" level="INFO">Running command 'ozone sh bucket link 68087-target/loop3 68087-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:15.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:29:15.455" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:29:15.455" starttime="20201027 02:29:11.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:29:15.457" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:29:15.457" starttime="20201027 02:29:15.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:29:15.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:29:15.457" starttime="20201027 02:29:15.457"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:15.458" starttime="20201027 02:29:11.449"></status>
</kw>
<msg timestamp="20201027 02:29:15.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:29:15.458" starttime="20201027 02:29:11.449"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:15.458" starttime="20201027 02:29:11.448"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:29:15.462" level="INFO">Running command 'ozone sh key list 68087-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:19.137" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 02:29:19.137" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:29:19.137" starttime="20201027 02:29:15.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:29:19.138" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201027 02:29:19.138" starttime="20201027 02:29:19.137"></status>
</kw>
<msg timestamp="20201027 02:29:19.139" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:29:19.139" starttime="20201027 02:29:15.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201027 02:29:19.139" starttime="20201027 02:29:19.139"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 02:29:19.140" critical="yes" starttime="20201027 02:29:03.525"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:29:19.147" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:19.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:29:19.150" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:29:19.150" starttime="20201027 02:29:19.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:29:19.151" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:29:19.151" starttime="20201027 02:29:19.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:29:19.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:29:19.152" starttime="20201027 02:29:19.151"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:19.152" starttime="20201027 02:29:19.143"></status>
</kw>
<msg timestamp="20201027 02:29:19.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:29:19.152" starttime="20201027 02:29:19.143"></status>
</kw>
<msg timestamp="20201027 02:29:19.152" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:29:19.152" starttime="20201027 02:29:19.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:29:19.153" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:29:19.153" starttime="20201027 02:29:19.152"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:29:19.157" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:19.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:29:19.176" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:29:19.176" starttime="20201027 02:29:19.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:29:19.177" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:29:19.177" starttime="20201027 02:29:19.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:29:19.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:29:19.178" starttime="20201027 02:29:19.177"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:19.179" starttime="20201027 02:29:19.154"></status>
</kw>
<msg timestamp="20201027 02:29:19.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:29:19.179" starttime="20201027 02:29:19.154"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:19.179" starttime="20201027 02:29:19.154"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:19.179" starttime="20201027 02:29:19.153"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:19.179" starttime="20201027 02:29:19.142"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:19.179" starttime="20201027 02:29:19.141"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:29:19.185" level="INFO">Running command 'ozone sh bucket link 68087-source/bucket1 68087-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:23.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:29:23.007" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:29:23.007" starttime="20201027 02:29:19.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:29:23.008" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:29:23.009" starttime="20201027 02:29:23.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:29:23.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:29:23.009" starttime="20201027 02:29:23.009"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:23.010" starttime="20201027 02:29:19.181"></status>
</kw>
<msg timestamp="20201027 02:29:23.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:29:23.010" starttime="20201027 02:29:19.180"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:23.010" starttime="20201027 02:29:19.180"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:29:23.014" level="INFO">Running command 'ozone sh key put 68087-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:29.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:29:29.102" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:29:29.103" starttime="20201027 02:29:23.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:29:29.104" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:29:29.104" starttime="20201027 02:29:29.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:29:29.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:29:29.105" starttime="20201027 02:29:29.104"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:29.105" starttime="20201027 02:29:23.011"></status>
</kw>
<msg timestamp="20201027 02:29:29.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:29:29.106" starttime="20201027 02:29:23.011"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:29.106" starttime="20201027 02:29:23.010"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201027 02:29:29.109" level="INFO">${postfix} = 84515</msg>
<status status="PASS" endtime="20201027 02:29:29.109" starttime="20201027 02:29:29.108"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201027 02:29:29.109" level="INFO">${tmpfile} = /tmp/tempkey-84515</msg>
<status status="PASS" endtime="20201027 02:29:29.109" starttime="20201027 02:29:29.109"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:29:29.115" level="INFO">Running command 'ozone sh key get -f 68087-target/link1/key3 /tmp/tempkey-84515 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:35.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:29:35.253" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:29:35.253" starttime="20201027 02:29:29.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:29:35.254" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:29:35.255" starttime="20201027 02:29:35.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:29:35.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:29:35.255" starttime="20201027 02:29:35.255"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:35.256" starttime="20201027 02:29:29.110"></status>
</kw>
<msg timestamp="20201027 02:29:35.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:29:35.256" starttime="20201027 02:29:29.110"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:35.256" starttime="20201027 02:29:29.109"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201027 02:29:35.260" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-84515 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:35.263" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201027 02:29:35.263" starttime="20201027 02:29:35.256"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:29:35.270" level="INFO">Running command 'rm -f /tmp/tempkey-84515 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:35.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:29:35.271" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:29:35.271" starttime="20201027 02:29:35.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:29:35.272" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:29:35.272" starttime="20201027 02:29:35.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:29:35.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:29:35.273" starttime="20201027 02:29:35.273"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:35.273" starttime="20201027 02:29:35.265"></status>
</kw>
<msg timestamp="20201027 02:29:35.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:29:35.274" starttime="20201027 02:29:35.264"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:35.274" starttime="20201027 02:29:35.263"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 02:29:35.274" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201027 02:29:35.274" starttime="20201027 02:29:35.274"></status>
</kw>
<msg timestamp="20201027 02:29:35.275" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201027 02:29:35.275" starttime="20201027 02:29:29.107"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201027 02:29:35.275" starttime="20201027 02:29:35.275"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:35.276" starttime="20201027 02:29:29.106"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 02:29:35.276" critical="yes" starttime="20201027 02:29:19.140"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:29:35.284" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:35.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:29:35.286" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 02:29:35.287" starttime="20201027 02:29:35.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:29:35.288" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 02:29:35.288" starttime="20201027 02:29:35.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:29:35.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:29:35.290" starttime="20201027 02:29:35.288"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:35.290" starttime="20201027 02:29:35.280"></status>
</kw>
<msg timestamp="20201027 02:29:35.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:29:35.290" starttime="20201027 02:29:35.280"></status>
</kw>
<msg timestamp="20201027 02:29:35.291" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 02:29:35.291" starttime="20201027 02:29:35.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 02:29:35.291" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 02:29:35.291" starttime="20201027 02:29:35.291"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:29:35.296" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:35.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:29:35.333" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 02:29:35.333" starttime="20201027 02:29:35.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:29:35.334" level="INFO"></msg>
<status status="PASS" endtime="20201027 02:29:35.334" starttime="20201027 02:29:35.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:29:35.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:29:35.335" starttime="20201027 02:29:35.335"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:35.336" starttime="20201027 02:29:35.293"></status>
</kw>
<msg timestamp="20201027 02:29:35.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:29:35.336" starttime="20201027 02:29:35.293"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:35.336" starttime="20201027 02:29:35.292"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:35.336" starttime="20201027 02:29:35.292"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:35.336" starttime="20201027 02:29:35.279"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:35.336" starttime="20201027 02:29:35.278"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:29:35.343" level="INFO">Running command 'ozone sh bucket delete 68087-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:39.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:29:39.791" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:29:39.791" starttime="20201027 02:29:35.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:29:39.792" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 02:29:39.792" starttime="20201027 02:29:39.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:29:39.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:29:39.793" starttime="20201027 02:29:39.793"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:39.793" starttime="20201027 02:29:35.338"></status>
</kw>
<msg timestamp="20201027 02:29:39.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:29:39.794" starttime="20201027 02:29:35.337"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:39.794" starttime="20201027 02:29:35.337"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:29:39.799" level="INFO">Running command 'ozone sh bucket list 68087-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:43.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:29:43.972" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:29:43.972" starttime="20201027 02:29:39.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:29:43.973" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "68087-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T02:28:42.003Z",
  "modificationTime" : "2020-10-27T02:28:42.003Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "68087-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T02:26:55.886Z",
  "modificationTime" : "2020-10-27T02:26:55.886Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68087-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "68087-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T02:26:31.667Z",
  "modificationTime" : "2020-10-27T02:26:51.718Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68087-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "68087-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T02:28:33.218Z",
  "modificationTime" : "2020-10-27T02:28:33.218Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68087-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "68087-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T02:29:22.720Z",
  "modificationTime" : "2020-10-27T02:29:22.720Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68087-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "68087-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T02:29:15.332Z",
  "modificationTime" : "2020-10-27T02:29:15.332Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68087-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "68087-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T02:29:07.271Z",
  "modificationTime" : "2020-10-27T02:29:07.271Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68087-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "68087-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T02:29:11.334Z",
  "modificationTime" : "2020-10-27T02:29:11.334Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68087-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "68087-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T02:26:23.751Z",
  "modificationTime" : "2020-10-27T02:26:47.777Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68087-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "68087-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T02:26:27.762Z",
  "modificationTime" : "2020-10-27T02:26:27.762Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68087-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 02:29:43.973" starttime="20201027 02:29:43.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:29:43.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:29:43.974" starttime="20201027 02:29:43.974"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:43.975" starttime="20201027 02:29:39.795"></status>
</kw>
<msg timestamp="20201027 02:29:43.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:29:43.975" starttime="20201027 02:29:39.795"></status>
</kw>
<msg timestamp="20201027 02:29:43.975" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 02:29:43.975" starttime="20201027 02:29:39.794"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201027 02:29:43.976" starttime="20201027 02:29:43.975"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 02:29:43.981" level="INFO">Running command 'ozone sh key list 68087-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 02:29:48.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 02:29:48.375" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201027 02:29:48.375" starttime="20201027 02:29:43.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 02:29:48.376" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201027 02:29:48.377" starttime="20201027 02:29:48.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 02:29:48.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 02:29:48.377" starttime="20201027 02:29:48.377"></status>
</kw>
<status status="PASS" endtime="20201027 02:29:48.378" starttime="20201027 02:29:43.977"></status>
</kw>
<msg timestamp="20201027 02:29:48.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 02:29:48.378" starttime="20201027 02:29:43.977"></status>
</kw>
<msg timestamp="20201027 02:29:48.378" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201027 02:29:48.378" starttime="20201027 02:29:43.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201027 02:29:48.379" starttime="20201027 02:29:48.378"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 02:29:48.379" critical="yes" starttime="20201027 02:29:35.277"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201027 02:29:48.382" starttime="20201027 02:25:57.570"></status>
</suite>
<status status="PASS" elapsedtime="265053" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
