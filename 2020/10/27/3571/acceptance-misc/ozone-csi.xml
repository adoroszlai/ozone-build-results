<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201027 01:36:50.903" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/csi.robot" id="s1" name="ozone-csi">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
</arguments>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:36:35.998" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:36:36.000" level="INFO">${rc} = 1</msg>
<msg timestamp="20201027 01:36:36.000" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:36:36.000" starttime="20201027 01:36:35.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:36:36.001" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:36:36.001" starttime="20201027 01:36:36.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:36:36.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201027 01:36:36.002" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201027 01:36:36.002" starttime="20201027 01:36:36.001"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:36.002" starttime="20201027 01:36:35.993"></status>
</kw>
<msg timestamp="20201027 01:36:36.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201027 01:36:36.002" starttime="20201027 01:36:35.993"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:36.003" starttime="20201027 01:36:35.992"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:36.003" starttime="20201027 01:36:35.992"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:36:37.010" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:36:37.011" level="INFO">${rc} = 1</msg>
<msg timestamp="20201027 01:36:37.011" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:36:37.011" starttime="20201027 01:36:37.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:36:37.016" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:36:37.017" starttime="20201027 01:36:37.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:36:37.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201027 01:36:37.018" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201027 01:36:37.018" starttime="20201027 01:36:37.017"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:37.018" starttime="20201027 01:36:37.005"></status>
</kw>
<msg timestamp="20201027 01:36:37.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201027 01:36:37.018" starttime="20201027 01:36:37.005"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:37.018" starttime="20201027 01:36:37.004"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:37.018" starttime="20201027 01:36:37.003"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:36:38.024" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:36:38.026" level="INFO">${rc} = 1</msg>
<msg timestamp="20201027 01:36:38.026" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:36:38.026" starttime="20201027 01:36:38.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:36:38.027" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:36:38.027" starttime="20201027 01:36:38.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:36:38.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201027 01:36:38.028" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201027 01:36:38.028" starttime="20201027 01:36:38.027"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:38.029" starttime="20201027 01:36:38.020"></status>
</kw>
<msg timestamp="20201027 01:36:38.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201027 01:36:38.029" starttime="20201027 01:36:38.020"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:38.029" starttime="20201027 01:36:38.020"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:38.029" starttime="20201027 01:36:38.019"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:36:39.036" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:36:39.037" level="INFO">${rc} = 1</msg>
<msg timestamp="20201027 01:36:39.037" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:36:39.037" starttime="20201027 01:36:39.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:36:39.038" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:36:39.039" starttime="20201027 01:36:39.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:36:39.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201027 01:36:39.040" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201027 01:36:39.040" starttime="20201027 01:36:39.039"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:39.040" starttime="20201027 01:36:39.032"></status>
</kw>
<msg timestamp="20201027 01:36:39.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201027 01:36:39.040" starttime="20201027 01:36:39.032"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:39.040" starttime="20201027 01:36:39.031"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:39.041" starttime="20201027 01:36:39.030"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:36:40.048" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:36:40.050" level="INFO">${rc} = 1</msg>
<msg timestamp="20201027 01:36:40.050" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:36:40.050" starttime="20201027 01:36:40.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:36:40.051" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:36:40.051" starttime="20201027 01:36:40.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:36:40.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201027 01:36:40.052" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201027 01:36:40.052" starttime="20201027 01:36:40.051"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:40.052" starttime="20201027 01:36:40.043"></status>
</kw>
<msg timestamp="20201027 01:36:40.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201027 01:36:40.053" starttime="20201027 01:36:40.043"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:40.053" starttime="20201027 01:36:40.042"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:40.053" starttime="20201027 01:36:40.041"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:36:41.059" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:36:41.060" level="INFO">${rc} = 1</msg>
<msg timestamp="20201027 01:36:41.061" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:36:41.061" starttime="20201027 01:36:41.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:36:41.062" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:36:41.063" starttime="20201027 01:36:41.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:36:41.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201027 01:36:41.064" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201027 01:36:41.064" starttime="20201027 01:36:41.063"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:41.065" starttime="20201027 01:36:41.055"></status>
</kw>
<msg timestamp="20201027 01:36:41.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201027 01:36:41.065" starttime="20201027 01:36:41.055"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:41.065" starttime="20201027 01:36:41.054"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:41.066" starttime="20201027 01:36:41.053"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:36:42.072" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:36:42.077" level="INFO">${rc} = 1</msg>
<msg timestamp="20201027 01:36:42.077" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:36:42.077" starttime="20201027 01:36:42.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:36:42.078" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:36:42.079" starttime="20201027 01:36:42.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:36:42.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201027 01:36:42.079" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201027 01:36:42.082" starttime="20201027 01:36:42.079"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:42.082" starttime="20201027 01:36:42.068"></status>
</kw>
<msg timestamp="20201027 01:36:42.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201027 01:36:42.082" starttime="20201027 01:36:42.068"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:42.082" starttime="20201027 01:36:42.067"></status>
</kw>
<status status="FAIL" endtime="20201027 01:36:42.083" starttime="20201027 01:36:42.066"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:36:43.090" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:36:43.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:36:43.093" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 01:36:43.093" starttime="20201027 01:36:43.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:36:43.094" level="INFO"></msg>
<status status="PASS" endtime="20201027 01:36:43.094" starttime="20201027 01:36:43.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:36:43.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:36:43.095" starttime="20201027 01:36:43.094"></status>
</kw>
<status status="PASS" endtime="20201027 01:36:43.095" starttime="20201027 01:36:43.085"></status>
</kw>
<msg timestamp="20201027 01:36:43.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:36:43.095" starttime="20201027 01:36:43.085"></status>
</kw>
<status status="PASS" endtime="20201027 01:36:43.096" starttime="20201027 01:36:43.084"></status>
</kw>
<status status="PASS" endtime="20201027 01:36:43.096" starttime="20201027 01:36:43.083"></status>
</kw>
<status status="PASS" endtime="20201027 01:36:43.096" starttime="20201027 01:36:35.991"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201027 01:36:43.096" critical="yes" starttime="20201027 01:36:35.990"></status>
</test>
<test id="s1-t2" name="Test CSI identitiy service">
<kw name="Execute" library="os">
<arguments>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 01:36:43.103" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 01:36:43.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 01:36:43.582" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201027 01:36:43.582" starttime="20201027 01:36:43.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 01:36:43.584" level="INFO">"org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201027 01:36:43.584" starttime="20201027 01:36:43.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 01:36:43.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 01:36:43.585" starttime="20201027 01:36:43.584"></status>
</kw>
<status status="PASS" endtime="20201027 01:36:43.586" starttime="20201027 01:36:43.099"></status>
</kw>
<msg timestamp="20201027 01:36:43.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 01:36:43.586" starttime="20201027 01:36:43.098"></status>
</kw>
<msg timestamp="20201027 01:36:43.586" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201027 01:36:43.586" starttime="20201027 01:36:43.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
</arguments>
<status status="PASS" endtime="20201027 01:36:43.587" starttime="20201027 01:36:43.586"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201027 01:36:43.587" critical="yes" starttime="20201027 01:36:43.097"></status>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" endtime="20201027 01:36:43.589" starttime="20201027 01:36:35.939"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-csi" pass="2">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
