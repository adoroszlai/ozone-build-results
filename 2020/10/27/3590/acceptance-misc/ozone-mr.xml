<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201027 17:47:22.496" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:33:35.920" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:33:38.357" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 17:33:38.357" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 17:33:38.357" starttime="20201027 17:33:35.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:33:38.358" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 17:33:38.359" starttime="20201027 17:33:38.358"></status>
</kw>
<msg timestamp="20201027 17:33:38.359" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 17:33:38.359" starttime="20201027 17:33:35.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:33:38.366" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:33:40.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:33:40.670" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:33:40.670" starttime="20201027 17:33:38.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:33:40.671" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:33:40.671" starttime="20201027 17:33:40.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:33:40.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:33:40.672" starttime="20201027 17:33:40.671"></status>
</kw>
<status status="PASS" endtime="20201027 17:33:40.672" starttime="20201027 17:33:38.361"></status>
</kw>
<msg timestamp="20201027 17:33:40.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:33:40.672" starttime="20201027 17:33:38.361"></status>
</kw>
<msg timestamp="20201027 17:33:40.673" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201027 17:33:40.673" starttime="20201027 17:33:38.360"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201027 17:33:40.673" starttime="20201027 17:33:40.673"></status>
</kw>
<status status="PASS" endtime="20201027 17:33:40.673" starttime="20201027 17:33:38.360"></status>
</kw>
<status status="PASS" endtime="20201027 17:33:40.673" starttime="20201027 17:33:38.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:33:40.679" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:33:42.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:33:42.826" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:33:42.826" starttime="20201027 17:33:40.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:33:42.827" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:33:42.827" starttime="20201027 17:33:42.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:33:42.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:33:42.828" starttime="20201027 17:33:42.827"></status>
</kw>
<status status="PASS" endtime="20201027 17:33:42.828" starttime="20201027 17:33:40.675"></status>
</kw>
<msg timestamp="20201027 17:33:42.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:33:42.829" starttime="20201027 17:33:40.675"></status>
</kw>
<status status="PASS" endtime="20201027 17:33:42.829" starttime="20201027 17:33:40.674"></status>
</kw>
<status status="PASS" endtime="20201027 17:33:42.829" starttime="20201027 17:33:40.674"></status>
</kw>
<status status="PASS" endtime="20201027 17:33:42.829" starttime="20201027 17:33:40.673"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201027 17:33:42.830" starttime="20201027 17:33:42.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:33:42.835" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:33:45.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:33:45.069" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T17:33:42.705Z",
  "modificat...</msg>
<status status="PASS" endtime="20201027 17:33:45.069" starttime="20201027 17:33:42.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:33:45.071" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T17:33:42.705Z",
  "modificationTime" : "2020-10-27T17:33:42.705Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 17:33:45.071" starttime="20201027 17:33:45.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:33:45.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:33:45.071" starttime="20201027 17:33:45.071"></status>
</kw>
<status status="PASS" endtime="20201027 17:33:45.072" starttime="20201027 17:33:42.831"></status>
</kw>
<msg timestamp="20201027 17:33:45.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:33:45.072" starttime="20201027 17:33:42.831"></status>
</kw>
<msg timestamp="20201027 17:33:45.072" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T17:33:42.705Z",
  "modificat...</msg>
<status status="PASS" endtime="20201027 17:33:45.072" starttime="20201027 17:33:42.830"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201027 17:33:45.073" starttime="20201027 17:33:45.072"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:33:45.077" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:33:45.077" starttime="20201027 17:33:45.077"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:33:45.078" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:33:45.078" starttime="20201027 17:33:45.077"></status>
</kw>
<status status="PASS" endtime="20201027 17:33:45.078" starttime="20201027 17:33:45.076"></status>
</kw>
<msg timestamp="20201027 17:33:45.079" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:33:45.079" starttime="20201027 17:33:45.076"></status>
</kw>
<status status="PASS" endtime="20201027 17:33:45.079" starttime="20201027 17:33:45.075"></status>
</kw>
<msg timestamp="20201027 17:33:45.079" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 17:33:45.079" starttime="20201027 17:33:45.074"></status>
</kw>
<msg timestamp="20201027 17:33:45.079" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 17:33:45.079" starttime="20201027 17:33:45.073"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:33:45.084" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:33:47.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:33:47.315" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:33:47.315" starttime="20201027 17:33:45.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:33:47.316" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:33:47.317" starttime="20201027 17:33:47.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:33:47.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:33:47.317" starttime="20201027 17:33:47.317"></status>
</kw>
<status status="PASS" endtime="20201027 17:33:47.318" starttime="20201027 17:33:45.080"></status>
</kw>
<msg timestamp="20201027 17:33:47.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:33:47.318" starttime="20201027 17:33:45.080"></status>
</kw>
<status status="PASS" endtime="20201027 17:33:47.318" starttime="20201027 17:33:45.080"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:33:47.322" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:33:53.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:33:53.106" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:33:53.106" starttime="20201027 17:33:47.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:33:53.107" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:33:53.107" starttime="20201027 17:33:53.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:33:53.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:33:53.108" starttime="20201027 17:33:53.108"></status>
</kw>
<status status="PASS" endtime="20201027 17:33:53.108" starttime="20201027 17:33:47.319"></status>
</kw>
<msg timestamp="20201027 17:33:53.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:33:53.109" starttime="20201027 17:33:47.319"></status>
</kw>
<status status="PASS" endtime="20201027 17:33:53.109" starttime="20201027 17:33:47.318"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:33:53.113" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:33:56.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:33:56.915" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:33:56.915" starttime="20201027 17:33:53.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:33:56.916" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:33:56.916" starttime="20201027 17:33:56.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:33:56.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:33:56.917" starttime="20201027 17:33:56.916"></status>
</kw>
<status status="PASS" endtime="20201027 17:33:56.917" starttime="20201027 17:33:53.110"></status>
</kw>
<msg timestamp="20201027 17:33:56.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:33:56.917" starttime="20201027 17:33:53.110"></status>
</kw>
<status status="PASS" endtime="20201027 17:33:56.918" starttime="20201027 17:33:53.109"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:33:56.922" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:34:00.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:34:00.963" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:34:00.963" starttime="20201027 17:33:56.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:34:00.965" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:34:00.965" starttime="20201027 17:34:00.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:34:00.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:34:00.966" starttime="20201027 17:34:00.965"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:00.966" starttime="20201027 17:33:56.919"></status>
</kw>
<msg timestamp="20201027 17:34:00.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:34:00.966" starttime="20201027 17:33:56.919"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:00.967" starttime="20201027 17:33:56.918"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 17:34:00.967" critical="yes" starttime="20201027 17:33:35.914"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:34:00.973" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:34:00.973" starttime="20201027 17:34:00.972"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:34:00.974" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:34:00.974" starttime="20201027 17:34:00.973"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:00.974" starttime="20201027 17:34:00.972"></status>
</kw>
<msg timestamp="20201027 17:34:00.974" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:34:00.974" starttime="20201027 17:34:00.971"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:00.975" starttime="20201027 17:34:00.970"></status>
</kw>
<msg timestamp="20201027 17:34:00.975" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 17:34:00.975" starttime="20201027 17:34:00.970"></status>
</kw>
<msg timestamp="20201027 17:34:00.975" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 17:34:00.975" starttime="20201027 17:34:00.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:34:00.981" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:34:03.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:34:03.143" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:34:03.143" starttime="20201027 17:34:00.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:34:03.144" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:34:03.147" starttime="20201027 17:34:03.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:34:03.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:34:03.148" starttime="20201027 17:34:03.147"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:03.148" starttime="20201027 17:34:00.976"></status>
</kw>
<msg timestamp="20201027 17:34:03.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:34:03.148" starttime="20201027 17:34:00.976"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:03.149" starttime="20201027 17:34:00.975"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:34:03.153" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:34:05.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:34:05.385" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:34:05.385" starttime="20201027 17:34:03.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:34:05.386" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:34:05.387" starttime="20201027 17:34:05.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:34:05.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:34:05.387" starttime="20201027 17:34:05.387"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:05.388" starttime="20201027 17:34:03.150"></status>
</kw>
<msg timestamp="20201027 17:34:05.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:34:05.388" starttime="20201027 17:34:03.150"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:05.388" starttime="20201027 17:34:03.149"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 17:34:05.389" critical="yes" starttime="20201027 17:34:00.968"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201027 17:34:05.390" starttime="20201027 17:33:35.849"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 17:35:38.151" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 17:35:38.151" starttime="20201027 17:35:38.151"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:35:38.152" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 17:35:38.152" starttime="20201027 17:35:38.152"></status>
</kw>
<status status="PASS" endtime="20201027 17:35:38.153" starttime="20201027 17:35:38.151"></status>
</kw>
<msg timestamp="20201027 17:35:38.153" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 17:35:38.153" starttime="20201027 17:35:38.150"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 17:35:38.154" starttime="20201027 17:35:38.153"></status>
</kw>
<msg timestamp="20201027 17:35:38.154" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 17:35:38.154" starttime="20201027 17:35:38.153"></status>
</kw>
<status status="PASS" endtime="20201027 17:35:38.154" starttime="20201027 17:35:38.150"></status>
</kw>
<msg timestamp="20201027 17:35:38.154" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 17:35:38.154" starttime="20201027 17:35:38.149"></status>
</kw>
<msg timestamp="20201027 17:35:38.154" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 17:35:38.154" starttime="20201027 17:35:38.148"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 17:35:38.155" level="INFO">${random} = 27632</msg>
<status status="PASS" endtime="20201027 17:35:38.155" starttime="20201027 17:35:38.155"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:35:38.160" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-27632 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:35:41.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:35:41.772" level="INFO">${output} = 2020-10-27 17:35:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:35:40 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 ...</msg>
<status status="PASS" endtime="20201027 17:35:41.772" starttime="20201027 17:35:38.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:35:41.773" level="INFO">2020-10-27 17:35:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:35:40 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 17:35:40 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-27 17:35:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 17:35:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BB79EADB343B-&gt;0b42a5b1-a70d-4172-a5bc-d2c534373f68
2020-10-27 17:35:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201027 17:35:41.773" starttime="20201027 17:35:41.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:35:41.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:35:41.774" starttime="20201027 17:35:41.774"></status>
</kw>
<status status="PASS" endtime="20201027 17:35:41.774" starttime="20201027 17:35:38.156"></status>
</kw>
<msg timestamp="20201027 17:35:41.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:35:41.774" starttime="20201027 17:35:38.156"></status>
</kw>
<msg timestamp="20201027 17:35:41.775" level="INFO">${result} = 2020-10-27 17:35:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:35:40 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 ...</msg>
<status status="PASS" endtime="20201027 17:35:41.775" starttime="20201027 17:35:38.155"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:35:41.779" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:35:43.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:35:43.574" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:33 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 17:34 ofs://om/volume1/bucket1/ozone-15661
-rw-...</msg>
<status status="PASS" endtime="20201027 17:35:43.574" starttime="20201027 17:35:41.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:35:43.575" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:33 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 17:34 ofs://om/volume1/bucket1/ozone-15661
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 17:35 ofs://om/volume1/bucket1/ozone-27632
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:34 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:35 ofs://om/volume1/bucket1/wordcount-83.txt</msg>
<status status="PASS" endtime="20201027 17:35:43.575" starttime="20201027 17:35:43.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:35:43.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:35:43.576" starttime="20201027 17:35:43.575"></status>
</kw>
<status status="PASS" endtime="20201027 17:35:43.576" starttime="20201027 17:35:41.776"></status>
</kw>
<msg timestamp="20201027 17:35:43.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:35:43.576" starttime="20201027 17:35:41.775"></status>
</kw>
<msg timestamp="20201027 17:35:43.577" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:33 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 17:34 ofs://om/volume1/bucket1/ozone-15661
-rw-...</msg>
<status status="PASS" endtime="20201027 17:35:43.577" starttime="20201027 17:35:41.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 17:35:43.577" starttime="20201027 17:35:43.577"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 17:35:43.578" critical="yes" starttime="20201027 17:35:38.147"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 17:35:43.578" starttime="20201027 17:35:38.091"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:34:10.110" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:34:10.110" starttime="20201027 17:34:10.109"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:34:10.110" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:34:10.110" starttime="20201027 17:34:10.110"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:10.110" starttime="20201027 17:34:10.109"></status>
</kw>
<msg timestamp="20201027 17:34:10.111" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:34:10.111" starttime="20201027 17:34:10.109"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:10.111" starttime="20201027 17:34:10.108"></status>
</kw>
<msg timestamp="20201027 17:34:10.111" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 17:34:10.111" starttime="20201027 17:34:10.107"></status>
</kw>
<msg timestamp="20201027 17:34:10.111" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 17:34:10.111" starttime="20201027 17:34:10.106"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 17:34:10.112" level="INFO">${random} = 15661</msg>
<status status="PASS" endtime="20201027 17:34:10.112" starttime="20201027 17:34:10.111"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:34:10.116" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-15661 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:34:13.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:34:13.600" level="INFO">${output} = 2020-10-27 17:34:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:34:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 ...</msg>
<status status="PASS" endtime="20201027 17:34:13.600" starttime="20201027 17:34:10.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:34:13.601" level="INFO">2020-10-27 17:34:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:34:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 17:34:12 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-27 17:34:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 17:34:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8D8C8698DE92-&gt;0b42a5b1-a70d-4172-a5bc-d2c534373f68
2020-10-27 17:34:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201027 17:34:13.601" starttime="20201027 17:34:13.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:34:13.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:34:13.602" starttime="20201027 17:34:13.601"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:13.602" starttime="20201027 17:34:10.112"></status>
</kw>
<msg timestamp="20201027 17:34:13.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:34:13.602" starttime="20201027 17:34:10.112"></status>
</kw>
<msg timestamp="20201027 17:34:13.602" level="INFO">${result} = 2020-10-27 17:34:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:34:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 ...</msg>
<status status="PASS" endtime="20201027 17:34:13.602" starttime="20201027 17:34:10.112"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:34:13.606" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:34:15.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:34:15.528" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:33 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 17:34 o3fs://bucket1.volume1.om/ozone-15661
dr...</msg>
<status status="PASS" endtime="20201027 17:34:15.529" starttime="20201027 17:34:13.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:34:15.530" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:33 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 17:34 o3fs://bucket1.volume1.om/ozone-15661
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:34 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 17:34:15.531" starttime="20201027 17:34:15.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:34:15.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:34:15.532" starttime="20201027 17:34:15.531"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:15.532" starttime="20201027 17:34:13.603"></status>
</kw>
<msg timestamp="20201027 17:34:15.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:34:15.535" starttime="20201027 17:34:13.603"></status>
</kw>
<msg timestamp="20201027 17:34:15.536" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:33 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-27 17:34 o3fs://bucket1.volume1.om/ozone-15661
dr...</msg>
<status status="PASS" endtime="20201027 17:34:15.536" starttime="20201027 17:34:13.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 17:34:15.538" starttime="20201027 17:34:15.537"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 17:34:15.538" critical="yes" starttime="20201027 17:34:10.105"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 17:34:15.540" starttime="20201027 17:34:10.050"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:35:48.189" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:35:48.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:35:48.194" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 17:35:48.194" starttime="20201027 17:35:48.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:35:48.195" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 17:35:48.195" starttime="20201027 17:35:48.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:35:48.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:35:48.196" starttime="20201027 17:35:48.195"></status>
</kw>
<status status="PASS" endtime="20201027 17:35:48.196" starttime="20201027 17:35:48.185"></status>
</kw>
<msg timestamp="20201027 17:35:48.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:35:48.196" starttime="20201027 17:35:48.185"></status>
</kw>
<msg timestamp="20201027 17:35:48.196" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 17:35:48.197" starttime="20201027 17:35:48.184"></status>
</kw>
<msg timestamp="20201027 17:35:48.197" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 17:35:48.197" starttime="20201027 17:35:48.183"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 17:35:48.201" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 17:35:48.201" starttime="20201027 17:35:48.200"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:35:48.202" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 17:35:48.202" starttime="20201027 17:35:48.201"></status>
</kw>
<status status="PASS" endtime="20201027 17:35:48.202" starttime="20201027 17:35:48.200"></status>
</kw>
<msg timestamp="20201027 17:35:48.202" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 17:35:48.202" starttime="20201027 17:35:48.199"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 17:35:48.203" starttime="20201027 17:35:48.202"></status>
</kw>
<msg timestamp="20201027 17:35:48.203" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 17:35:48.203" starttime="20201027 17:35:48.202"></status>
</kw>
<status status="PASS" endtime="20201027 17:35:48.203" starttime="20201027 17:35:48.198"></status>
</kw>
<msg timestamp="20201027 17:35:48.203" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 17:35:48.203" starttime="20201027 17:35:48.198"></status>
</kw>
<msg timestamp="20201027 17:35:48.204" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 17:35:48.204" starttime="20201027 17:35:48.197"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:35:48.207" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:36:26.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:36:26.737" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 17:35:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:35:50 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201027 17:36:26.737" starttime="20201027 17:35:48.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:36:26.738" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 17:35:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:35:50 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 17:35:50 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-27 17:35:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 17:35:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3DF509975A08-&gt;0b42a5b1-a70d-4172-a5bc-d2c534373f68
2020-10-27 17:35:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 17:35:53 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-10-27 17:35:54 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 17:35:54 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-27 17:35:54 INFO  JobSubmitter:198 - number of splits:3
2020-10-27 17:35:54 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603819980956_0003
2020-10-27 17:35:54 INFO  YarnClientImpl:273 - Submitted application application_1603819980956_0003
2020-10-27 17:35:54 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603819980956_0003/
2020-10-27 17:35:54 INFO  Job:1339 - Running job: job_1603819980956_0003
2020-10-27 17:36:01 INFO  Job:1360 - Job job_1603819980956_0003 running in uber mode : false
2020-10-27 17:36:01 INFO  Job:1367 -  map 0% reduce 0%
2020-10-27 17:36:07 INFO  Job:1367 -  map 33% reduce 0%
2020-10-27 17:36:12 INFO  Job:1367 -  map 67% reduce 0%
2020-10-27 17:36:18 INFO  Job:1367 -  map 100% reduce 0%
2020-10-27 17:36:23 INFO  Job:1367 -  map 100% reduce 100%
2020-10-27 17:36:26 INFO  Job:1378 - Job job_1603819980956_0003 completed successfully
2020-10-27 17:36:26 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615237
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39436
		Total time spent by all reduces in occupied slots (ms)=14732
		Total time spent by all map tasks (ms)=9859
		Total time spent by all reduce tasks (ms)=3683
		Total vcore-milliseconds taken by all map tasks=9859
		Total vcore-milliseconds taken by all reduce tasks=3683
		Total megabyte-milliseconds taken by all map tasks=40382464
		Total megabyte-milliseconds taken by all reduce tasks=15085568
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=555
		CPU time spent (ms)=6730
		Physical memory (bytes) snapshot=1144274944
		Virtual memory (bytes) snapshot=16069304320
		Total committed heap usage (bytes)=1057488896
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.386 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201027 17:36:26.738" starttime="20201027 17:36:26.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:36:26.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:36:26.739" starttime="20201027 17:36:26.738"></status>
</kw>
<status status="PASS" endtime="20201027 17:36:26.739" starttime="20201027 17:35:48.205"></status>
</kw>
<msg timestamp="20201027 17:36:26.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:36:26.739" starttime="20201027 17:35:48.204"></status>
</kw>
<msg timestamp="20201027 17:36:26.740" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 17:35:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:35:50 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201027 17:36:26.740" starttime="20201027 17:35:48.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 17:36:26.741" starttime="20201027 17:36:26.740"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 17:36:26.741" critical="yes" starttime="20201027 17:35:48.182"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:36:26.746" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:36:26.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:36:26.752" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 17:36:26.752" starttime="20201027 17:36:26.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:36:26.753" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 17:36:26.753" starttime="20201027 17:36:26.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:36:26.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:36:26.753" starttime="20201027 17:36:26.753"></status>
</kw>
<status status="PASS" endtime="20201027 17:36:26.754" starttime="20201027 17:36:26.743"></status>
</kw>
<msg timestamp="20201027 17:36:26.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:36:26.754" starttime="20201027 17:36:26.743"></status>
</kw>
<msg timestamp="20201027 17:36:26.754" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 17:36:26.754" starttime="20201027 17:36:26.742"></status>
</kw>
<msg timestamp="20201027 17:36:26.754" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 17:36:26.754" starttime="20201027 17:36:26.742"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 17:36:26.755" level="INFO">${random} = 08</msg>
<status status="PASS" endtime="20201027 17:36:26.755" starttime="20201027 17:36:26.754"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 17:36:26.758" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 17:36:26.758" starttime="20201027 17:36:26.758"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:36:26.759" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 17:36:26.759" starttime="20201027 17:36:26.758"></status>
</kw>
<status status="PASS" endtime="20201027 17:36:26.759" starttime="20201027 17:36:26.757"></status>
</kw>
<msg timestamp="20201027 17:36:26.759" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 17:36:26.759" starttime="20201027 17:36:26.757"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 17:36:26.760" starttime="20201027 17:36:26.760"></status>
</kw>
<msg timestamp="20201027 17:36:26.760" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 17:36:26.760" starttime="20201027 17:36:26.759"></status>
</kw>
<status status="PASS" endtime="20201027 17:36:26.761" starttime="20201027 17:36:26.756"></status>
</kw>
<msg timestamp="20201027 17:36:26.761" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 17:36:26.761" starttime="20201027 17:36:26.756"></status>
</kw>
<msg timestamp="20201027 17:36:26.761" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 17:36:26.761" starttime="20201027 17:36:26.755"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 17:36:26.765" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 17:36:26.765" starttime="20201027 17:36:26.764"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:36:26.765" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 17:36:26.765" starttime="20201027 17:36:26.765"></status>
</kw>
<status status="PASS" endtime="20201027 17:36:26.766" starttime="20201027 17:36:26.764"></status>
</kw>
<msg timestamp="20201027 17:36:26.766" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 17:36:26.766" starttime="20201027 17:36:26.763"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:36:26.767" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201027 17:36:26.767" starttime="20201027 17:36:26.767"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:36:26.768" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201027 17:36:26.768" starttime="20201027 17:36:26.767"></status>
</kw>
<status status="PASS" endtime="20201027 17:36:26.768" starttime="20201027 17:36:26.766"></status>
</kw>
<msg timestamp="20201027 17:36:26.768" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201027 17:36:26.768" starttime="20201027 17:36:26.766"></status>
</kw>
<status status="PASS" endtime="20201027 17:36:26.769" starttime="20201027 17:36:26.763"></status>
</kw>
<msg timestamp="20201027 17:36:26.769" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 17:36:26.769" starttime="20201027 17:36:26.762"></status>
</kw>
<msg timestamp="20201027 17:36:26.769" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 17:36:26.769" starttime="20201027 17:36:26.761"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 17:36:26.772" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 17:36:26.772" starttime="20201027 17:36:26.772"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:36:26.773" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 17:36:26.773" starttime="20201027 17:36:26.772"></status>
</kw>
<status status="PASS" endtime="20201027 17:36:26.773" starttime="20201027 17:36:26.771"></status>
</kw>
<msg timestamp="20201027 17:36:26.773" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 17:36:26.773" starttime="20201027 17:36:26.771"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:36:26.774" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201027 17:36:26.774" starttime="20201027 17:36:26.774"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:36:26.775" level="INFO">${result} = /wordcount-08.txt</msg>
<status status="PASS" endtime="20201027 17:36:26.775" starttime="20201027 17:36:26.775"></status>
</kw>
<status status="PASS" endtime="20201027 17:36:26.775" starttime="20201027 17:36:26.774"></status>
</kw>
<msg timestamp="20201027 17:36:26.775" level="INFO">${path_with_leading} = /wordcount-08.txt</msg>
<status status="PASS" endtime="20201027 17:36:26.775" starttime="20201027 17:36:26.773"></status>
</kw>
<status status="PASS" endtime="20201027 17:36:26.775" starttime="20201027 17:36:26.770"></status>
</kw>
<msg timestamp="20201027 17:36:26.776" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-08.txt</msg>
<status status="PASS" endtime="20201027 17:36:26.776" starttime="20201027 17:36:26.770"></status>
</kw>
<msg timestamp="20201027 17:36:26.776" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-08.txt</msg>
<status status="PASS" endtime="20201027 17:36:26.776" starttime="20201027 17:36:26.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:36:26.780" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-08.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:37:02.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:37:02.055" level="INFO">${output} = 2020-10-27 17:36:28 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-10-27 17:36:28 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201027 17:37:02.055" starttime="20201027 17:36:26.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:37:02.056" level="INFO">2020-10-27 17:36:28 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-10-27 17:36:28 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 17:36:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:36:29 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 17:36:29 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-27 17:36:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 17:36:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A80596017A52-&gt;0b42a5b1-a70d-4172-a5bc-d2c534373f68
2020-10-27 17:36:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 17:36:30 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-27 17:36:32 INFO  JobSubmitter:198 - number of splits:3
2020-10-27 17:36:32 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603819980956_0004
2020-10-27 17:36:33 INFO  YarnClientImpl:273 - Submitted application application_1603819980956_0004
2020-10-27 17:36:33 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603819980956_0004/
2020-10-27 17:36:33 INFO  Job:1339 - Running job: job_1603819980956_0004
2020-10-27 17:36:40 INFO  Job:1360 - Job job_1603819980956_0004 running in uber mode : false
2020-10-27 17:36:40 INFO  Job:1367 -  map 0% reduce 0%
2020-10-27 17:36:46 INFO  Job:1367 -  map 33% reduce 0%
2020-10-27 17:36:51 INFO  Job:1367 -  map 67% reduce 0%
2020-10-27 17:36:56 INFO  Job:1367 -  map 100% reduce 0%
2020-10-27 17:37:01 INFO  Job:1367 -  map 100% reduce 100%
2020-10-27 17:37:01 INFO  Job:1378 - Job job_1603819980956_0004 completed successfully
2020-10-27 17:37:01 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40052
		Total time spent by all reduces in occupied slots (ms)=14944
		Total time spent by all map tasks (ms)=10013
		Total time spent by all reduce tasks (ms)=3736
		Total vcore-milliseconds taken by all map tasks=10013
		Total vcore-milliseconds taken by all reduce tasks=3736
		Total megabyte-milliseconds taken by all map tasks=41013248
		Total megabyte-milliseconds taken by all reduce tasks=15302656
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=588
		CPU time spent (ms)=7720
		Physical memory (bytes) snapshot=1148137472
		Virtual memory (bytes) snapshot=16066433024
		Total committed heap usage (bytes)=1056440320
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201027 17:37:02.056" starttime="20201027 17:37:02.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:37:02.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:37:02.057" starttime="20201027 17:37:02.057"></status>
</kw>
<status status="PASS" endtime="20201027 17:37:02.057" starttime="20201027 17:36:26.777"></status>
</kw>
<msg timestamp="20201027 17:37:02.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:37:02.058" starttime="20201027 17:36:26.777"></status>
</kw>
<msg timestamp="20201027 17:37:02.059" level="INFO">${output} = 2020-10-27 17:36:28 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-10-27 17:36:28 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201027 17:37:02.059" starttime="20201027 17:36:26.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 17:37:02.060" starttime="20201027 17:37:02.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 17:37:02.061" starttime="20201027 17:37:02.060"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 17:37:02.061" critical="yes" starttime="20201027 17:36:26.741"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 17:37:02.062" starttime="20201027 17:35:48.127"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:34:20.340" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:34:20.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:34:20.346" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 17:34:20.346" starttime="20201027 17:34:20.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:34:20.347" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 17:34:20.347" starttime="20201027 17:34:20.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:34:20.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:34:20.348" starttime="20201027 17:34:20.347"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:20.348" starttime="20201027 17:34:20.335"></status>
</kw>
<msg timestamp="20201027 17:34:20.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:34:20.349" starttime="20201027 17:34:20.335"></status>
</kw>
<msg timestamp="20201027 17:34:20.349" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 17:34:20.349" starttime="20201027 17:34:20.334"></status>
</kw>
<msg timestamp="20201027 17:34:20.349" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 17:34:20.349" starttime="20201027 17:34:20.334"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:34:20.353" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:34:20.353" starttime="20201027 17:34:20.352"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:34:20.353" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:34:20.353" starttime="20201027 17:34:20.353"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:20.354" starttime="20201027 17:34:20.352"></status>
</kw>
<msg timestamp="20201027 17:34:20.354" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:34:20.354" starttime="20201027 17:34:20.351"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:20.354" starttime="20201027 17:34:20.351"></status>
</kw>
<msg timestamp="20201027 17:34:20.354" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 17:34:20.354" starttime="20201027 17:34:20.350"></status>
</kw>
<msg timestamp="20201027 17:34:20.354" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 17:34:20.354" starttime="20201027 17:34:20.349"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:34:20.358" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:34:58.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:34:58.542" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 17:34:22 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:34:22 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201027 17:34:58.542" starttime="20201027 17:34:20.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:34:58.543" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 17:34:22 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:34:22 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 17:34:22 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-27 17:34:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 17:34:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-32EF07E04B7C-&gt;0b42a5b1-a70d-4172-a5bc-d2c534373f68
2020-10-27 17:34:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 17:34:23 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-10-27 17:34:24 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-27 17:34:24 INFO  JobSubmitter:198 - number of splits:3
2020-10-27 17:34:27 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603819980956_0001
2020-10-27 17:34:27 INFO  YarnClientImpl:273 - Submitted application application_1603819980956_0001
2020-10-27 17:34:27 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603819980956_0001/
2020-10-27 17:34:27 INFO  Job:1339 - Running job: job_1603819980956_0001
2020-10-27 17:34:37 INFO  Job:1360 - Job job_1603819980956_0001 running in uber mode : false
2020-10-27 17:34:37 INFO  Job:1367 -  map 0% reduce 0%
2020-10-27 17:34:42 INFO  Job:1367 -  map 33% reduce 0%
2020-10-27 17:34:47 INFO  Job:1367 -  map 67% reduce 0%
2020-10-27 17:34:52 INFO  Job:1367 -  map 100% reduce 0%
2020-10-27 17:34:57 INFO  Job:1367 -  map 100% reduce 100%
2020-10-27 17:34:57 INFO  Job:1378 - Job job_1603819980956_0001 completed successfully
2020-10-27 17:34:58 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615457
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39788
		Total time spent by all reduces in occupied slots (ms)=15516
		Total time spent by all map tasks (ms)=9947
		Total time spent by all reduce tasks (ms)=3879
		Total vcore-milliseconds taken by all map tasks=9947
		Total vcore-milliseconds taken by all reduce tasks=3879
		Total megabyte-milliseconds taken by all map tasks=40742912
		Total megabyte-milliseconds taken by all reduce tasks=15888384
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=579
		CPU time spent (ms)=7140
		Physical memory (bytes) snapshot=1160519680
		Virtual memory (bytes) snapshot=16092069888
		Total committed heap usage (bytes)=1064304640
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.295 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201027 17:34:58.543" starttime="20201027 17:34:58.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:34:58.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:34:58.544" starttime="20201027 17:34:58.543"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:58.544" starttime="20201027 17:34:20.355"></status>
</kw>
<msg timestamp="20201027 17:34:58.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:34:58.544" starttime="20201027 17:34:20.355"></status>
</kw>
<msg timestamp="20201027 17:34:58.545" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 17:34:22 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:34:22 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201027 17:34:58.545" starttime="20201027 17:34:20.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 17:34:58.545" starttime="20201027 17:34:58.545"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 17:34:58.545" critical="yes" starttime="20201027 17:34:20.333"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:34:58.550" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:34:58.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:34:58.556" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 17:34:58.556" starttime="20201027 17:34:58.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:34:58.557" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 17:34:58.558" starttime="20201027 17:34:58.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:34:58.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:34:58.558" starttime="20201027 17:34:58.558"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:58.559" starttime="20201027 17:34:58.548"></status>
</kw>
<msg timestamp="20201027 17:34:58.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:34:58.559" starttime="20201027 17:34:58.547"></status>
</kw>
<msg timestamp="20201027 17:34:58.559" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 17:34:58.559" starttime="20201027 17:34:58.547"></status>
</kw>
<msg timestamp="20201027 17:34:58.559" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201027 17:34:58.559" starttime="20201027 17:34:58.547"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 17:34:58.560" level="INFO">${random} = 83</msg>
<status status="PASS" endtime="20201027 17:34:58.560" starttime="20201027 17:34:58.559"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:34:58.563" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:34:58.563" starttime="20201027 17:34:58.563"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:34:58.564" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:34:58.564" starttime="20201027 17:34:58.564"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:58.564" starttime="20201027 17:34:58.563"></status>
</kw>
<msg timestamp="20201027 17:34:58.564" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:34:58.564" starttime="20201027 17:34:58.562"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:58.565" starttime="20201027 17:34:58.561"></status>
</kw>
<msg timestamp="20201027 17:34:58.565" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 17:34:58.565" starttime="20201027 17:34:58.561"></status>
</kw>
<msg timestamp="20201027 17:34:58.565" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 17:34:58.565" starttime="20201027 17:34:58.560"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:34:58.568" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:34:58.568" starttime="20201027 17:34:58.568"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:34:58.569" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:34:58.569" starttime="20201027 17:34:58.569"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:58.569" starttime="20201027 17:34:58.567"></status>
</kw>
<msg timestamp="20201027 17:34:58.569" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:34:58.569" starttime="20201027 17:34:58.567"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:58.569" starttime="20201027 17:34:58.566"></status>
</kw>
<msg timestamp="20201027 17:34:58.570" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 17:34:58.570" starttime="20201027 17:34:58.566"></status>
</kw>
<msg timestamp="20201027 17:34:58.570" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 17:34:58.570" starttime="20201027 17:34:58.565"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:34:58.573" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:34:58.573" starttime="20201027 17:34:58.572"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:34:58.573" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:34:58.573" starttime="20201027 17:34:58.573"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:58.574" starttime="20201027 17:34:58.572"></status>
</kw>
<msg timestamp="20201027 17:34:58.574" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:34:58.574" starttime="20201027 17:34:58.571"></status>
</kw>
<status status="PASS" endtime="20201027 17:34:58.574" starttime="20201027 17:34:58.571"></status>
</kw>
<msg timestamp="20201027 17:34:58.574" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-83.txt</msg>
<status status="PASS" endtime="20201027 17:34:58.574" starttime="20201027 17:34:58.570"></status>
</kw>
<msg timestamp="20201027 17:34:58.575" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-83.txt</msg>
<status status="PASS" endtime="20201027 17:34:58.575" starttime="20201027 17:34:58.570"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:34:58.579" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-83.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:35:33.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:35:33.445" level="INFO">${output} = 2020-10-27 17:35:00 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-10-27 17:35:00 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201027 17:35:33.445" starttime="20201027 17:34:58.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:35:33.446" level="INFO">2020-10-27 17:35:00 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-10-27 17:35:00 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 17:35:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:35:00 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-27 17:35:00 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-27 17:35:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 17:35:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C65687A4A184-&gt;0b42a5b1-a70d-4172-a5bc-d2c534373f68
2020-10-27 17:35:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 17:35:02 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-27 17:35:02 INFO  JobSubmitter:198 - number of splits:3
2020-10-27 17:35:02 INFO  JobSubmitter:287 - Submitting tokens for job: job_1603819980956_0002
2020-10-27 17:35:02 INFO  YarnClientImpl:273 - Submitted application application_1603819980956_0002
2020-10-27 17:35:02 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1603819980956_0002/
2020-10-27 17:35:02 INFO  Job:1339 - Running job: job_1603819980956_0002
2020-10-27 17:35:11 INFO  Job:1360 - Job job_1603819980956_0002 running in uber mode : false
2020-10-27 17:35:11 INFO  Job:1367 -  map 0% reduce 0%
2020-10-27 17:35:17 INFO  Job:1367 -  map 33% reduce 0%
2020-10-27 17:35:22 INFO  Job:1367 -  map 67% reduce 0%
2020-10-27 17:35:27 INFO  Job:1367 -  map 100% reduce 0%
2020-10-27 17:35:31 INFO  Job:1367 -  map 100% reduce 100%
2020-10-27 17:35:32 INFO  Job:1378 - Job job_1603819980956_0002 completed successfully
2020-10-27 17:35:33 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40272
		Total time spent by all reduces in occupied slots (ms)=15516
		Total time spent by all map tasks (ms)=10068
		Total time spent by all reduce tasks (ms)=3879
		Total vcore-milliseconds taken by all map tasks=10068
		Total vcore-milliseconds taken by all reduce tasks=3879
		Total megabyte-milliseconds taken by all map tasks=41238528
		Total megabyte-milliseconds taken by all reduce tasks=15888384
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=575
		CPU time spent (ms)=7070
		Physical memory (bytes) snapshot=1141641216
		Virtual memory (bytes) snapshot=16069124096
		Total committed heap usage (bytes)=1061158912
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201027 17:35:33.446" starttime="20201027 17:35:33.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:35:33.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:35:33.447" starttime="20201027 17:35:33.446"></status>
</kw>
<status status="PASS" endtime="20201027 17:35:33.447" starttime="20201027 17:34:58.576"></status>
</kw>
<msg timestamp="20201027 17:35:33.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:35:33.447" starttime="20201027 17:34:58.576"></status>
</kw>
<msg timestamp="20201027 17:35:33.448" level="INFO">${output} = 2020-10-27 17:35:00 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-10-27 17:35:00 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201027 17:35:33.448" starttime="20201027 17:34:58.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 17:35:33.448" starttime="20201027 17:35:33.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 17:35:33.449" starttime="20201027 17:35:33.448"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 17:35:33.449" critical="yes" starttime="20201027 17:34:58.546"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 17:35:33.451" starttime="20201027 17:34:20.276"></status>
</suite>
<status status="PASS" elapsedtime="187628" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:38:10.522" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:38:12.983" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 17:38:12.983" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 17:38:12.983" starttime="20201027 17:38:10.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:38:12.984" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 17:38:12.984" starttime="20201027 17:38:12.983"></status>
</kw>
<msg timestamp="20201027 17:38:12.985" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 17:38:12.985" starttime="20201027 17:38:10.516"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:38:12.990" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:38:15.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:38:15.245" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:38:15.245" starttime="20201027 17:38:12.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:38:15.246" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:38:15.246" starttime="20201027 17:38:15.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:38:15.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:38:15.247" starttime="20201027 17:38:15.246"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:15.247" starttime="20201027 17:38:12.987"></status>
</kw>
<msg timestamp="20201027 17:38:15.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:38:15.248" starttime="20201027 17:38:12.987"></status>
</kw>
<msg timestamp="20201027 17:38:15.248" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201027 17:38:15.248" starttime="20201027 17:38:12.986"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201027 17:38:15.248" starttime="20201027 17:38:15.248"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:15.249" starttime="20201027 17:38:12.985"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:15.249" starttime="20201027 17:38:12.985"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:38:15.253" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:38:17.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:38:17.340" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:38:17.340" starttime="20201027 17:38:15.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:38:17.341" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:38:17.341" starttime="20201027 17:38:17.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:38:17.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:38:17.342" starttime="20201027 17:38:17.341"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:17.342" starttime="20201027 17:38:15.250"></status>
</kw>
<msg timestamp="20201027 17:38:17.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:38:17.342" starttime="20201027 17:38:15.250"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:17.342" starttime="20201027 17:38:15.250"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:17.343" starttime="20201027 17:38:15.249"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:17.343" starttime="20201027 17:38:15.249"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201027 17:38:17.343" starttime="20201027 17:38:17.343"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:38:17.347" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:38:19.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:38:19.641" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T17:38:17.307Z",
  "modificat...</msg>
<status status="PASS" endtime="20201027 17:38:19.641" starttime="20201027 17:38:17.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:38:19.642" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T17:38:17.307Z",
  "modificationTime" : "2020-10-27T17:38:17.307Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 17:38:19.642" starttime="20201027 17:38:19.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:38:19.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:38:19.643" starttime="20201027 17:38:19.642"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:19.643" starttime="20201027 17:38:17.344"></status>
</kw>
<msg timestamp="20201027 17:38:19.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:38:19.643" starttime="20201027 17:38:17.344"></status>
</kw>
<msg timestamp="20201027 17:38:19.644" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T17:38:17.307Z",
  "modificat...</msg>
<status status="PASS" endtime="20201027 17:38:19.644" starttime="20201027 17:38:17.343"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201027 17:38:19.644" starttime="20201027 17:38:19.644"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:38:19.649" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:38:19.649" starttime="20201027 17:38:19.648"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:38:19.650" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:38:19.650" starttime="20201027 17:38:19.649"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:19.650" starttime="20201027 17:38:19.648"></status>
</kw>
<msg timestamp="20201027 17:38:19.650" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:38:19.650" starttime="20201027 17:38:19.647"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:19.650" starttime="20201027 17:38:19.646"></status>
</kw>
<msg timestamp="20201027 17:38:19.651" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 17:38:19.651" starttime="20201027 17:38:19.645"></status>
</kw>
<msg timestamp="20201027 17:38:19.651" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 17:38:19.651" starttime="20201027 17:38:19.644"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:38:19.656" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:38:21.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:38:21.762" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:38:21.762" starttime="20201027 17:38:19.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:38:21.763" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:38:21.763" starttime="20201027 17:38:21.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:38:21.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:38:21.764" starttime="20201027 17:38:21.763"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:21.764" starttime="20201027 17:38:19.652"></status>
</kw>
<msg timestamp="20201027 17:38:21.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:38:21.764" starttime="20201027 17:38:19.652"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:21.765" starttime="20201027 17:38:19.651"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:38:21.768" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:38:27.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:38:27.120" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:38:27.120" starttime="20201027 17:38:21.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:38:27.121" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:38:27.121" starttime="20201027 17:38:27.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:38:27.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:38:27.122" starttime="20201027 17:38:27.122"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:27.122" starttime="20201027 17:38:21.766"></status>
</kw>
<msg timestamp="20201027 17:38:27.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:38:27.123" starttime="20201027 17:38:21.766"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:27.123" starttime="20201027 17:38:21.765"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:38:27.127" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:38:30.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:38:30.985" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:38:30.985" starttime="20201027 17:38:27.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:38:30.986" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:38:30.987" starttime="20201027 17:38:30.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:38:30.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:38:30.987" starttime="20201027 17:38:30.987"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:30.988" starttime="20201027 17:38:27.124"></status>
</kw>
<msg timestamp="20201027 17:38:30.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:38:30.988" starttime="20201027 17:38:27.124"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:30.988" starttime="20201027 17:38:27.123"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:38:30.992" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:38:34.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:38:34.963" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:38:34.963" starttime="20201027 17:38:30.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:38:34.965" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:38:34.965" starttime="20201027 17:38:34.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:38:34.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:38:34.965" starttime="20201027 17:38:34.965"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:34.966" starttime="20201027 17:38:30.989"></status>
</kw>
<msg timestamp="20201027 17:38:34.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:38:34.966" starttime="20201027 17:38:30.989"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:34.966" starttime="20201027 17:38:30.988"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 17:38:34.966" critical="yes" starttime="20201027 17:38:10.516"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:38:34.972" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:38:34.972" starttime="20201027 17:38:34.971"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:38:34.972" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:38:34.972" starttime="20201027 17:38:34.972"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:34.973" starttime="20201027 17:38:34.970"></status>
</kw>
<msg timestamp="20201027 17:38:34.973" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:38:34.973" starttime="20201027 17:38:34.970"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:34.973" starttime="20201027 17:38:34.969"></status>
</kw>
<msg timestamp="20201027 17:38:34.973" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 17:38:34.973" starttime="20201027 17:38:34.968"></status>
</kw>
<msg timestamp="20201027 17:38:34.973" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 17:38:34.973" starttime="20201027 17:38:34.967"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:38:34.977" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:38:37.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:38:37.220" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:38:37.220" starttime="20201027 17:38:34.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:38:37.221" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:38:37.221" starttime="20201027 17:38:37.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:38:37.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:38:37.222" starttime="20201027 17:38:37.221"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:37.222" starttime="20201027 17:38:34.974"></status>
</kw>
<msg timestamp="20201027 17:38:37.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:38:37.222" starttime="20201027 17:38:34.974"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:37.223" starttime="20201027 17:38:34.974"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:38:37.226" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:38:39.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:38:39.572" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:38:39.572" starttime="20201027 17:38:37.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:38:39.574" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:38:39.574" starttime="20201027 17:38:39.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:38:39.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:38:39.575" starttime="20201027 17:38:39.574"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:39.575" starttime="20201027 17:38:37.224"></status>
</kw>
<msg timestamp="20201027 17:38:39.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:38:39.575" starttime="20201027 17:38:37.224"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:39.575" starttime="20201027 17:38:37.223"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 17:38:39.575" critical="yes" starttime="20201027 17:38:34.967"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201027 17:38:39.577" starttime="20201027 17:38:10.454"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 17:40:21.931" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 17:40:21.931" starttime="20201027 17:40:21.930"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:40:21.932" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 17:40:21.932" starttime="20201027 17:40:21.931"></status>
</kw>
<status status="PASS" endtime="20201027 17:40:21.932" starttime="20201027 17:40:21.930"></status>
</kw>
<msg timestamp="20201027 17:40:21.932" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 17:40:21.932" starttime="20201027 17:40:21.930"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 17:40:21.933" starttime="20201027 17:40:21.933"></status>
</kw>
<msg timestamp="20201027 17:40:21.933" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 17:40:21.933" starttime="20201027 17:40:21.932"></status>
</kw>
<status status="PASS" endtime="20201027 17:40:21.933" starttime="20201027 17:40:21.929"></status>
</kw>
<msg timestamp="20201027 17:40:21.933" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 17:40:21.933" starttime="20201027 17:40:21.929"></status>
</kw>
<msg timestamp="20201027 17:40:21.934" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 17:40:21.934" starttime="20201027 17:40:21.927"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 17:40:21.934" level="INFO">${random} = 89483</msg>
<status status="PASS" endtime="20201027 17:40:21.934" starttime="20201027 17:40:21.934"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:40:21.940" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-89483 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:40:25.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:40:25.689" level="INFO">${output} = 2020-10-27 17:40:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:23 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 17:40:25.689" starttime="20201027 17:40:21.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:40:25.691" level="INFO">2020-10-27 17:40:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:23 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-27 17:40:23 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:40:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 17:40:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 17:40:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 17:40:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5E847318CC38-&gt;a31cf392-7747-40eb-af88-e2c05e1f1c05
2020-10-27 17:40:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 17:40:25 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 17:40:25.691" starttime="20201027 17:40:25.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:40:25.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:40:25.692" starttime="20201027 17:40:25.691"></status>
</kw>
<status status="PASS" endtime="20201027 17:40:25.692" starttime="20201027 17:40:21.935"></status>
</kw>
<msg timestamp="20201027 17:40:25.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:40:25.692" starttime="20201027 17:40:21.935"></status>
</kw>
<msg timestamp="20201027 17:40:25.692" level="INFO">${result} = 2020-10-27 17:40:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:23 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 17:40:25.692" starttime="20201027 17:40:21.934"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:40:25.696" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:40:27.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:40:27.444" level="INFO">${output} = 2020-10-27 17:40:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:27 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 17:40:27.444" starttime="20201027 17:40:25.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:40:27.445" level="INFO">2020-10-27 17:40:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:27 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:38 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-27 17:38 ofs://om/volume1/bucket1/ozone-48193
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-27 17:40 ofs://om/volume1/bucket1/ozone-89483
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:38 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:39 ofs://om/volume1/bucket1/wordcount-25.txt
2020-10-27 17:40:27 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 17:40:27.445" starttime="20201027 17:40:27.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:40:27.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:40:27.446" starttime="20201027 17:40:27.445"></status>
</kw>
<status status="PASS" endtime="20201027 17:40:27.446" starttime="20201027 17:40:25.693"></status>
</kw>
<msg timestamp="20201027 17:40:27.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:40:27.446" starttime="20201027 17:40:25.693"></status>
</kw>
<msg timestamp="20201027 17:40:27.447" level="INFO">${result} = 2020-10-27 17:40:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:27 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 17:40:27.447" starttime="20201027 17:40:25.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 17:40:27.447" starttime="20201027 17:40:27.447"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 17:40:27.448" critical="yes" starttime="20201027 17:40:21.926"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 17:40:27.449" starttime="20201027 17:40:21.871"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:38:44.968" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:38:44.968" starttime="20201027 17:38:44.967"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:38:44.969" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:38:44.969" starttime="20201027 17:38:44.968"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:44.969" starttime="20201027 17:38:44.967"></status>
</kw>
<msg timestamp="20201027 17:38:44.969" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:38:44.969" starttime="20201027 17:38:44.967"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:44.969" starttime="20201027 17:38:44.966"></status>
</kw>
<msg timestamp="20201027 17:38:44.970" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 17:38:44.970" starttime="20201027 17:38:44.965"></status>
</kw>
<msg timestamp="20201027 17:38:44.970" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 17:38:44.970" starttime="20201027 17:38:44.964"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 17:38:44.970" level="INFO">${random} = 48193</msg>
<status status="PASS" endtime="20201027 17:38:44.970" starttime="20201027 17:38:44.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:38:44.976" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-48193 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:38:51.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:38:51.125" level="INFO">${output} = 2020-10-27 17:38:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:38:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:38:46 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 17:38:51.125" starttime="20201027 17:38:44.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:38:51.127" level="INFO">2020-10-27 17:38:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:38:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:38:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:38:47 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-27 17:38:47 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:38:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 17:38:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 17:38:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 17:38:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A91B274C6C89-&gt;a31cf392-7747-40eb-af88-e2c05e1f1c05
2020-10-27 17:38:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 17:38:50 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 17:38:51.127" starttime="20201027 17:38:51.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:38:51.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:38:51.127" starttime="20201027 17:38:51.127"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:51.128" starttime="20201027 17:38:44.971"></status>
</kw>
<msg timestamp="20201027 17:38:51.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:38:51.128" starttime="20201027 17:38:44.971"></status>
</kw>
<msg timestamp="20201027 17:38:51.128" level="INFO">${result} = 2020-10-27 17:38:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:38:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:38:46 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 17:38:51.128" starttime="20201027 17:38:44.971"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:38:51.132" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:38:53.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:38:53.311" level="INFO">${output} = 2020-10-27 17:38:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:38:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:38:53 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 17:38:53.311" starttime="20201027 17:38:51.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:38:53.312" level="INFO">2020-10-27 17:38:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:38:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:38:53 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-27 17:38 o3fs://bucket1.volume1.om/ozone-48193
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:38 o3fs://bucket1.volume1.om/user
2020-10-27 17:38:53 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 17:38:53.312" starttime="20201027 17:38:53.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:38:53.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:38:53.313" starttime="20201027 17:38:53.312"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:53.313" starttime="20201027 17:38:51.129"></status>
</kw>
<msg timestamp="20201027 17:38:53.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:38:53.313" starttime="20201027 17:38:51.129"></status>
</kw>
<msg timestamp="20201027 17:38:53.314" level="INFO">${result} = 2020-10-27 17:38:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:38:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:38:53 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 17:38:53.314" starttime="20201027 17:38:51.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 17:38:53.314" starttime="20201027 17:38:53.314"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 17:38:53.314" critical="yes" starttime="20201027 17:38:44.963"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 17:38:53.315" starttime="20201027 17:38:44.905"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:40:32.240" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:40:32.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:40:32.244" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 17:40:32.244" starttime="20201027 17:40:32.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:40:32.245" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 17:40:32.246" starttime="20201027 17:40:32.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:40:32.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:40:32.246" starttime="20201027 17:40:32.246"></status>
</kw>
<status status="PASS" endtime="20201027 17:40:32.246" starttime="20201027 17:40:32.235"></status>
</kw>
<msg timestamp="20201027 17:40:32.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:40:32.247" starttime="20201027 17:40:32.234"></status>
</kw>
<msg timestamp="20201027 17:40:32.247" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 17:40:32.247" starttime="20201027 17:40:32.234"></status>
</kw>
<msg timestamp="20201027 17:40:32.247" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 17:40:32.247" starttime="20201027 17:40:32.234"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 17:40:32.250" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 17:40:32.251" starttime="20201027 17:40:32.250"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:40:32.251" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 17:40:32.251" starttime="20201027 17:40:32.251"></status>
</kw>
<status status="PASS" endtime="20201027 17:40:32.251" starttime="20201027 17:40:32.250"></status>
</kw>
<msg timestamp="20201027 17:40:32.252" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 17:40:32.252" starttime="20201027 17:40:32.249"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 17:40:32.253" starttime="20201027 17:40:32.252"></status>
</kw>
<msg timestamp="20201027 17:40:32.253" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 17:40:32.253" starttime="20201027 17:40:32.252"></status>
</kw>
<status status="PASS" endtime="20201027 17:40:32.253" starttime="20201027 17:40:32.248"></status>
</kw>
<msg timestamp="20201027 17:40:32.253" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 17:40:32.253" starttime="20201027 17:40:32.248"></status>
</kw>
<msg timestamp="20201027 17:40:32.253" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 17:40:32.253" starttime="20201027 17:40:32.247"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:40:32.258" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:41:07.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:41:07.824" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 17:40:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40...</msg>
<status status="PASS" endtime="20201027 17:41:07.824" starttime="20201027 17:40:32.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:41:07.825" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 17:40:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:34 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-27 17:40:34 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:40:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 17:40:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 17:40:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 17:40:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-96C06A48AC40-&gt;a31cf392-7747-40eb-af88-e2c05e1f1c05
2020-10-27 17:40:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 17:40:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-10-27 17:40:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 17:40:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:36 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 17:40:36 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 17:40:36 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603820268987_0003
2020-10-27 17:40:36 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 17:40:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:36 INFO  Configuration:2752 - resource-types.xml not found
2020-10-27 17:40:36 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-27 17:40:36 INFO  YarnClientImpl:324 - Submitted application application_1603820268987_0003
2020-10-27 17:40:36 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603820268987_0003/
2020-10-27 17:40:36 INFO  Job:1619 - Running job: job_1603820268987_0003
2020-10-27 17:40:43 INFO  Job:1640 - Job job_1603820268987_0003 running in uber mode : false
2020-10-27 17:40:43 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 17:40:51 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 17:40:56 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 17:41:02 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 17:41:06 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 17:41:07 INFO  Job:1658 - Job job_1603820268987_0003 completed successfully
2020-10-27 17:41:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:41:07 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021325
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40636
		Total time spent by all reduces in occupied slots (ms)=16000
		Total time spent by all map tasks (ms)=10159
		Total time spent by all reduce tasks (ms)=4000
		Total vcore-milliseconds taken by all map tasks=10159
		Total vcore-milliseconds taken by all reduce tasks=4000
		Total megabyte-milliseconds taken by all map tasks=41611264
		Total megabyte-milliseconds taken by all reduce tasks=16384000
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=573
		CPU time spent (ms)=6830
		Physical memory (bytes) snapshot=1178034176
		Virtual memory (bytes) snapshot=16077508608
		Total committed heap usage (bytes)=1156055040
		Peak Map Physical memory (bytes)=295657472
		Peak Map Virtual memory (bytes)=4016525312
		Peak Reduce Physical memory (bytes)=302485504
		Peak Reduce Virtual memory (bytes)=4034707456
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.878 seconds
2020-10-27 17:41:07 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-27 17:41:07 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 17:41:07.826" starttime="20201027 17:41:07.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:41:07.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:41:07.826" starttime="20201027 17:41:07.826"></status>
</kw>
<status status="PASS" endtime="20201027 17:41:07.827" starttime="20201027 17:40:32.254"></status>
</kw>
<msg timestamp="20201027 17:41:07.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:41:07.827" starttime="20201027 17:40:32.254"></status>
</kw>
<msg timestamp="20201027 17:41:07.827" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 17:40:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40...</msg>
<status status="PASS" endtime="20201027 17:41:07.827" starttime="20201027 17:40:32.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 17:41:07.828" starttime="20201027 17:41:07.828"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 17:41:07.828" critical="yes" starttime="20201027 17:40:32.233"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:41:07.833" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:41:07.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:41:07.846" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 17:41:07.846" starttime="20201027 17:41:07.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:41:07.847" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 17:41:07.847" starttime="20201027 17:41:07.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:41:07.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:41:07.848" starttime="20201027 17:41:07.847"></status>
</kw>
<status status="PASS" endtime="20201027 17:41:07.848" starttime="20201027 17:41:07.831"></status>
</kw>
<msg timestamp="20201027 17:41:07.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:41:07.848" starttime="20201027 17:41:07.831"></status>
</kw>
<msg timestamp="20201027 17:41:07.849" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 17:41:07.849" starttime="20201027 17:41:07.830"></status>
</kw>
<msg timestamp="20201027 17:41:07.849" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 17:41:07.849" starttime="20201027 17:41:07.830"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 17:41:07.849" level="INFO">${random} = 86</msg>
<status status="PASS" endtime="20201027 17:41:07.849" starttime="20201027 17:41:07.849"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 17:41:07.854" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 17:41:07.854" starttime="20201027 17:41:07.853"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:41:07.855" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 17:41:07.855" starttime="20201027 17:41:07.854"></status>
</kw>
<status status="PASS" endtime="20201027 17:41:07.855" starttime="20201027 17:41:07.853"></status>
</kw>
<msg timestamp="20201027 17:41:07.855" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 17:41:07.855" starttime="20201027 17:41:07.852"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 17:41:07.856" starttime="20201027 17:41:07.856"></status>
</kw>
<msg timestamp="20201027 17:41:07.856" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 17:41:07.856" starttime="20201027 17:41:07.855"></status>
</kw>
<status status="PASS" endtime="20201027 17:41:07.857" starttime="20201027 17:41:07.851"></status>
</kw>
<msg timestamp="20201027 17:41:07.857" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 17:41:07.857" starttime="20201027 17:41:07.850"></status>
</kw>
<msg timestamp="20201027 17:41:07.857" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 17:41:07.857" starttime="20201027 17:41:07.850"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 17:41:07.861" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 17:41:07.861" starttime="20201027 17:41:07.860"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:41:07.861" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 17:41:07.861" starttime="20201027 17:41:07.861"></status>
</kw>
<status status="PASS" endtime="20201027 17:41:07.862" starttime="20201027 17:41:07.860"></status>
</kw>
<msg timestamp="20201027 17:41:07.862" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 17:41:07.862" starttime="20201027 17:41:07.859"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:41:07.863" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201027 17:41:07.863" starttime="20201027 17:41:07.863"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:41:07.864" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201027 17:41:07.864" starttime="20201027 17:41:07.863"></status>
</kw>
<status status="PASS" endtime="20201027 17:41:07.864" starttime="20201027 17:41:07.862"></status>
</kw>
<msg timestamp="20201027 17:41:07.864" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201027 17:41:07.864" starttime="20201027 17:41:07.862"></status>
</kw>
<status status="PASS" endtime="20201027 17:41:07.865" starttime="20201027 17:41:07.859"></status>
</kw>
<msg timestamp="20201027 17:41:07.865" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 17:41:07.865" starttime="20201027 17:41:07.858"></status>
</kw>
<msg timestamp="20201027 17:41:07.865" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 17:41:07.865" starttime="20201027 17:41:07.857"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 17:41:07.873" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 17:41:07.873" starttime="20201027 17:41:07.868"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:41:07.873" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 17:41:07.873" starttime="20201027 17:41:07.873"></status>
</kw>
<status status="PASS" endtime="20201027 17:41:07.873" starttime="20201027 17:41:07.867"></status>
</kw>
<msg timestamp="20201027 17:41:07.873" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 17:41:07.874" starttime="20201027 17:41:07.867"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:41:07.875" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201027 17:41:07.875" starttime="20201027 17:41:07.875"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:41:07.876" level="INFO">${result} = /wordcount-86.txt</msg>
<status status="PASS" endtime="20201027 17:41:07.876" starttime="20201027 17:41:07.875"></status>
</kw>
<status status="PASS" endtime="20201027 17:41:07.876" starttime="20201027 17:41:07.874"></status>
</kw>
<msg timestamp="20201027 17:41:07.876" level="INFO">${path_with_leading} = /wordcount-86.txt</msg>
<status status="PASS" endtime="20201027 17:41:07.876" starttime="20201027 17:41:07.874"></status>
</kw>
<status status="PASS" endtime="20201027 17:41:07.876" starttime="20201027 17:41:07.866"></status>
</kw>
<msg timestamp="20201027 17:41:07.876" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-86.txt</msg>
<status status="PASS" endtime="20201027 17:41:07.876" starttime="20201027 17:41:07.866"></status>
</kw>
<msg timestamp="20201027 17:41:07.877" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-86.txt</msg>
<status status="PASS" endtime="20201027 17:41:07.877" starttime="20201027 17:41:07.865"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:41:07.880" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-86.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:41:46.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:41:46.242" level="INFO">${output} = 2020-10-27 17:41:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:41:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:41:09 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 17:41:46.242" starttime="20201027 17:41:07.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:41:46.243" level="INFO">2020-10-27 17:41:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:41:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:41:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:41:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:41:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:41:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:41:09 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-10-27 17:41:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:41:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:41:09 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 17:41:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:41:10 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-27 17:41:10 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:41:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 17:41:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 17:41:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 17:41:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CACF3C9A2CFD-&gt;a31cf392-7747-40eb-af88-e2c05e1f1c05
2020-10-27 17:41:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 17:41:11 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 17:41:11 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 17:41:12 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603820268987_0004
2020-10-27 17:41:12 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 17:41:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:41:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:41:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:41:12 INFO  Configuration:2752 - resource-types.xml not found
2020-10-27 17:41:12 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-27 17:41:12 INFO  YarnClientImpl:324 - Submitted application application_1603820268987_0004
2020-10-27 17:41:12 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603820268987_0004/
2020-10-27 17:41:12 INFO  Job:1619 - Running job: job_1603820268987_0004
2020-10-27 17:41:20 INFO  Job:1640 - Job job_1603820268987_0004 running in uber mode : false
2020-10-27 17:41:20 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 17:41:27 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 17:41:33 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 17:41:38 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 17:41:45 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 17:41:45 INFO  Job:1658 - Job job_1603820268987_0004 completed successfully
2020-10-27 17:41:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:41:45 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41400
		Total time spent by all reduces in occupied slots (ms)=25208
		Total time spent by all map tasks (ms)=10350
		Total time spent by all reduce tasks (ms)=6302
		Total vcore-milliseconds taken by all map tasks=10350
		Total vcore-milliseconds taken by all reduce tasks=6302
		Total megabyte-milliseconds taken by all map tasks=42393600
		Total megabyte-milliseconds taken by all reduce tasks=25812992
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=599
		CPU time spent (ms)=7340
		Physical memory (bytes) snapshot=1143209984
		Virtual memory (bytes) snapshot=16050638848
		Total committed heap usage (bytes)=1024983040
		Peak Map Physical memory (bytes)=297398272
		Peak Map Virtual memory (bytes)=4015378432
		Peak Reduce Physical memory (bytes)=270589952
		Peak Reduce Virtual memory (bytes)=4018069504
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-27 17:41:45 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 17:41:46.243" starttime="20201027 17:41:46.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:41:46.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:41:46.244" starttime="20201027 17:41:46.243"></status>
</kw>
<status status="PASS" endtime="20201027 17:41:46.244" starttime="20201027 17:41:07.878"></status>
</kw>
<msg timestamp="20201027 17:41:46.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:41:46.245" starttime="20201027 17:41:07.877"></status>
</kw>
<msg timestamp="20201027 17:41:46.245" level="INFO">${output} = 2020-10-27 17:41:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:41:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:41:09 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 17:41:46.245" starttime="20201027 17:41:07.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 17:41:46.246" starttime="20201027 17:41:46.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 17:41:46.246" starttime="20201027 17:41:46.246"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 17:41:46.246" critical="yes" starttime="20201027 17:41:07.829"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 17:41:46.248" starttime="20201027 17:40:32.176"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:38:58.330" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:38:58.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:38:58.334" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 17:38:58.334" starttime="20201027 17:38:58.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:38:58.334" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 17:38:58.335" starttime="20201027 17:38:58.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:38:58.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:38:58.335" starttime="20201027 17:38:58.335"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:58.335" starttime="20201027 17:38:58.324"></status>
</kw>
<msg timestamp="20201027 17:38:58.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:38:58.336" starttime="20201027 17:38:58.324"></status>
</kw>
<msg timestamp="20201027 17:38:58.336" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 17:38:58.336" starttime="20201027 17:38:58.323"></status>
</kw>
<msg timestamp="20201027 17:38:58.336" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 17:38:58.336" starttime="20201027 17:38:58.323"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:38:58.340" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:38:58.340" starttime="20201027 17:38:58.340"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:38:58.341" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:38:58.341" starttime="20201027 17:38:58.340"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:58.341" starttime="20201027 17:38:58.339"></status>
</kw>
<msg timestamp="20201027 17:38:58.341" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:38:58.341" starttime="20201027 17:38:58.339"></status>
</kw>
<status status="PASS" endtime="20201027 17:38:58.342" starttime="20201027 17:38:58.338"></status>
</kw>
<msg timestamp="20201027 17:38:58.342" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 17:38:58.342" starttime="20201027 17:38:58.337"></status>
</kw>
<msg timestamp="20201027 17:38:58.342" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 17:38:58.342" starttime="20201027 17:38:58.336"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:38:58.346" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:39:39.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:39:39.109" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 17:38:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:38:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39...</msg>
<status status="PASS" endtime="20201027 17:39:39.109" starttime="20201027 17:38:58.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:39:39.110" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 17:38:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:38:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:00 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-27 17:39:00 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:39:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 17:39:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 17:39:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 17:39:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-05C946041245-&gt;a31cf392-7747-40eb-af88-e2c05e1f1c05
2020-10-27 17:39:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 17:39:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-10-27 17:39:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:04 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 17:39:05 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 17:39:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603820268987_0001
2020-10-27 17:39:05 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 17:39:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:05 INFO  Configuration:2752 - resource-types.xml not found
2020-10-27 17:39:05 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-27 17:39:05 INFO  YarnClientImpl:324 - Submitted application application_1603820268987_0001
2020-10-27 17:39:05 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603820268987_0001/
2020-10-27 17:39:05 INFO  Job:1619 - Running job: job_1603820268987_0001
2020-10-27 17:39:16 INFO  Job:1640 - Job job_1603820268987_0001 running in uber mode : false
2020-10-27 17:39:16 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 17:39:23 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 17:39:28 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 17:39:33 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 17:39:38 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 17:39:38 INFO  Job:1658 - Job job_1603820268987_0001 completed successfully
2020-10-27 17:39:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:38 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40124
		Total time spent by all reduces in occupied slots (ms)=15044
		Total time spent by all map tasks (ms)=10031
		Total time spent by all reduce tasks (ms)=3761
		Total vcore-milliseconds taken by all map tasks=10031
		Total vcore-milliseconds taken by all reduce tasks=3761
		Total megabyte-milliseconds taken by all map tasks=41086976
		Total megabyte-milliseconds taken by all reduce tasks=15405056
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=592
		CPU time spent (ms)=6550
		Physical memory (bytes) snapshot=1171615744
		Virtual memory (bytes) snapshot=16073334784
		Total committed heap usage (bytes)=1172307968
		Peak Map Physical memory (bytes)=290742272
		Peak Map Virtual memory (bytes)=4015464448
		Peak Reduce Physical memory (bytes)=302608384
		Peak Reduce Virtual memory (bytes)=4039397376
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.277 seconds
2020-10-27 17:39:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:38 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-27 17:39:38 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 17:39:39.110" starttime="20201027 17:39:39.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:39:39.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:39:39.111" starttime="20201027 17:39:39.110"></status>
</kw>
<status status="PASS" endtime="20201027 17:39:39.111" starttime="20201027 17:38:58.343"></status>
</kw>
<msg timestamp="20201027 17:39:39.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:39:39.111" starttime="20201027 17:38:58.343"></status>
</kw>
<msg timestamp="20201027 17:39:39.112" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 17:38:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:38:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39...</msg>
<status status="PASS" endtime="20201027 17:39:39.112" starttime="20201027 17:38:58.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 17:39:39.113" starttime="20201027 17:39:39.112"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 17:39:39.113" critical="yes" starttime="20201027 17:38:58.322"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:39:39.120" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:39:39.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:39:39.124" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 17:39:39.124" starttime="20201027 17:39:39.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:39:39.125" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 17:39:39.125" starttime="20201027 17:39:39.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:39:39.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:39:39.126" starttime="20201027 17:39:39.126"></status>
</kw>
<status status="PASS" endtime="20201027 17:39:39.126" starttime="20201027 17:39:39.115"></status>
</kw>
<msg timestamp="20201027 17:39:39.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:39:39.127" starttime="20201027 17:39:39.115"></status>
</kw>
<msg timestamp="20201027 17:39:39.127" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 17:39:39.127" starttime="20201027 17:39:39.114"></status>
</kw>
<msg timestamp="20201027 17:39:39.127" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201027 17:39:39.127" starttime="20201027 17:39:39.114"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 17:39:39.128" level="INFO">${random} = 25</msg>
<status status="PASS" endtime="20201027 17:39:39.128" starttime="20201027 17:39:39.127"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:39:39.131" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:39:39.131" starttime="20201027 17:39:39.131"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:39:39.132" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:39:39.132" starttime="20201027 17:39:39.131"></status>
</kw>
<status status="PASS" endtime="20201027 17:39:39.132" starttime="20201027 17:39:39.130"></status>
</kw>
<msg timestamp="20201027 17:39:39.132" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:39:39.133" starttime="20201027 17:39:39.130"></status>
</kw>
<status status="PASS" endtime="20201027 17:39:39.133" starttime="20201027 17:39:39.129"></status>
</kw>
<msg timestamp="20201027 17:39:39.133" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 17:39:39.133" starttime="20201027 17:39:39.128"></status>
</kw>
<msg timestamp="20201027 17:39:39.133" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 17:39:39.133" starttime="20201027 17:39:39.128"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:39:39.137" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:39:39.137" starttime="20201027 17:39:39.136"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:39:39.137" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:39:39.137" starttime="20201027 17:39:39.137"></status>
</kw>
<status status="PASS" endtime="20201027 17:39:39.138" starttime="20201027 17:39:39.136"></status>
</kw>
<msg timestamp="20201027 17:39:39.138" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:39:39.138" starttime="20201027 17:39:39.135"></status>
</kw>
<status status="PASS" endtime="20201027 17:39:39.138" starttime="20201027 17:39:39.135"></status>
</kw>
<msg timestamp="20201027 17:39:39.138" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 17:39:39.138" starttime="20201027 17:39:39.134"></status>
</kw>
<msg timestamp="20201027 17:39:39.138" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 17:39:39.138" starttime="20201027 17:39:39.133"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:39:39.141" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:39:39.141" starttime="20201027 17:39:39.141"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:39:39.142" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:39:39.142" starttime="20201027 17:39:39.142"></status>
</kw>
<status status="PASS" endtime="20201027 17:39:39.142" starttime="20201027 17:39:39.141"></status>
</kw>
<msg timestamp="20201027 17:39:39.142" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:39:39.142" starttime="20201027 17:39:39.140"></status>
</kw>
<status status="PASS" endtime="20201027 17:39:39.143" starttime="20201027 17:39:39.140"></status>
</kw>
<msg timestamp="20201027 17:39:39.143" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-25.txt</msg>
<status status="PASS" endtime="20201027 17:39:39.143" starttime="20201027 17:39:39.139"></status>
</kw>
<msg timestamp="20201027 17:39:39.143" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-25.txt</msg>
<status status="PASS" endtime="20201027 17:39:39.143" starttime="20201027 17:39:39.139"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:39:39.148" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-25.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:40:17.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:40:17.195" level="INFO">${output} = 2020-10-27 17:39:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:40 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 17:40:17.195" starttime="20201027 17:39:39.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:40:17.196" level="INFO">2020-10-27 17:39:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:40 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-10-27 17:39:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 17:39:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:41 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-27 17:39:41 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-27 17:39:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 17:39:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 17:39:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 17:39:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2DBAC090002E-&gt;a31cf392-7747-40eb-af88-e2c05e1f1c05
2020-10-27 17:39:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 17:39:42 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 17:39:42 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 17:39:43 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603820268987_0002
2020-10-27 17:39:43 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 17:39:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:43 INFO  Configuration:2752 - resource-types.xml not found
2020-10-27 17:39:43 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-27 17:39:43 INFO  YarnClientImpl:324 - Submitted application application_1603820268987_0002
2020-10-27 17:39:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603820268987_0002/
2020-10-27 17:39:43 INFO  Job:1619 - Running job: job_1603820268987_0002
2020-10-27 17:39:52 INFO  Job:1640 - Job job_1603820268987_0002 running in uber mode : false
2020-10-27 17:39:52 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 17:39:58 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 17:40:04 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 17:40:09 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 17:40:13 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 17:40:16 INFO  Job:1658 - Job job_1603820268987_0002 completed successfully
2020-10-27 17:40:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:40:16 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41124
		Total time spent by all reduces in occupied slots (ms)=14696
		Total time spent by all map tasks (ms)=10281
		Total time spent by all reduce tasks (ms)=3674
		Total vcore-milliseconds taken by all map tasks=10281
		Total vcore-milliseconds taken by all reduce tasks=3674
		Total megabyte-milliseconds taken by all map tasks=42110976
		Total megabyte-milliseconds taken by all reduce tasks=15048704
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=559
		CPU time spent (ms)=7250
		Physical memory (bytes) snapshot=1177436160
		Virtual memory (bytes) snapshot=16075272192
		Total committed heap usage (bytes)=1020788736
		Peak Map Physical memory (bytes)=295915520
		Peak Map Virtual memory (bytes)=4016357376
		Peak Reduce Physical memory (bytes)=292487168
		Peak Reduce Virtual memory (bytes)=4032114688
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-27 17:40:16 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201027 17:40:17.196" starttime="20201027 17:40:17.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:40:17.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:40:17.197" starttime="20201027 17:40:17.196"></status>
</kw>
<status status="PASS" endtime="20201027 17:40:17.197" starttime="20201027 17:39:39.144"></status>
</kw>
<msg timestamp="20201027 17:40:17.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:40:17.197" starttime="20201027 17:39:39.144"></status>
</kw>
<msg timestamp="20201027 17:40:17.198" level="INFO">${output} = 2020-10-27 17:39:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-27 17:39:40 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201027 17:40:17.198" starttime="20201027 17:39:39.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 17:40:17.198" starttime="20201027 17:40:17.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 17:40:17.199" starttime="20201027 17:40:17.199"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 17:40:17.199" critical="yes" starttime="20201027 17:39:39.113"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 17:40:17.200" starttime="20201027 17:38:58.264"></status>
</suite>
<status status="PASS" elapsedtime="196119" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:42:51.201" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:42:55.881" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 17:42:55.881" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 17:42:55.881" starttime="20201027 17:42:51.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:42:55.882" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 17:42:55.882" starttime="20201027 17:42:55.881"></status>
</kw>
<msg timestamp="20201027 17:42:55.882" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201027 17:42:55.882" starttime="20201027 17:42:51.187"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:42:55.889" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:42:59.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:42:59.612" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:42:59.612" starttime="20201027 17:42:55.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:42:59.613" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:42:59.614" starttime="20201027 17:42:59.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:42:59.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:42:59.614" starttime="20201027 17:42:59.614"></status>
</kw>
<status status="PASS" endtime="20201027 17:42:59.615" starttime="20201027 17:42:55.884"></status>
</kw>
<msg timestamp="20201027 17:42:59.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:42:59.615" starttime="20201027 17:42:55.884"></status>
</kw>
<msg timestamp="20201027 17:42:59.615" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201027 17:42:59.615" starttime="20201027 17:42:55.884"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201027 17:42:59.616" starttime="20201027 17:42:59.615"></status>
</kw>
<status status="PASS" endtime="20201027 17:42:59.616" starttime="20201027 17:42:55.883"></status>
</kw>
<status status="PASS" endtime="20201027 17:42:59.616" starttime="20201027 17:42:55.882"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:42:59.622" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:43:03.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:43:03.016" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:43:03.016" starttime="20201027 17:42:59.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:43:03.017" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:43:03.017" starttime="20201027 17:43:03.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:43:03.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:43:03.018" starttime="20201027 17:43:03.018"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:03.019" starttime="20201027 17:42:59.618"></status>
</kw>
<msg timestamp="20201027 17:43:03.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:43:03.019" starttime="20201027 17:42:59.618"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:03.019" starttime="20201027 17:42:59.617"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:03.019" starttime="20201027 17:42:59.617"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:03.019" starttime="20201027 17:42:59.616"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201027 17:43:03.020" starttime="20201027 17:43:03.020"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:43:03.025" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:43:07.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:43:07.057" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T17:43:02.654Z",
  "modificat...</msg>
<status status="PASS" endtime="20201027 17:43:07.057" starttime="20201027 17:43:03.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:43:07.058" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T17:43:02.654Z",
  "modificationTime" : "2020-10-27T17:43:02.654Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 17:43:07.058" starttime="20201027 17:43:07.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:43:07.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:43:07.059" starttime="20201027 17:43:07.059"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:07.059" starttime="20201027 17:43:03.021"></status>
</kw>
<msg timestamp="20201027 17:43:07.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:43:07.060" starttime="20201027 17:43:03.021"></status>
</kw>
<msg timestamp="20201027 17:43:07.060" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T17:43:02.654Z",
  "modificat...</msg>
<status status="PASS" endtime="20201027 17:43:07.060" starttime="20201027 17:43:03.020"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201027 17:43:07.061" starttime="20201027 17:43:07.060"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:43:07.065" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:43:07.065" starttime="20201027 17:43:07.065"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:43:07.066" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:43:07.066" starttime="20201027 17:43:07.065"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:07.066" starttime="20201027 17:43:07.064"></status>
</kw>
<msg timestamp="20201027 17:43:07.066" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:43:07.066" starttime="20201027 17:43:07.063"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:07.067" starttime="20201027 17:43:07.063"></status>
</kw>
<msg timestamp="20201027 17:43:07.067" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 17:43:07.067" starttime="20201027 17:43:07.062"></status>
</kw>
<msg timestamp="20201027 17:43:07.067" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201027 17:43:07.067" starttime="20201027 17:43:07.061"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:43:07.072" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:43:10.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:43:10.948" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:43:10.948" starttime="20201027 17:43:07.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:43:10.951" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:43:10.951" starttime="20201027 17:43:10.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:43:10.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:43:10.953" starttime="20201027 17:43:10.951"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:10.959" starttime="20201027 17:43:07.068"></status>
</kw>
<msg timestamp="20201027 17:43:10.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:43:10.962" starttime="20201027 17:43:07.068"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:10.966" starttime="20201027 17:43:07.067"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:43:10.980" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:43:19.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:43:19.324" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:43:19.324" starttime="20201027 17:43:10.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:43:19.325" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:43:19.325" starttime="20201027 17:43:19.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:43:19.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:43:19.326" starttime="20201027 17:43:19.326"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:19.327" starttime="20201027 17:43:10.971"></status>
</kw>
<msg timestamp="20201027 17:43:19.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:43:19.327" starttime="20201027 17:43:10.969"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:19.327" starttime="20201027 17:43:10.967"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:43:19.332" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:43:26.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:43:26.088" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:43:26.088" starttime="20201027 17:43:19.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:43:26.089" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:43:26.089" starttime="20201027 17:43:26.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:43:26.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:43:26.090" starttime="20201027 17:43:26.089"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:26.090" starttime="20201027 17:43:19.328"></status>
</kw>
<msg timestamp="20201027 17:43:26.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:43:26.091" starttime="20201027 17:43:19.328"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:26.091" starttime="20201027 17:43:19.327"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:43:26.095" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:43:32.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:43:32.107" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:43:32.107" starttime="20201027 17:43:26.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:43:32.108" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:43:32.108" starttime="20201027 17:43:32.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:43:32.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:43:32.109" starttime="20201027 17:43:32.108"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:32.109" starttime="20201027 17:43:26.092"></status>
</kw>
<msg timestamp="20201027 17:43:32.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:43:32.109" starttime="20201027 17:43:26.092"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:32.110" starttime="20201027 17:43:26.091"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 17:43:32.110" critical="yes" starttime="20201027 17:42:51.186"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:43:32.117" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:43:32.117" starttime="20201027 17:43:32.116"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:43:32.118" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:43:32.118" starttime="20201027 17:43:32.117"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:32.118" starttime="20201027 17:43:32.115"></status>
</kw>
<msg timestamp="20201027 17:43:32.118" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:43:32.118" starttime="20201027 17:43:32.115"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:32.118" starttime="20201027 17:43:32.114"></status>
</kw>
<msg timestamp="20201027 17:43:32.118" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 17:43:32.119" starttime="20201027 17:43:32.113"></status>
</kw>
<msg timestamp="20201027 17:43:32.119" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 17:43:32.119" starttime="20201027 17:43:32.112"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:43:32.123" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:43:35.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:43:35.791" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:43:35.791" starttime="20201027 17:43:32.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:43:35.793" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:43:35.793" starttime="20201027 17:43:35.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:43:35.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:43:35.794" starttime="20201027 17:43:35.793"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:35.794" starttime="20201027 17:43:32.120"></status>
</kw>
<msg timestamp="20201027 17:43:35.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:43:35.794" starttime="20201027 17:43:32.120"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:35.795" starttime="20201027 17:43:32.119"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:43:35.799" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:43:39.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:43:39.992" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:43:39.992" starttime="20201027 17:43:35.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:43:39.994" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:43:39.994" starttime="20201027 17:43:39.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:43:39.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:43:39.994" starttime="20201027 17:43:39.994"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:39.995" starttime="20201027 17:43:35.796"></status>
</kw>
<msg timestamp="20201027 17:43:39.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:43:39.995" starttime="20201027 17:43:35.796"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:39.996" starttime="20201027 17:43:35.795"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 17:43:39.996" critical="yes" starttime="20201027 17:43:32.111"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201027 17:43:39.998" starttime="20201027 17:42:51.101"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 17:45:36.816" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 17:45:36.816" starttime="20201027 17:45:36.815"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:45:36.816" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 17:45:36.817" starttime="20201027 17:45:36.816"></status>
</kw>
<status status="PASS" endtime="20201027 17:45:36.817" starttime="20201027 17:45:36.815"></status>
</kw>
<msg timestamp="20201027 17:45:36.817" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 17:45:36.817" starttime="20201027 17:45:36.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 17:45:36.818" starttime="20201027 17:45:36.818"></status>
</kw>
<msg timestamp="20201027 17:45:36.818" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 17:45:36.818" starttime="20201027 17:45:36.817"></status>
</kw>
<status status="PASS" endtime="20201027 17:45:36.818" starttime="20201027 17:45:36.814"></status>
</kw>
<msg timestamp="20201027 17:45:36.818" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 17:45:36.818" starttime="20201027 17:45:36.813"></status>
</kw>
<msg timestamp="20201027 17:45:36.819" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 17:45:36.819" starttime="20201027 17:45:36.812"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 17:45:36.819" level="INFO">${random} = 91022</msg>
<status status="PASS" endtime="20201027 17:45:36.819" starttime="20201027 17:45:36.819"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:45:36.826" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-91022 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:45:41.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:45:41.212" level="INFO">${output} = 2020-10-27 17:45:39 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 17:45:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201027 17:45:41.212" starttime="20201027 17:45:36.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:45:41.213" level="INFO">2020-10-27 17:45:39 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 17:45:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 17:45:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 17:45:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 17:45:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CB48A2D725F0-&gt;82d5f196-b63f-41f2-a213-d9e6e39147f7
2020-10-27 17:45:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201027 17:45:41.213" starttime="20201027 17:45:41.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:45:41.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:45:41.214" starttime="20201027 17:45:41.213"></status>
</kw>
<status status="PASS" endtime="20201027 17:45:41.214" starttime="20201027 17:45:36.820"></status>
</kw>
<msg timestamp="20201027 17:45:41.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:45:41.214" starttime="20201027 17:45:36.820"></status>
</kw>
<msg timestamp="20201027 17:45:41.215" level="INFO">${result} = 2020-10-27 17:45:39 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 17:45:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201027 17:45:41.215" starttime="20201027 17:45:36.820"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:45:41.228" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:45:43.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:45:43.624" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:43 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 17:43 ofs://om/volume1/bucket1/ozone-26846
-rw-...</msg>
<status status="PASS" endtime="20201027 17:45:43.624" starttime="20201027 17:45:41.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:45:43.625" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:43 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 17:43 ofs://om/volume1/bucket1/ozone-26846
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 17:45 ofs://om/volume1/bucket1/ozone-91022
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:43 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:45 ofs://om/volume1/bucket1/wordcount-70.txt</msg>
<status status="PASS" endtime="20201027 17:45:43.625" starttime="20201027 17:45:43.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:45:43.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:45:43.627" starttime="20201027 17:45:43.626"></status>
</kw>
<status status="PASS" endtime="20201027 17:45:43.627" starttime="20201027 17:45:41.218"></status>
</kw>
<msg timestamp="20201027 17:45:43.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:45:43.627" starttime="20201027 17:45:41.217"></status>
</kw>
<msg timestamp="20201027 17:45:43.628" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:43 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 17:43 ofs://om/volume1/bucket1/ozone-26846
-rw-...</msg>
<status status="PASS" endtime="20201027 17:45:43.628" starttime="20201027 17:45:41.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 17:45:43.629" starttime="20201027 17:45:43.628"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 17:45:43.629" critical="yes" starttime="20201027 17:45:36.811"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 17:45:43.630" starttime="20201027 17:45:36.726"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:43:45.798" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:43:45.798" starttime="20201027 17:43:45.797"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:43:45.799" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:43:45.799" starttime="20201027 17:43:45.798"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:45.799" starttime="20201027 17:43:45.797"></status>
</kw>
<msg timestamp="20201027 17:43:45.799" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:43:45.799" starttime="20201027 17:43:45.796"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:45.799" starttime="20201027 17:43:45.796"></status>
</kw>
<msg timestamp="20201027 17:43:45.799" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 17:43:45.800" starttime="20201027 17:43:45.795"></status>
</kw>
<msg timestamp="20201027 17:43:45.800" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 17:43:45.800" starttime="20201027 17:43:45.794"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 17:43:45.800" level="INFO">${random} = 26846</msg>
<status status="PASS" endtime="20201027 17:43:45.800" starttime="20201027 17:43:45.800"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:43:45.808" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-26846 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:43:50.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:43:50.280" level="INFO">${output} = 2020-10-27 17:43:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 17:43:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201027 17:43:50.280" starttime="20201027 17:43:45.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:43:50.281" level="INFO">2020-10-27 17:43:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 17:43:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 17:43:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 17:43:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 17:43:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-274C920BAD32-&gt;82d5f196-b63f-41f2-a213-d9e6e39147f7
2020-10-27 17:43:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201027 17:43:50.281" starttime="20201027 17:43:50.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:43:50.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:43:50.282" starttime="20201027 17:43:50.281"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:50.282" starttime="20201027 17:43:45.801"></status>
</kw>
<msg timestamp="20201027 17:43:50.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:43:50.283" starttime="20201027 17:43:45.801"></status>
</kw>
<msg timestamp="20201027 17:43:50.283" level="INFO">${result} = 2020-10-27 17:43:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 17:43:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201027 17:43:50.283" starttime="20201027 17:43:45.801"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:43:50.287" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:43:52.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:43:52.535" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:43 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 17:43 o3fs://bucket1.volume1.om/ozone-26846
dr...</msg>
<status status="PASS" endtime="20201027 17:43:52.535" starttime="20201027 17:43:50.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:43:52.536" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:43 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 17:43 o3fs://bucket1.volume1.om/ozone-26846
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:43 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201027 17:43:52.536" starttime="20201027 17:43:52.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:43:52.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:43:52.537" starttime="20201027 17:43:52.537"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:52.537" starttime="20201027 17:43:50.284"></status>
</kw>
<msg timestamp="20201027 17:43:52.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:43:52.538" starttime="20201027 17:43:50.284"></status>
</kw>
<msg timestamp="20201027 17:43:52.538" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-27 17:43 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-27 17:43 o3fs://bucket1.volume1.om/ozone-26846
dr...</msg>
<status status="PASS" endtime="20201027 17:43:52.538" starttime="20201027 17:43:50.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201027 17:43:52.539" starttime="20201027 17:43:52.538"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 17:43:52.539" critical="yes" starttime="20201027 17:43:45.793"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201027 17:43:52.540" starttime="20201027 17:43:45.732"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:45:49.192" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:45:49.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:45:49.199" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 17:45:49.199" starttime="20201027 17:45:49.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:45:49.200" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 17:45:49.200" starttime="20201027 17:45:49.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:45:49.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:45:49.201" starttime="20201027 17:45:49.201"></status>
</kw>
<status status="PASS" endtime="20201027 17:45:49.201" starttime="20201027 17:45:49.187"></status>
</kw>
<msg timestamp="20201027 17:45:49.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:45:49.202" starttime="20201027 17:45:49.186"></status>
</kw>
<msg timestamp="20201027 17:45:49.202" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 17:45:49.202" starttime="20201027 17:45:49.186"></status>
</kw>
<msg timestamp="20201027 17:45:49.202" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 17:45:49.202" starttime="20201027 17:45:49.186"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 17:45:49.206" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 17:45:49.206" starttime="20201027 17:45:49.205"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:45:49.207" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 17:45:49.207" starttime="20201027 17:45:49.206"></status>
</kw>
<status status="PASS" endtime="20201027 17:45:49.207" starttime="20201027 17:45:49.205"></status>
</kw>
<msg timestamp="20201027 17:45:49.207" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 17:45:49.207" starttime="20201027 17:45:49.204"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 17:45:49.208" starttime="20201027 17:45:49.208"></status>
</kw>
<msg timestamp="20201027 17:45:49.208" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 17:45:49.208" starttime="20201027 17:45:49.207"></status>
</kw>
<status status="PASS" endtime="20201027 17:45:49.209" starttime="20201027 17:45:49.204"></status>
</kw>
<msg timestamp="20201027 17:45:49.209" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 17:45:49.209" starttime="20201027 17:45:49.203"></status>
</kw>
<msg timestamp="20201027 17:45:49.209" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 17:45:49.209" starttime="20201027 17:45:49.202"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:45:49.215" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:46:30.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:46:30.981" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 17:45:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 17:45:51 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201027 17:46:30.981" starttime="20201027 17:45:49.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:46:30.982" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 17:45:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 17:45:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 17:45:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 17:45:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 17:45:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A645F4D03247-&gt;82d5f196-b63f-41f2-a213-d9e6e39147f7
2020-10-27 17:45:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 17:45:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-27 17:45:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 17:45:53 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 17:45:54 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 17:45:54 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603820550954_0003
2020-10-27 17:45:54 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 17:45:54 INFO  Configuration:2795 - resource-types.xml not found
2020-10-27 17:45:54 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-27 17:45:54 INFO  YarnClientImpl:329 - Submitted application application_1603820550954_0003
2020-10-27 17:45:54 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603820550954_0003/
2020-10-27 17:45:54 INFO  Job:1619 - Running job: job_1603820550954_0003
2020-10-27 17:46:03 INFO  Job:1640 - Job job_1603820550954_0003 running in uber mode : false
2020-10-27 17:46:03 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 17:46:11 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 17:46:18 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 17:46:23 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 17:46:29 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 17:46:30 INFO  Job:1658 - Job job_1603820550954_0003 completed successfully
2020-10-27 17:46:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47744
		Total time spent by all reduces in occupied slots (ms)=18136
		Total time spent by all map tasks (ms)=11936
		Total time spent by all reduce tasks (ms)=4534
		Total vcore-milliseconds taken by all map tasks=11936
		Total vcore-milliseconds taken by all reduce tasks=4534
		Total megabyte-milliseconds taken by all map tasks=48889856
		Total megabyte-milliseconds taken by all reduce tasks=18571264
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=736
		CPU time spent (ms)=8580
		Physical memory (bytes) snapshot=1448067072
		Virtual memory (bytes) snapshot=16062005248
		Total committed heap usage (bytes)=1679294464
		Peak Map Physical memory (bytes)=366899200
		Peak Map Virtual memory (bytes)=4020158464
		Peak Reduce Physical memory (bytes)=366235648
		Peak Reduce Virtual memory (bytes)=4034658304
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.313 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201027 17:46:30.982" starttime="20201027 17:46:30.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:46:30.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:46:30.983" starttime="20201027 17:46:30.982"></status>
</kw>
<status status="PASS" endtime="20201027 17:46:30.983" starttime="20201027 17:45:49.211"></status>
</kw>
<msg timestamp="20201027 17:46:30.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:46:30.983" starttime="20201027 17:45:49.211"></status>
</kw>
<msg timestamp="20201027 17:46:30.984" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 17:45:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 17:45:51 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201027 17:46:30.984" starttime="20201027 17:45:49.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 17:46:30.984" starttime="20201027 17:46:30.984"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 17:46:30.985" critical="yes" starttime="20201027 17:45:49.185"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:46:30.990" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:46:30.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:46:30.996" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 17:46:30.996" starttime="20201027 17:46:30.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:46:30.997" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 17:46:30.997" starttime="20201027 17:46:30.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:46:30.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:46:30.998" starttime="20201027 17:46:30.998"></status>
</kw>
<status status="PASS" endtime="20201027 17:46:30.998" starttime="20201027 17:46:30.987"></status>
</kw>
<msg timestamp="20201027 17:46:30.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:46:30.999" starttime="20201027 17:46:30.987"></status>
</kw>
<msg timestamp="20201027 17:46:30.999" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 17:46:30.999" starttime="20201027 17:46:30.987"></status>
</kw>
<msg timestamp="20201027 17:46:30.999" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 17:46:30.999" starttime="20201027 17:46:30.986"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 17:46:31.000" level="INFO">${random} = 33</msg>
<status status="PASS" endtime="20201027 17:46:31.000" starttime="20201027 17:46:30.999"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 17:46:31.004" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 17:46:31.004" starttime="20201027 17:46:31.003"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:46:31.005" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 17:46:31.005" starttime="20201027 17:46:31.004"></status>
</kw>
<status status="PASS" endtime="20201027 17:46:31.005" starttime="20201027 17:46:31.003"></status>
</kw>
<msg timestamp="20201027 17:46:31.005" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 17:46:31.005" starttime="20201027 17:46:31.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201027 17:46:31.006" starttime="20201027 17:46:31.006"></status>
</kw>
<msg timestamp="20201027 17:46:31.006" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201027 17:46:31.006" starttime="20201027 17:46:31.005"></status>
</kw>
<status status="PASS" endtime="20201027 17:46:31.007" starttime="20201027 17:46:31.001"></status>
</kw>
<msg timestamp="20201027 17:46:31.007" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 17:46:31.007" starttime="20201027 17:46:31.001"></status>
</kw>
<msg timestamp="20201027 17:46:31.007" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201027 17:46:31.007" starttime="20201027 17:46:31.000"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 17:46:31.011" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 17:46:31.011" starttime="20201027 17:46:31.010"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:46:31.011" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 17:46:31.011" starttime="20201027 17:46:31.011"></status>
</kw>
<status status="PASS" endtime="20201027 17:46:31.011" starttime="20201027 17:46:31.010"></status>
</kw>
<msg timestamp="20201027 17:46:31.012" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 17:46:31.012" starttime="20201027 17:46:31.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:46:31.014" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201027 17:46:31.014" starttime="20201027 17:46:31.013"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:46:31.014" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201027 17:46:31.014" starttime="20201027 17:46:31.014"></status>
</kw>
<status status="PASS" endtime="20201027 17:46:31.015" starttime="20201027 17:46:31.012"></status>
</kw>
<msg timestamp="20201027 17:46:31.015" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201027 17:46:31.015" starttime="20201027 17:46:31.012"></status>
</kw>
<status status="PASS" endtime="20201027 17:46:31.015" starttime="20201027 17:46:31.009"></status>
</kw>
<msg timestamp="20201027 17:46:31.015" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 17:46:31.015" starttime="20201027 17:46:31.008"></status>
</kw>
<msg timestamp="20201027 17:46:31.015" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201027 17:46:31.015" starttime="20201027 17:46:31.007"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201027 17:46:31.019" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201027 17:46:31.019" starttime="20201027 17:46:31.018"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:46:31.020" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201027 17:46:31.020" starttime="20201027 17:46:31.019"></status>
</kw>
<status status="PASS" endtime="20201027 17:46:31.020" starttime="20201027 17:46:31.018"></status>
</kw>
<msg timestamp="20201027 17:46:31.020" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201027 17:46:31.020" starttime="20201027 17:46:31.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:46:31.022" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201027 17:46:31.022" starttime="20201027 17:46:31.021"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:46:31.023" level="INFO">${result} = /wordcount-33.txt</msg>
<status status="PASS" endtime="20201027 17:46:31.023" starttime="20201027 17:46:31.022"></status>
</kw>
<status status="PASS" endtime="20201027 17:46:31.023" starttime="20201027 17:46:31.021"></status>
</kw>
<msg timestamp="20201027 17:46:31.023" level="INFO">${path_with_leading} = /wordcount-33.txt</msg>
<status status="PASS" endtime="20201027 17:46:31.023" starttime="20201027 17:46:31.020"></status>
</kw>
<status status="PASS" endtime="20201027 17:46:31.023" starttime="20201027 17:46:31.017"></status>
</kw>
<msg timestamp="20201027 17:46:31.023" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-33.txt</msg>
<status status="PASS" endtime="20201027 17:46:31.023" starttime="20201027 17:46:31.016"></status>
</kw>
<msg timestamp="20201027 17:46:31.024" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-33.txt</msg>
<status status="PASS" endtime="20201027 17:46:31.024" starttime="20201027 17:46:31.016"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:46:31.027" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-33.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:47:14.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:47:14.225" level="INFO">${output} = 2020-10-27 17:46:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-27 17:46:33 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201027 17:47:14.225" starttime="20201027 17:46:31.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:47:14.227" level="INFO">2020-10-27 17:46:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-27 17:46:33 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 17:46:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 17:46:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 17:46:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 17:46:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 17:46:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A05E658A01DB-&gt;82d5f196-b63f-41f2-a213-d9e6e39147f7
2020-10-27 17:46:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 17:46:35 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 17:46:35 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 17:46:35 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603820550954_0004
2020-10-27 17:46:35 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 17:46:36 INFO  Configuration:2795 - resource-types.xml not found
2020-10-27 17:46:36 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-27 17:46:36 INFO  YarnClientImpl:329 - Submitted application application_1603820550954_0004
2020-10-27 17:46:36 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603820550954_0004/
2020-10-27 17:46:36 INFO  Job:1619 - Running job: job_1603820550954_0004
2020-10-27 17:46:44 INFO  Job:1640 - Job job_1603820550954_0004 running in uber mode : false
2020-10-27 17:46:44 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 17:46:52 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 17:46:58 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 17:47:04 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 17:47:10 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 17:47:13 INFO  Job:1658 - Job job_1603820550954_0004 completed successfully
2020-10-27 17:47:13 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49544
		Total time spent by all reduces in occupied slots (ms)=17960
		Total time spent by all map tasks (ms)=12386
		Total time spent by all reduce tasks (ms)=4490
		Total vcore-milliseconds taken by all map tasks=12386
		Total vcore-milliseconds taken by all reduce tasks=4490
		Total megabyte-milliseconds taken by all map tasks=50733056
		Total megabyte-milliseconds taken by all reduce tasks=18391040
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=690
		CPU time spent (ms)=9400
		Physical memory (bytes) snapshot=1487278080
		Virtual memory (bytes) snapshot=16096182272
		Total committed heap usage (bytes)=1727004672
		Peak Map Physical memory (bytes)=372146176
		Peak Map Virtual memory (bytes)=4019908608
		Peak Reduce Physical memory (bytes)=379490304
		Peak Reduce Virtual memory (bytes)=4042350592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201027 17:47:14.227" starttime="20201027 17:47:14.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:47:14.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:47:14.229" starttime="20201027 17:47:14.228"></status>
</kw>
<status status="PASS" endtime="20201027 17:47:14.229" starttime="20201027 17:46:31.025"></status>
</kw>
<msg timestamp="20201027 17:47:14.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:47:14.230" starttime="20201027 17:46:31.024"></status>
</kw>
<msg timestamp="20201027 17:47:14.230" level="INFO">${output} = 2020-10-27 17:46:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-27 17:46:33 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201027 17:47:14.230" starttime="20201027 17:46:31.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 17:47:14.232" starttime="20201027 17:47:14.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 17:47:14.232" starttime="20201027 17:47:14.232"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 17:47:14.233" critical="yes" starttime="20201027 17:46:30.986"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 17:47:14.234" starttime="20201027 17:45:49.120"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:43:58.234" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:43:58.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:43:58.242" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 17:43:58.242" starttime="20201027 17:43:58.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:43:58.244" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 17:43:58.244" starttime="20201027 17:43:58.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:43:58.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:43:58.245" starttime="20201027 17:43:58.244"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:58.245" starttime="20201027 17:43:58.229"></status>
</kw>
<msg timestamp="20201027 17:43:58.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:43:58.245" starttime="20201027 17:43:58.229"></status>
</kw>
<msg timestamp="20201027 17:43:58.245" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 17:43:58.245" starttime="20201027 17:43:58.228"></status>
</kw>
<msg timestamp="20201027 17:43:58.246" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 17:43:58.246" starttime="20201027 17:43:58.228"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:43:58.249" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:43:58.249" starttime="20201027 17:43:58.249"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:43:58.250" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:43:58.250" starttime="20201027 17:43:58.250"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:58.250" starttime="20201027 17:43:58.248"></status>
</kw>
<msg timestamp="20201027 17:43:58.250" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:43:58.251" starttime="20201027 17:43:58.248"></status>
</kw>
<status status="PASS" endtime="20201027 17:43:58.251" starttime="20201027 17:43:58.247"></status>
</kw>
<msg timestamp="20201027 17:43:58.251" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 17:43:58.251" starttime="20201027 17:43:58.247"></status>
</kw>
<msg timestamp="20201027 17:43:58.251" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 17:43:58.251" starttime="20201027 17:43:58.246"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:43:58.256" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:44:45.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:44:45.869" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 17:44:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 17:44:00 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201027 17:44:45.869" starttime="20201027 17:43:58.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:44:45.870" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-27 17:44:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 17:44:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 17:44:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 17:44:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 17:44:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8F77C49ED85F-&gt;82d5f196-b63f-41f2-a213-d9e6e39147f7
2020-10-27 17:44:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-27 17:44:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-27 17:44:05 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 17:44:05 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 17:44:06 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603820550954_0001
2020-10-27 17:44:06 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 17:44:06 INFO  Configuration:2795 - resource-types.xml not found
2020-10-27 17:44:06 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-27 17:44:07 INFO  YarnClientImpl:329 - Submitted application application_1603820550954_0001
2020-10-27 17:44:07 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603820550954_0001/
2020-10-27 17:44:07 INFO  Job:1619 - Running job: job_1603820550954_0001
2020-10-27 17:44:19 INFO  Job:1640 - Job job_1603820550954_0001 running in uber mode : false
2020-10-27 17:44:19 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 17:44:26 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 17:44:32 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 17:44:37 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 17:44:43 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 17:44:44 INFO  Job:1658 - Job job_1603820550954_0001 completed successfully
2020-10-27 17:44:45 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48152
		Total time spent by all reduces in occupied slots (ms)=19324
		Total time spent by all map tasks (ms)=12038
		Total time spent by all reduce tasks (ms)=4831
		Total vcore-milliseconds taken by all map tasks=12038
		Total vcore-milliseconds taken by all reduce tasks=4831
		Total megabyte-milliseconds taken by all map tasks=49307648
		Total megabyte-milliseconds taken by all reduce tasks=19787776
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=675
		CPU time spent (ms)=8390
		Physical memory (bytes) snapshot=1353924608
		Virtual memory (bytes) snapshot=16053415936
		Total committed heap usage (bytes)=1537212416
		Peak Map Physical memory (bytes)=364068864
		Peak Map Virtual memory (bytes)=4018225152
		Peak Reduce Physical memory (bytes)=298639360
		Peak Reduce Virtual memory (bytes)=4035076096
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.332 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201027 17:44:45.871" starttime="20201027 17:44:45.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:44:45.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:44:45.872" starttime="20201027 17:44:45.871"></status>
</kw>
<status status="PASS" endtime="20201027 17:44:45.872" starttime="20201027 17:43:58.252"></status>
</kw>
<msg timestamp="20201027 17:44:45.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:44:45.872" starttime="20201027 17:43:58.252"></status>
</kw>
<msg timestamp="20201027 17:44:45.873" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-27 17:44:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 17:44:00 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201027 17:44:45.873" starttime="20201027 17:43:58.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 17:44:45.874" starttime="20201027 17:44:45.873"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 17:44:45.874" critical="yes" starttime="20201027 17:43:58.226"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:44:45.880" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:44:45.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:44:45.888" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 17:44:45.888" starttime="20201027 17:44:45.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:44:45.889" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 17:44:45.889" starttime="20201027 17:44:45.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:44:45.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:44:45.890" starttime="20201027 17:44:45.890"></status>
</kw>
<status status="PASS" endtime="20201027 17:44:45.890" starttime="20201027 17:44:45.876"></status>
</kw>
<msg timestamp="20201027 17:44:45.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:44:45.891" starttime="20201027 17:44:45.876"></status>
</kw>
<msg timestamp="20201027 17:44:45.891" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 17:44:45.891" starttime="20201027 17:44:45.876"></status>
</kw>
<msg timestamp="20201027 17:44:45.891" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201027 17:44:45.891" starttime="20201027 17:44:45.875"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 17:44:45.892" level="INFO">${random} = 70</msg>
<status status="PASS" endtime="20201027 17:44:45.892" starttime="20201027 17:44:45.891"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:44:45.896" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:44:45.896" starttime="20201027 17:44:45.895"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:44:45.897" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:44:45.897" starttime="20201027 17:44:45.896"></status>
</kw>
<status status="PASS" endtime="20201027 17:44:45.897" starttime="20201027 17:44:45.895"></status>
</kw>
<msg timestamp="20201027 17:44:45.897" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:44:45.897" starttime="20201027 17:44:45.894"></status>
</kw>
<status status="PASS" endtime="20201027 17:44:45.897" starttime="20201027 17:44:45.894"></status>
</kw>
<msg timestamp="20201027 17:44:45.897" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 17:44:45.897" starttime="20201027 17:44:45.893"></status>
</kw>
<msg timestamp="20201027 17:44:45.898" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201027 17:44:45.898" starttime="20201027 17:44:45.892"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:44:45.902" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:44:45.902" starttime="20201027 17:44:45.901"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:44:45.904" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:44:45.904" starttime="20201027 17:44:45.903"></status>
</kw>
<status status="PASS" endtime="20201027 17:44:45.904" starttime="20201027 17:44:45.900"></status>
</kw>
<msg timestamp="20201027 17:44:45.904" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:44:45.904" starttime="20201027 17:44:45.900"></status>
</kw>
<status status="PASS" endtime="20201027 17:44:45.904" starttime="20201027 17:44:45.899"></status>
</kw>
<msg timestamp="20201027 17:44:45.905" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 17:44:45.905" starttime="20201027 17:44:45.899"></status>
</kw>
<msg timestamp="20201027 17:44:45.905" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201027 17:44:45.905" starttime="20201027 17:44:45.898"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201027 17:44:45.910" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201027 17:44:45.910" starttime="20201027 17:44:45.909"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 17:44:45.911" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201027 17:44:45.911" starttime="20201027 17:44:45.910"></status>
</kw>
<status status="PASS" endtime="20201027 17:44:45.911" starttime="20201027 17:44:45.909"></status>
</kw>
<msg timestamp="20201027 17:44:45.911" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201027 17:44:45.911" starttime="20201027 17:44:45.908"></status>
</kw>
<status status="PASS" endtime="20201027 17:44:45.911" starttime="20201027 17:44:45.908"></status>
</kw>
<msg timestamp="20201027 17:44:45.911" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-70.txt</msg>
<status status="PASS" endtime="20201027 17:44:45.911" starttime="20201027 17:44:45.907"></status>
</kw>
<msg timestamp="20201027 17:44:45.912" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-70.txt</msg>
<status status="PASS" endtime="20201027 17:44:45.912" starttime="20201027 17:44:45.905"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:44:45.916" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-70.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:45:31.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:45:31.233" level="INFO">${output} = 2020-10-27 17:44:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-27 17:44:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201027 17:45:31.233" starttime="20201027 17:44:45.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:45:31.234" level="INFO">2020-10-27 17:44:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-27 17:44:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-27 17:44:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-27 17:44:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-27 17:44:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-27 17:44:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 17:44:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-34AD07C12458-&gt;82d5f196-b63f-41f2-a213-d9e6e39147f7
2020-10-27 17:44:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 17:44:50 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-27 17:44:53 INFO  JobSubmitter:202 - number of splits:3
2020-10-27 17:44:53 INFO  JobSubmitter:298 - Submitting tokens for job: job_1603820550954_0002
2020-10-27 17:44:53 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-27 17:44:53 INFO  Configuration:2795 - resource-types.xml not found
2020-10-27 17:44:53 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-27 17:44:53 INFO  YarnClientImpl:329 - Submitted application application_1603820550954_0002
2020-10-27 17:44:53 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1603820550954_0002/
2020-10-27 17:44:53 INFO  Job:1619 - Running job: job_1603820550954_0002
2020-10-27 17:45:03 INFO  Job:1640 - Job job_1603820550954_0002 running in uber mode : false
2020-10-27 17:45:03 INFO  Job:1647 -  map 0% reduce 0%
2020-10-27 17:45:11 INFO  Job:1647 -  map 33% reduce 0%
2020-10-27 17:45:18 INFO  Job:1647 -  map 67% reduce 0%
2020-10-27 17:45:24 INFO  Job:1647 -  map 100% reduce 0%
2020-10-27 17:45:29 INFO  Job:1647 -  map 100% reduce 100%
2020-10-27 17:45:30 INFO  Job:1658 - Job job_1603820550954_0002 completed successfully
2020-10-27 17:45:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124185
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=57552
		Total time spent by all reduces in occupied slots (ms)=18268
		Total time spent by all map tasks (ms)=14388
		Total time spent by all reduce tasks (ms)=4567
		Total vcore-milliseconds taken by all map tasks=14388
		Total vcore-milliseconds taken by all reduce tasks=4567
		Total megabyte-milliseconds taken by all map tasks=58933248
		Total megabyte-milliseconds taken by all reduce tasks=18706432
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=826
		CPU time spent (ms)=9650
		Physical memory (bytes) snapshot=1459625984
		Virtual memory (bytes) snapshot=16072945664
		Total committed heap usage (bytes)=1694498816
		Peak Map Physical memory (bytes)=371294208
		Peak Map Virtual memory (bytes)=4016812032
		Peak Reduce Physical memory (bytes)=371298304
		Peak Reduce Virtual memory (bytes)=4037959680
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201027 17:45:31.234" starttime="20201027 17:45:31.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:45:31.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:45:31.235" starttime="20201027 17:45:31.235"></status>
</kw>
<status status="PASS" endtime="20201027 17:45:31.236" starttime="20201027 17:44:45.913"></status>
</kw>
<msg timestamp="20201027 17:45:31.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:45:31.236" starttime="20201027 17:44:45.912"></status>
</kw>
<msg timestamp="20201027 17:45:31.237" level="INFO">${output} = 2020-10-27 17:44:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-10-27 17:44:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201027 17:45:31.237" starttime="20201027 17:44:45.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201027 17:45:31.237" starttime="20201027 17:45:31.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201027 17:45:31.238" starttime="20201027 17:45:31.238"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201027 17:45:31.238" critical="yes" starttime="20201027 17:44:45.874"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201027 17:45:31.239" starttime="20201027 17:43:58.163"></status>
</suite>
<status status="PASS" elapsedtime="240799" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="624546" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
