<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201027 18:22:34.605" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:17:42.366" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:17:55.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:17:55.039" level="INFO">${output} = 2020-10-27 18:17:44,616 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 18:17:44,999 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 18:17:55.039" starttime="20201027 18:17:42.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:17:55.040" level="INFO">2020-10-27 18:17:44,616 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 18:17:44,999 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-27 18:17:44,999 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-27 18:17:47,719 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-27 18:17:49,166 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-27 18:17:49,166 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-10-27 18:17:49,166 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-10-27 18:17:49,167 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-10-27 18:17:49,168 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-27 18:17:49,168 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-27 18:17:49,168 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-10-27 18:17:49,172 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-27 18:17:49,187 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 18:17:49,230 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-14317, with testuser/scm@EXAMPLE.COM as owner.
2020-10-27 18:17:49,905 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-14317/bucket-0-19142, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 18:17:50,189 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 18:17:51,190 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 18:17:52,190 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 18:17:52,329 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-27 18:17:53,190 [Thread-9] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,621
Average Time spent in bucket creation: 00:00:00,259
Average Time spent in key creation: 00:00:01,212
Average Time spent in key write: 00:00:01,202
Total bytes written: 10240
Total Execution time: 00:00:09,131
***************************************************</msg>
<status status="PASS" endtime="20201027 18:17:55.040" starttime="20201027 18:17:55.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:17:55.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:17:55.041" starttime="20201027 18:17:55.041"></status>
</kw>
<status status="PASS" endtime="20201027 18:17:55.042" starttime="20201027 18:17:42.362"></status>
</kw>
<msg timestamp="20201027 18:17:55.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:17:55.042" starttime="20201027 18:17:42.362"></status>
</kw>
<msg timestamp="20201027 18:17:55.042" level="INFO">${result} = 2020-10-27 18:17:44,616 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 18:17:44,999 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 18:17:55.042" starttime="20201027 18:17:42.360"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201027 18:17:55.044" starttime="20201027 18:17:55.043"></status>
</kw>
<status status="PASS" endtime="20201027 18:17:55.044" starttime="20201027 18:17:55.043"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 18:17:55.044" critical="yes" starttime="20201027 18:17:42.360"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:17:55.050" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:18:07.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:18:07.178" level="INFO">${output} = 2020-10-27 18:17:57,022 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 18:17:57,252 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 18:18:07.178" starttime="20201027 18:17:55.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:18:07.180" level="INFO">2020-10-27 18:17:57,022 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 18:17:57,252 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-27 18:17:57,252 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-27 18:17:57,410 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xbijkpk3zj
2020-10-27 18:17:57,422 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-27 18:17:58,426 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 18:17:58,863 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-27 18:17:59,389 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-10-27 18:17:59,428 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 18:17:59,522 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-27 18:18:00,245 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-27 18:18:00,429 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 18:18:00,605 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-27 18:18:00,606 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-43452C339F43-&gt;ed123e89-9847-4fe4-9e65-39b492b8e055
2020-10-27 18:18:00,607 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-27 18:18:01,429 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 18:18:02,430 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 18:18:03,430 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 18:18:04,431 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 18:18:05,431 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 18:18:06,432 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-27 18:18:06,807 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=6405.076375, max=6405.076375, mean=6405.076375, stddev=0.0, median=6405.076375, p75=6405.076375, p95=6405.076375, p98=6405.076375, p99=6405.076375, p999=6405.076375, mean_rate=0.13956797782016958, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-27 18:18:06,808 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2020-10-27 18:18:06,808 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-27 18:18:06,808 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201027 18:18:07.180" starttime="20201027 18:18:07.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:18:07.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:18:07.181" starttime="20201027 18:18:07.180"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:07.181" starttime="20201027 18:17:55.047"></status>
</kw>
<msg timestamp="20201027 18:18:07.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:18:07.182" starttime="20201027 18:17:55.046"></status>
</kw>
<msg timestamp="20201027 18:18:07.182" level="INFO">${result} = 2020-10-27 18:17:57,022 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 18:17:57,252 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 18:18:07.182" starttime="20201027 18:17:55.046"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201027 18:18:07.183" starttime="20201027 18:18:07.183"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:07.183" starttime="20201027 18:18:07.182"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 18:18:07.183" critical="yes" starttime="20201027 18:17:55.045"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:18:07.189" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:18:12.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:18:12.755" level="INFO">${output} = 2020-10-27 18:18:09,068 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 18:18:09,327 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 18:18:12.755" starttime="20201027 18:18:07.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:18:12.756" level="INFO">2020-10-27 18:18:09,068 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 18:18:09,327 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-27 18:18:09,327 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-27 18:18:09,540 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ayn2nmpnth
2020-10-27 18:18:09,558 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-27 18:18:10,573 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 18:18:10,852 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-27 18:18:11,549 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-27 18:18:11,573 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 18:18:12,574 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-27 18:18:12,724 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=398.559756, max=398.559756, mean=398.559756, stddev=0.0, median=398.559756, p75=398.559756, p95=398.559756, p98=398.559756, p99=398.559756, p999=398.559756, mean_rate=0.7490318233742873, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-27 18:18:12,726 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-27 18:18:12,726 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-27 18:18:12,726 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201027 18:18:12.756" starttime="20201027 18:18:12.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:18:12.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:18:12.757" starttime="20201027 18:18:12.756"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:12.757" starttime="20201027 18:18:07.186"></status>
</kw>
<msg timestamp="20201027 18:18:12.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:18:12.757" starttime="20201027 18:18:07.186"></status>
</kw>
<msg timestamp="20201027 18:18:12.758" level="INFO">${result} = 2020-10-27 18:18:09,068 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 18:18:09,327 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 18:18:12.758" starttime="20201027 18:18:07.185"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201027 18:18:12.759" starttime="20201027 18:18:12.759"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:12.759" starttime="20201027 18:18:12.758"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 18:18:12.760" critical="yes" starttime="20201027 18:18:07.184"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:18:12.767" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:18:18.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:18:18.019" level="INFO">${output} = 2020-10-27 18:18:14,611 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 18:18:14,806 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 18:18:18.019" starttime="20201027 18:18:12.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:18:18.021" level="INFO">2020-10-27 18:18:14,611 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 18:18:14,806 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-27 18:18:14,806 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-27 18:18:14,959 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zyufl5cuvu
2020-10-27 18:18:14,970 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-27 18:18:15,977 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-27 18:18:16,303 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-27 18:18:16,859 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-27 18:18:16,978 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-27 18:18:17,886 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=141.416887, max=141.416887, mean=141.416887, stddev=0.0, median=141.416887, p75=141.416887, p95=141.416887, p98=141.416887, p99=141.416887, p999=141.416887, mean_rate=0.8819104358712512, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-27 18:18:17,893 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-27 18:18:17,895 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-27 18:18:17,895 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201027 18:18:18.021" starttime="20201027 18:18:18.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:18:18.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:18:18.022" starttime="20201027 18:18:18.021"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:18.022" starttime="20201027 18:18:12.762"></status>
</kw>
<msg timestamp="20201027 18:18:18.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:18:18.023" starttime="20201027 18:18:12.762"></status>
</kw>
<msg timestamp="20201027 18:18:18.023" level="INFO">${result} = 2020-10-27 18:18:14,611 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-27 18:18:14,806 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201027 18:18:18.023" starttime="20201027 18:18:12.761"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201027 18:18:18.024" starttime="20201027 18:18:18.024"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:18.024" starttime="20201027 18:18:18.023"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201027 18:18:18.025" critical="yes" starttime="20201027 18:18:12.760"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201027 18:18:18.026" starttime="20201027 18:17:42.324"></status>
</suite>
<status status="PASS" endtime="20201027 18:18:18.031" starttime="20201027 18:17:42.285"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:17:34.301" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:17:34.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:17:34.309" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:17:34.309" starttime="20201027 18:17:34.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:17:34.312" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:17:34.312" starttime="20201027 18:17:34.309"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:17:34.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:17:34.313" starttime="20201027 18:17:34.312"></status>
</kw>
<status status="PASS" endtime="20201027 18:17:34.313" starttime="20201027 18:17:34.289"></status>
</kw>
<msg timestamp="20201027 18:17:34.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:17:34.314" starttime="20201027 18:17:34.287"></status>
</kw>
<msg timestamp="20201027 18:17:34.314" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:17:34.314" starttime="20201027 18:17:34.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:17:34.315" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:17:34.315" starttime="20201027 18:17:34.314"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:17:34.332" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:17:34.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:17:34.355" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:17:34.355" starttime="20201027 18:17:34.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:17:34.356" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:17:34.356" starttime="20201027 18:17:34.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:17:34.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:17:34.362" starttime="20201027 18:17:34.356"></status>
</kw>
<status status="PASS" endtime="20201027 18:17:34.362" starttime="20201027 18:17:34.322"></status>
</kw>
<msg timestamp="20201027 18:17:34.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:17:34.363" starttime="20201027 18:17:34.322"></status>
</kw>
<status status="PASS" endtime="20201027 18:17:34.363" starttime="20201027 18:17:34.315"></status>
</kw>
<status status="PASS" endtime="20201027 18:17:34.363" starttime="20201027 18:17:34.315"></status>
</kw>
<status status="PASS" endtime="20201027 18:17:34.363" starttime="20201027 18:17:34.286"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 18:17:34.364" critical="yes" starttime="20201027 18:17:34.283"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201027 18:17:34.368" starttime="20201027 18:17:34.079"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201027 18:18:24.744" level="INFO">${random} = 83579</msg>
<status status="PASS" endtime="20201027 18:18:24.744" starttime="20201027 18:18:24.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201027 18:18:24.745" level="INFO">${source} = 83579-source</msg>
<status status="PASS" endtime="20201027 18:18:24.745" starttime="20201027 18:18:24.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201027 18:18:24.747" level="INFO">${target} = 83579-target</msg>
<status status="PASS" endtime="20201027 18:18:24.747" starttime="20201027 18:18:24.746"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:18:24.754" level="INFO">Running command 'ozone sh volume create 83579-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:18:28.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:18:28.906" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:18:28.906" starttime="20201027 18:18:24.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:18:28.907" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:18:28.907" starttime="20201027 18:18:28.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:18:28.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:18:28.908" starttime="20201027 18:18:28.908"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:28.908" starttime="20201027 18:18:24.748"></status>
</kw>
<msg timestamp="20201027 18:18:28.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:18:28.909" starttime="20201027 18:18:24.747"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:28.909" starttime="20201027 18:18:24.747"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:18:28.914" level="INFO">Running command 'ozone sh volume create 83579-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:18:33.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:18:33.062" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:18:33.062" starttime="20201027 18:18:28.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:18:33.063" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:18:33.063" starttime="20201027 18:18:33.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:18:33.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:18:33.064" starttime="20201027 18:18:33.063"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:33.064" starttime="20201027 18:18:28.910"></status>
</kw>
<msg timestamp="20201027 18:18:33.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:18:33.065" starttime="20201027 18:18:28.910"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:33.065" starttime="20201027 18:18:28.909"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:18:33.070" level="INFO">Running command 'ozone sh bucket create 83579-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:18:37.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:18:37.268" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:18:37.268" starttime="20201027 18:18:33.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:18:37.269" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:18:37.269" starttime="20201027 18:18:37.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:18:37.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:18:37.270" starttime="20201027 18:18:37.270"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:37.270" starttime="20201027 18:18:33.067"></status>
</kw>
<msg timestamp="20201027 18:18:37.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:18:37.271" starttime="20201027 18:18:33.066"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:37.271" starttime="20201027 18:18:33.066"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:18:37.274" level="INFO">Running command 'ozone sh key put 83579-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:18:46.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:18:46.497" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:18:46.497" starttime="20201027 18:18:37.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:18:46.498" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:18:46.498" starttime="20201027 18:18:46.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:18:46.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:18:46.499" starttime="20201027 18:18:46.498"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:46.499" starttime="20201027 18:18:37.272"></status>
</kw>
<msg timestamp="20201027 18:18:46.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:18:46.499" starttime="20201027 18:18:37.272"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:46.500" starttime="20201027 18:18:37.271"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:18:46.505" level="INFO">Running command 'ozone sh bucket create 83579-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:18:50.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:18:50.668" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:18:50.668" starttime="20201027 18:18:46.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:18:50.670" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:18:50.670" starttime="20201027 18:18:50.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:18:50.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:18:50.670" starttime="20201027 18:18:50.670"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:50.671" starttime="20201027 18:18:46.501"></status>
</kw>
<msg timestamp="20201027 18:18:50.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:18:50.671" starttime="20201027 18:18:46.500"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:50.671" starttime="20201027 18:18:46.500"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:18:50.675" level="INFO">Running command 'ozone sh bucket link 83579-source/readable-bucket 83579-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:18:54.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:18:54.724" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:18:54.724" starttime="20201027 18:18:50.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:18:54.726" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:18:54.726" starttime="20201027 18:18:54.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:18:54.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:18:54.727" starttime="20201027 18:18:54.726"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:54.727" starttime="20201027 18:18:50.672"></status>
</kw>
<msg timestamp="20201027 18:18:54.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:18:54.728" starttime="20201027 18:18:50.672"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:54.728" starttime="20201027 18:18:50.671"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:18:54.733" level="INFO">Running command 'ozone sh bucket link 83579-source/readable-bucket 83579-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:18:58.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:18:58.793" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:18:58.793" starttime="20201027 18:18:54.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:18:58.794" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:18:58.795" starttime="20201027 18:18:58.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:18:58.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:18:58.795" starttime="20201027 18:18:58.795"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:58.796" starttime="20201027 18:18:54.729"></status>
</kw>
<msg timestamp="20201027 18:18:58.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:18:58.796" starttime="20201027 18:18:54.729"></status>
</kw>
<status status="PASS" endtime="20201027 18:18:58.796" starttime="20201027 18:18:54.728"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:18:58.801" level="INFO">Running command 'ozone sh bucket link 83579-source/unreadable-bucket 83579-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:02.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:19:02.858" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:19:02.858" starttime="20201027 18:18:58.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:02.859" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:19:02.859" starttime="20201027 18:19:02.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:19:02.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:19:02.860" starttime="20201027 18:19:02.860"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:02.861" starttime="20201027 18:18:58.797"></status>
</kw>
<msg timestamp="20201027 18:19:02.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:19:02.861" starttime="20201027 18:18:58.797"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:02.861" starttime="20201027 18:18:58.796"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:02.866" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 83579-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:07.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:19:07.128" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:19:07.128" starttime="20201027 18:19:02.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:07.129" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 18:19:07.129" starttime="20201027 18:19:07.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:19:07.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:19:07.130" starttime="20201027 18:19:07.129"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:07.130" starttime="20201027 18:19:02.862"></status>
</kw>
<msg timestamp="20201027 18:19:07.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:19:07.130" starttime="20201027 18:19:02.862"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:07.131" starttime="20201027 18:19:02.861"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:07.135" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 83579-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:11.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:19:11.605" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:19:11.605" starttime="20201027 18:19:07.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:11.606" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 18:19:11.607" starttime="20201027 18:19:11.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:19:11.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:19:11.607" starttime="20201027 18:19:11.607"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:11.608" starttime="20201027 18:19:07.132"></status>
</kw>
<msg timestamp="20201027 18:19:11.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:19:11.608" starttime="20201027 18:19:07.131"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:11.608" starttime="20201027 18:19:07.131"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:11.612" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 83579-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:15.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:19:15.886" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:19:15.886" starttime="20201027 18:19:11.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:15.887" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 18:19:15.887" starttime="20201027 18:19:15.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:19:15.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:19:15.888" starttime="20201027 18:19:15.888"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:15.889" starttime="20201027 18:19:11.609"></status>
</kw>
<msg timestamp="20201027 18:19:15.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:19:15.889" starttime="20201027 18:19:11.609"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:15.889" starttime="20201027 18:19:11.608"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:15.894" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 83579-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:20.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:19:20.237" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:19:20.237" starttime="20201027 18:19:15.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:20.238" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 18:19:20.239" starttime="20201027 18:19:20.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:19:20.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:19:20.239" starttime="20201027 18:19:20.239"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:20.239" starttime="20201027 18:19:15.890"></status>
</kw>
<msg timestamp="20201027 18:19:20.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:19:20.240" starttime="20201027 18:19:15.890"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:20.240" starttime="20201027 18:19:15.889"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:20.244" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 83579-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:24.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:19:24.753" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:19:24.753" starttime="20201027 18:19:20.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:24.754" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 18:19:24.754" starttime="20201027 18:19:24.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:19:24.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:19:24.755" starttime="20201027 18:19:24.754"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:24.755" starttime="20201027 18:19:20.241"></status>
</kw>
<msg timestamp="20201027 18:19:24.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:19:24.755" starttime="20201027 18:19:20.241"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:24.756" starttime="20201027 18:19:20.240"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:24.756" starttime="20201027 18:18:33.066"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:24.756" starttime="20201027 18:18:33.065"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:24.756" starttime="20201027 18:18:24.743"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:24.764" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:24.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:19:24.766" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:19:24.766" starttime="20201027 18:19:24.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:24.767" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:19:24.768" starttime="20201027 18:19:24.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:19:24.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:19:24.768" starttime="20201027 18:19:24.768"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:24.769" starttime="20201027 18:19:24.760"></status>
</kw>
<msg timestamp="20201027 18:19:24.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:19:24.769" starttime="20201027 18:19:24.760"></status>
</kw>
<msg timestamp="20201027 18:19:24.769" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:19:24.769" starttime="20201027 18:19:24.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:19:24.771" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:19:24.771" starttime="20201027 18:19:24.769"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:24.779" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:24.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:19:24.792" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:19:24.793" starttime="20201027 18:19:24.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:24.794" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:19:24.794" starttime="20201027 18:19:24.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:19:24.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:19:24.795" starttime="20201027 18:19:24.794"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:24.795" starttime="20201027 18:19:24.773"></status>
</kw>
<msg timestamp="20201027 18:19:24.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:19:24.795" starttime="20201027 18:19:24.772"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:24.796" starttime="20201027 18:19:24.771"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:24.796" starttime="20201027 18:19:24.771"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:24.796" starttime="20201027 18:19:24.758"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:24.796" starttime="20201027 18:19:24.757"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:24.800" level="INFO">Running command 'ozone sh bucket link 83579-source/no-such-bucket 83579-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:28.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:19:28.868" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:19:28.868" starttime="20201027 18:19:24.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:28.869" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:19:28.870" starttime="20201027 18:19:28.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:19:28.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:19:28.871" starttime="20201027 18:19:28.870"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:28.871" starttime="20201027 18:19:24.797"></status>
</kw>
<msg timestamp="20201027 18:19:28.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:19:28.871" starttime="20201027 18:19:24.797"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:28.872" starttime="20201027 18:19:24.796"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:28.876" level="INFO">Running command 'ozone sh key list 83579-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:33.386" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 18:19:33.386" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:19:33.386" starttime="20201027 18:19:28.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:33.387" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201027 18:19:33.387" starttime="20201027 18:19:33.386"></status>
</kw>
<msg timestamp="20201027 18:19:33.388" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:19:33.388" starttime="20201027 18:19:28.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201027 18:19:33.389" starttime="20201027 18:19:33.388"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 18:19:33.389" critical="yes" starttime="20201027 18:19:24.756"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:33.397" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:33.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:19:33.400" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:19:33.400" starttime="20201027 18:19:33.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:33.401" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:19:33.401" starttime="20201027 18:19:33.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:19:33.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:19:33.402" starttime="20201027 18:19:33.401"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:33.402" starttime="20201027 18:19:33.394"></status>
</kw>
<msg timestamp="20201027 18:19:33.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:19:33.403" starttime="20201027 18:19:33.394"></status>
</kw>
<msg timestamp="20201027 18:19:33.403" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:19:33.403" starttime="20201027 18:19:33.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:19:33.404" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:19:33.404" starttime="20201027 18:19:33.403"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:33.409" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:33.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:19:33.428" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:19:33.428" starttime="20201027 18:19:33.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:33.430" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:19:33.430" starttime="20201027 18:19:33.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:19:33.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:19:33.431" starttime="20201027 18:19:33.430"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:33.431" starttime="20201027 18:19:33.406"></status>
</kw>
<msg timestamp="20201027 18:19:33.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:19:33.431" starttime="20201027 18:19:33.405"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:33.431" starttime="20201027 18:19:33.405"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:33.431" starttime="20201027 18:19:33.404"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:33.432" starttime="20201027 18:19:33.393"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:33.432" starttime="20201027 18:19:33.392"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:33.436" level="INFO">Running command 'ozone sh bucket link 83579-source/bucket1 83579-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:37.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:19:37.715" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:19:37.715" starttime="20201027 18:19:33.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:37.717" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:19:37.717" starttime="20201027 18:19:37.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:19:37.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:19:37.718" starttime="20201027 18:19:37.717"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:37.718" starttime="20201027 18:19:33.433"></status>
</kw>
<msg timestamp="20201027 18:19:37.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:19:37.718" starttime="20201027 18:19:33.433"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:37.719" starttime="20201027 18:19:33.432"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:37.723" level="INFO">Running command 'ozone sh bucket create 83579-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:41.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:19:41.856" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:19:41.856" starttime="20201027 18:19:37.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:41.857" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:19:41.857" starttime="20201027 18:19:41.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:19:41.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:19:41.858" starttime="20201027 18:19:41.857"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:41.858" starttime="20201027 18:19:37.720"></status>
</kw>
<msg timestamp="20201027 18:19:41.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:19:41.859" starttime="20201027 18:19:37.719"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:41.859" starttime="20201027 18:19:37.719"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:41.864" level="INFO">Running command 'ozone sh key put 83579-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:51.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:19:51.714" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:19:51.714" starttime="20201027 18:19:41.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:51.716" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:19:51.716" starttime="20201027 18:19:51.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:19:51.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:19:51.717" starttime="20201027 18:19:51.716"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:51.717" starttime="20201027 18:19:41.860"></status>
</kw>
<msg timestamp="20201027 18:19:51.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:19:51.717" starttime="20201027 18:19:41.860"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:51.718" starttime="20201027 18:19:41.859"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201027 18:19:51.725" level="INFO">${postfix} = 80630</msg>
<status status="PASS" endtime="20201027 18:19:51.725" starttime="20201027 18:19:51.725"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201027 18:19:51.726" level="INFO">${tmpfile} = /tmp/tempkey-80630</msg>
<status status="PASS" endtime="20201027 18:19:51.726" starttime="20201027 18:19:51.726"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:51.730" level="INFO">Running command 'ozone sh key get -f 83579-target/link1/key1 /tmp/tempkey-80630 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:58.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:19:58.300" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:19:58.300" starttime="20201027 18:19:51.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:58.301" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:19:58.302" starttime="20201027 18:19:58.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:19:58.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:19:58.302" starttime="20201027 18:19:58.302"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:58.303" starttime="20201027 18:19:51.727"></status>
</kw>
<msg timestamp="20201027 18:19:58.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:19:58.303" starttime="20201027 18:19:51.727"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:58.303" starttime="20201027 18:19:51.726"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201027 18:19:58.305" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-80630 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:58.308" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201027 18:19:58.308" starttime="20201027 18:19:58.303"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:58.313" level="INFO">Running command 'rm -f /tmp/tempkey-80630 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:58.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:19:58.316" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:19:58.316" starttime="20201027 18:19:58.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:58.317" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:19:58.318" starttime="20201027 18:19:58.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:19:58.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:19:58.318" starttime="20201027 18:19:58.318"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:58.319" starttime="20201027 18:19:58.310"></status>
</kw>
<msg timestamp="20201027 18:19:58.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:19:58.319" starttime="20201027 18:19:58.310"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:58.319" starttime="20201027 18:19:58.309"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 18:19:58.320" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201027 18:19:58.320" starttime="20201027 18:19:58.319"></status>
</kw>
<msg timestamp="20201027 18:19:58.320" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201027 18:19:58.320" starttime="20201027 18:19:51.719"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201027 18:19:58.321" starttime="20201027 18:19:58.320"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:58.321" starttime="20201027 18:19:51.718"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 18:19:58.321" critical="yes" starttime="20201027 18:19:33.391"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:58.328" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:58.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:19:58.331" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:19:58.331" starttime="20201027 18:19:58.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:58.332" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:19:58.333" starttime="20201027 18:19:58.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:19:58.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:19:58.333" starttime="20201027 18:19:58.333"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:58.334" starttime="20201027 18:19:58.325"></status>
</kw>
<msg timestamp="20201027 18:19:58.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:19:58.334" starttime="20201027 18:19:58.325"></status>
</kw>
<msg timestamp="20201027 18:19:58.334" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:19:58.334" starttime="20201027 18:19:58.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:19:58.335" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:19:58.335" starttime="20201027 18:19:58.334"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:58.340" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:19:58.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:19:58.352" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:19:58.352" starttime="20201027 18:19:58.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:19:58.353" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:19:58.353" starttime="20201027 18:19:58.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:19:58.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:19:58.354" starttime="20201027 18:19:58.353"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:58.354" starttime="20201027 18:19:58.337"></status>
</kw>
<msg timestamp="20201027 18:19:58.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:19:58.355" starttime="20201027 18:19:58.336"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:58.355" starttime="20201027 18:19:58.336"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:58.355" starttime="20201027 18:19:58.335"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:58.355" starttime="20201027 18:19:58.324"></status>
</kw>
<status status="PASS" endtime="20201027 18:19:58.355" starttime="20201027 18:19:58.323"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:19:58.363" level="INFO">Running command 'ozone sh key put 83579-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:07.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:07.610" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:20:07.610" starttime="20201027 18:19:58.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:07.612" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:20:07.612" starttime="20201027 18:20:07.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:07.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:07.613" starttime="20201027 18:20:07.612"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:07.613" starttime="20201027 18:19:58.357"></status>
</kw>
<msg timestamp="20201027 18:20:07.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:07.613" starttime="20201027 18:19:58.356"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:07.614" starttime="20201027 18:19:58.355"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201027 18:20:07.616" level="INFO">${postfix} = 97633</msg>
<status status="PASS" endtime="20201027 18:20:07.616" starttime="20201027 18:20:07.615"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201027 18:20:07.616" level="INFO">${tmpfile} = /tmp/tempkey-97633</msg>
<status status="PASS" endtime="20201027 18:20:07.616" starttime="20201027 18:20:07.616"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:07.622" level="INFO">Running command 'ozone sh key get -f 83579-source/bucket1/key2 /tmp/tempkey-97633 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:13.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:13.687" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:20:13.687" starttime="20201027 18:20:07.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:13.688" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:20:13.688" starttime="20201027 18:20:13.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:13.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:13.689" starttime="20201027 18:20:13.688"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:13.689" starttime="20201027 18:20:07.618"></status>
</kw>
<msg timestamp="20201027 18:20:13.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:13.689" starttime="20201027 18:20:07.617"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:13.690" starttime="20201027 18:20:07.617"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201027 18:20:13.692" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-97633 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:13.695" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201027 18:20:13.695" starttime="20201027 18:20:13.690"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:13.701" level="INFO">Running command 'rm -f /tmp/tempkey-97633 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:13.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:13.702" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:20:13.702" starttime="20201027 18:20:13.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:13.703" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:20:13.703" starttime="20201027 18:20:13.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:13.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:13.704" starttime="20201027 18:20:13.704"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:13.705" starttime="20201027 18:20:13.697"></status>
</kw>
<msg timestamp="20201027 18:20:13.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:13.705" starttime="20201027 18:20:13.696"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:13.705" starttime="20201027 18:20:13.695"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 18:20:13.706" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201027 18:20:13.706" starttime="20201027 18:20:13.705"></status>
</kw>
<msg timestamp="20201027 18:20:13.706" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201027 18:20:13.706" starttime="20201027 18:20:07.614"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201027 18:20:13.707" starttime="20201027 18:20:13.706"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:13.707" starttime="20201027 18:20:07.614"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 18:20:13.707" critical="yes" starttime="20201027 18:19:58.322"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:13.715" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:13.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:13.717" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:20:13.717" starttime="20201027 18:20:13.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:13.718" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:20:13.718" starttime="20201027 18:20:13.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:13.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:13.719" starttime="20201027 18:20:13.718"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:13.719" starttime="20201027 18:20:13.711"></status>
</kw>
<msg timestamp="20201027 18:20:13.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:13.719" starttime="20201027 18:20:13.711"></status>
</kw>
<msg timestamp="20201027 18:20:13.720" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:20:13.720" starttime="20201027 18:20:13.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:20:13.720" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:20:13.720" starttime="20201027 18:20:13.720"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:13.726" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:13.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:13.742" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:20:13.742" starttime="20201027 18:20:13.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:13.743" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:20:13.743" starttime="20201027 18:20:13.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:13.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:13.744" starttime="20201027 18:20:13.744"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:13.745" starttime="20201027 18:20:13.722"></status>
</kw>
<msg timestamp="20201027 18:20:13.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:13.745" starttime="20201027 18:20:13.722"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:13.745" starttime="20201027 18:20:13.721"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:13.745" starttime="20201027 18:20:13.721"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:13.745" starttime="20201027 18:20:13.710"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:13.746" starttime="20201027 18:20:13.709"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:13.752" level="INFO">Running command 'ozone sh key list 83579-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:18.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:18.113" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201027 18:20:18.113" starttime="20201027 18:20:13.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:18.114" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201027 18:20:18.114" starttime="20201027 18:20:18.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:18.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:18.115" starttime="20201027 18:20:18.114"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:18.115" starttime="20201027 18:20:13.747"></status>
</kw>
<msg timestamp="20201027 18:20:18.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:18.116" starttime="20201027 18:20:13.746"></status>
</kw>
<msg timestamp="20201027 18:20:18.116" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201027 18:20:18.116" starttime="20201027 18:20:13.746"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:18.122" level="INFO">Running command 'ozone sh key list 83579-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:22.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:22.624" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201027 18:20:22.624" starttime="20201027 18:20:18.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:22.625" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201027 18:20:22.625" starttime="20201027 18:20:22.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:22.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:22.627" starttime="20201027 18:20:22.626"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:22.627" starttime="20201027 18:20:18.117"></status>
</kw>
<msg timestamp="20201027 18:20:22.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:22.627" starttime="20201027 18:20:18.117"></status>
</kw>
<msg timestamp="20201027 18:20:22.628" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201027 18:20:22.628" starttime="20201027 18:20:18.116"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201027 18:20:22.629" starttime="20201027 18:20:22.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201027 18:20:22.629" starttime="20201027 18:20:22.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201027 18:20:22.630" starttime="20201027 18:20:22.629"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 18:20:22.630" critical="yes" starttime="20201027 18:20:13.708"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:22.637" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:22.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:22.642" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:20:22.642" starttime="20201027 18:20:22.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:22.643" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:20:22.643" starttime="20201027 18:20:22.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:22.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:22.644" starttime="20201027 18:20:22.644"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:22.645" starttime="20201027 18:20:22.634"></status>
</kw>
<msg timestamp="20201027 18:20:22.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:22.645" starttime="20201027 18:20:22.634"></status>
</kw>
<msg timestamp="20201027 18:20:22.645" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:20:22.645" starttime="20201027 18:20:22.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:20:22.646" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:20:22.646" starttime="20201027 18:20:22.645"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:22.651" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:22.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:22.669" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:20:22.669" starttime="20201027 18:20:22.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:22.670" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:20:22.670" starttime="20201027 18:20:22.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:22.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:22.671" starttime="20201027 18:20:22.671"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:22.672" starttime="20201027 18:20:22.648"></status>
</kw>
<msg timestamp="20201027 18:20:22.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:22.672" starttime="20201027 18:20:22.647"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:22.672" starttime="20201027 18:20:22.647"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:22.672" starttime="20201027 18:20:22.646"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:22.672" starttime="20201027 18:20:22.633"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:22.673" starttime="20201027 18:20:22.632"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:22.678" level="INFO">Running command 'ozone sh key delete 83579-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:27.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:27.004" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:20:27.005" starttime="20201027 18:20:22.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:27.006" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:20:27.006" starttime="20201027 18:20:27.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:27.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:27.007" starttime="20201027 18:20:27.006"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:27.007" starttime="20201027 18:20:22.674"></status>
</kw>
<msg timestamp="20201027 18:20:27.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:27.007" starttime="20201027 18:20:22.673"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:27.008" starttime="20201027 18:20:22.673"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:27.030" level="INFO">Running command 'ozone sh key list 83579-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:32.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:32.584" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201027 18:20:32.584" starttime="20201027 18:20:27.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:32.585" level="INFO">key1</msg>
<status status="PASS" endtime="20201027 18:20:32.585" starttime="20201027 18:20:32.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:32.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:32.586" starttime="20201027 18:20:32.586"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:32.587" starttime="20201027 18:20:27.009"></status>
</kw>
<msg timestamp="20201027 18:20:32.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:32.587" starttime="20201027 18:20:27.008"></status>
</kw>
<msg timestamp="20201027 18:20:32.587" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201027 18:20:32.587" starttime="20201027 18:20:27.008"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201027 18:20:32.588" starttime="20201027 18:20:32.587"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 18:20:32.588" critical="yes" starttime="20201027 18:20:22.631"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:32.597" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:32.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:32.599" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:20:32.599" starttime="20201027 18:20:32.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:32.600" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:20:32.600" starttime="20201027 18:20:32.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:32.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:32.601" starttime="20201027 18:20:32.600"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:32.601" starttime="20201027 18:20:32.593"></status>
</kw>
<msg timestamp="20201027 18:20:32.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:32.601" starttime="20201027 18:20:32.593"></status>
</kw>
<msg timestamp="20201027 18:20:32.601" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:20:32.601" starttime="20201027 18:20:32.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:20:32.602" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:20:32.602" starttime="20201027 18:20:32.602"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:32.607" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:32.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:32.626" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:20:32.626" starttime="20201027 18:20:32.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:32.627" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:20:32.627" starttime="20201027 18:20:32.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:32.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:32.628" starttime="20201027 18:20:32.628"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:32.629" starttime="20201027 18:20:32.604"></status>
</kw>
<msg timestamp="20201027 18:20:32.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:32.629" starttime="20201027 18:20:32.604"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:32.629" starttime="20201027 18:20:32.603"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:32.629" starttime="20201027 18:20:32.603"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:32.629" starttime="20201027 18:20:32.591"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:32.629" starttime="20201027 18:20:32.590"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:32.634" level="INFO">Running command 'ozone sh bucket list 83579-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:37.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:37.245" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:20:37.245" starttime="20201027 18:20:32.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:37.246" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "83579-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T18:19:28.762Z",
  "modificationTime" : "2020-10-27T18:19:28.762Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83579-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "83579-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T18:19:02.546Z",
  "modificationTime" : "2020-10-27T18:19:24.430Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83579-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "83579-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T18:19:37.489Z",
  "modificationTime" : "2020-10-27T18:19:37.489Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83579-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "83579-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T18:18:54.622Z",
  "modificationTime" : "2020-10-27T18:19:19.956Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83579-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "83579-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T18:18:58.593Z",
  "modificationTime" : "2020-10-27T18:18:58.593Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83579-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 18:20:37.246" starttime="20201027 18:20:37.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:37.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:37.247" starttime="20201027 18:20:37.246"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:37.247" starttime="20201027 18:20:32.631"></status>
</kw>
<msg timestamp="20201027 18:20:37.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:37.248" starttime="20201027 18:20:32.630"></status>
</kw>
<msg timestamp="20201027 18:20:37.248" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:20:37.248" starttime="20201027 18:20:32.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201027 18:20:37.249" starttime="20201027 18:20:37.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201027 18:20:37.249" starttime="20201027 18:20:37.249"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 18:20:37.249" critical="yes" starttime="20201027 18:20:32.589"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:37.256" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:37.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:37.258" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:20:37.258" starttime="20201027 18:20:37.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:37.259" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:20:37.260" starttime="20201027 18:20:37.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:37.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:37.260" starttime="20201027 18:20:37.260"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:37.261" starttime="20201027 18:20:37.253"></status>
</kw>
<msg timestamp="20201027 18:20:37.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:37.261" starttime="20201027 18:20:37.253"></status>
</kw>
<msg timestamp="20201027 18:20:37.261" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:20:37.261" starttime="20201027 18:20:37.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:20:37.262" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:20:37.262" starttime="20201027 18:20:37.262"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:37.270" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:37.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:37.281" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:20:37.281" starttime="20201027 18:20:37.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:37.282" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:20:37.282" starttime="20201027 18:20:37.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:37.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:37.283" starttime="20201027 18:20:37.282"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:37.283" starttime="20201027 18:20:37.266"></status>
</kw>
<msg timestamp="20201027 18:20:37.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:37.284" starttime="20201027 18:20:37.265"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:37.284" starttime="20201027 18:20:37.264"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:37.284" starttime="20201027 18:20:37.263"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:37.284" starttime="20201027 18:20:37.252"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:37.284" starttime="20201027 18:20:37.251"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:37.290" level="INFO">Running command 'ozone sh bucket info 83579-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:41.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:41.323" level="INFO">${output} = 83579-source bucket1</msg>
<status status="PASS" endtime="20201027 18:20:41.323" starttime="20201027 18:20:37.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:41.324" level="INFO">83579-source bucket1</msg>
<status status="PASS" endtime="20201027 18:20:41.324" starttime="20201027 18:20:41.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:41.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:41.325" starttime="20201027 18:20:41.324"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:41.325" starttime="20201027 18:20:37.286"></status>
</kw>
<msg timestamp="20201027 18:20:41.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:41.326" starttime="20201027 18:20:37.285"></status>
</kw>
<msg timestamp="20201027 18:20:41.326" level="INFO">${result} = 83579-source bucket1</msg>
<status status="PASS" endtime="20201027 18:20:41.326" starttime="20201027 18:20:37.285"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201027 18:20:41.327" starttime="20201027 18:20:41.326"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 18:20:41.327" critical="yes" starttime="20201027 18:20:37.250"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:41.334" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:41.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:41.337" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:20:41.337" starttime="20201027 18:20:41.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:41.338" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:20:41.338" starttime="20201027 18:20:41.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:41.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:41.339" starttime="20201027 18:20:41.338"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:41.339" starttime="20201027 18:20:41.331"></status>
</kw>
<msg timestamp="20201027 18:20:41.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:41.339" starttime="20201027 18:20:41.331"></status>
</kw>
<msg timestamp="20201027 18:20:41.339" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:20:41.340" starttime="20201027 18:20:41.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:20:41.340" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:20:41.340" starttime="20201027 18:20:41.340"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:41.347" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:41.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:41.364" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:20:41.364" starttime="20201027 18:20:41.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:41.365" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:20:41.365" starttime="20201027 18:20:41.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:41.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:41.366" starttime="20201027 18:20:41.366"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:41.367" starttime="20201027 18:20:41.343"></status>
</kw>
<msg timestamp="20201027 18:20:41.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:41.367" starttime="20201027 18:20:41.343"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:41.367" starttime="20201027 18:20:41.342"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:41.367" starttime="20201027 18:20:41.340"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:41.367" starttime="20201027 18:20:41.330"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:41.367" starttime="20201027 18:20:41.329"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:41.372" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 83579-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:46.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:46.008" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:20:46.008" starttime="20201027 18:20:41.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:46.009" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 18:20:46.010" starttime="20201027 18:20:46.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:46.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:46.010" starttime="20201027 18:20:46.010"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:46.011" starttime="20201027 18:20:41.369"></status>
</kw>
<msg timestamp="20201027 18:20:46.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:46.011" starttime="20201027 18:20:41.368"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:46.011" starttime="20201027 18:20:41.368"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:46.019" level="INFO">Running command 'ozone sh bucket getacl 83579-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:49.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:49.936" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201027 18:20:49.936" starttime="20201027 18:20:46.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:49.937" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201027 18:20:49.937" starttime="20201027 18:20:49.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:49.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:49.938" starttime="20201027 18:20:49.938"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:49.938" starttime="20201027 18:20:46.014"></status>
</kw>
<msg timestamp="20201027 18:20:49.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:49.939" starttime="20201027 18:20:46.014"></status>
</kw>
<msg timestamp="20201027 18:20:49.939" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201027 18:20:49.939" starttime="20201027 18:20:46.013"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201027 18:20:49.940" starttime="20201027 18:20:49.939"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:49.940" starttime="20201027 18:20:46.012"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:49.944" level="INFO">Running command 'ozone sh bucket getacl 83579-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:53.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:53.791" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:20:53.792" starttime="20201027 18:20:49.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:53.793" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:20:53.793" starttime="20201027 18:20:53.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:53.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:53.794" starttime="20201027 18:20:53.793"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:53.794" starttime="20201027 18:20:49.942"></status>
</kw>
<msg timestamp="20201027 18:20:53.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:53.795" starttime="20201027 18:20:49.942"></status>
</kw>
<msg timestamp="20201027 18:20:53.795" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201027 18:20:53.795" starttime="20201027 18:20:49.941"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201027 18:20:53.796" starttime="20201027 18:20:53.795"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:53.796" starttime="20201027 18:20:49.940"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:53.801" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 83579-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:20:57.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:20:57.382" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:20:57.382" starttime="20201027 18:20:53.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:20:57.383" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201027 18:20:57.383" starttime="20201027 18:20:57.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:20:57.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:20:57.384" starttime="20201027 18:20:57.383"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:57.384" starttime="20201027 18:20:53.797"></status>
</kw>
<msg timestamp="20201027 18:20:57.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:20:57.384" starttime="20201027 18:20:53.797"></status>
</kw>
<status status="PASS" endtime="20201027 18:20:57.385" starttime="20201027 18:20:53.796"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:20:57.390" level="INFO">Running command 'ozone sh bucket getacl 83579-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:01.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:01.315" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:21:01.315" starttime="20201027 18:20:57.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:01.317" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:21:01.317" starttime="20201027 18:21:01.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:01.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:01.318" starttime="20201027 18:21:01.317"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:01.318" starttime="20201027 18:20:57.387"></status>
</kw>
<msg timestamp="20201027 18:21:01.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:01.318" starttime="20201027 18:20:57.387"></status>
</kw>
<msg timestamp="20201027 18:21:01.318" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201027 18:21:01.318" starttime="20201027 18:20:57.386"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201027 18:21:01.319" starttime="20201027 18:21:01.319"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:01.319" starttime="20201027 18:20:57.385"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:01.326" level="INFO">Running command 'ozone sh bucket getacl 83579-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:05.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:05.232" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201027 18:21:05.232" starttime="20201027 18:21:01.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:05.233" level="INFO">READ</msg>
<status status="PASS" endtime="20201027 18:21:05.233" starttime="20201027 18:21:05.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:05.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:05.234" starttime="20201027 18:21:05.233"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:05.234" starttime="20201027 18:21:01.321"></status>
</kw>
<msg timestamp="20201027 18:21:05.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:05.235" starttime="20201027 18:21:01.321"></status>
</kw>
<msg timestamp="20201027 18:21:05.235" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201027 18:21:05.235" starttime="20201027 18:21:01.320"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201027 18:21:05.236" starttime="20201027 18:21:05.235"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:05.236" starttime="20201027 18:21:01.319"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 18:21:05.236" critical="yes" starttime="20201027 18:20:41.328"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:05.244" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:05.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:05.246" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:21:05.246" starttime="20201027 18:21:05.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:05.247" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:21:05.247" starttime="20201027 18:21:05.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:05.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:05.248" starttime="20201027 18:21:05.247"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:05.248" starttime="20201027 18:21:05.240"></status>
</kw>
<msg timestamp="20201027 18:21:05.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:05.248" starttime="20201027 18:21:05.240"></status>
</kw>
<msg timestamp="20201027 18:21:05.249" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:21:05.249" starttime="20201027 18:21:05.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:21:05.250" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:21:05.250" starttime="20201027 18:21:05.249"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:05.255" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:05.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:05.278" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:21:05.278" starttime="20201027 18:21:05.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:05.279" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:21:05.279" starttime="20201027 18:21:05.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:05.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:05.280" starttime="20201027 18:21:05.279"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:05.280" starttime="20201027 18:21:05.251"></status>
</kw>
<msg timestamp="20201027 18:21:05.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:05.280" starttime="20201027 18:21:05.251"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:05.280" starttime="20201027 18:21:05.250"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:05.281" starttime="20201027 18:21:05.250"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:05.281" starttime="20201027 18:21:05.239"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:05.281" starttime="20201027 18:21:05.238"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:05.285" level="INFO">Running command 'ozone sh bucket link 83579-source/bucket2 83579-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:08.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:08.798" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:08.798" starttime="20201027 18:21:05.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:08.799" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:21:08.799" starttime="20201027 18:21:08.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:08.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:08.800" starttime="20201027 18:21:08.799"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:08.800" starttime="20201027 18:21:05.282"></status>
</kw>
<msg timestamp="20201027 18:21:08.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:08.801" starttime="20201027 18:21:05.282"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:08.801" starttime="20201027 18:21:05.281"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:08.804" level="INFO">Running command 'ozone sh bucket create 83579-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:12.146" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 18:21:12.146" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:12.146" starttime="20201027 18:21:08.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:12.148" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201027 18:21:12.148" starttime="20201027 18:21:12.147"></status>
</kw>
<msg timestamp="20201027 18:21:12.148" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:12.148" starttime="20201027 18:21:08.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201027 18:21:12.149" starttime="20201027 18:21:12.148"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:12.153" level="INFO">Running command 'ozone sh bucket create 83579-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:15.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:15.818" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:15.818" starttime="20201027 18:21:12.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:15.819" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:21:15.820" starttime="20201027 18:21:15.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:15.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:15.820" starttime="20201027 18:21:15.820"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:15.821" starttime="20201027 18:21:12.150"></status>
</kw>
<msg timestamp="20201027 18:21:15.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:15.821" starttime="20201027 18:21:12.150"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:15.821" starttime="20201027 18:21:12.149"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:15.826" level="INFO">Running command 'ozone sh bucket link 83579-source/bucket1 83579-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:19.528" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 18:21:19.529" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:19.529" starttime="20201027 18:21:15.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:19.530" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201027 18:21:19.530" starttime="20201027 18:21:19.529"></status>
</kw>
<msg timestamp="20201027 18:21:19.531" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:19.531" starttime="20201027 18:21:15.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201027 18:21:19.532" starttime="20201027 18:21:19.531"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 18:21:19.532" critical="yes" starttime="20201027 18:21:05.237"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:19.542" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:19.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:19.544" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:21:19.544" starttime="20201027 18:21:19.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:19.545" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:21:19.545" starttime="20201027 18:21:19.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:19.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:19.546" starttime="20201027 18:21:19.546"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:19.546" starttime="20201027 18:21:19.536"></status>
</kw>
<msg timestamp="20201027 18:21:19.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:19.547" starttime="20201027 18:21:19.535"></status>
</kw>
<msg timestamp="20201027 18:21:19.547" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:21:19.547" starttime="20201027 18:21:19.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:21:19.548" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:21:19.548" starttime="20201027 18:21:19.547"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:19.552" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:19.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:19.581" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:21:19.581" starttime="20201027 18:21:19.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:19.582" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:21:19.582" starttime="20201027 18:21:19.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:19.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:19.582" starttime="20201027 18:21:19.582"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:19.583" starttime="20201027 18:21:19.549"></status>
</kw>
<msg timestamp="20201027 18:21:19.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:19.583" starttime="20201027 18:21:19.549"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:19.583" starttime="20201027 18:21:19.548"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:19.583" starttime="20201027 18:21:19.548"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:19.583" starttime="20201027 18:21:19.534"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:19.584" starttime="20201027 18:21:19.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:19.588" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:19.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:19.593" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:21:19.593" starttime="20201027 18:21:19.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:19.594" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:21:19.594" starttime="20201027 18:21:19.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:19.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:19.595" starttime="20201027 18:21:19.594"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:19.595" starttime="20201027 18:21:19.586"></status>
</kw>
<msg timestamp="20201027 18:21:19.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:19.595" starttime="20201027 18:21:19.585"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:19.595" starttime="20201027 18:21:19.585"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:19.600" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:19.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:19.602" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:21:19.602" starttime="20201027 18:21:19.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:19.603" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:21:19.603" starttime="20201027 18:21:19.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:19.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:19.604" starttime="20201027 18:21:19.604"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:19.604" starttime="20201027 18:21:19.597"></status>
</kw>
<msg timestamp="20201027 18:21:19.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:19.605" starttime="20201027 18:21:19.597"></status>
</kw>
<msg timestamp="20201027 18:21:19.605" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:21:19.605" starttime="20201027 18:21:19.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:21:19.606" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:21:19.606" starttime="20201027 18:21:19.605"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:19.611" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:19.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:19.632" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:21:19.632" starttime="20201027 18:21:19.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:19.633" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:21:19.633" starttime="20201027 18:21:19.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:19.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:19.634" starttime="20201027 18:21:19.633"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:19.634" starttime="20201027 18:21:19.607"></status>
</kw>
<msg timestamp="20201027 18:21:19.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:19.634" starttime="20201027 18:21:19.607"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:19.635" starttime="20201027 18:21:19.606"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:19.635" starttime="20201027 18:21:19.606"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:19.635" starttime="20201027 18:21:19.596"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:19.635" starttime="20201027 18:21:19.596"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:19.639" level="INFO">Running command 'ozone sh key list 83579-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:23.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:23.309" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:23.309" starttime="20201027 18:21:19.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:23.310" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "83579-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-10-27T18:18:41.412Z",
  "modificationTime" : "2020-10-27T18:18:45.896Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201027 18:21:23.310" starttime="20201027 18:21:23.309"></status>
</kw>
<msg timestamp="20201027 18:21:23.311" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:23.311" starttime="20201027 18:21:19.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201027 18:21:23.311" starttime="20201027 18:21:23.311"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:23.312" starttime="20201027 18:21:19.584"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:23.312" starttime="20201027 18:21:19.584"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 18:21:23.312" critical="yes" starttime="20201027 18:21:19.533"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:23.319" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:23.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:23.321" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:21:23.321" starttime="20201027 18:21:23.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:23.322" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:21:23.322" starttime="20201027 18:21:23.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:23.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:23.323" starttime="20201027 18:21:23.322"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:23.323" starttime="20201027 18:21:23.315"></status>
</kw>
<msg timestamp="20201027 18:21:23.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:23.324" starttime="20201027 18:21:23.315"></status>
</kw>
<msg timestamp="20201027 18:21:23.324" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:21:23.324" starttime="20201027 18:21:23.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:21:23.325" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:21:23.325" starttime="20201027 18:21:23.324"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:23.330" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:23.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:23.345" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:21:23.346" starttime="20201027 18:21:23.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:23.347" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:21:23.347" starttime="20201027 18:21:23.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:23.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:23.347" starttime="20201027 18:21:23.347"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:23.348" starttime="20201027 18:21:23.326"></status>
</kw>
<msg timestamp="20201027 18:21:23.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:23.348" starttime="20201027 18:21:23.326"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:23.348" starttime="20201027 18:21:23.326"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:23.348" starttime="20201027 18:21:23.325"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:23.348" starttime="20201027 18:21:23.314"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:23.349" starttime="20201027 18:21:23.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:23.354" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:23.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:23.356" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:21:23.356" starttime="20201027 18:21:23.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:23.358" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:21:23.358" starttime="20201027 18:21:23.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:23.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:23.359" starttime="20201027 18:21:23.358"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:23.359" starttime="20201027 18:21:23.351"></status>
</kw>
<msg timestamp="20201027 18:21:23.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:23.359" starttime="20201027 18:21:23.350"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:23.360" starttime="20201027 18:21:23.350"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:23.364" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:23.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:23.366" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:21:23.366" starttime="20201027 18:21:23.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:23.367" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:21:23.367" starttime="20201027 18:21:23.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:23.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:23.368" starttime="20201027 18:21:23.367"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:23.368" starttime="20201027 18:21:23.361"></status>
</kw>
<msg timestamp="20201027 18:21:23.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:23.368" starttime="20201027 18:21:23.361"></status>
</kw>
<msg timestamp="20201027 18:21:23.368" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:21:23.368" starttime="20201027 18:21:23.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:21:23.369" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:21:23.369" starttime="20201027 18:21:23.368"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:23.374" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:23.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:23.401" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:21:23.401" starttime="20201027 18:21:23.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:23.408" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:21:23.408" starttime="20201027 18:21:23.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:23.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:23.409" starttime="20201027 18:21:23.408"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:23.410" starttime="20201027 18:21:23.371"></status>
</kw>
<msg timestamp="20201027 18:21:23.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:23.410" starttime="20201027 18:21:23.370"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:23.410" starttime="20201027 18:21:23.370"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:23.410" starttime="20201027 18:21:23.369"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:23.411" starttime="20201027 18:21:23.360"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:23.411" starttime="20201027 18:21:23.360"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:23.414" level="INFO">Running command 'ozone sh key list 83579-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:26.824" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 18:21:26.824" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:26.824" starttime="20201027 18:21:23.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:26.826" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201027 18:21:26.826" starttime="20201027 18:21:26.825"></status>
</kw>
<msg timestamp="20201027 18:21:26.827" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:26.827" starttime="20201027 18:21:23.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201027 18:21:26.827" starttime="20201027 18:21:26.827"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:26.828" starttime="20201027 18:21:23.349"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:26.828" starttime="20201027 18:21:23.349"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 18:21:26.828" critical="yes" starttime="20201027 18:21:23.313"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:26.836" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:26.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:26.837" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:21:26.837" starttime="20201027 18:21:26.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:26.838" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:21:26.838" starttime="20201027 18:21:26.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:26.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:26.839" starttime="20201027 18:21:26.838"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:26.839" starttime="20201027 18:21:26.832"></status>
</kw>
<msg timestamp="20201027 18:21:26.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:26.839" starttime="20201027 18:21:26.832"></status>
</kw>
<msg timestamp="20201027 18:21:26.840" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:21:26.840" starttime="20201027 18:21:26.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:21:26.840" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:21:26.841" starttime="20201027 18:21:26.840"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:26.845" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:26.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:26.861" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:21:26.862" starttime="20201027 18:21:26.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:26.863" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:21:26.863" starttime="20201027 18:21:26.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:26.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:26.864" starttime="20201027 18:21:26.863"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:26.864" starttime="20201027 18:21:26.842"></status>
</kw>
<msg timestamp="20201027 18:21:26.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:26.864" starttime="20201027 18:21:26.842"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:26.865" starttime="20201027 18:21:26.841"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:26.865" starttime="20201027 18:21:26.841"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:26.865" starttime="20201027 18:21:26.831"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:26.865" starttime="20201027 18:21:26.830"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:26.870" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:26.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:26.873" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:21:26.873" starttime="20201027 18:21:26.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:26.874" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:21:26.874" starttime="20201027 18:21:26.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:26.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:26.874" starttime="20201027 18:21:26.874"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:26.875" starttime="20201027 18:21:26.867"></status>
</kw>
<msg timestamp="20201027 18:21:26.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:26.875" starttime="20201027 18:21:26.867"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:26.875" starttime="20201027 18:21:26.866"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:26.880" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:26.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:26.882" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:21:26.882" starttime="20201027 18:21:26.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:26.882" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:21:26.883" starttime="20201027 18:21:26.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:26.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:26.883" starttime="20201027 18:21:26.883"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:26.883" starttime="20201027 18:21:26.877"></status>
</kw>
<msg timestamp="20201027 18:21:26.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:26.884" starttime="20201027 18:21:26.877"></status>
</kw>
<msg timestamp="20201027 18:21:26.884" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:21:26.884" starttime="20201027 18:21:26.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:21:26.885" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:21:26.885" starttime="20201027 18:21:26.884"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:26.890" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:26.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:26.905" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:21:26.905" starttime="20201027 18:21:26.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:26.906" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:21:26.906" starttime="20201027 18:21:26.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:26.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:26.907" starttime="20201027 18:21:26.906"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:26.907" starttime="20201027 18:21:26.887"></status>
</kw>
<msg timestamp="20201027 18:21:26.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:26.907" starttime="20201027 18:21:26.886"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:26.907" starttime="20201027 18:21:26.886"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:26.907" starttime="20201027 18:21:26.885"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:26.907" starttime="20201027 18:21:26.876"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:26.908" starttime="20201027 18:21:26.875"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:26.912" level="INFO">Running command 'ozone sh bucket info 83579-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:30.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:30.888" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:30.889" starttime="20201027 18:21:26.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:30.890" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "83579-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T18:19:02.546Z",
  "modificationTime" : "2020-10-27T18:19:24.430Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83579-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 18:21:30.890" starttime="20201027 18:21:30.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:30.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:30.891" starttime="20201027 18:21:30.890"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:30.891" starttime="20201027 18:21:26.909"></status>
</kw>
<msg timestamp="20201027 18:21:30.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:30.891" starttime="20201027 18:21:26.908"></status>
</kw>
<msg timestamp="20201027 18:21:30.892" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:30.892" starttime="20201027 18:21:26.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201027 18:21:30.893" starttime="20201027 18:21:30.892"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201027 18:21:30.893" starttime="20201027 18:21:30.893"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:30.897" level="INFO">Running command 'ozone sh key list 83579-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:34.712" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 18:21:34.712" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:34.712" starttime="20201027 18:21:30.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:34.713" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201027 18:21:34.714" starttime="20201027 18:21:34.713"></status>
</kw>
<msg timestamp="20201027 18:21:34.714" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:34.714" starttime="20201027 18:21:30.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201027 18:21:34.715" starttime="20201027 18:21:34.714"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:34.715" starttime="20201027 18:21:26.866"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:34.715" starttime="20201027 18:21:26.865"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 18:21:34.716" critical="yes" starttime="20201027 18:21:26.829"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:34.723" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:34.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:34.726" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:21:34.726" starttime="20201027 18:21:34.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:34.727" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:21:34.727" starttime="20201027 18:21:34.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:34.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:34.728" starttime="20201027 18:21:34.727"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:34.728" starttime="20201027 18:21:34.720"></status>
</kw>
<msg timestamp="20201027 18:21:34.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:34.728" starttime="20201027 18:21:34.719"></status>
</kw>
<msg timestamp="20201027 18:21:34.729" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:21:34.729" starttime="20201027 18:21:34.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:21:34.730" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:21:34.730" starttime="20201027 18:21:34.729"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:34.736" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:34.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:34.761" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:21:34.761" starttime="20201027 18:21:34.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:34.763" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:21:34.763" starttime="20201027 18:21:34.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:34.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:34.764" starttime="20201027 18:21:34.763"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:34.764" starttime="20201027 18:21:34.733"></status>
</kw>
<msg timestamp="20201027 18:21:34.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:34.764" starttime="20201027 18:21:34.733"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:34.765" starttime="20201027 18:21:34.730"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:34.765" starttime="20201027 18:21:34.730"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:34.765" starttime="20201027 18:21:34.718"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:34.765" starttime="20201027 18:21:34.718"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:34.770" level="INFO">Running command 'ozone sh bucket link 83579-target/loop1 83579-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:38.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:38.772" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:38.772" starttime="20201027 18:21:34.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:38.773" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:21:38.774" starttime="20201027 18:21:38.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:38.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:38.774" starttime="20201027 18:21:38.774"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:38.775" starttime="20201027 18:21:34.766"></status>
</kw>
<msg timestamp="20201027 18:21:38.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:38.775" starttime="20201027 18:21:34.766"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:38.775" starttime="20201027 18:21:34.765"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:38.780" level="INFO">Running command 'ozone sh bucket link 83579-target/loop2 83579-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:43.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:43.320" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:43.321" starttime="20201027 18:21:38.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:43.322" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:21:43.322" starttime="20201027 18:21:43.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:43.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:43.323" starttime="20201027 18:21:43.322"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:43.323" starttime="20201027 18:21:38.777"></status>
</kw>
<msg timestamp="20201027 18:21:43.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:43.323" starttime="20201027 18:21:38.776"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:43.323" starttime="20201027 18:21:38.776"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:43.328" level="INFO">Running command 'ozone sh bucket link 83579-target/loop3 83579-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:47.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:47.468" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:47.469" starttime="20201027 18:21:43.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:47.470" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:21:47.470" starttime="20201027 18:21:47.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:47.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:47.471" starttime="20201027 18:21:47.470"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:47.471" starttime="20201027 18:21:43.325"></status>
</kw>
<msg timestamp="20201027 18:21:47.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:47.471" starttime="20201027 18:21:43.324"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:47.472" starttime="20201027 18:21:43.324"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:47.477" level="INFO">Running command 'ozone sh key list 83579-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:51.617" level="INFO">${rc} = 255</msg>
<msg timestamp="20201027 18:21:51.617" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:51.617" starttime="20201027 18:21:47.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:51.618" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201027 18:21:51.618" starttime="20201027 18:21:51.618"></status>
</kw>
<msg timestamp="20201027 18:21:51.619" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:51.619" starttime="20201027 18:21:47.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201027 18:21:51.620" starttime="20201027 18:21:51.619"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 18:21:51.620" critical="yes" starttime="20201027 18:21:34.716"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:51.627" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:51.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:51.630" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:21:51.630" starttime="20201027 18:21:51.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:51.632" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:21:51.632" starttime="20201027 18:21:51.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:51.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:51.633" starttime="20201027 18:21:51.632"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:51.633" starttime="20201027 18:21:51.624"></status>
</kw>
<msg timestamp="20201027 18:21:51.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:51.633" starttime="20201027 18:21:51.624"></status>
</kw>
<msg timestamp="20201027 18:21:51.634" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:21:51.634" starttime="20201027 18:21:51.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:21:51.635" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:21:51.635" starttime="20201027 18:21:51.634"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:51.640" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:51.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:51.658" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:21:51.658" starttime="20201027 18:21:51.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:51.659" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:21:51.659" starttime="20201027 18:21:51.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:51.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:51.660" starttime="20201027 18:21:51.659"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:51.661" starttime="20201027 18:21:51.636"></status>
</kw>
<msg timestamp="20201027 18:21:51.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:51.661" starttime="20201027 18:21:51.636"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:51.661" starttime="20201027 18:21:51.635"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:51.661" starttime="20201027 18:21:51.635"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:51.661" starttime="20201027 18:21:51.622"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:51.662" starttime="20201027 18:21:51.622"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:51.667" level="INFO">Running command 'ozone sh bucket link 83579-source/bucket1 83579-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:21:55.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:21:55.732" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:21:55.732" starttime="20201027 18:21:51.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:21:55.733" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:21:55.733" starttime="20201027 18:21:55.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:21:55.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:21:55.734" starttime="20201027 18:21:55.733"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:55.735" starttime="20201027 18:21:51.663"></status>
</kw>
<msg timestamp="20201027 18:21:55.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:21:55.735" starttime="20201027 18:21:51.663"></status>
</kw>
<status status="PASS" endtime="20201027 18:21:55.735" starttime="20201027 18:21:51.662"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:21:55.739" level="INFO">Running command 'ozone sh key put 83579-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:22:05.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:22:05.018" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:22:05.018" starttime="20201027 18:21:55.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:22:05.019" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:22:05.019" starttime="20201027 18:22:05.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:22:05.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:22:05.020" starttime="20201027 18:22:05.019"></status>
</kw>
<status status="PASS" endtime="20201027 18:22:05.020" starttime="20201027 18:21:55.736"></status>
</kw>
<msg timestamp="20201027 18:22:05.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:22:05.021" starttime="20201027 18:21:55.736"></status>
</kw>
<status status="PASS" endtime="20201027 18:22:05.021" starttime="20201027 18:21:55.735"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201027 18:22:05.024" level="INFO">${postfix} = 26230</msg>
<status status="PASS" endtime="20201027 18:22:05.024" starttime="20201027 18:22:05.023"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201027 18:22:05.024" level="INFO">${tmpfile} = /tmp/tempkey-26230</msg>
<status status="PASS" endtime="20201027 18:22:05.025" starttime="20201027 18:22:05.024"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:22:05.029" level="INFO">Running command 'ozone sh key get -f 83579-target/link1/key3 /tmp/tempkey-26230 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:22:11.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:22:11.317" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:22:11.317" starttime="20201027 18:22:05.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:22:11.319" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:22:11.319" starttime="20201027 18:22:11.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:22:11.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:22:11.320" starttime="20201027 18:22:11.319"></status>
</kw>
<status status="PASS" endtime="20201027 18:22:11.320" starttime="20201027 18:22:05.026"></status>
</kw>
<msg timestamp="20201027 18:22:11.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:22:11.320" starttime="20201027 18:22:05.025"></status>
</kw>
<status status="PASS" endtime="20201027 18:22:11.320" starttime="20201027 18:22:05.025"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201027 18:22:11.323" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-26230 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:22:11.326" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201027 18:22:11.326" starttime="20201027 18:22:11.321"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:22:11.333" level="INFO">Running command 'rm -f /tmp/tempkey-26230 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:22:11.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:22:11.334" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:22:11.334" starttime="20201027 18:22:11.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:22:11.336" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:22:11.336" starttime="20201027 18:22:11.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:22:11.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:22:11.337" starttime="20201027 18:22:11.336"></status>
</kw>
<status status="PASS" endtime="20201027 18:22:11.337" starttime="20201027 18:22:11.328"></status>
</kw>
<msg timestamp="20201027 18:22:11.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:22:11.337" starttime="20201027 18:22:11.328"></status>
</kw>
<status status="PASS" endtime="20201027 18:22:11.337" starttime="20201027 18:22:11.327"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201027 18:22:11.338" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201027 18:22:11.338" starttime="20201027 18:22:11.338"></status>
</kw>
<msg timestamp="20201027 18:22:11.338" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201027 18:22:11.339" starttime="20201027 18:22:05.022"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201027 18:22:11.339" starttime="20201027 18:22:11.339"></status>
</kw>
<status status="PASS" endtime="20201027 18:22:11.339" starttime="20201027 18:22:05.021"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 18:22:11.340" critical="yes" starttime="20201027 18:21:51.621"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:22:11.346" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:22:11.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:22:11.349" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201027 18:22:11.350" starttime="20201027 18:22:11.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:22:11.351" level="INFO">scm</msg>
<status status="PASS" endtime="20201027 18:22:11.351" starttime="20201027 18:22:11.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:22:11.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:22:11.352" starttime="20201027 18:22:11.351"></status>
</kw>
<status status="PASS" endtime="20201027 18:22:11.352" starttime="20201027 18:22:11.343"></status>
</kw>
<msg timestamp="20201027 18:22:11.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:22:11.353" starttime="20201027 18:22:11.343"></status>
</kw>
<msg timestamp="20201027 18:22:11.353" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201027 18:22:11.353" starttime="20201027 18:22:11.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201027 18:22:11.354" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201027 18:22:11.354" starttime="20201027 18:22:11.353"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:22:11.359" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:22:11.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:22:11.373" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 18:22:11.373" starttime="20201027 18:22:11.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:22:11.375" level="INFO"></msg>
<status status="PASS" endtime="20201027 18:22:11.375" starttime="20201027 18:22:11.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:22:11.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:22:11.376" starttime="20201027 18:22:11.375"></status>
</kw>
<status status="PASS" endtime="20201027 18:22:11.376" starttime="20201027 18:22:11.355"></status>
</kw>
<msg timestamp="20201027 18:22:11.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:22:11.376" starttime="20201027 18:22:11.355"></status>
</kw>
<status status="PASS" endtime="20201027 18:22:11.377" starttime="20201027 18:22:11.355"></status>
</kw>
<status status="PASS" endtime="20201027 18:22:11.377" starttime="20201027 18:22:11.354"></status>
</kw>
<status status="PASS" endtime="20201027 18:22:11.377" starttime="20201027 18:22:11.342"></status>
</kw>
<status status="PASS" endtime="20201027 18:22:11.377" starttime="20201027 18:22:11.341"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:22:11.382" level="INFO">Running command 'ozone sh bucket delete 83579-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:22:15.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:22:15.587" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:22:15.587" starttime="20201027 18:22:11.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:22:15.589" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201027 18:22:15.589" starttime="20201027 18:22:15.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:22:15.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:22:15.590" starttime="20201027 18:22:15.589"></status>
</kw>
<status status="PASS" endtime="20201027 18:22:15.590" starttime="20201027 18:22:11.378"></status>
</kw>
<msg timestamp="20201027 18:22:15.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:22:15.590" starttime="20201027 18:22:11.378"></status>
</kw>
<status status="PASS" endtime="20201027 18:22:15.591" starttime="20201027 18:22:11.377"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:22:15.595" level="INFO">Running command 'ozone sh bucket list 83579-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:22:19.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:22:19.740" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:22:19.740" starttime="20201027 18:22:15.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:22:19.741" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "83579-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T18:21:15.718Z",
  "modificationTime" : "2020-10-27T18:21:15.718Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "83579-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T18:19:28.762Z",
  "modificationTime" : "2020-10-27T18:19:28.762Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83579-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "83579-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T18:19:02.546Z",
  "modificationTime" : "2020-10-27T18:19:24.430Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83579-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "83579-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T18:21:08.617Z",
  "modificationTime" : "2020-10-27T18:21:08.617Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83579-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "83579-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T18:21:55.599Z",
  "modificationTime" : "2020-10-27T18:21:55.599Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83579-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "83579-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T18:21:47.312Z",
  "modificationTime" : "2020-10-27T18:21:47.312Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83579-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "83579-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T18:21:38.685Z",
  "modificationTime" : "2020-10-27T18:21:38.685Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83579-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "83579-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T18:21:43.136Z",
  "modificationTime" : "2020-10-27T18:21:43.136Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83579-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "83579-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T18:18:54.622Z",
  "modificationTime" : "2020-10-27T18:19:19.956Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83579-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "83579-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-27T18:18:58.593Z",
  "modificationTime" : "2020-10-27T18:18:58.593Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83579-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201027 18:22:19.741" starttime="20201027 18:22:19.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:22:19.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:22:19.742" starttime="20201027 18:22:19.741"></status>
</kw>
<status status="PASS" endtime="20201027 18:22:19.742" starttime="20201027 18:22:15.592"></status>
</kw>
<msg timestamp="20201027 18:22:19.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:22:19.742" starttime="20201027 18:22:15.592"></status>
</kw>
<msg timestamp="20201027 18:22:19.743" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201027 18:22:19.743" starttime="20201027 18:22:15.591"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201027 18:22:19.744" starttime="20201027 18:22:19.743"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 18:22:19.750" level="INFO">Running command 'ozone sh key list 83579-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 18:22:24.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 18:22:24.493" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201027 18:22:24.493" starttime="20201027 18:22:19.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 18:22:24.494" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201027 18:22:24.495" starttime="20201027 18:22:24.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 18:22:24.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 18:22:24.495" starttime="20201027 18:22:24.495"></status>
</kw>
<status status="PASS" endtime="20201027 18:22:24.496" starttime="20201027 18:22:19.745"></status>
</kw>
<msg timestamp="20201027 18:22:24.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 18:22:24.496" starttime="20201027 18:22:19.744"></status>
</kw>
<msg timestamp="20201027 18:22:24.496" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201027 18:22:24.496" starttime="20201027 18:22:19.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201027 18:22:24.498" starttime="20201027 18:22:24.497"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201027 18:22:24.498" critical="yes" starttime="20201027 18:22:11.340"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201027 18:22:24.503" starttime="20201027 18:18:24.665"></status>
</suite>
<status status="PASS" elapsedtime="275873" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
