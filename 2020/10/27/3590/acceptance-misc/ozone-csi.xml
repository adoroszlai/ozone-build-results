<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201027 17:29:09.809" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/csi.robot" id="s1" name="ozone-csi">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
</arguments>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:28:57.400" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:28:57.401" level="INFO">${rc} = 1</msg>
<msg timestamp="20201027 17:28:57.401" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:28:57.402" starttime="20201027 17:28:57.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:28:57.402" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:28:57.402" starttime="20201027 17:28:57.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:28:57.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201027 17:28:57.403" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201027 17:28:57.403" starttime="20201027 17:28:57.403"></status>
</kw>
<status status="FAIL" endtime="20201027 17:28:57.403" starttime="20201027 17:28:57.396"></status>
</kw>
<msg timestamp="20201027 17:28:57.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201027 17:28:57.404" starttime="20201027 17:28:57.396"></status>
</kw>
<status status="FAIL" endtime="20201027 17:28:57.404" starttime="20201027 17:28:57.395"></status>
</kw>
<status status="FAIL" endtime="20201027 17:28:57.404" starttime="20201027 17:28:57.395"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:28:58.410" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:28:58.411" level="INFO">${rc} = 1</msg>
<msg timestamp="20201027 17:28:58.411" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:28:58.411" starttime="20201027 17:28:58.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:28:58.412" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:28:58.412" starttime="20201027 17:28:58.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:28:58.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201027 17:28:58.412" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201027 17:28:58.412" starttime="20201027 17:28:58.412"></status>
</kw>
<status status="FAIL" endtime="20201027 17:28:58.413" starttime="20201027 17:28:58.406"></status>
</kw>
<msg timestamp="20201027 17:28:58.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201027 17:28:58.413" starttime="20201027 17:28:58.406"></status>
</kw>
<status status="FAIL" endtime="20201027 17:28:58.413" starttime="20201027 17:28:58.405"></status>
</kw>
<status status="FAIL" endtime="20201027 17:28:58.413" starttime="20201027 17:28:58.404"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:28:59.417" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:28:59.419" level="INFO">${rc} = 1</msg>
<msg timestamp="20201027 17:28:59.419" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:28:59.419" starttime="20201027 17:28:59.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:28:59.419" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:28:59.420" starttime="20201027 17:28:59.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:28:59.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201027 17:28:59.420" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201027 17:28:59.420" starttime="20201027 17:28:59.420"></status>
</kw>
<status status="FAIL" endtime="20201027 17:28:59.421" starttime="20201027 17:28:59.415"></status>
</kw>
<msg timestamp="20201027 17:28:59.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201027 17:28:59.421" starttime="20201027 17:28:59.415"></status>
</kw>
<status status="FAIL" endtime="20201027 17:28:59.421" starttime="20201027 17:28:59.414"></status>
</kw>
<status status="FAIL" endtime="20201027 17:28:59.421" starttime="20201027 17:28:59.414"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:29:00.426" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:29:00.428" level="INFO">${rc} = 1</msg>
<msg timestamp="20201027 17:29:00.428" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:29:00.428" starttime="20201027 17:29:00.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:29:00.429" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:29:00.429" starttime="20201027 17:29:00.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:29:00.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201027 17:29:00.430" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201027 17:29:00.430" starttime="20201027 17:29:00.429"></status>
</kw>
<status status="FAIL" endtime="20201027 17:29:00.430" starttime="20201027 17:29:00.423"></status>
</kw>
<msg timestamp="20201027 17:29:00.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201027 17:29:00.430" starttime="20201027 17:29:00.423"></status>
</kw>
<status status="FAIL" endtime="20201027 17:29:00.430" starttime="20201027 17:29:00.422"></status>
</kw>
<status status="FAIL" endtime="20201027 17:29:00.430" starttime="20201027 17:29:00.422"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:29:01.435" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:29:01.436" level="INFO">${rc} = 1</msg>
<msg timestamp="20201027 17:29:01.436" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:29:01.436" starttime="20201027 17:29:01.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:29:01.437" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:29:01.437" starttime="20201027 17:29:01.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:29:01.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201027 17:29:01.438" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201027 17:29:01.438" starttime="20201027 17:29:01.437"></status>
</kw>
<status status="FAIL" endtime="20201027 17:29:01.439" starttime="20201027 17:29:01.432"></status>
</kw>
<msg timestamp="20201027 17:29:01.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201027 17:29:01.439" starttime="20201027 17:29:01.432"></status>
</kw>
<status status="FAIL" endtime="20201027 17:29:01.439" starttime="20201027 17:29:01.431"></status>
</kw>
<status status="FAIL" endtime="20201027 17:29:01.439" starttime="20201027 17:29:01.431"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:29:02.457" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:29:02.458" level="INFO">${rc} = 1</msg>
<msg timestamp="20201027 17:29:02.458" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:29:02.458" starttime="20201027 17:29:02.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:29:02.459" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:29:02.459" starttime="20201027 17:29:02.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:29:02.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201027 17:29:02.460" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201027 17:29:02.460" starttime="20201027 17:29:02.459"></status>
</kw>
<status status="FAIL" endtime="20201027 17:29:02.460" starttime="20201027 17:29:02.445"></status>
</kw>
<msg timestamp="20201027 17:29:02.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201027 17:29:02.461" starttime="20201027 17:29:02.445"></status>
</kw>
<status status="FAIL" endtime="20201027 17:29:02.461" starttime="20201027 17:29:02.444"></status>
</kw>
<status status="FAIL" endtime="20201027 17:29:02.461" starttime="20201027 17:29:02.444"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:29:03.465" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:29:03.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:29:03.466" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201027 17:29:03.466" starttime="20201027 17:29:03.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:29:03.467" level="INFO"></msg>
<status status="PASS" endtime="20201027 17:29:03.467" starttime="20201027 17:29:03.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:29:03.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:29:03.468" starttime="20201027 17:29:03.468"></status>
</kw>
<status status="PASS" endtime="20201027 17:29:03.468" starttime="20201027 17:29:03.463"></status>
</kw>
<msg timestamp="20201027 17:29:03.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:29:03.469" starttime="20201027 17:29:03.463"></status>
</kw>
<status status="PASS" endtime="20201027 17:29:03.469" starttime="20201027 17:29:03.462"></status>
</kw>
<status status="PASS" endtime="20201027 17:29:03.469" starttime="20201027 17:29:03.461"></status>
</kw>
<status status="PASS" endtime="20201027 17:29:03.469" starttime="20201027 17:28:57.395"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201027 17:29:03.469" critical="yes" starttime="20201027 17:28:57.394"></status>
</test>
<test id="s1-t2" name="Test CSI identitiy service">
<kw name="Execute" library="os">
<arguments>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201027 17:29:03.473" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20201027 17:29:03.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20201027 17:29:03.813" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201027 17:29:03.813" starttime="20201027 17:29:03.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201027 17:29:03.814" level="INFO">"org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201027 17:29:03.814" starttime="20201027 17:29:03.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201027 17:29:03.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201027 17:29:03.814" starttime="20201027 17:29:03.814"></status>
</kw>
<status status="PASS" endtime="20201027 17:29:03.815" starttime="20201027 17:29:03.471"></status>
</kw>
<msg timestamp="20201027 17:29:03.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201027 17:29:03.815" starttime="20201027 17:29:03.471"></status>
</kw>
<msg timestamp="20201027 17:29:03.815" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201027 17:29:03.815" starttime="20201027 17:29:03.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
</arguments>
<status status="PASS" endtime="20201027 17:29:03.816" starttime="20201027 17:29:03.815"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201027 17:29:03.816" critical="yes" starttime="20201027 17:29:03.470"></status>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" endtime="20201027 17:29:03.818" starttime="20201027 17:28:57.342"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-csi" pass="2">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
