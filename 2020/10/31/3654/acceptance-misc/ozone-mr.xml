<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201031 13:05:12.380" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:51:49.255" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:51:51.548" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 12:51:51.548" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201031 12:51:51.549" starttime="20201031 12:51:49.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:51:51.550" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201031 12:51:51.550" starttime="20201031 12:51:51.549"></status>
</kw>
<msg timestamp="20201031 12:51:51.550" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201031 12:51:51.550" starttime="20201031 12:51:49.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:51:51.557" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:51:53.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:51:53.654" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 12:51:53.654" starttime="20201031 12:51:51.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:51:53.655" level="INFO"></msg>
<status status="PASS" endtime="20201031 12:51:53.655" starttime="20201031 12:51:53.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:51:53.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:51:53.656" starttime="20201031 12:51:53.655"></status>
</kw>
<status status="PASS" endtime="20201031 12:51:53.656" starttime="20201031 12:51:51.552"></status>
</kw>
<msg timestamp="20201031 12:51:53.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:51:53.656" starttime="20201031 12:51:51.552"></status>
</kw>
<msg timestamp="20201031 12:51:53.656" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201031 12:51:53.656" starttime="20201031 12:51:51.551"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201031 12:51:53.657" starttime="20201031 12:51:53.656"></status>
</kw>
<status status="PASS" endtime="20201031 12:51:53.657" starttime="20201031 12:51:51.551"></status>
</kw>
<status status="PASS" endtime="20201031 12:51:53.657" starttime="20201031 12:51:51.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:51:53.663" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:51:55.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:51:55.581" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 12:51:55.581" starttime="20201031 12:51:53.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:51:55.582" level="INFO"></msg>
<status status="PASS" endtime="20201031 12:51:55.582" starttime="20201031 12:51:55.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:51:55.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:51:55.583" starttime="20201031 12:51:55.582"></status>
</kw>
<status status="PASS" endtime="20201031 12:51:55.583" starttime="20201031 12:51:53.659"></status>
</kw>
<msg timestamp="20201031 12:51:55.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:51:55.583" starttime="20201031 12:51:53.658"></status>
</kw>
<status status="PASS" endtime="20201031 12:51:55.583" starttime="20201031 12:51:53.658"></status>
</kw>
<status status="PASS" endtime="20201031 12:51:55.583" starttime="20201031 12:51:53.658"></status>
</kw>
<status status="PASS" endtime="20201031 12:51:55.583" starttime="20201031 12:51:53.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201031 12:51:55.584" starttime="20201031 12:51:55.584"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:51:55.588" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:51:57.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:51:57.720" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T12:51:55.546Z",
  "modificat...</msg>
<status status="PASS" endtime="20201031 12:51:57.720" starttime="20201031 12:51:55.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:51:57.721" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T12:51:55.546Z",
  "modificationTime" : "2020-10-31T12:51:55.546Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201031 12:51:57.721" starttime="20201031 12:51:57.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:51:57.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:51:57.722" starttime="20201031 12:51:57.721"></status>
</kw>
<status status="PASS" endtime="20201031 12:51:57.722" starttime="20201031 12:51:55.585"></status>
</kw>
<msg timestamp="20201031 12:51:57.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:51:57.722" starttime="20201031 12:51:55.585"></status>
</kw>
<msg timestamp="20201031 12:51:57.722" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T12:51:55.546Z",
  "modificat...</msg>
<status status="PASS" endtime="20201031 12:51:57.722" starttime="20201031 12:51:55.584"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201031 12:51:57.723" starttime="20201031 12:51:57.722"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 12:51:57.727" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 12:51:57.727" starttime="20201031 12:51:57.726"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:51:57.727" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 12:51:57.727" starttime="20201031 12:51:57.727"></status>
</kw>
<status status="PASS" endtime="20201031 12:51:57.727" starttime="20201031 12:51:57.726"></status>
</kw>
<msg timestamp="20201031 12:51:57.727" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 12:51:57.728" starttime="20201031 12:51:57.725"></status>
</kw>
<status status="PASS" endtime="20201031 12:51:57.728" starttime="20201031 12:51:57.724"></status>
</kw>
<msg timestamp="20201031 12:51:57.728" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201031 12:51:57.728" starttime="20201031 12:51:57.724"></status>
</kw>
<msg timestamp="20201031 12:51:57.728" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201031 12:51:57.728" starttime="20201031 12:51:57.723"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:51:57.733" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:51:59.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:51:59.844" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 12:51:59.844" starttime="20201031 12:51:57.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:51:59.845" level="INFO"></msg>
<status status="PASS" endtime="20201031 12:51:59.845" starttime="20201031 12:51:59.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:51:59.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:51:59.846" starttime="20201031 12:51:59.845"></status>
</kw>
<status status="PASS" endtime="20201031 12:51:59.846" starttime="20201031 12:51:57.729"></status>
</kw>
<msg timestamp="20201031 12:51:59.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:51:59.846" starttime="20201031 12:51:57.729"></status>
</kw>
<status status="PASS" endtime="20201031 12:51:59.847" starttime="20201031 12:51:57.728"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:51:59.850" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:52:05.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:52:05.632" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 12:52:05.632" starttime="20201031 12:51:59.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:52:05.633" level="INFO"></msg>
<status status="PASS" endtime="20201031 12:52:05.633" starttime="20201031 12:52:05.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:52:05.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:52:05.634" starttime="20201031 12:52:05.634"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:05.634" starttime="20201031 12:51:59.848"></status>
</kw>
<msg timestamp="20201031 12:52:05.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:52:05.635" starttime="20201031 12:51:59.848"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:05.635" starttime="20201031 12:51:59.847"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:52:05.638" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:52:09.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:52:09.852" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 12:52:09.852" starttime="20201031 12:52:05.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:52:09.853" level="INFO"></msg>
<status status="PASS" endtime="20201031 12:52:09.854" starttime="20201031 12:52:09.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:52:09.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:52:09.854" starttime="20201031 12:52:09.854"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:09.855" starttime="20201031 12:52:05.636"></status>
</kw>
<msg timestamp="20201031 12:52:09.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:52:09.855" starttime="20201031 12:52:05.636"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:09.855" starttime="20201031 12:52:05.635"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:52:09.859" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:52:13.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:52:13.755" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 12:52:13.755" starttime="20201031 12:52:09.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:52:13.756" level="INFO"></msg>
<status status="PASS" endtime="20201031 12:52:13.756" starttime="20201031 12:52:13.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:52:13.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:52:13.757" starttime="20201031 12:52:13.756"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:13.757" starttime="20201031 12:52:09.856"></status>
</kw>
<msg timestamp="20201031 12:52:13.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:52:13.758" starttime="20201031 12:52:09.856"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:13.758" starttime="20201031 12:52:09.855"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 12:52:13.758" critical="yes" starttime="20201031 12:51:49.247"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 12:52:13.763" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 12:52:13.763" starttime="20201031 12:52:13.762"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:52:13.763" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 12:52:13.763" starttime="20201031 12:52:13.763"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:13.764" starttime="20201031 12:52:13.762"></status>
</kw>
<msg timestamp="20201031 12:52:13.764" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 12:52:13.764" starttime="20201031 12:52:13.761"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:13.764" starttime="20201031 12:52:13.761"></status>
</kw>
<msg timestamp="20201031 12:52:13.764" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201031 12:52:13.764" starttime="20201031 12:52:13.760"></status>
</kw>
<msg timestamp="20201031 12:52:13.764" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201031 12:52:13.764" starttime="20201031 12:52:13.759"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:52:13.769" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:52:15.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:52:15.868" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 12:52:15.868" starttime="20201031 12:52:13.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:52:15.869" level="INFO"></msg>
<status status="PASS" endtime="20201031 12:52:15.869" starttime="20201031 12:52:15.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:52:15.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:52:15.870" starttime="20201031 12:52:15.870"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:15.870" starttime="20201031 12:52:13.765"></status>
</kw>
<msg timestamp="20201031 12:52:15.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:52:15.870" starttime="20201031 12:52:13.765"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:15.871" starttime="20201031 12:52:13.765"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:52:15.875" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:52:18.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:52:18.067" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 12:52:18.067" starttime="20201031 12:52:15.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:52:18.068" level="INFO"></msg>
<status status="PASS" endtime="20201031 12:52:18.068" starttime="20201031 12:52:18.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:52:18.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:52:18.069" starttime="20201031 12:52:18.068"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:18.069" starttime="20201031 12:52:15.872"></status>
</kw>
<msg timestamp="20201031 12:52:18.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:52:18.069" starttime="20201031 12:52:15.871"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:18.069" starttime="20201031 12:52:15.871"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 12:52:18.070" critical="yes" starttime="20201031 12:52:13.759"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201031 12:52:18.071" starttime="20201031 12:51:49.194"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 12:53:51.586" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 12:53:51.586" starttime="20201031 12:53:51.585"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:53:51.586" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 12:53:51.586" starttime="20201031 12:53:51.586"></status>
</kw>
<status status="PASS" endtime="20201031 12:53:51.586" starttime="20201031 12:53:51.585"></status>
</kw>
<msg timestamp="20201031 12:53:51.586" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 12:53:51.586" starttime="20201031 12:53:51.584"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201031 12:53:51.587" starttime="20201031 12:53:51.587"></status>
</kw>
<msg timestamp="20201031 12:53:51.587" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201031 12:53:51.587" starttime="20201031 12:53:51.587"></status>
</kw>
<status status="PASS" endtime="20201031 12:53:51.588" starttime="20201031 12:53:51.584"></status>
</kw>
<msg timestamp="20201031 12:53:51.588" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 12:53:51.588" starttime="20201031 12:53:51.583"></status>
</kw>
<msg timestamp="20201031 12:53:51.588" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 12:53:51.588" starttime="20201031 12:53:51.582"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 12:53:51.589" level="INFO">${random} = 00585</msg>
<status status="PASS" endtime="20201031 12:53:51.589" starttime="20201031 12:53:51.588"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:53:51.595" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-00585 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:53:54.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:53:54.928" level="INFO">${output} = 2020-10-31 12:53:53 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:53:53 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 ...</msg>
<status status="PASS" endtime="20201031 12:53:54.928" starttime="20201031 12:53:51.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:53:54.929" level="INFO">2020-10-31 12:53:53 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:53:53 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 12:53:53 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-31 12:53:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 12:53:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BC21787DE528-&gt;f5ab0d96-d40a-49f4-b601-9fee541d26db
2020-10-31 12:53:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201031 12:53:54.929" starttime="20201031 12:53:54.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:53:54.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:53:54.930" starttime="20201031 12:53:54.930"></status>
</kw>
<status status="PASS" endtime="20201031 12:53:54.930" starttime="20201031 12:53:51.589"></status>
</kw>
<msg timestamp="20201031 12:53:54.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:53:54.930" starttime="20201031 12:53:51.589"></status>
</kw>
<msg timestamp="20201031 12:53:54.931" level="INFO">${result} = 2020-10-31 12:53:53 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:53:53 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 ...</msg>
<status status="PASS" endtime="20201031 12:53:54.931" starttime="20201031 12:53:51.589"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:53:54.934" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:53:56.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:53:56.697" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 12:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-31 12:53 ofs://om/volume1/bucket1/ozone-00585
-rw-...</msg>
<status status="PASS" endtime="20201031 12:53:56.697" starttime="20201031 12:53:54.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:53:56.698" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 12:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-31 12:53 ofs://om/volume1/bucket1/ozone-00585
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-31 12:52 ofs://om/volume1/bucket1/ozone-83517
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 12:52 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 12:53 ofs://om/volume1/bucket1/wordcount-93.txt</msg>
<status status="PASS" endtime="20201031 12:53:56.698" starttime="20201031 12:53:56.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:53:56.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:53:56.698" starttime="20201031 12:53:56.698"></status>
</kw>
<status status="PASS" endtime="20201031 12:53:56.699" starttime="20201031 12:53:54.932"></status>
</kw>
<msg timestamp="20201031 12:53:56.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:53:56.699" starttime="20201031 12:53:54.931"></status>
</kw>
<msg timestamp="20201031 12:53:56.699" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 12:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-31 12:53 ofs://om/volume1/bucket1/ozone-00585
-rw-...</msg>
<status status="PASS" endtime="20201031 12:53:56.699" starttime="20201031 12:53:54.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201031 12:53:56.700" starttime="20201031 12:53:56.699"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 12:53:56.700" critical="yes" starttime="20201031 12:53:51.582"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201031 12:53:56.701" starttime="20201031 12:53:51.534"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 12:52:22.913" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 12:52:22.913" starttime="20201031 12:52:22.912"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:52:22.913" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 12:52:22.913" starttime="20201031 12:52:22.913"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:22.913" starttime="20201031 12:52:22.912"></status>
</kw>
<msg timestamp="20201031 12:52:22.913" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 12:52:22.913" starttime="20201031 12:52:22.911"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:22.914" starttime="20201031 12:52:22.911"></status>
</kw>
<msg timestamp="20201031 12:52:22.914" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 12:52:22.914" starttime="20201031 12:52:22.910"></status>
</kw>
<msg timestamp="20201031 12:52:22.914" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 12:52:22.914" starttime="20201031 12:52:22.909"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 12:52:22.914" level="INFO">${random} = 83517</msg>
<status status="PASS" endtime="20201031 12:52:22.915" starttime="20201031 12:52:22.914"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:52:22.920" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-83517 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:52:26.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:52:26.471" level="INFO">${output} = 2020-10-31 12:52:24 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:52:24 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 ...</msg>
<status status="PASS" endtime="20201031 12:52:26.471" starttime="20201031 12:52:22.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:52:26.472" level="INFO">2020-10-31 12:52:24 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:52:24 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 12:52:24 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-31 12:52:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 12:52:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EC8381B8A0C7-&gt;f5ab0d96-d40a-49f4-b601-9fee541d26db
2020-10-31 12:52:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201031 12:52:26.473" starttime="20201031 12:52:26.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:52:26.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:52:26.473" starttime="20201031 12:52:26.473"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:26.473" starttime="20201031 12:52:22.915"></status>
</kw>
<msg timestamp="20201031 12:52:26.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:52:26.474" starttime="20201031 12:52:22.915"></status>
</kw>
<msg timestamp="20201031 12:52:26.474" level="INFO">${result} = 2020-10-31 12:52:24 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:52:24 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 ...</msg>
<status status="PASS" endtime="20201031 12:52:26.474" starttime="20201031 12:52:22.915"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:52:26.477" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:52:28.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:52:28.377" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 12:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-31 12:52 o3fs://bucket1.volume1.om/ozone-83517
dr...</msg>
<status status="PASS" endtime="20201031 12:52:28.377" starttime="20201031 12:52:26.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:52:28.378" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 12:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-31 12:52 o3fs://bucket1.volume1.om/ozone-83517
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 12:52 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201031 12:52:28.378" starttime="20201031 12:52:28.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:52:28.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:52:28.379" starttime="20201031 12:52:28.379"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:28.380" starttime="20201031 12:52:26.475"></status>
</kw>
<msg timestamp="20201031 12:52:28.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:52:28.380" starttime="20201031 12:52:26.475"></status>
</kw>
<msg timestamp="20201031 12:52:28.380" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 12:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-31 12:52 o3fs://bucket1.volume1.om/ozone-83517
dr...</msg>
<status status="PASS" endtime="20201031 12:52:28.380" starttime="20201031 12:52:26.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201031 12:52:28.380" starttime="20201031 12:52:28.380"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 12:52:28.381" critical="yes" starttime="20201031 12:52:22.908"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201031 12:52:28.382" starttime="20201031 12:52:22.859"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:54:01.457" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:54:01.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:54:01.463" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 12:54:01.463" starttime="20201031 12:54:01.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:54:01.464" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 12:54:01.464" starttime="20201031 12:54:01.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:54:01.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:54:01.465" starttime="20201031 12:54:01.465"></status>
</kw>
<status status="PASS" endtime="20201031 12:54:01.465" starttime="20201031 12:54:01.453"></status>
</kw>
<msg timestamp="20201031 12:54:01.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:54:01.465" starttime="20201031 12:54:01.453"></status>
</kw>
<msg timestamp="20201031 12:54:01.466" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 12:54:01.466" starttime="20201031 12:54:01.453"></status>
</kw>
<msg timestamp="20201031 12:54:01.466" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 12:54:01.466" starttime="20201031 12:54:01.452"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 12:54:01.469" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 12:54:01.469" starttime="20201031 12:54:01.468"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:54:01.469" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 12:54:01.470" starttime="20201031 12:54:01.469"></status>
</kw>
<status status="PASS" endtime="20201031 12:54:01.470" starttime="20201031 12:54:01.468"></status>
</kw>
<msg timestamp="20201031 12:54:01.470" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 12:54:01.470" starttime="20201031 12:54:01.468"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201031 12:54:01.471" starttime="20201031 12:54:01.470"></status>
</kw>
<msg timestamp="20201031 12:54:01.471" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201031 12:54:01.471" starttime="20201031 12:54:01.470"></status>
</kw>
<status status="PASS" endtime="20201031 12:54:01.471" starttime="20201031 12:54:01.467"></status>
</kw>
<msg timestamp="20201031 12:54:01.471" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 12:54:01.471" starttime="20201031 12:54:01.467"></status>
</kw>
<msg timestamp="20201031 12:54:01.471" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 12:54:01.471" starttime="20201031 12:54:01.466"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:54:01.474" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:54:42.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:54:42.598" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 12:54:03 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:54:03 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201031 12:54:42.598" starttime="20201031 12:54:01.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:54:42.599" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-31 12:54:03 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:54:03 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 12:54:03 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-31 12:54:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 12:54:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-457B60CB7E79-&gt;f5ab0d96-d40a-49f4-b601-9fee541d26db
2020-10-31 12:54:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-31 12:54:07 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-31 12:54:07 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-31 12:54:07 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-31 12:54:10 INFO  JobSubmitter:198 - number of splits:3
2020-10-31 12:54:10 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604148674325_0003
2020-10-31 12:54:10 INFO  YarnClientImpl:273 - Submitted application application_1604148674325_0003
2020-10-31 12:54:10 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604148674325_0003/
2020-10-31 12:54:10 INFO  Job:1339 - Running job: job_1604148674325_0003
2020-10-31 12:54:17 INFO  Job:1360 - Job job_1604148674325_0003 running in uber mode : false
2020-10-31 12:54:17 INFO  Job:1367 -  map 0% reduce 0%
2020-10-31 12:54:23 INFO  Job:1367 -  map 33% reduce 0%
2020-10-31 12:54:28 INFO  Job:1367 -  map 67% reduce 0%
2020-10-31 12:54:33 INFO  Job:1367 -  map 100% reduce 0%
2020-10-31 12:54:38 INFO  Job:1367 -  map 100% reduce 100%
2020-10-31 12:54:41 INFO  Job:1378 - Job job_1604148674325_0003 completed successfully
2020-10-31 12:54:42 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615237
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40012
		Total time spent by all reduces in occupied slots (ms)=15116
		Total time spent by all map tasks (ms)=10003
		Total time spent by all reduce tasks (ms)=3779
		Total vcore-milliseconds taken by all map tasks=10003
		Total vcore-milliseconds taken by all reduce tasks=3779
		Total megabyte-milliseconds taken by all map tasks=40972288
		Total megabyte-milliseconds taken by all reduce tasks=15478784
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=611
		CPU time spent (ms)=6870
		Physical memory (bytes) snapshot=1137119232
		Virtual memory (bytes) snapshot=16056025088
		Total committed heap usage (bytes)=1058537472
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.9 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201031 12:54:42.599" starttime="20201031 12:54:42.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:54:42.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:54:42.601" starttime="20201031 12:54:42.600"></status>
</kw>
<status status="PASS" endtime="20201031 12:54:42.601" starttime="20201031 12:54:01.472"></status>
</kw>
<msg timestamp="20201031 12:54:42.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:54:42.602" starttime="20201031 12:54:01.472"></status>
</kw>
<msg timestamp="20201031 12:54:42.603" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 12:54:03 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:54:03 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201031 12:54:42.603" starttime="20201031 12:54:01.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 12:54:42.603" starttime="20201031 12:54:42.603"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 12:54:42.603" critical="yes" starttime="20201031 12:54:01.451"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:54:42.608" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:54:42.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:54:42.614" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 12:54:42.614" starttime="20201031 12:54:42.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:54:42.615" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 12:54:42.615" starttime="20201031 12:54:42.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:54:42.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:54:42.616" starttime="20201031 12:54:42.615"></status>
</kw>
<status status="PASS" endtime="20201031 12:54:42.616" starttime="20201031 12:54:42.606"></status>
</kw>
<msg timestamp="20201031 12:54:42.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:54:42.616" starttime="20201031 12:54:42.605"></status>
</kw>
<msg timestamp="20201031 12:54:42.616" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 12:54:42.616" starttime="20201031 12:54:42.605"></status>
</kw>
<msg timestamp="20201031 12:54:42.617" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 12:54:42.617" starttime="20201031 12:54:42.605"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 12:54:42.617" level="INFO">${random} = 37</msg>
<status status="PASS" endtime="20201031 12:54:42.617" starttime="20201031 12:54:42.617"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 12:54:42.620" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 12:54:42.620" starttime="20201031 12:54:42.620"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:54:42.621" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 12:54:42.621" starttime="20201031 12:54:42.621"></status>
</kw>
<status status="PASS" endtime="20201031 12:54:42.621" starttime="20201031 12:54:42.620"></status>
</kw>
<msg timestamp="20201031 12:54:42.621" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 12:54:42.621" starttime="20201031 12:54:42.619"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201031 12:54:42.622" starttime="20201031 12:54:42.622"></status>
</kw>
<msg timestamp="20201031 12:54:42.622" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201031 12:54:42.622" starttime="20201031 12:54:42.621"></status>
</kw>
<status status="PASS" endtime="20201031 12:54:42.622" starttime="20201031 12:54:42.619"></status>
</kw>
<msg timestamp="20201031 12:54:42.623" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 12:54:42.623" starttime="20201031 12:54:42.618"></status>
</kw>
<msg timestamp="20201031 12:54:42.623" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 12:54:42.623" starttime="20201031 12:54:42.617"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 12:54:42.625" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 12:54:42.625" starttime="20201031 12:54:42.625"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:54:42.626" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 12:54:42.626" starttime="20201031 12:54:42.626"></status>
</kw>
<status status="PASS" endtime="20201031 12:54:42.626" starttime="20201031 12:54:42.625"></status>
</kw>
<msg timestamp="20201031 12:54:42.626" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 12:54:42.626" starttime="20201031 12:54:42.624"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 12:54:42.628" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201031 12:54:42.628" starttime="20201031 12:54:42.627"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:54:42.628" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201031 12:54:42.628" starttime="20201031 12:54:42.628"></status>
</kw>
<status status="PASS" endtime="20201031 12:54:42.628" starttime="20201031 12:54:42.627"></status>
</kw>
<msg timestamp="20201031 12:54:42.628" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201031 12:54:42.629" starttime="20201031 12:54:42.626"></status>
</kw>
<status status="PASS" endtime="20201031 12:54:42.629" starttime="20201031 12:54:42.624"></status>
</kw>
<msg timestamp="20201031 12:54:42.629" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201031 12:54:42.629" starttime="20201031 12:54:42.623"></status>
</kw>
<msg timestamp="20201031 12:54:42.629" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201031 12:54:42.629" starttime="20201031 12:54:42.623"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 12:54:42.632" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 12:54:42.632" starttime="20201031 12:54:42.631"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:54:42.632" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 12:54:42.632" starttime="20201031 12:54:42.632"></status>
</kw>
<status status="PASS" endtime="20201031 12:54:42.633" starttime="20201031 12:54:42.631"></status>
</kw>
<msg timestamp="20201031 12:54:42.633" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 12:54:42.633" starttime="20201031 12:54:42.631"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 12:54:42.634" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201031 12:54:42.634" starttime="20201031 12:54:42.634"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:54:42.634" level="INFO">${result} = /wordcount-37.txt</msg>
<status status="PASS" endtime="20201031 12:54:42.635" starttime="20201031 12:54:42.634"></status>
</kw>
<status status="PASS" endtime="20201031 12:54:42.635" starttime="20201031 12:54:42.633"></status>
</kw>
<msg timestamp="20201031 12:54:42.635" level="INFO">${path_with_leading} = /wordcount-37.txt</msg>
<status status="PASS" endtime="20201031 12:54:42.635" starttime="20201031 12:54:42.633"></status>
</kw>
<status status="PASS" endtime="20201031 12:54:42.635" starttime="20201031 12:54:42.630"></status>
</kw>
<msg timestamp="20201031 12:54:42.635" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-37.txt</msg>
<status status="PASS" endtime="20201031 12:54:42.635" starttime="20201031 12:54:42.630"></status>
</kw>
<msg timestamp="20201031 12:54:42.635" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-37.txt</msg>
<status status="PASS" endtime="20201031 12:54:42.635" starttime="20201031 12:54:42.629"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:54:42.646" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-37.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:55:20.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:55:20.875" level="INFO">${output} = 2020-10-31 12:54:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-31 12:54:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201031 12:55:20.876" starttime="20201031 12:54:42.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:55:20.877" level="INFO">2020-10-31 12:54:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-31 12:54:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-31 12:54:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:54:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 12:54:44 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-31 12:54:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 12:54:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-69CCD8449E6F-&gt;f5ab0d96-d40a-49f4-b601-9fee541d26db
2020-10-31 12:54:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 12:54:46 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-31 12:54:48 INFO  JobSubmitter:198 - number of splits:3
2020-10-31 12:54:48 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604148674325_0004
2020-10-31 12:54:49 INFO  YarnClientImpl:273 - Submitted application application_1604148674325_0004
2020-10-31 12:54:49 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604148674325_0004/
2020-10-31 12:54:49 INFO  Job:1339 - Running job: job_1604148674325_0004
2020-10-31 12:54:56 INFO  Job:1360 - Job job_1604148674325_0004 running in uber mode : false
2020-10-31 12:54:56 INFO  Job:1367 -  map 0% reduce 0%
2020-10-31 12:55:03 INFO  Job:1367 -  map 33% reduce 0%
2020-10-31 12:55:08 INFO  Job:1367 -  map 67% reduce 0%
2020-10-31 12:55:12 INFO  Job:1367 -  map 100% reduce 0%
2020-10-31 12:55:17 INFO  Job:1367 -  map 100% reduce 100%
2020-10-31 12:55:20 INFO  Job:1378 - Job job_1604148674325_0004 completed successfully
2020-10-31 12:55:20 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39788
		Total time spent by all reduces in occupied slots (ms)=14696
		Total time spent by all map tasks (ms)=9947
		Total time spent by all reduce tasks (ms)=3674
		Total vcore-milliseconds taken by all map tasks=9947
		Total vcore-milliseconds taken by all reduce tasks=3674
		Total megabyte-milliseconds taken by all map tasks=40742912
		Total megabyte-milliseconds taken by all reduce tasks=15048704
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=631
		CPU time spent (ms)=7390
		Physical memory (bytes) snapshot=1140592640
		Virtual memory (bytes) snapshot=16067915776
		Total committed heap usage (bytes)=1014497280
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201031 12:55:20.877" starttime="20201031 12:55:20.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:55:20.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:55:20.878" starttime="20201031 12:55:20.877"></status>
</kw>
<status status="PASS" endtime="20201031 12:55:20.878" starttime="20201031 12:54:42.636"></status>
</kw>
<msg timestamp="20201031 12:55:20.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:55:20.878" starttime="20201031 12:54:42.636"></status>
</kw>
<msg timestamp="20201031 12:55:20.879" level="INFO">${output} = 2020-10-31 12:54:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-31 12:54:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201031 12:55:20.879" starttime="20201031 12:54:42.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201031 12:55:20.879" starttime="20201031 12:55:20.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 12:55:20.880" starttime="20201031 12:55:20.879"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 12:55:20.880" critical="yes" starttime="20201031 12:54:42.604"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201031 12:55:20.881" starttime="20201031 12:54:01.404"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:52:33.209" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:52:33.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:52:33.215" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 12:52:33.215" starttime="20201031 12:52:33.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:52:33.216" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 12:52:33.216" starttime="20201031 12:52:33.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:52:33.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:52:33.217" starttime="20201031 12:52:33.216"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:33.217" starttime="20201031 12:52:33.204"></status>
</kw>
<msg timestamp="20201031 12:52:33.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:52:33.217" starttime="20201031 12:52:33.204"></status>
</kw>
<msg timestamp="20201031 12:52:33.217" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 12:52:33.217" starttime="20201031 12:52:33.204"></status>
</kw>
<msg timestamp="20201031 12:52:33.217" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 12:52:33.217" starttime="20201031 12:52:33.203"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 12:52:33.220" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 12:52:33.220" starttime="20201031 12:52:33.220"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:52:33.221" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 12:52:33.221" starttime="20201031 12:52:33.220"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:33.221" starttime="20201031 12:52:33.219"></status>
</kw>
<msg timestamp="20201031 12:52:33.221" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 12:52:33.221" starttime="20201031 12:52:33.219"></status>
</kw>
<status status="PASS" endtime="20201031 12:52:33.221" starttime="20201031 12:52:33.218"></status>
</kw>
<msg timestamp="20201031 12:52:33.222" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 12:52:33.222" starttime="20201031 12:52:33.218"></status>
</kw>
<msg timestamp="20201031 12:52:33.222" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 12:52:33.222" starttime="20201031 12:52:33.217"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:52:33.225" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:53:09.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:53:09.878" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 12:52:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:52:35 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201031 12:53:09.878" starttime="20201031 12:52:33.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:53:09.879" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-31 12:52:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:52:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 12:52:35 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-31 12:52:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 12:52:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F3C66DD1A033-&gt;f5ab0d96-d40a-49f4-b601-9fee541d26db
2020-10-31 12:52:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-31 12:52:36 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-31 12:52:37 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-31 12:52:37 INFO  JobSubmitter:198 - number of splits:3
2020-10-31 12:52:37 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604148674325_0001
2020-10-31 12:52:37 INFO  YarnClientImpl:273 - Submitted application application_1604148674325_0001
2020-10-31 12:52:37 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604148674325_0001/
2020-10-31 12:52:37 INFO  Job:1339 - Running job: job_1604148674325_0001
2020-10-31 12:52:48 INFO  Job:1360 - Job job_1604148674325_0001 running in uber mode : false
2020-10-31 12:52:48 INFO  Job:1367 -  map 0% reduce 0%
2020-10-31 12:52:54 INFO  Job:1367 -  map 33% reduce 0%
2020-10-31 12:52:59 INFO  Job:1367 -  map 67% reduce 0%
2020-10-31 12:53:04 INFO  Job:1367 -  map 100% reduce 0%
2020-10-31 12:53:09 INFO  Job:1367 -  map 100% reduce 100%
2020-10-31 12:53:09 INFO  Job:1378 - Job job_1604148674325_0001 completed successfully
2020-10-31 12:53:09 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615457
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39228
		Total time spent by all reduces in occupied slots (ms)=15260
		Total time spent by all map tasks (ms)=9807
		Total time spent by all reduce tasks (ms)=3815
		Total vcore-milliseconds taken by all map tasks=9807
		Total vcore-milliseconds taken by all reduce tasks=3815
		Total megabyte-milliseconds taken by all map tasks=40169472
		Total megabyte-milliseconds taken by all reduce tasks=15626240
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=615
		CPU time spent (ms)=6980
		Physical memory (bytes) snapshot=1157804032
		Virtual memory (bytes) snapshot=16080154624
		Total committed heap usage (bytes)=1052246016
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.927 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201031 12:53:09.879" starttime="20201031 12:53:09.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:53:09.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:53:09.880" starttime="20201031 12:53:09.879"></status>
</kw>
<status status="PASS" endtime="20201031 12:53:09.880" starttime="20201031 12:52:33.223"></status>
</kw>
<msg timestamp="20201031 12:53:09.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:53:09.880" starttime="20201031 12:52:33.222"></status>
</kw>
<msg timestamp="20201031 12:53:09.881" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 12:52:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:52:35 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201031 12:53:09.881" starttime="20201031 12:52:33.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 12:53:09.881" starttime="20201031 12:53:09.881"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 12:53:09.882" critical="yes" starttime="20201031 12:52:33.203"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:53:09.886" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:53:09.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:53:09.892" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 12:53:09.892" starttime="20201031 12:53:09.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:53:09.893" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 12:53:09.894" starttime="20201031 12:53:09.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:53:09.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:53:09.894" starttime="20201031 12:53:09.894"></status>
</kw>
<status status="PASS" endtime="20201031 12:53:09.894" starttime="20201031 12:53:09.884"></status>
</kw>
<msg timestamp="20201031 12:53:09.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:53:09.895" starttime="20201031 12:53:09.883"></status>
</kw>
<msg timestamp="20201031 12:53:09.895" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 12:53:09.895" starttime="20201031 12:53:09.883"></status>
</kw>
<msg timestamp="20201031 12:53:09.895" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 12:53:09.895" starttime="20201031 12:53:09.883"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 12:53:09.895" level="INFO">${random} = 93</msg>
<status status="PASS" endtime="20201031 12:53:09.895" starttime="20201031 12:53:09.895"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 12:53:09.899" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 12:53:09.899" starttime="20201031 12:53:09.899"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:53:09.899" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 12:53:09.900" starttime="20201031 12:53:09.899"></status>
</kw>
<status status="PASS" endtime="20201031 12:53:09.900" starttime="20201031 12:53:09.898"></status>
</kw>
<msg timestamp="20201031 12:53:09.900" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 12:53:09.900" starttime="20201031 12:53:09.898"></status>
</kw>
<status status="PASS" endtime="20201031 12:53:09.900" starttime="20201031 12:53:09.897"></status>
</kw>
<msg timestamp="20201031 12:53:09.900" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 12:53:09.900" starttime="20201031 12:53:09.896"></status>
</kw>
<msg timestamp="20201031 12:53:09.900" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 12:53:09.900" starttime="20201031 12:53:09.896"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 12:53:09.903" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 12:53:09.903" starttime="20201031 12:53:09.903"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:53:09.904" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 12:53:09.904" starttime="20201031 12:53:09.903"></status>
</kw>
<status status="PASS" endtime="20201031 12:53:09.904" starttime="20201031 12:53:09.902"></status>
</kw>
<msg timestamp="20201031 12:53:09.904" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 12:53:09.904" starttime="20201031 12:53:09.902"></status>
</kw>
<status status="PASS" endtime="20201031 12:53:09.904" starttime="20201031 12:53:09.901"></status>
</kw>
<msg timestamp="20201031 12:53:09.904" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201031 12:53:09.904" starttime="20201031 12:53:09.901"></status>
</kw>
<msg timestamp="20201031 12:53:09.904" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201031 12:53:09.904" starttime="20201031 12:53:09.900"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 12:53:09.907" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 12:53:09.907" starttime="20201031 12:53:09.907"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:53:09.908" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 12:53:09.908" starttime="20201031 12:53:09.907"></status>
</kw>
<status status="PASS" endtime="20201031 12:53:09.908" starttime="20201031 12:53:09.906"></status>
</kw>
<msg timestamp="20201031 12:53:09.908" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 12:53:09.908" starttime="20201031 12:53:09.906"></status>
</kw>
<status status="PASS" endtime="20201031 12:53:09.908" starttime="20201031 12:53:09.905"></status>
</kw>
<msg timestamp="20201031 12:53:09.908" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-93.txt</msg>
<status status="PASS" endtime="20201031 12:53:09.908" starttime="20201031 12:53:09.905"></status>
</kw>
<msg timestamp="20201031 12:53:09.908" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-93.txt</msg>
<status status="PASS" endtime="20201031 12:53:09.908" starttime="20201031 12:53:09.904"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:53:09.913" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-93.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:53:46.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:53:46.759" level="INFO">${output} = 2020-10-31 12:53:11 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-31 12:53:11 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201031 12:53:46.759" starttime="20201031 12:53:09.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:53:46.760" level="INFO">2020-10-31 12:53:11 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-31 12:53:11 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-31 12:53:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:53:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 12:53:12 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-31 12:53:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 12:53:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6CD1CEAD6CD6-&gt;f5ab0d96-d40a-49f4-b601-9fee541d26db
2020-10-31 12:53:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 12:53:13 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-31 12:53:13 INFO  JobSubmitter:198 - number of splits:3
2020-10-31 12:53:13 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604148674325_0002
2020-10-31 12:53:13 INFO  YarnClientImpl:273 - Submitted application application_1604148674325_0002
2020-10-31 12:53:13 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604148674325_0002/
2020-10-31 12:53:13 INFO  Job:1339 - Running job: job_1604148674325_0002
2020-10-31 12:53:22 INFO  Job:1360 - Job job_1604148674325_0002 running in uber mode : false
2020-10-31 12:53:22 INFO  Job:1367 -  map 0% reduce 0%
2020-10-31 12:53:28 INFO  Job:1367 -  map 33% reduce 0%
2020-10-31 12:53:33 INFO  Job:1367 -  map 67% reduce 0%
2020-10-31 12:53:38 INFO  Job:1367 -  map 100% reduce 0%
2020-10-31 12:53:43 INFO  Job:1367 -  map 100% reduce 100%
2020-10-31 12:53:46 INFO  Job:1378 - Job job_1604148674325_0002 completed successfully
2020-10-31 12:53:46 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39236
		Total time spent by all reduces in occupied slots (ms)=14728
		Total time spent by all map tasks (ms)=9809
		Total time spent by all reduce tasks (ms)=3682
		Total vcore-milliseconds taken by all map tasks=9809
		Total vcore-milliseconds taken by all reduce tasks=3682
		Total megabyte-milliseconds taken by all map tasks=40177664
		Total megabyte-milliseconds taken by all reduce tasks=15081472
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=585
		CPU time spent (ms)=7570
		Physical memory (bytes) snapshot=1155100672
		Virtual memory (bytes) snapshot=16073478144
		Total committed heap usage (bytes)=1044905984
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201031 12:53:46.760" starttime="20201031 12:53:46.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:53:46.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:53:46.761" starttime="20201031 12:53:46.761"></status>
</kw>
<status status="PASS" endtime="20201031 12:53:46.761" starttime="20201031 12:53:09.909"></status>
</kw>
<msg timestamp="20201031 12:53:46.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:53:46.762" starttime="20201031 12:53:09.909"></status>
</kw>
<msg timestamp="20201031 12:53:46.762" level="INFO">${output} = 2020-10-31 12:53:11 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-31 12:53:11 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201031 12:53:46.762" starttime="20201031 12:53:09.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201031 12:53:46.763" starttime="20201031 12:53:46.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 12:53:46.763" starttime="20201031 12:53:46.763"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 12:53:46.763" critical="yes" starttime="20201031 12:53:09.882"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201031 12:53:46.764" starttime="20201031 12:52:33.156"></status>
</suite>
<status status="PASS" elapsedtime="192652" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:56:25.754" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:56:28.009" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 12:56:28.009" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201031 12:56:28.009" starttime="20201031 12:56:25.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:56:28.010" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201031 12:56:28.010" starttime="20201031 12:56:28.009"></status>
</kw>
<msg timestamp="20201031 12:56:28.010" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201031 12:56:28.010" starttime="20201031 12:56:25.750"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:56:28.016" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:56:30.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:56:30.145" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 12:56:30.145" starttime="20201031 12:56:28.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:56:30.146" level="INFO"></msg>
<status status="PASS" endtime="20201031 12:56:30.146" starttime="20201031 12:56:30.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:56:30.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:56:30.147" starttime="20201031 12:56:30.146"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:30.147" starttime="20201031 12:56:28.012"></status>
</kw>
<msg timestamp="20201031 12:56:30.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:56:30.147" starttime="20201031 12:56:28.012"></status>
</kw>
<msg timestamp="20201031 12:56:30.147" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201031 12:56:30.147" starttime="20201031 12:56:28.012"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201031 12:56:30.148" starttime="20201031 12:56:30.148"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:30.148" starttime="20201031 12:56:28.011"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:30.148" starttime="20201031 12:56:28.011"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:56:30.152" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:56:32.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:56:32.036" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 12:56:32.037" starttime="20201031 12:56:30.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:56:32.038" level="INFO"></msg>
<status status="PASS" endtime="20201031 12:56:32.038" starttime="20201031 12:56:32.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:56:32.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:56:32.038" starttime="20201031 12:56:32.038"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:32.039" starttime="20201031 12:56:30.150"></status>
</kw>
<msg timestamp="20201031 12:56:32.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:56:32.039" starttime="20201031 12:56:30.150"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:32.039" starttime="20201031 12:56:30.149"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:32.039" starttime="20201031 12:56:30.149"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:32.039" starttime="20201031 12:56:30.148"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201031 12:56:32.040" starttime="20201031 12:56:32.039"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:56:32.043" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:56:34.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:56:34.314" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T12:56:32.001Z",
  "modificat...</msg>
<status status="PASS" endtime="20201031 12:56:34.314" starttime="20201031 12:56:32.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:56:34.315" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T12:56:32.001Z",
  "modificationTime" : "2020-10-31T12:56:32.001Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201031 12:56:34.315" starttime="20201031 12:56:34.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:56:34.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:56:34.316" starttime="20201031 12:56:34.315"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:34.316" starttime="20201031 12:56:32.041"></status>
</kw>
<msg timestamp="20201031 12:56:34.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:56:34.316" starttime="20201031 12:56:32.041"></status>
</kw>
<msg timestamp="20201031 12:56:34.316" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T12:56:32.001Z",
  "modificat...</msg>
<status status="PASS" endtime="20201031 12:56:34.316" starttime="20201031 12:56:32.040"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201031 12:56:34.317" starttime="20201031 12:56:34.317"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 12:56:34.321" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 12:56:34.321" starttime="20201031 12:56:34.320"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:56:34.321" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 12:56:34.322" starttime="20201031 12:56:34.321"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:34.322" starttime="20201031 12:56:34.320"></status>
</kw>
<msg timestamp="20201031 12:56:34.322" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 12:56:34.322" starttime="20201031 12:56:34.319"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:34.322" starttime="20201031 12:56:34.319"></status>
</kw>
<msg timestamp="20201031 12:56:34.322" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201031 12:56:34.322" starttime="20201031 12:56:34.318"></status>
</kw>
<msg timestamp="20201031 12:56:34.322" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201031 12:56:34.322" starttime="20201031 12:56:34.317"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:56:34.326" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:56:36.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:56:36.540" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 12:56:36.540" starttime="20201031 12:56:34.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:56:36.541" level="INFO"></msg>
<status status="PASS" endtime="20201031 12:56:36.542" starttime="20201031 12:56:36.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:56:36.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:56:36.542" starttime="20201031 12:56:36.542"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:36.542" starttime="20201031 12:56:34.323"></status>
</kw>
<msg timestamp="20201031 12:56:36.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:56:36.543" starttime="20201031 12:56:34.323"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:36.543" starttime="20201031 12:56:34.323"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:56:36.548" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:56:42.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:56:42.114" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 12:56:42.114" starttime="20201031 12:56:36.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:56:42.115" level="INFO"></msg>
<status status="PASS" endtime="20201031 12:56:42.115" starttime="20201031 12:56:42.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:56:42.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:56:42.116" starttime="20201031 12:56:42.116"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:42.116" starttime="20201031 12:56:36.544"></status>
</kw>
<msg timestamp="20201031 12:56:42.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:56:42.117" starttime="20201031 12:56:36.544"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:42.117" starttime="20201031 12:56:36.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:56:42.125" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:56:46.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:56:46.754" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 12:56:46.754" starttime="20201031 12:56:42.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:56:46.755" level="INFO"></msg>
<status status="PASS" endtime="20201031 12:56:46.755" starttime="20201031 12:56:46.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:56:46.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:56:46.756" starttime="20201031 12:56:46.755"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:46.756" starttime="20201031 12:56:42.121"></status>
</kw>
<msg timestamp="20201031 12:56:46.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:56:46.756" starttime="20201031 12:56:42.121"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:46.756" starttime="20201031 12:56:42.117"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:56:46.761" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:56:50.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:56:50.819" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 12:56:50.819" starttime="20201031 12:56:46.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:56:50.820" level="INFO"></msg>
<status status="PASS" endtime="20201031 12:56:50.820" starttime="20201031 12:56:50.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:56:50.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:56:50.821" starttime="20201031 12:56:50.820"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:50.821" starttime="20201031 12:56:46.757"></status>
</kw>
<msg timestamp="20201031 12:56:50.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:56:50.821" starttime="20201031 12:56:46.757"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:50.821" starttime="20201031 12:56:46.756"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 12:56:50.821" critical="yes" starttime="20201031 12:56:25.749"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 12:56:50.826" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 12:56:50.827" starttime="20201031 12:56:50.826"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:56:50.827" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 12:56:50.827" starttime="20201031 12:56:50.827"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:50.827" starttime="20201031 12:56:50.825"></status>
</kw>
<msg timestamp="20201031 12:56:50.827" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 12:56:50.827" starttime="20201031 12:56:50.825"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:50.828" starttime="20201031 12:56:50.824"></status>
</kw>
<msg timestamp="20201031 12:56:50.828" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201031 12:56:50.828" starttime="20201031 12:56:50.824"></status>
</kw>
<msg timestamp="20201031 12:56:50.828" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201031 12:56:50.828" starttime="20201031 12:56:50.823"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:56:50.833" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:56:53.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:56:53.112" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 12:56:53.112" starttime="20201031 12:56:50.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:56:53.113" level="INFO"></msg>
<status status="PASS" endtime="20201031 12:56:53.114" starttime="20201031 12:56:53.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:56:53.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:56:53.114" starttime="20201031 12:56:53.114"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:53.114" starttime="20201031 12:56:50.829"></status>
</kw>
<msg timestamp="20201031 12:56:53.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:56:53.115" starttime="20201031 12:56:50.829"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:53.115" starttime="20201031 12:56:50.828"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:56:53.118" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:56:55.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:56:55.118" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 12:56:55.118" starttime="20201031 12:56:53.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:56:55.119" level="INFO"></msg>
<status status="PASS" endtime="20201031 12:56:55.119" starttime="20201031 12:56:55.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:56:55.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:56:55.120" starttime="20201031 12:56:55.119"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:55.120" starttime="20201031 12:56:53.116"></status>
</kw>
<msg timestamp="20201031 12:56:55.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:56:55.120" starttime="20201031 12:56:53.116"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:55.120" starttime="20201031 12:56:53.115"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 12:56:55.121" critical="yes" starttime="20201031 12:56:50.822"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201031 12:56:55.122" starttime="20201031 12:56:25.695"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 12:58:36.720" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 12:58:36.720" starttime="20201031 12:58:36.719"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:58:36.720" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 12:58:36.720" starttime="20201031 12:58:36.720"></status>
</kw>
<status status="PASS" endtime="20201031 12:58:36.720" starttime="20201031 12:58:36.719"></status>
</kw>
<msg timestamp="20201031 12:58:36.720" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 12:58:36.720" starttime="20201031 12:58:36.718"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201031 12:58:36.721" starttime="20201031 12:58:36.721"></status>
</kw>
<msg timestamp="20201031 12:58:36.721" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201031 12:58:36.721" starttime="20201031 12:58:36.721"></status>
</kw>
<status status="PASS" endtime="20201031 12:58:36.722" starttime="20201031 12:58:36.718"></status>
</kw>
<msg timestamp="20201031 12:58:36.722" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 12:58:36.722" starttime="20201031 12:58:36.717"></status>
</kw>
<msg timestamp="20201031 12:58:36.722" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 12:58:36.722" starttime="20201031 12:58:36.716"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 12:58:36.722" level="INFO">${random} = 12745</msg>
<status status="PASS" endtime="20201031 12:58:36.723" starttime="20201031 12:58:36.722"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:58:36.729" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-12745 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:58:40.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:58:40.131" level="INFO">${output} = 2020-10-31 12:58:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:38 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 12:58:40.131" starttime="20201031 12:58:36.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:58:40.132" level="INFO">2020-10-31 12:58:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:38 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-31 12:58:38 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:58:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 12:58:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 12:58:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 12:58:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1391F7A577DF-&gt;4b166258-69aa-4654-b442-a5538889c912
2020-10-31 12:58:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 12:58:39 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201031 12:58:40.133" starttime="20201031 12:58:40.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:58:40.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:58:40.133" starttime="20201031 12:58:40.133"></status>
</kw>
<status status="PASS" endtime="20201031 12:58:40.133" starttime="20201031 12:58:36.723"></status>
</kw>
<msg timestamp="20201031 12:58:40.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:58:40.134" starttime="20201031 12:58:36.723"></status>
</kw>
<msg timestamp="20201031 12:58:40.134" level="INFO">${result} = 2020-10-31 12:58:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:38 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 12:58:40.134" starttime="20201031 12:58:36.723"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:58:40.137" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:58:41.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:58:41.957" level="INFO">${output} = 2020-10-31 12:58:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:41 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 12:58:41.957" starttime="20201031 12:58:40.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:58:41.958" level="INFO">2020-10-31 12:58:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:41 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 12:56 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-31 12:58 ofs://om/volume1/bucket1/ozone-12745
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-31 12:57 ofs://om/volume1/bucket1/ozone-76760
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 12:56 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 12:58 ofs://om/volume1/bucket1/wordcount-48.txt
2020-10-31 12:58:41 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201031 12:58:41.959" starttime="20201031 12:58:41.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:58:41.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:58:41.959" starttime="20201031 12:58:41.959"></status>
</kw>
<status status="PASS" endtime="20201031 12:58:41.959" starttime="20201031 12:58:40.135"></status>
</kw>
<msg timestamp="20201031 12:58:41.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:58:41.960" starttime="20201031 12:58:40.135"></status>
</kw>
<msg timestamp="20201031 12:58:41.960" level="INFO">${result} = 2020-10-31 12:58:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:41 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 12:58:41.960" starttime="20201031 12:58:40.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201031 12:58:41.960" starttime="20201031 12:58:41.960"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 12:58:41.960" critical="yes" starttime="20201031 12:58:36.715"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201031 12:58:41.961" starttime="20201031 12:58:36.669"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 12:56:59.972" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 12:56:59.972" starttime="20201031 12:56:59.972"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:56:59.973" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 12:56:59.973" starttime="20201031 12:56:59.972"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:59.973" starttime="20201031 12:56:59.971"></status>
</kw>
<msg timestamp="20201031 12:56:59.973" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 12:56:59.973" starttime="20201031 12:56:59.971"></status>
</kw>
<status status="PASS" endtime="20201031 12:56:59.973" starttime="20201031 12:56:59.970"></status>
</kw>
<msg timestamp="20201031 12:56:59.973" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 12:56:59.973" starttime="20201031 12:56:59.970"></status>
</kw>
<msg timestamp="20201031 12:56:59.974" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 12:56:59.974" starttime="20201031 12:56:59.968"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 12:56:59.974" level="INFO">${random} = 76760</msg>
<status status="PASS" endtime="20201031 12:56:59.974" starttime="20201031 12:56:59.974"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:56:59.980" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-76760 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:57:03.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:57:03.522" level="INFO">${output} = 2020-10-31 12:57:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:01 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 12:57:03.522" starttime="20201031 12:56:59.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:57:03.523" level="INFO">2020-10-31 12:57:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:01 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-31 12:57:01 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:57:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 12:57:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 12:57:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 12:57:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4657997A6CFD-&gt;4b166258-69aa-4654-b442-a5538889c912
2020-10-31 12:57:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 12:57:03 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201031 12:57:03.523" starttime="20201031 12:57:03.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:57:03.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:57:03.524" starttime="20201031 12:57:03.524"></status>
</kw>
<status status="PASS" endtime="20201031 12:57:03.524" starttime="20201031 12:56:59.975"></status>
</kw>
<msg timestamp="20201031 12:57:03.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:57:03.525" starttime="20201031 12:56:59.975"></status>
</kw>
<msg timestamp="20201031 12:57:03.525" level="INFO">${result} = 2020-10-31 12:57:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:01 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 12:57:03.525" starttime="20201031 12:56:59.974"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:57:03.528" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:57:05.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:57:05.215" level="INFO">${output} = 2020-10-31 12:57:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:05 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 12:57:05.215" starttime="20201031 12:57:03.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:57:05.216" level="INFO">2020-10-31 12:57:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:05 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 12:56 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-31 12:57 o3fs://bucket1.volume1.om/ozone-76760
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 12:56 o3fs://bucket1.volume1.om/user
2020-10-31 12:57:05 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201031 12:57:05.216" starttime="20201031 12:57:05.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:57:05.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:57:05.217" starttime="20201031 12:57:05.217"></status>
</kw>
<status status="PASS" endtime="20201031 12:57:05.217" starttime="20201031 12:57:03.526"></status>
</kw>
<msg timestamp="20201031 12:57:05.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:57:05.218" starttime="20201031 12:57:03.525"></status>
</kw>
<msg timestamp="20201031 12:57:05.218" level="INFO">${result} = 2020-10-31 12:57:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:05 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 12:57:05.218" starttime="20201031 12:57:03.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201031 12:57:05.218" starttime="20201031 12:57:05.218"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 12:57:05.218" critical="yes" starttime="20201031 12:56:59.968"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201031 12:57:05.219" starttime="20201031 12:56:59.919"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:58:46.742" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:58:46.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:58:46.749" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 12:58:46.749" starttime="20201031 12:58:46.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:58:46.750" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 12:58:46.750" starttime="20201031 12:58:46.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:58:46.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:58:46.751" starttime="20201031 12:58:46.751"></status>
</kw>
<status status="PASS" endtime="20201031 12:58:46.751" starttime="20201031 12:58:46.738"></status>
</kw>
<msg timestamp="20201031 12:58:46.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:58:46.751" starttime="20201031 12:58:46.738"></status>
</kw>
<msg timestamp="20201031 12:58:46.751" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 12:58:46.752" starttime="20201031 12:58:46.737"></status>
</kw>
<msg timestamp="20201031 12:58:46.752" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 12:58:46.752" starttime="20201031 12:58:46.737"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 12:58:46.755" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 12:58:46.755" starttime="20201031 12:58:46.754"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:58:46.755" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 12:58:46.756" starttime="20201031 12:58:46.755"></status>
</kw>
<status status="PASS" endtime="20201031 12:58:46.756" starttime="20201031 12:58:46.754"></status>
</kw>
<msg timestamp="20201031 12:58:46.756" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 12:58:46.756" starttime="20201031 12:58:46.754"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201031 12:58:46.757" starttime="20201031 12:58:46.756"></status>
</kw>
<msg timestamp="20201031 12:58:46.757" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201031 12:58:46.757" starttime="20201031 12:58:46.756"></status>
</kw>
<status status="PASS" endtime="20201031 12:58:46.757" starttime="20201031 12:58:46.753"></status>
</kw>
<msg timestamp="20201031 12:58:46.757" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 12:58:46.757" starttime="20201031 12:58:46.752"></status>
</kw>
<msg timestamp="20201031 12:58:46.757" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 12:58:46.757" starttime="20201031 12:58:46.752"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:58:46.761" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:59:29.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:59:29.009" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 12:58:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58...</msg>
<status status="PASS" endtime="20201031 12:59:29.009" starttime="20201031 12:58:46.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:59:29.010" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-31 12:58:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:48 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-31 12:58:48 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:58:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 12:58:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 12:58:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 12:58:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-58E4CBBF260E-&gt;4b166258-69aa-4654-b442-a5538889c912
2020-10-31 12:58:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-31 12:58:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-10-31 12:58:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-31 12:58:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:53 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-31 12:58:53 INFO  JobSubmitter:202 - number of splits:3
2020-10-31 12:58:53 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604148964613_0003
2020-10-31 12:58:53 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-31 12:58:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:53 INFO  Configuration:2752 - resource-types.xml not found
2020-10-31 12:58:53 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-31 12:58:53 INFO  YarnClientImpl:324 - Submitted application application_1604148964613_0003
2020-10-31 12:58:53 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604148964613_0003/
2020-10-31 12:58:53 INFO  Job:1619 - Running job: job_1604148964613_0003
2020-10-31 12:59:00 INFO  Job:1640 - Job job_1604148964613_0003 running in uber mode : false
2020-10-31 12:59:00 INFO  Job:1647 -  map 0% reduce 0%
2020-10-31 12:59:08 INFO  Job:1647 -  map 33% reduce 0%
2020-10-31 12:59:14 INFO  Job:1647 -  map 67% reduce 0%
2020-10-31 12:59:20 INFO  Job:1647 -  map 100% reduce 0%
2020-10-31 12:59:25 INFO  Job:1647 -  map 100% reduce 100%
2020-10-31 12:59:28 INFO  Job:1658 - Job job_1604148964613_0003 completed successfully
2020-10-31 12:59:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:59:28 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021325
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41676
		Total time spent by all reduces in occupied slots (ms)=14964
		Total time spent by all map tasks (ms)=10419
		Total time spent by all reduce tasks (ms)=3741
		Total vcore-milliseconds taken by all map tasks=10419
		Total vcore-milliseconds taken by all reduce tasks=3741
		Total megabyte-milliseconds taken by all map tasks=42676224
		Total megabyte-milliseconds taken by all reduce tasks=15323136
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=665
		CPU time spent (ms)=6940
		Physical memory (bytes) snapshot=1166000128
		Virtual memory (bytes) snapshot=16069562368
		Total committed heap usage (bytes)=1021837312
		Peak Map Physical memory (bytes)=290209792
		Peak Map Virtual memory (bytes)=4010180608
		Peak Reduce Physical memory (bytes)=301674496
		Peak Reduce Virtual memory (bytes)=4040069120
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.406 seconds
2020-10-31 12:59:28 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-31 12:59:28 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201031 12:59:29.011" starttime="20201031 12:59:29.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:59:29.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:59:29.011" starttime="20201031 12:59:29.011"></status>
</kw>
<status status="PASS" endtime="20201031 12:59:29.011" starttime="20201031 12:58:46.758"></status>
</kw>
<msg timestamp="20201031 12:59:29.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:59:29.012" starttime="20201031 12:58:46.758"></status>
</kw>
<msg timestamp="20201031 12:59:29.012" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 12:58:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58...</msg>
<status status="PASS" endtime="20201031 12:59:29.012" starttime="20201031 12:58:46.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 12:59:29.013" starttime="20201031 12:59:29.012"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 12:59:29.013" critical="yes" starttime="20201031 12:58:46.736"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:59:29.018" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:59:29.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:59:29.023" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 12:59:29.023" starttime="20201031 12:59:29.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:59:29.024" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 12:59:29.024" starttime="20201031 12:59:29.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:59:29.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:59:29.026" starttime="20201031 12:59:29.025"></status>
</kw>
<status status="PASS" endtime="20201031 12:59:29.027" starttime="20201031 12:59:29.015"></status>
</kw>
<msg timestamp="20201031 12:59:29.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:59:29.027" starttime="20201031 12:59:29.015"></status>
</kw>
<msg timestamp="20201031 12:59:29.027" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 12:59:29.027" starttime="20201031 12:59:29.014"></status>
</kw>
<msg timestamp="20201031 12:59:29.027" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 12:59:29.027" starttime="20201031 12:59:29.014"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 12:59:29.028" level="INFO">${random} = 64</msg>
<status status="PASS" endtime="20201031 12:59:29.028" starttime="20201031 12:59:29.027"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 12:59:29.031" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 12:59:29.031" starttime="20201031 12:59:29.031"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:59:29.037" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 12:59:29.037" starttime="20201031 12:59:29.032"></status>
</kw>
<status status="PASS" endtime="20201031 12:59:29.037" starttime="20201031 12:59:29.031"></status>
</kw>
<msg timestamp="20201031 12:59:29.037" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 12:59:29.037" starttime="20201031 12:59:29.030"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201031 12:59:29.038" starttime="20201031 12:59:29.038"></status>
</kw>
<msg timestamp="20201031 12:59:29.038" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201031 12:59:29.038" starttime="20201031 12:59:29.037"></status>
</kw>
<status status="PASS" endtime="20201031 12:59:29.038" starttime="20201031 12:59:29.029"></status>
</kw>
<msg timestamp="20201031 12:59:29.038" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 12:59:29.038" starttime="20201031 12:59:29.028"></status>
</kw>
<msg timestamp="20201031 12:59:29.039" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 12:59:29.039" starttime="20201031 12:59:29.028"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 12:59:29.042" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 12:59:29.042" starttime="20201031 12:59:29.041"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:59:29.050" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 12:59:29.051" starttime="20201031 12:59:29.042"></status>
</kw>
<status status="PASS" endtime="20201031 12:59:29.051" starttime="20201031 12:59:29.041"></status>
</kw>
<msg timestamp="20201031 12:59:29.051" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 12:59:29.051" starttime="20201031 12:59:29.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 12:59:29.055" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201031 12:59:29.055" starttime="20201031 12:59:29.054"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:59:29.055" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201031 12:59:29.055" starttime="20201031 12:59:29.055"></status>
</kw>
<status status="PASS" endtime="20201031 12:59:29.056" starttime="20201031 12:59:29.054"></status>
</kw>
<msg timestamp="20201031 12:59:29.056" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201031 12:59:29.056" starttime="20201031 12:59:29.051"></status>
</kw>
<status status="PASS" endtime="20201031 12:59:29.056" starttime="20201031 12:59:29.040"></status>
</kw>
<msg timestamp="20201031 12:59:29.056" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201031 12:59:29.056" starttime="20201031 12:59:29.039"></status>
</kw>
<msg timestamp="20201031 12:59:29.056" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201031 12:59:29.056" starttime="20201031 12:59:29.039"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 12:59:29.059" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 12:59:29.059" starttime="20201031 12:59:29.059"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:59:29.060" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 12:59:29.060" starttime="20201031 12:59:29.059"></status>
</kw>
<status status="PASS" endtime="20201031 12:59:29.060" starttime="20201031 12:59:29.058"></status>
</kw>
<msg timestamp="20201031 12:59:29.060" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 12:59:29.060" starttime="20201031 12:59:29.058"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 12:59:29.063" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201031 12:59:29.066" starttime="20201031 12:59:29.061"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:59:29.066" level="INFO">${result} = /wordcount-64.txt</msg>
<status status="PASS" endtime="20201031 12:59:29.066" starttime="20201031 12:59:29.066"></status>
</kw>
<status status="PASS" endtime="20201031 12:59:29.067" starttime="20201031 12:59:29.061"></status>
</kw>
<msg timestamp="20201031 12:59:29.067" level="INFO">${path_with_leading} = /wordcount-64.txt</msg>
<status status="PASS" endtime="20201031 12:59:29.067" starttime="20201031 12:59:29.060"></status>
</kw>
<status status="PASS" endtime="20201031 12:59:29.067" starttime="20201031 12:59:29.057"></status>
</kw>
<msg timestamp="20201031 12:59:29.067" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-64.txt</msg>
<status status="PASS" endtime="20201031 12:59:29.067" starttime="20201031 12:59:29.057"></status>
</kw>
<msg timestamp="20201031 12:59:29.067" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-64.txt</msg>
<status status="PASS" endtime="20201031 12:59:29.067" starttime="20201031 12:59:29.056"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:59:29.072" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-64.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:00:06.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:00:06.820" level="INFO">${output} = 2020-10-31 12:59:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:59:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:59:30 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 13:00:06.820" starttime="20201031 12:59:29.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:00:06.821" level="INFO">2020-10-31 12:59:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:59:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:59:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:59:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:59:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:59:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:59:30 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-10-31 12:59:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:59:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:59:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-31 12:59:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:59:31 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-31 12:59:31 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:59:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 12:59:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 12:59:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 12:59:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0223F793CE28-&gt;4b166258-69aa-4654-b442-a5538889c912
2020-10-31 12:59:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 12:59:32 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-31 12:59:32 INFO  JobSubmitter:202 - number of splits:3
2020-10-31 12:59:33 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604148964613_0004
2020-10-31 12:59:33 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-31 12:59:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:59:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:59:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:59:33 INFO  Configuration:2752 - resource-types.xml not found
2020-10-31 12:59:33 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-31 12:59:33 INFO  YarnClientImpl:324 - Submitted application application_1604148964613_0004
2020-10-31 12:59:33 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604148964613_0004/
2020-10-31 12:59:33 INFO  Job:1619 - Running job: job_1604148964613_0004
2020-10-31 12:59:41 INFO  Job:1640 - Job job_1604148964613_0004 running in uber mode : false
2020-10-31 12:59:41 INFO  Job:1647 -  map 0% reduce 0%
2020-10-31 12:59:48 INFO  Job:1647 -  map 33% reduce 0%
2020-10-31 12:59:54 INFO  Job:1647 -  map 67% reduce 0%
2020-10-31 12:59:59 INFO  Job:1647 -  map 100% reduce 0%
2020-10-31 13:00:03 INFO  Job:1647 -  map 100% reduce 100%
2020-10-31 13:00:06 INFO  Job:1658 - Job job_1604148964613_0004 completed successfully
2020-10-31 13:00:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 13:00:06 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38824
		Total time spent by all reduces in occupied slots (ms)=14500
		Total time spent by all map tasks (ms)=9706
		Total time spent by all reduce tasks (ms)=3625
		Total vcore-milliseconds taken by all map tasks=9706
		Total vcore-milliseconds taken by all reduce tasks=3625
		Total megabyte-milliseconds taken by all map tasks=39755776
		Total megabyte-milliseconds taken by all reduce tasks=14848000
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=616
		CPU time spent (ms)=7300
		Physical memory (bytes) snapshot=1181265920
		Virtual memory (bytes) snapshot=16054558720
		Total committed heap usage (bytes)=1058537472
		Peak Map Physical memory (bytes)=296591360
		Peak Map Virtual memory (bytes)=4014338048
		Peak Reduce Physical memory (bytes)=297750528
		Peak Reduce Virtual memory (bytes)=4040077312
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-31 13:00:06 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201031 13:00:06.821" starttime="20201031 13:00:06.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:00:06.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:00:06.822" starttime="20201031 13:00:06.821"></status>
</kw>
<status status="PASS" endtime="20201031 13:00:06.822" starttime="20201031 12:59:29.068"></status>
</kw>
<msg timestamp="20201031 13:00:06.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:00:06.822" starttime="20201031 12:59:29.068"></status>
</kw>
<msg timestamp="20201031 13:00:06.823" level="INFO">${output} = 2020-10-31 12:59:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:59:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:59:30 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 13:00:06.823" starttime="20201031 12:59:29.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201031 13:00:06.823" starttime="20201031 13:00:06.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 13:00:06.824" starttime="20201031 13:00:06.824"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 13:00:06.824" critical="yes" starttime="20201031 12:59:29.013"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201031 13:00:06.826" starttime="20201031 12:58:46.688"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:57:09.994" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:57:09.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:57:09.999" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 12:57:09.999" starttime="20201031 12:57:09.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:57:10.000" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 12:57:10.000" starttime="20201031 12:57:09.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:57:10.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:57:10.001" starttime="20201031 12:57:10.000"></status>
</kw>
<status status="PASS" endtime="20201031 12:57:10.001" starttime="20201031 12:57:09.990"></status>
</kw>
<msg timestamp="20201031 12:57:10.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:57:10.001" starttime="20201031 12:57:09.990"></status>
</kw>
<msg timestamp="20201031 12:57:10.001" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 12:57:10.001" starttime="20201031 12:57:09.989"></status>
</kw>
<msg timestamp="20201031 12:57:10.001" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 12:57:10.001" starttime="20201031 12:57:09.989"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 12:57:10.004" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 12:57:10.004" starttime="20201031 12:57:10.004"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:57:10.005" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 12:57:10.005" starttime="20201031 12:57:10.005"></status>
</kw>
<status status="PASS" endtime="20201031 12:57:10.005" starttime="20201031 12:57:10.004"></status>
</kw>
<msg timestamp="20201031 12:57:10.005" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 12:57:10.006" starttime="20201031 12:57:10.003"></status>
</kw>
<status status="PASS" endtime="20201031 12:57:10.006" starttime="20201031 12:57:10.003"></status>
</kw>
<msg timestamp="20201031 12:57:10.006" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 12:57:10.006" starttime="20201031 12:57:10.002"></status>
</kw>
<msg timestamp="20201031 12:57:10.006" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 12:57:10.006" starttime="20201031 12:57:10.002"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:57:10.009" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:57:54.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:57:54.371" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 12:57:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57...</msg>
<status status="PASS" endtime="20201031 12:57:54.371" starttime="20201031 12:57:10.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:57:54.372" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-31 12:57:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:12 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-31 12:57:12 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:57:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 12:57:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 12:57:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 12:57:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-27DB4E30C5EB-&gt;4b166258-69aa-4654-b442-a5538889c912
2020-10-31 12:57:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-31 12:57:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-10-31 12:57:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:13 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-31 12:57:16 INFO  JobSubmitter:202 - number of splits:3
2020-10-31 12:57:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604148964613_0001
2020-10-31 12:57:16 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-31 12:57:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:17 INFO  Configuration:2752 - resource-types.xml not found
2020-10-31 12:57:17 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-31 12:57:17 INFO  YarnClientImpl:324 - Submitted application application_1604148964613_0001
2020-10-31 12:57:17 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604148964613_0001/
2020-10-31 12:57:17 INFO  Job:1619 - Running job: job_1604148964613_0001
2020-10-31 12:57:28 INFO  Job:1640 - Job job_1604148964613_0001 running in uber mode : false
2020-10-31 12:57:28 INFO  Job:1647 -  map 0% reduce 0%
2020-10-31 12:57:34 INFO  Job:1647 -  map 33% reduce 0%
2020-10-31 12:57:40 INFO  Job:1647 -  map 67% reduce 0%
2020-10-31 12:57:45 INFO  Job:1647 -  map 100% reduce 0%
2020-10-31 12:57:49 INFO  Job:1647 -  map 100% reduce 100%
2020-10-31 12:57:53 INFO  Job:1658 - Job job_1604148964613_0001 completed successfully
2020-10-31 12:57:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:53 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39368
		Total time spent by all reduces in occupied slots (ms)=15040
		Total time spent by all map tasks (ms)=9842
		Total time spent by all reduce tasks (ms)=3760
		Total vcore-milliseconds taken by all map tasks=9842
		Total vcore-milliseconds taken by all reduce tasks=3760
		Total megabyte-milliseconds taken by all map tasks=40312832
		Total megabyte-milliseconds taken by all reduce tasks=15400960
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=644
		CPU time spent (ms)=6480
		Physical memory (bytes) snapshot=1150902272
		Virtual memory (bytes) snapshot=16057507840
		Total committed heap usage (bytes)=1053818880
		Peak Map Physical memory (bytes)=295800832
		Peak Map Virtual memory (bytes)=4016787456
		Peak Reduce Physical memory (bytes)=299200512
		Peak Reduce Virtual memory (bytes)=4035477504
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.456 seconds
2020-10-31 12:57:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:53 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-31 12:57:54 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201031 12:57:54.372" starttime="20201031 12:57:54.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:57:54.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:57:54.373" starttime="20201031 12:57:54.373"></status>
</kw>
<status status="PASS" endtime="20201031 12:57:54.373" starttime="20201031 12:57:10.007"></status>
</kw>
<msg timestamp="20201031 12:57:54.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:57:54.373" starttime="20201031 12:57:10.007"></status>
</kw>
<msg timestamp="20201031 12:57:54.374" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 12:57:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57...</msg>
<status status="PASS" endtime="20201031 12:57:54.374" starttime="20201031 12:57:10.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 12:57:54.374" starttime="20201031 12:57:54.374"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 12:57:54.375" critical="yes" starttime="20201031 12:57:09.988"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:57:54.379" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:57:54.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:57:54.384" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 12:57:54.385" starttime="20201031 12:57:54.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:57:54.385" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 12:57:54.386" starttime="20201031 12:57:54.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:57:54.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:57:54.386" starttime="20201031 12:57:54.386"></status>
</kw>
<status status="PASS" endtime="20201031 12:57:54.386" starttime="20201031 12:57:54.377"></status>
</kw>
<msg timestamp="20201031 12:57:54.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:57:54.386" starttime="20201031 12:57:54.377"></status>
</kw>
<msg timestamp="20201031 12:57:54.387" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 12:57:54.387" starttime="20201031 12:57:54.376"></status>
</kw>
<msg timestamp="20201031 12:57:54.387" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 12:57:54.387" starttime="20201031 12:57:54.376"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 12:57:54.387" level="INFO">${random} = 48</msg>
<status status="PASS" endtime="20201031 12:57:54.387" starttime="20201031 12:57:54.387"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 12:57:54.392" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 12:57:54.392" starttime="20201031 12:57:54.391"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:57:54.392" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 12:57:54.392" starttime="20201031 12:57:54.392"></status>
</kw>
<status status="PASS" endtime="20201031 12:57:54.392" starttime="20201031 12:57:54.391"></status>
</kw>
<msg timestamp="20201031 12:57:54.392" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 12:57:54.392" starttime="20201031 12:57:54.389"></status>
</kw>
<status status="PASS" endtime="20201031 12:57:54.393" starttime="20201031 12:57:54.389"></status>
</kw>
<msg timestamp="20201031 12:57:54.393" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 12:57:54.393" starttime="20201031 12:57:54.388"></status>
</kw>
<msg timestamp="20201031 12:57:54.393" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 12:57:54.393" starttime="20201031 12:57:54.387"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 12:57:54.396" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 12:57:54.396" starttime="20201031 12:57:54.395"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:57:54.396" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 12:57:54.396" starttime="20201031 12:57:54.396"></status>
</kw>
<status status="PASS" endtime="20201031 12:57:54.396" starttime="20201031 12:57:54.395"></status>
</kw>
<msg timestamp="20201031 12:57:54.396" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 12:57:54.397" starttime="20201031 12:57:54.395"></status>
</kw>
<status status="PASS" endtime="20201031 12:57:54.397" starttime="20201031 12:57:54.394"></status>
</kw>
<msg timestamp="20201031 12:57:54.397" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201031 12:57:54.397" starttime="20201031 12:57:54.394"></status>
</kw>
<msg timestamp="20201031 12:57:54.397" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201031 12:57:54.397" starttime="20201031 12:57:54.393"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 12:57:54.400" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 12:57:54.400" starttime="20201031 12:57:54.399"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 12:57:54.400" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 12:57:54.400" starttime="20201031 12:57:54.400"></status>
</kw>
<status status="PASS" endtime="20201031 12:57:54.401" starttime="20201031 12:57:54.399"></status>
</kw>
<msg timestamp="20201031 12:57:54.401" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 12:57:54.401" starttime="20201031 12:57:54.399"></status>
</kw>
<status status="PASS" endtime="20201031 12:57:54.401" starttime="20201031 12:57:54.398"></status>
</kw>
<msg timestamp="20201031 12:57:54.401" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-48.txt</msg>
<status status="PASS" endtime="20201031 12:57:54.401" starttime="20201031 12:57:54.398"></status>
</kw>
<msg timestamp="20201031 12:57:54.401" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-48.txt</msg>
<status status="PASS" endtime="20201031 12:57:54.401" starttime="20201031 12:57:54.397"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 12:57:54.405" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-48.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 12:58:31.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 12:58:31.940" level="INFO">${output} = 2020-10-31 12:57:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 12:58:31.940" starttime="20201031 12:57:54.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 12:58:31.941" level="INFO">2020-10-31 12:57:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:56 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-10-31 12:57:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:56 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-31 12:57:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:56 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-31 12:57:56 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-31 12:57:56 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 12:57:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 12:57:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 12:57:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B08085A21EF6-&gt;4b166258-69aa-4654-b442-a5538889c912
2020-10-31 12:57:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 12:58:00 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-31 12:58:00 INFO  JobSubmitter:202 - number of splits:3
2020-10-31 12:58:00 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604148964613_0002
2020-10-31 12:58:00 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-31 12:58:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:01 INFO  Configuration:2752 - resource-types.xml not found
2020-10-31 12:58:01 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-31 12:58:01 INFO  YarnClientImpl:324 - Submitted application application_1604148964613_0002
2020-10-31 12:58:01 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604148964613_0002/
2020-10-31 12:58:01 INFO  Job:1619 - Running job: job_1604148964613_0002
2020-10-31 12:58:08 INFO  Job:1640 - Job job_1604148964613_0002 running in uber mode : false
2020-10-31 12:58:08 INFO  Job:1647 -  map 0% reduce 0%
2020-10-31 12:58:15 INFO  Job:1647 -  map 33% reduce 0%
2020-10-31 12:58:21 INFO  Job:1647 -  map 67% reduce 0%
2020-10-31 12:58:26 INFO  Job:1647 -  map 100% reduce 0%
2020-10-31 12:58:30 INFO  Job:1647 -  map 100% reduce 100%
2020-10-31 12:58:31 INFO  Job:1658 - Job job_1604148964613_0002 completed successfully
2020-10-31 12:58:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:58:31 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40600
		Total time spent by all reduces in occupied slots (ms)=14872
		Total time spent by all map tasks (ms)=10150
		Total time spent by all reduce tasks (ms)=3718
		Total vcore-milliseconds taken by all map tasks=10150
		Total vcore-milliseconds taken by all reduce tasks=3718
		Total megabyte-milliseconds taken by all map tasks=41574400
		Total megabyte-milliseconds taken by all reduce tasks=15228928
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=662
		CPU time spent (ms)=6930
		Physical memory (bytes) snapshot=1167237120
		Virtual memory (bytes) snapshot=16064237568
		Total committed heap usage (bytes)=1062731776
		Peak Map Physical memory (bytes)=296996864
		Peak Map Virtual memory (bytes)=4014538752
		Peak Reduce Physical memory (bytes)=298704896
		Peak Reduce Virtual memory (bytes)=4041621504
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-31 12:58:31 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201031 12:58:31.942" starttime="20201031 12:58:31.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 12:58:31.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 12:58:31.942" starttime="20201031 12:58:31.942"></status>
</kw>
<status status="PASS" endtime="20201031 12:58:31.942" starttime="20201031 12:57:54.402"></status>
</kw>
<msg timestamp="20201031 12:58:31.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 12:58:31.943" starttime="20201031 12:57:54.402"></status>
</kw>
<msg timestamp="20201031 12:58:31.943" level="INFO">${output} = 2020-10-31 12:57:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 12:57:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 12:58:31.943" starttime="20201031 12:57:54.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201031 12:58:31.944" starttime="20201031 12:58:31.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 12:58:31.944" starttime="20201031 12:58:31.944"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 12:58:31.944" critical="yes" starttime="20201031 12:57:54.375"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201031 12:58:31.946" starttime="20201031 12:57:09.938"></status>
</suite>
<status status="PASS" elapsedtime="202165" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:01:12.511" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:01:16.280" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 13:01:16.280" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201031 13:01:16.280" starttime="20201031 13:01:12.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:01:16.282" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201031 13:01:16.282" starttime="20201031 13:01:16.281"></status>
</kw>
<msg timestamp="20201031 13:01:16.282" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201031 13:01:16.282" starttime="20201031 13:01:12.506"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:01:16.289" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:01:19.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:01:19.577" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:01:19.577" starttime="20201031 13:01:16.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:01:19.578" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:01:19.578" starttime="20201031 13:01:19.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:01:19.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:01:19.579" starttime="20201031 13:01:19.578"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:19.579" starttime="20201031 13:01:16.284"></status>
</kw>
<msg timestamp="20201031 13:01:19.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:01:19.579" starttime="20201031 13:01:16.284"></status>
</kw>
<msg timestamp="20201031 13:01:19.579" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201031 13:01:19.579" starttime="20201031 13:01:16.283"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201031 13:01:19.580" starttime="20201031 13:01:19.579"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:19.580" starttime="20201031 13:01:16.283"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:19.580" starttime="20201031 13:01:16.282"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:01:19.584" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:01:22.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:01:22.586" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:01:22.586" starttime="20201031 13:01:19.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:01:22.587" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:01:22.587" starttime="20201031 13:01:22.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:01:22.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:01:22.588" starttime="20201031 13:01:22.588"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:22.588" starttime="20201031 13:01:19.582"></status>
</kw>
<msg timestamp="20201031 13:01:22.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:01:22.589" starttime="20201031 13:01:19.582"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:22.589" starttime="20201031 13:01:19.581"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:22.589" starttime="20201031 13:01:19.581"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:22.589" starttime="20201031 13:01:19.580"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201031 13:01:22.590" starttime="20201031 13:01:22.589"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:01:22.594" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:01:26.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:01:26.019" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:01:22.347Z",
  "modificat...</msg>
<status status="PASS" endtime="20201031 13:01:26.019" starttime="20201031 13:01:22.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:01:26.020" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:01:22.347Z",
  "modificationTime" : "2020-10-31T13:01:22.347Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201031 13:01:26.021" starttime="20201031 13:01:26.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:01:26.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:01:26.021" starttime="20201031 13:01:26.021"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:26.022" starttime="20201031 13:01:22.591"></status>
</kw>
<msg timestamp="20201031 13:01:26.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:01:26.022" starttime="20201031 13:01:22.590"></status>
</kw>
<msg timestamp="20201031 13:01:26.022" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:01:22.347Z",
  "modificat...</msg>
<status status="PASS" endtime="20201031 13:01:26.022" starttime="20201031 13:01:22.590"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201031 13:01:26.023" starttime="20201031 13:01:26.022"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 13:01:26.026" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 13:01:26.027" starttime="20201031 13:01:26.026"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 13:01:26.027" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 13:01:26.027" starttime="20201031 13:01:26.027"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:26.027" starttime="20201031 13:01:26.026"></status>
</kw>
<msg timestamp="20201031 13:01:26.027" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 13:01:26.027" starttime="20201031 13:01:26.025"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:26.028" starttime="20201031 13:01:26.024"></status>
</kw>
<msg timestamp="20201031 13:01:26.028" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201031 13:01:26.028" starttime="20201031 13:01:26.024"></status>
</kw>
<msg timestamp="20201031 13:01:26.028" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201031 13:01:26.028" starttime="20201031 13:01:26.023"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:01:26.033" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:01:29.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:01:29.274" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:01:29.274" starttime="20201031 13:01:26.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:01:29.275" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:01:29.275" starttime="20201031 13:01:29.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:01:29.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:01:29.276" starttime="20201031 13:01:29.276"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:29.276" starttime="20201031 13:01:26.029"></status>
</kw>
<msg timestamp="20201031 13:01:29.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:01:29.276" starttime="20201031 13:01:26.029"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:29.277" starttime="20201031 13:01:26.028"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:01:29.281" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:01:35.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:01:35.888" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:01:35.888" starttime="20201031 13:01:29.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:01:35.889" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:01:35.889" starttime="20201031 13:01:35.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:01:35.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:01:35.890" starttime="20201031 13:01:35.889"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:35.890" starttime="20201031 13:01:29.278"></status>
</kw>
<msg timestamp="20201031 13:01:35.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:01:35.890" starttime="20201031 13:01:29.278"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:35.890" starttime="20201031 13:01:29.277"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:01:35.894" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:01:41.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:01:41.148" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:01:41.148" starttime="20201031 13:01:35.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:01:41.149" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:01:41.149" starttime="20201031 13:01:41.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:01:41.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:01:41.150" starttime="20201031 13:01:41.149"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:41.150" starttime="20201031 13:01:35.891"></status>
</kw>
<msg timestamp="20201031 13:01:41.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:01:41.150" starttime="20201031 13:01:35.891"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:41.150" starttime="20201031 13:01:35.891"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:01:41.154" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:01:46.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:01:46.327" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:01:46.327" starttime="20201031 13:01:41.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:01:46.328" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:01:46.329" starttime="20201031 13:01:46.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:01:46.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:01:46.329" starttime="20201031 13:01:46.329"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:46.330" starttime="20201031 13:01:41.151"></status>
</kw>
<msg timestamp="20201031 13:01:46.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:01:46.330" starttime="20201031 13:01:41.151"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:46.330" starttime="20201031 13:01:41.151"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 13:01:46.330" critical="yes" starttime="20201031 13:01:12.505"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 13:01:46.335" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 13:01:46.335" starttime="20201031 13:01:46.335"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 13:01:46.336" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 13:01:46.336" starttime="20201031 13:01:46.336"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:46.336" starttime="20201031 13:01:46.334"></status>
</kw>
<msg timestamp="20201031 13:01:46.336" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 13:01:46.336" starttime="20201031 13:01:46.334"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:46.337" starttime="20201031 13:01:46.333"></status>
</kw>
<msg timestamp="20201031 13:01:46.337" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201031 13:01:46.337" starttime="20201031 13:01:46.332"></status>
</kw>
<msg timestamp="20201031 13:01:46.337" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201031 13:01:46.337" starttime="20201031 13:01:46.332"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:01:46.341" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:01:49.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:01:49.384" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:01:49.384" starttime="20201031 13:01:46.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:01:49.385" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:01:49.385" starttime="20201031 13:01:49.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:01:49.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:01:49.386" starttime="20201031 13:01:49.385"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:49.386" starttime="20201031 13:01:46.338"></status>
</kw>
<msg timestamp="20201031 13:01:49.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:01:49.386" starttime="20201031 13:01:46.338"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:49.386" starttime="20201031 13:01:46.337"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:01:49.392" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:01:52.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:01:52.512" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:01:52.512" starttime="20201031 13:01:49.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:01:52.514" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:01:52.514" starttime="20201031 13:01:52.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:01:52.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:01:52.514" starttime="20201031 13:01:52.514"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:52.515" starttime="20201031 13:01:49.388"></status>
</kw>
<msg timestamp="20201031 13:01:52.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:01:52.515" starttime="20201031 13:01:49.387"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:52.515" starttime="20201031 13:01:49.386"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 13:01:52.515" critical="yes" starttime="20201031 13:01:46.331"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201031 13:01:52.517" starttime="20201031 13:01:12.447"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 13:03:32.734" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 13:03:32.734" starttime="20201031 13:03:32.734"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 13:03:32.735" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 13:03:32.735" starttime="20201031 13:03:32.734"></status>
</kw>
<status status="PASS" endtime="20201031 13:03:32.735" starttime="20201031 13:03:32.734"></status>
</kw>
<msg timestamp="20201031 13:03:32.735" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 13:03:32.735" starttime="20201031 13:03:32.733"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201031 13:03:32.736" starttime="20201031 13:03:32.736"></status>
</kw>
<msg timestamp="20201031 13:03:32.736" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201031 13:03:32.736" starttime="20201031 13:03:32.735"></status>
</kw>
<status status="PASS" endtime="20201031 13:03:32.736" starttime="20201031 13:03:32.732"></status>
</kw>
<msg timestamp="20201031 13:03:32.736" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 13:03:32.736" starttime="20201031 13:03:32.732"></status>
</kw>
<msg timestamp="20201031 13:03:32.737" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 13:03:32.737" starttime="20201031 13:03:32.730"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 13:03:32.737" level="INFO">${random} = 45006</msg>
<status status="PASS" endtime="20201031 13:03:32.737" starttime="20201031 13:03:32.737"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:03:32.744" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-45006 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:03:36.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:03:36.231" level="INFO">${output} = 2020-10-31 13:03:34 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 13:03:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201031 13:03:36.231" starttime="20201031 13:03:32.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:03:36.232" level="INFO">2020-10-31 13:03:34 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 13:03:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 13:03:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 13:03:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 13:03:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E81CBC112DA8-&gt;61d7050c-2b9e-420c-a6b0-d6969641c85a
2020-10-31 13:03:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201031 13:03:36.232" starttime="20201031 13:03:36.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:03:36.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:03:36.233" starttime="20201031 13:03:36.232"></status>
</kw>
<status status="PASS" endtime="20201031 13:03:36.233" starttime="20201031 13:03:32.738"></status>
</kw>
<msg timestamp="20201031 13:03:36.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:03:36.233" starttime="20201031 13:03:32.738"></status>
</kw>
<msg timestamp="20201031 13:03:36.233" level="INFO">${result} = 2020-10-31 13:03:34 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 13:03:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201031 13:03:36.233" starttime="20201031 13:03:32.737"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:03:36.237" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:03:38.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:03:38.151" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 13:01 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-31 13:03 ofs://om/volume1/bucket1/ozone-45006
-rw-...</msg>
<status status="PASS" endtime="20201031 13:03:38.151" starttime="20201031 13:03:36.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:03:38.153" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 13:01 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-31 13:03 ofs://om/volume1/bucket1/ozone-45006
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-31 13:02 ofs://om/volume1/bucket1/ozone-97676
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 13:01 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 13:03 ofs://om/volume1/bucket1/wordcount-39.txt</msg>
<status status="PASS" endtime="20201031 13:03:38.153" starttime="20201031 13:03:38.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:03:38.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:03:38.154" starttime="20201031 13:03:38.153"></status>
</kw>
<status status="PASS" endtime="20201031 13:03:38.154" starttime="20201031 13:03:36.234"></status>
</kw>
<msg timestamp="20201031 13:03:38.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:03:38.155" starttime="20201031 13:03:36.234"></status>
</kw>
<msg timestamp="20201031 13:03:38.155" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 13:01 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-31 13:03 ofs://om/volume1/bucket1/ozone-45006
-rw-...</msg>
<status status="PASS" endtime="20201031 13:03:38.155" starttime="20201031 13:03:36.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201031 13:03:38.156" starttime="20201031 13:03:38.155"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 13:03:38.156" critical="yes" starttime="20201031 13:03:32.730"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201031 13:03:38.157" starttime="20201031 13:03:32.646"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 13:01:57.357" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 13:01:57.357" starttime="20201031 13:01:57.356"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 13:01:57.357" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 13:01:57.357" starttime="20201031 13:01:57.357"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:57.358" starttime="20201031 13:01:57.356"></status>
</kw>
<msg timestamp="20201031 13:01:57.358" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 13:01:57.358" starttime="20201031 13:01:57.355"></status>
</kw>
<status status="PASS" endtime="20201031 13:01:57.358" starttime="20201031 13:01:57.355"></status>
</kw>
<msg timestamp="20201031 13:01:57.358" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 13:01:57.358" starttime="20201031 13:01:57.354"></status>
</kw>
<msg timestamp="20201031 13:01:57.358" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 13:01:57.358" starttime="20201031 13:01:57.353"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 13:01:57.359" level="INFO">${random} = 97676</msg>
<status status="PASS" endtime="20201031 13:01:57.359" starttime="20201031 13:01:57.358"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:01:57.364" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-97676 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:02:01.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:02:01.011" level="INFO">${output} = 2020-10-31 13:01:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 13:01:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201031 13:02:01.011" starttime="20201031 13:01:57.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:02:01.012" level="INFO">2020-10-31 13:01:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 13:01:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 13:01:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 13:01:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 13:01:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A632A756F385-&gt;61d7050c-2b9e-420c-a6b0-d6969641c85a
2020-10-31 13:01:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201031 13:02:01.012" starttime="20201031 13:02:01.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:02:01.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:02:01.013" starttime="20201031 13:02:01.013"></status>
</kw>
<status status="PASS" endtime="20201031 13:02:01.013" starttime="20201031 13:01:57.359"></status>
</kw>
<msg timestamp="20201031 13:02:01.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:02:01.013" starttime="20201031 13:01:57.359"></status>
</kw>
<msg timestamp="20201031 13:02:01.014" level="INFO">${result} = 2020-10-31 13:01:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 13:01:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201031 13:02:01.014" starttime="20201031 13:01:57.359"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:02:01.017" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:02:02.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:02:02.919" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 13:01 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-31 13:02 o3fs://bucket1.volume1.om/ozone-97676
dr...</msg>
<status status="PASS" endtime="20201031 13:02:02.919" starttime="20201031 13:02:01.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:02:02.920" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 13:01 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-31 13:02 o3fs://bucket1.volume1.om/ozone-97676
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 13:01 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201031 13:02:02.920" starttime="20201031 13:02:02.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:02:02.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:02:02.921" starttime="20201031 13:02:02.920"></status>
</kw>
<status status="PASS" endtime="20201031 13:02:02.921" starttime="20201031 13:02:01.015"></status>
</kw>
<msg timestamp="20201031 13:02:02.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:02:02.921" starttime="20201031 13:02:01.014"></status>
</kw>
<msg timestamp="20201031 13:02:02.921" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 13:01 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-31 13:02 o3fs://bucket1.volume1.om/ozone-97676
dr...</msg>
<status status="PASS" endtime="20201031 13:02:02.921" starttime="20201031 13:02:01.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201031 13:02:02.922" starttime="20201031 13:02:02.922"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 13:02:02.922" critical="yes" starttime="20201031 13:01:57.352"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201031 13:02:02.923" starttime="20201031 13:01:57.305"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:03:43.028" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:03:43.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:03:43.032" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 13:03:43.032" starttime="20201031 13:03:43.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:03:43.032" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 13:03:43.033" starttime="20201031 13:03:43.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:03:43.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:03:43.033" starttime="20201031 13:03:43.033"></status>
</kw>
<status status="PASS" endtime="20201031 13:03:43.033" starttime="20201031 13:03:43.022"></status>
</kw>
<msg timestamp="20201031 13:03:43.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:03:43.034" starttime="20201031 13:03:43.021"></status>
</kw>
<msg timestamp="20201031 13:03:43.034" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 13:03:43.034" starttime="20201031 13:03:43.021"></status>
</kw>
<msg timestamp="20201031 13:03:43.034" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 13:03:43.034" starttime="20201031 13:03:43.021"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 13:03:43.037" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 13:03:43.037" starttime="20201031 13:03:43.036"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 13:03:43.038" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 13:03:43.038" starttime="20201031 13:03:43.037"></status>
</kw>
<status status="PASS" endtime="20201031 13:03:43.038" starttime="20201031 13:03:43.036"></status>
</kw>
<msg timestamp="20201031 13:03:43.038" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 13:03:43.038" starttime="20201031 13:03:43.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201031 13:03:43.039" starttime="20201031 13:03:43.038"></status>
</kw>
<msg timestamp="20201031 13:03:43.039" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201031 13:03:43.039" starttime="20201031 13:03:43.038"></status>
</kw>
<status status="PASS" endtime="20201031 13:03:43.039" starttime="20201031 13:03:43.035"></status>
</kw>
<msg timestamp="20201031 13:03:43.039" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 13:03:43.039" starttime="20201031 13:03:43.035"></status>
</kw>
<msg timestamp="20201031 13:03:43.039" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 13:03:43.039" starttime="20201031 13:03:43.034"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:03:43.044" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:04:26.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:04:26.360" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 13:03:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 13:03:45 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201031 13:04:26.360" starttime="20201031 13:03:43.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:04:26.361" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-31 13:03:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 13:03:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 13:03:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 13:03:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 13:03:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D8A880A17E5F-&gt;61d7050c-2b9e-420c-a6b0-d6969641c85a
2020-10-31 13:03:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-31 13:03:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-10-31 13:03:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-31 13:03:46 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-31 13:03:49 INFO  JobSubmitter:202 - number of splits:3
2020-10-31 13:03:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604149251655_0003
2020-10-31 13:03:49 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-31 13:03:50 INFO  Configuration:2795 - resource-types.xml not found
2020-10-31 13:03:50 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-31 13:03:50 INFO  YarnClientImpl:329 - Submitted application application_1604149251655_0003
2020-10-31 13:03:50 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604149251655_0003/
2020-10-31 13:03:50 INFO  Job:1619 - Running job: job_1604149251655_0003
2020-10-31 13:03:57 INFO  Job:1640 - Job job_1604149251655_0003 running in uber mode : false
2020-10-31 13:03:57 INFO  Job:1647 -  map 0% reduce 0%
2020-10-31 13:04:04 INFO  Job:1647 -  map 33% reduce 0%
2020-10-31 13:04:10 INFO  Job:1647 -  map 67% reduce 0%
2020-10-31 13:04:15 INFO  Job:1647 -  map 100% reduce 0%
2020-10-31 13:04:22 INFO  Job:1647 -  map 100% reduce 100%
2020-10-31 13:04:25 INFO  Job:1658 - Job job_1604149251655_0003 completed successfully
2020-10-31 13:04:25 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061445
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40208
		Total time spent by all reduces in occupied slots (ms)=24284
		Total time spent by all map tasks (ms)=10052
		Total time spent by all reduce tasks (ms)=6071
		Total vcore-milliseconds taken by all map tasks=10052
		Total vcore-milliseconds taken by all reduce tasks=6071
		Total megabyte-milliseconds taken by all map tasks=41172992
		Total megabyte-milliseconds taken by all reduce tasks=24866816
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=619
		CPU time spent (ms)=7240
		Physical memory (bytes) snapshot=1445318656
		Virtual memory (bytes) snapshot=16064471040
		Total committed heap usage (bytes)=1692401664
		Peak Map Physical memory (bytes)=366313472
		Peak Map Virtual memory (bytes)=4016812032
		Peak Reduce Physical memory (bytes)=348692480
		Peak Reduce Virtual memory (bytes)=4018831360
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.483 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201031 13:04:26.361" starttime="20201031 13:04:26.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:04:26.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:04:26.362" starttime="20201031 13:04:26.361"></status>
</kw>
<status status="PASS" endtime="20201031 13:04:26.362" starttime="20201031 13:03:43.040"></status>
</kw>
<msg timestamp="20201031 13:04:26.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:04:26.362" starttime="20201031 13:03:43.040"></status>
</kw>
<msg timestamp="20201031 13:04:26.363" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 13:03:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 13:03:45 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201031 13:04:26.363" starttime="20201031 13:03:43.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 13:04:26.363" starttime="20201031 13:04:26.363"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 13:04:26.363" critical="yes" starttime="20201031 13:03:43.020"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:04:26.368" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:04:26.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:04:26.373" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 13:04:26.373" starttime="20201031 13:04:26.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:04:26.374" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 13:04:26.374" starttime="20201031 13:04:26.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:04:26.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:04:26.374" starttime="20201031 13:04:26.374"></status>
</kw>
<status status="PASS" endtime="20201031 13:04:26.375" starttime="20201031 13:04:26.366"></status>
</kw>
<msg timestamp="20201031 13:04:26.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:04:26.375" starttime="20201031 13:04:26.365"></status>
</kw>
<msg timestamp="20201031 13:04:26.376" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 13:04:26.376" starttime="20201031 13:04:26.365"></status>
</kw>
<msg timestamp="20201031 13:04:26.376" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 13:04:26.376" starttime="20201031 13:04:26.365"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 13:04:26.377" level="INFO">${random} = 05</msg>
<status status="PASS" endtime="20201031 13:04:26.377" starttime="20201031 13:04:26.376"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 13:04:26.380" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 13:04:26.380" starttime="20201031 13:04:26.380"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 13:04:26.381" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 13:04:26.381" starttime="20201031 13:04:26.380"></status>
</kw>
<status status="PASS" endtime="20201031 13:04:26.381" starttime="20201031 13:04:26.380"></status>
</kw>
<msg timestamp="20201031 13:04:26.381" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 13:04:26.381" starttime="20201031 13:04:26.379"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201031 13:04:26.382" starttime="20201031 13:04:26.382"></status>
</kw>
<msg timestamp="20201031 13:04:26.382" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201031 13:04:26.382" starttime="20201031 13:04:26.381"></status>
</kw>
<status status="PASS" endtime="20201031 13:04:26.382" starttime="20201031 13:04:26.378"></status>
</kw>
<msg timestamp="20201031 13:04:26.382" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 13:04:26.382" starttime="20201031 13:04:26.378"></status>
</kw>
<msg timestamp="20201031 13:04:26.383" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 13:04:26.383" starttime="20201031 13:04:26.377"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 13:04:26.385" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 13:04:26.385" starttime="20201031 13:04:26.385"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 13:04:26.386" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 13:04:26.386" starttime="20201031 13:04:26.385"></status>
</kw>
<status status="PASS" endtime="20201031 13:04:26.386" starttime="20201031 13:04:26.385"></status>
</kw>
<msg timestamp="20201031 13:04:26.386" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 13:04:26.386" starttime="20201031 13:04:26.384"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 13:04:26.387" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201031 13:04:26.387" starttime="20201031 13:04:26.387"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 13:04:26.388" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201031 13:04:26.388" starttime="20201031 13:04:26.388"></status>
</kw>
<status status="PASS" endtime="20201031 13:04:26.388" starttime="20201031 13:04:26.387"></status>
</kw>
<msg timestamp="20201031 13:04:26.388" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201031 13:04:26.388" starttime="20201031 13:04:26.386"></status>
</kw>
<status status="PASS" endtime="20201031 13:04:26.389" starttime="20201031 13:04:26.384"></status>
</kw>
<msg timestamp="20201031 13:04:26.389" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201031 13:04:26.389" starttime="20201031 13:04:26.383"></status>
</kw>
<msg timestamp="20201031 13:04:26.389" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201031 13:04:26.389" starttime="20201031 13:04:26.383"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 13:04:26.395" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 13:04:26.395" starttime="20201031 13:04:26.395"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 13:04:26.396" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 13:04:26.396" starttime="20201031 13:04:26.395"></status>
</kw>
<status status="PASS" endtime="20201031 13:04:26.396" starttime="20201031 13:04:26.394"></status>
</kw>
<msg timestamp="20201031 13:04:26.396" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 13:04:26.396" starttime="20201031 13:04:26.394"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 13:04:26.397" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201031 13:04:26.397" starttime="20201031 13:04:26.397"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 13:04:26.398" level="INFO">${result} = /wordcount-05.txt</msg>
<status status="PASS" endtime="20201031 13:04:26.398" starttime="20201031 13:04:26.397"></status>
</kw>
<status status="PASS" endtime="20201031 13:04:26.398" starttime="20201031 13:04:26.397"></status>
</kw>
<msg timestamp="20201031 13:04:26.398" level="INFO">${path_with_leading} = /wordcount-05.txt</msg>
<status status="PASS" endtime="20201031 13:04:26.398" starttime="20201031 13:04:26.396"></status>
</kw>
<status status="PASS" endtime="20201031 13:04:26.398" starttime="20201031 13:04:26.392"></status>
</kw>
<msg timestamp="20201031 13:04:26.398" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-05.txt</msg>
<status status="PASS" endtime="20201031 13:04:26.398" starttime="20201031 13:04:26.390"></status>
</kw>
<msg timestamp="20201031 13:04:26.399" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-05.txt</msg>
<status status="PASS" endtime="20201031 13:04:26.399" starttime="20201031 13:04:26.390"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:04:26.404" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-05.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:05:05.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:05:05.045" level="INFO">${output} = 2020-10-31 13:04:28 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-10-31 13:04:28 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201031 13:05:05.045" starttime="20201031 13:04:26.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:05:05.046" level="INFO">2020-10-31 13:04:28 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-10-31 13:04:28 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-31 13:04:28 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 13:04:28 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 13:04:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 13:04:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 13:04:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1A918553E28C-&gt;61d7050c-2b9e-420c-a6b0-d6969641c85a
2020-10-31 13:04:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 13:04:30 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-31 13:04:32 INFO  JobSubmitter:202 - number of splits:3
2020-10-31 13:04:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604149251655_0004
2020-10-31 13:04:32 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-31 13:04:33 INFO  Configuration:2795 - resource-types.xml not found
2020-10-31 13:04:33 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-31 13:04:33 INFO  YarnClientImpl:329 - Submitted application application_1604149251655_0004
2020-10-31 13:04:33 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604149251655_0004/
2020-10-31 13:04:33 INFO  Job:1619 - Running job: job_1604149251655_0004
2020-10-31 13:04:40 INFO  Job:1640 - Job job_1604149251655_0004 running in uber mode : false
2020-10-31 13:04:40 INFO  Job:1647 -  map 0% reduce 0%
2020-10-31 13:04:47 INFO  Job:1647 -  map 33% reduce 0%
2020-10-31 13:04:53 INFO  Job:1647 -  map 67% reduce 0%
2020-10-31 13:04:58 INFO  Job:1647 -  map 100% reduce 0%
2020-10-31 13:05:03 INFO  Job:1647 -  map 100% reduce 100%
2020-10-31 13:05:04 INFO  Job:1658 - Job job_1604149251655_0004 completed successfully
2020-10-31 13:05:04 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40768
		Total time spent by all reduces in occupied slots (ms)=15700
		Total time spent by all map tasks (ms)=10192
		Total time spent by all reduce tasks (ms)=3925
		Total vcore-milliseconds taken by all map tasks=10192
		Total vcore-milliseconds taken by all reduce tasks=3925
		Total megabyte-milliseconds taken by all map tasks=41746432
		Total megabyte-milliseconds taken by all reduce tasks=16076800
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=683
		CPU time spent (ms)=7540
		Physical memory (bytes) snapshot=1439780864
		Virtual memory (bytes) snapshot=16057950208
		Total committed heap usage (bytes)=1677197312
		Peak Map Physical memory (bytes)=359804928
		Peak Map Virtual memory (bytes)=4010803200
		Peak Reduce Physical memory (bytes)=375877632
		Peak Reduce Virtual memory (bytes)=4041191424
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201031 13:05:05.046" starttime="20201031 13:05:05.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:05:05.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:05:05.047" starttime="20201031 13:05:05.046"></status>
</kw>
<status status="PASS" endtime="20201031 13:05:05.049" starttime="20201031 13:04:26.399"></status>
</kw>
<msg timestamp="20201031 13:05:05.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:05:05.051" starttime="20201031 13:04:26.399"></status>
</kw>
<msg timestamp="20201031 13:05:05.052" level="INFO">${output} = 2020-10-31 13:04:28 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-10-31 13:04:28 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201031 13:05:05.052" starttime="20201031 13:04:26.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201031 13:05:05.052" starttime="20201031 13:05:05.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 13:05:05.053" starttime="20201031 13:05:05.052"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 13:05:05.053" critical="yes" starttime="20201031 13:04:26.364"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201031 13:05:05.054" starttime="20201031 13:03:42.972"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:02:07.811" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:02:07.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:02:07.815" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 13:02:07.815" starttime="20201031 13:02:07.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:02:07.816" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 13:02:07.816" starttime="20201031 13:02:07.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:02:07.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:02:07.816" starttime="20201031 13:02:07.816"></status>
</kw>
<status status="PASS" endtime="20201031 13:02:07.817" starttime="20201031 13:02:07.805"></status>
</kw>
<msg timestamp="20201031 13:02:07.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:02:07.817" starttime="20201031 13:02:07.804"></status>
</kw>
<msg timestamp="20201031 13:02:07.817" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 13:02:07.817" starttime="20201031 13:02:07.804"></status>
</kw>
<msg timestamp="20201031 13:02:07.817" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 13:02:07.817" starttime="20201031 13:02:07.804"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 13:02:07.820" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 13:02:07.820" starttime="20201031 13:02:07.820"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 13:02:07.821" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 13:02:07.821" starttime="20201031 13:02:07.820"></status>
</kw>
<status status="PASS" endtime="20201031 13:02:07.821" starttime="20201031 13:02:07.819"></status>
</kw>
<msg timestamp="20201031 13:02:07.821" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 13:02:07.821" starttime="20201031 13:02:07.819"></status>
</kw>
<status status="PASS" endtime="20201031 13:02:07.822" starttime="20201031 13:02:07.818"></status>
</kw>
<msg timestamp="20201031 13:02:07.822" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 13:02:07.822" starttime="20201031 13:02:07.818"></status>
</kw>
<msg timestamp="20201031 13:02:07.822" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 13:02:07.822" starttime="20201031 13:02:07.817"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:02:07.825" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:02:51.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:02:51.406" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 13:02:09 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 13:02:09 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201031 13:02:51.406" starttime="20201031 13:02:07.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:02:51.407" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-31 13:02:09 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 13:02:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 13:02:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 13:02:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 13:02:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9F8D644BB754-&gt;61d7050c-2b9e-420c-a6b0-d6969641c85a
2020-10-31 13:02:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-31 13:02:11 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-10-31 13:02:11 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-31 13:02:12 INFO  JobSubmitter:202 - number of splits:3
2020-10-31 13:02:14 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604149251655_0001
2020-10-31 13:02:14 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-31 13:02:15 INFO  Configuration:2795 - resource-types.xml not found
2020-10-31 13:02:15 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-31 13:02:15 INFO  YarnClientImpl:329 - Submitted application application_1604149251655_0001
2020-10-31 13:02:15 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604149251655_0001/
2020-10-31 13:02:15 INFO  Job:1619 - Running job: job_1604149251655_0001
2020-10-31 13:02:25 INFO  Job:1640 - Job job_1604149251655_0001 running in uber mode : false
2020-10-31 13:02:25 INFO  Job:1647 -  map 0% reduce 0%
2020-10-31 13:02:32 INFO  Job:1647 -  map 33% reduce 0%
2020-10-31 13:02:37 INFO  Job:1647 -  map 67% reduce 0%
2020-10-31 13:02:42 INFO  Job:1647 -  map 100% reduce 0%
2020-10-31 13:02:50 INFO  Job:1647 -  map 100% reduce 100%
2020-10-31 13:02:50 INFO  Job:1658 - Job job_1604149251655_0001 completed successfully
2020-10-31 13:02:50 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40164
		Total time spent by all reduces in occupied slots (ms)=25624
		Total time spent by all map tasks (ms)=10041
		Total time spent by all reduce tasks (ms)=6406
		Total vcore-milliseconds taken by all map tasks=10041
		Total vcore-milliseconds taken by all reduce tasks=6406
		Total megabyte-milliseconds taken by all map tasks=41127936
		Total megabyte-milliseconds taken by all reduce tasks=26238976
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=655
		CPU time spent (ms)=7220
		Physical memory (bytes) snapshot=1469001728
		Virtual memory (bytes) snapshot=16071077888
		Total committed heap usage (bytes)=1688731648
		Peak Map Physical memory (bytes)=372768768
		Peak Map Virtual memory (bytes)=4015251456
		Peak Reduce Physical memory (bytes)=372051968
		Peak Reduce Virtual memory (bytes)=4036575232
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.673 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201031 13:02:51.407" starttime="20201031 13:02:51.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:02:51.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:02:51.408" starttime="20201031 13:02:51.407"></status>
</kw>
<status status="PASS" endtime="20201031 13:02:51.408" starttime="20201031 13:02:07.823"></status>
</kw>
<msg timestamp="20201031 13:02:51.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:02:51.408" starttime="20201031 13:02:07.822"></status>
</kw>
<msg timestamp="20201031 13:02:51.409" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 13:02:09 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 13:02:09 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201031 13:02:51.409" starttime="20201031 13:02:07.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 13:02:51.410" starttime="20201031 13:02:51.410"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 13:02:51.410" critical="yes" starttime="20201031 13:02:07.803"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:02:51.417" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:02:51.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:02:51.422" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 13:02:51.422" starttime="20201031 13:02:51.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:02:51.423" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 13:02:51.423" starttime="20201031 13:02:51.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:02:51.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:02:51.424" starttime="20201031 13:02:51.423"></status>
</kw>
<status status="PASS" endtime="20201031 13:02:51.425" starttime="20201031 13:02:51.412"></status>
</kw>
<msg timestamp="20201031 13:02:51.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:02:51.425" starttime="20201031 13:02:51.412"></status>
</kw>
<msg timestamp="20201031 13:02:51.425" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 13:02:51.425" starttime="20201031 13:02:51.412"></status>
</kw>
<msg timestamp="20201031 13:02:51.426" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 13:02:51.426" starttime="20201031 13:02:51.411"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 13:02:51.428" level="INFO">${random} = 39</msg>
<status status="PASS" endtime="20201031 13:02:51.428" starttime="20201031 13:02:51.426"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 13:02:51.434" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 13:02:51.434" starttime="20201031 13:02:51.432"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 13:02:51.435" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 13:02:51.435" starttime="20201031 13:02:51.434"></status>
</kw>
<status status="PASS" endtime="20201031 13:02:51.435" starttime="20201031 13:02:51.432"></status>
</kw>
<msg timestamp="20201031 13:02:51.435" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 13:02:51.435" starttime="20201031 13:02:51.431"></status>
</kw>
<status status="PASS" endtime="20201031 13:02:51.436" starttime="20201031 13:02:51.430"></status>
</kw>
<msg timestamp="20201031 13:02:51.436" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 13:02:51.436" starttime="20201031 13:02:51.429"></status>
</kw>
<msg timestamp="20201031 13:02:51.436" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 13:02:51.436" starttime="20201031 13:02:51.428"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 13:02:51.439" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 13:02:51.439" starttime="20201031 13:02:51.439"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 13:02:51.440" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 13:02:51.440" starttime="20201031 13:02:51.439"></status>
</kw>
<status status="PASS" endtime="20201031 13:02:51.440" starttime="20201031 13:02:51.439"></status>
</kw>
<msg timestamp="20201031 13:02:51.440" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 13:02:51.440" starttime="20201031 13:02:51.438"></status>
</kw>
<status status="PASS" endtime="20201031 13:02:51.440" starttime="20201031 13:02:51.437"></status>
</kw>
<msg timestamp="20201031 13:02:51.440" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201031 13:02:51.440" starttime="20201031 13:02:51.437"></status>
</kw>
<msg timestamp="20201031 13:02:51.441" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201031 13:02:51.441" starttime="20201031 13:02:51.436"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 13:02:51.443" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 13:02:51.443" starttime="20201031 13:02:51.443"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 13:02:51.444" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 13:02:51.444" starttime="20201031 13:02:51.444"></status>
</kw>
<status status="PASS" endtime="20201031 13:02:51.444" starttime="20201031 13:02:51.443"></status>
</kw>
<msg timestamp="20201031 13:02:51.445" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 13:02:51.445" starttime="20201031 13:02:51.442"></status>
</kw>
<status status="PASS" endtime="20201031 13:02:51.445" starttime="20201031 13:02:51.442"></status>
</kw>
<msg timestamp="20201031 13:02:51.445" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-39.txt</msg>
<status status="PASS" endtime="20201031 13:02:51.445" starttime="20201031 13:02:51.441"></status>
</kw>
<msg timestamp="20201031 13:02:51.445" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-39.txt</msg>
<status status="PASS" endtime="20201031 13:02:51.445" starttime="20201031 13:02:51.441"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:02:51.449" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-39.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:03:27.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:03:27.866" level="INFO">${output} = 2020-10-31 13:02:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-10-31 13:02:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201031 13:03:27.866" starttime="20201031 13:02:51.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:03:27.868" level="INFO">2020-10-31 13:02:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-10-31 13:02:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-31 13:02:53 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 13:02:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 13:02:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 13:02:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 13:02:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CD73339E16BC-&gt;61d7050c-2b9e-420c-a6b0-d6969641c85a
2020-10-31 13:02:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 13:02:55 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-31 13:02:55 INFO  JobSubmitter:202 - number of splits:3
2020-10-31 13:02:55 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604149251655_0002
2020-10-31 13:02:55 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-31 13:02:55 INFO  Configuration:2795 - resource-types.xml not found
2020-10-31 13:02:55 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-31 13:02:55 INFO  YarnClientImpl:329 - Submitted application application_1604149251655_0002
2020-10-31 13:02:55 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604149251655_0002/
2020-10-31 13:02:55 INFO  Job:1619 - Running job: job_1604149251655_0002
2020-10-31 13:03:05 INFO  Job:1640 - Job job_1604149251655_0002 running in uber mode : false
2020-10-31 13:03:05 INFO  Job:1647 -  map 0% reduce 0%
2020-10-31 13:03:11 INFO  Job:1647 -  map 33% reduce 0%
2020-10-31 13:03:17 INFO  Job:1647 -  map 67% reduce 0%
2020-10-31 13:03:22 INFO  Job:1647 -  map 100% reduce 0%
2020-10-31 13:03:27 INFO  Job:1647 -  map 100% reduce 100%
2020-10-31 13:03:27 INFO  Job:1658 - Job job_1604149251655_0002 completed successfully
2020-10-31 13:03:27 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124185
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41216
		Total time spent by all reduces in occupied slots (ms)=15244
		Total time spent by all map tasks (ms)=10304
		Total time spent by all reduce tasks (ms)=3811
		Total vcore-milliseconds taken by all map tasks=10304
		Total vcore-milliseconds taken by all reduce tasks=3811
		Total megabyte-milliseconds taken by all map tasks=42205184
		Total megabyte-milliseconds taken by all reduce tasks=15609856
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=683
		CPU time spent (ms)=7570
		Physical memory (bytes) snapshot=1459970048
		Virtual memory (bytes) snapshot=16075460608
		Total committed heap usage (bytes)=1654128640
		Peak Map Physical memory (bytes)=366096384
		Peak Map Virtual memory (bytes)=4017598464
		Peak Reduce Physical memory (bytes)=370896896
		Peak Reduce Virtual memory (bytes)=4037144576
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201031 13:03:27.868" starttime="20201031 13:03:27.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:03:27.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:03:27.869" starttime="20201031 13:03:27.868"></status>
</kw>
<status status="PASS" endtime="20201031 13:03:27.869" starttime="20201031 13:02:51.446"></status>
</kw>
<msg timestamp="20201031 13:03:27.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:03:27.869" starttime="20201031 13:02:51.446"></status>
</kw>
<msg timestamp="20201031 13:03:27.870" level="INFO">${output} = 2020-10-31 13:02:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-10-31 13:02:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201031 13:03:27.870" starttime="20201031 13:02:51.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201031 13:03:27.870" starttime="20201031 13:03:27.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 13:03:27.871" starttime="20201031 13:03:27.870"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 13:03:27.871" critical="yes" starttime="20201031 13:02:51.411"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201031 13:03:27.872" starttime="20201031 13:02:07.752"></status>
</suite>
<status status="PASS" elapsedtime="213401" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="608218" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
