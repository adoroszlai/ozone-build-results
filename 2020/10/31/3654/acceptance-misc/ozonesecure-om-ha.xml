<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201031 13:35:07.866" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:31:02.320" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:31:13.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:31:13.702" level="INFO">${output} = 2020-10-31 13:31:04,041 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 13:31:04,300 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 13:31:13.702" starttime="20201031 13:31:02.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:31:13.703" level="INFO">2020-10-31 13:31:04,041 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 13:31:04,300 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-31 13:31:04,301 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-31 13:31:07,362 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-31 13:31:07,363 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-10-31 13:31:07,363 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-10-31 13:31:07,363 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-10-31 13:31:07,363 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-31 13:31:07,363 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-31 13:31:07,364 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-10-31 13:31:07,367 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-31 13:31:07,371 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 13:31:07,414 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-31313, with testuser/scm@EXAMPLE.COM as owner.
2020-10-31 13:31:07,942 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-31313/bucket-0-43472, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-31 13:31:08,378 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 13:31:09,385 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 13:31:10,389 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 13:31:10,804 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-31 13:31:11,389 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,507
Average Time spent in bucket creation: 00:00:00,256
Average Time spent in key creation: 00:00:01,051
Average Time spent in key write: 00:00:02,098
Total bytes written: 10240
Total Execution time: 00:00:08,658
***************************************************</msg>
<status status="PASS" endtime="20201031 13:31:13.703" starttime="20201031 13:31:13.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:31:13.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:31:13.704" starttime="20201031 13:31:13.703"></status>
</kw>
<status status="PASS" endtime="20201031 13:31:13.704" starttime="20201031 13:31:02.315"></status>
</kw>
<msg timestamp="20201031 13:31:13.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:31:13.704" starttime="20201031 13:31:02.314"></status>
</kw>
<msg timestamp="20201031 13:31:13.705" level="INFO">${result} = 2020-10-31 13:31:04,041 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 13:31:04,300 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 13:31:13.705" starttime="20201031 13:31:02.314"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201031 13:31:13.708" starttime="20201031 13:31:13.708"></status>
</kw>
<status status="PASS" endtime="20201031 13:31:13.708" starttime="20201031 13:31:13.707"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 13:31:13.709" critical="yes" starttime="20201031 13:31:02.313"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:31:13.714" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:31:22.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:31:22.472" level="INFO">${output} = 2020-10-31 13:31:15,492 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 13:31:15,732 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 13:31:22.472" starttime="20201031 13:31:13.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:31:22.475" level="INFO">2020-10-31 13:31:15,492 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 13:31:15,732 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-31 13:31:15,733 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-31 13:31:15,921 [main] INFO freon.BaseFreonGenerator: Executing test with prefix gbnc2otd2c
2020-10-31 13:31:15,937 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-31 13:31:16,947 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 13:31:17,490 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-10-31 13:31:17,603 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-31 13:31:17,947 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 13:31:18,321 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-31 13:31:18,675 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 13:31:18,675 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-C80DD07FBDE9-&gt;758c3ec3-906b-4282-92a0-e7ac8e1bc5eb
2020-10-31 13:31:18,676 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 13:31:18,947 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 13:31:19,948 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 13:31:20,948 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 13:31:21,949 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-31 13:31:22,105 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3374.447283, max=3374.447283, mean=3374.447283, stddev=0.0, median=3374.447283, p75=3374.447283, p95=3374.447283, p98=3374.447283, p99=3374.447283, p999=3374.447283, mean_rate=0.22578609068938388, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-31 13:31:22,106 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-10-31 13:31:22,106 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-31 13:31:22,106 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201031 13:31:22.475" starttime="20201031 13:31:22.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:31:22.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:31:22.476" starttime="20201031 13:31:22.475"></status>
</kw>
<status status="PASS" endtime="20201031 13:31:22.484" starttime="20201031 13:31:13.711"></status>
</kw>
<msg timestamp="20201031 13:31:22.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:31:22.484" starttime="20201031 13:31:13.711"></status>
</kw>
<msg timestamp="20201031 13:31:22.484" level="INFO">${result} = 2020-10-31 13:31:15,492 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 13:31:15,732 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 13:31:22.484" starttime="20201031 13:31:13.710"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201031 13:31:22.485" starttime="20201031 13:31:22.485"></status>
</kw>
<status status="PASS" endtime="20201031 13:31:22.485" starttime="20201031 13:31:22.485"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 13:31:22.486" critical="yes" starttime="20201031 13:31:13.709"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:31:22.493" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:31:27.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:31:27.288" level="INFO">${output} = 2020-10-31 13:31:24,319 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 13:31:24,479 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 13:31:27.288" starttime="20201031 13:31:22.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:31:27.289" level="INFO">2020-10-31 13:31:24,319 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 13:31:24,479 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-31 13:31:24,479 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-31 13:31:24,617 [main] INFO freon.BaseFreonGenerator: Executing test with prefix jdvvdftikc
2020-10-31 13:31:24,642 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-31 13:31:25,651 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 13:31:26,652 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-31 13:31:27,218 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=234.239985, max=234.239985, mean=234.239985, stddev=0.0, median=234.239985, p75=234.239985, p95=234.239985, p98=234.239985, p99=234.239985, p999=234.239985, mean_rate=0.8876311620835398, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-31 13:31:27,219 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-31 13:31:27,219 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-31 13:31:27,219 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201031 13:31:27.289" starttime="20201031 13:31:27.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:31:27.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:31:27.290" starttime="20201031 13:31:27.290"></status>
</kw>
<status status="PASS" endtime="20201031 13:31:27.290" starttime="20201031 13:31:22.488"></status>
</kw>
<msg timestamp="20201031 13:31:27.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:31:27.291" starttime="20201031 13:31:22.488"></status>
</kw>
<msg timestamp="20201031 13:31:27.291" level="INFO">${result} = 2020-10-31 13:31:24,319 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 13:31:24,479 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 13:31:27.291" starttime="20201031 13:31:22.487"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201031 13:31:27.292" starttime="20201031 13:31:27.292"></status>
</kw>
<status status="PASS" endtime="20201031 13:31:27.292" starttime="20201031 13:31:27.291"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 13:31:27.292" critical="yes" starttime="20201031 13:31:22.486"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:31:27.299" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:31:31.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:31:31.750" level="INFO">${output} = 2020-10-31 13:31:28,846 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 13:31:29,026 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 13:31:31.750" starttime="20201031 13:31:27.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:31:31.752" level="INFO">2020-10-31 13:31:28,846 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 13:31:29,026 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-31 13:31:29,027 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-31 13:31:29,160 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 8dejuhasu1
2020-10-31 13:31:29,170 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-31 13:31:30,180 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 13:31:31,180 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-31 13:31:31,704 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=95.179879, max=95.179879, mean=95.179879, stddev=0.0, median=95.179879, p75=95.179879, p95=95.179879, p98=95.179879, p99=95.179879, p999=95.179879, mean_rate=0.8740054439684012, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-31 13:31:31,709 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-31 13:31:31,709 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-31 13:31:31,709 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201031 13:31:31.752" starttime="20201031 13:31:31.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:31:31.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:31:31.752" starttime="20201031 13:31:31.752"></status>
</kw>
<status status="PASS" endtime="20201031 13:31:31.753" starttime="20201031 13:31:27.295"></status>
</kw>
<msg timestamp="20201031 13:31:31.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:31:31.753" starttime="20201031 13:31:27.295"></status>
</kw>
<msg timestamp="20201031 13:31:31.753" level="INFO">${result} = 2020-10-31 13:31:28,846 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 13:31:29,026 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 13:31:31.753" starttime="20201031 13:31:27.294"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201031 13:31:31.754" starttime="20201031 13:31:31.754"></status>
</kw>
<status status="PASS" endtime="20201031 13:31:31.754" starttime="20201031 13:31:31.753"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 13:31:31.754" critical="yes" starttime="20201031 13:31:27.293"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201031 13:31:31.756" starttime="20201031 13:31:02.284"></status>
</suite>
<status status="PASS" endtime="20201031 13:31:31.760" starttime="20201031 13:31:02.255"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:30:54.948" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:30:54.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:30:54.954" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:30:54.954" starttime="20201031 13:30:54.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:30:54.955" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:30:54.955" starttime="20201031 13:30:54.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:30:54.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:30:54.958" starttime="20201031 13:30:54.957"></status>
</kw>
<status status="PASS" endtime="20201031 13:30:54.958" starttime="20201031 13:30:54.937"></status>
</kw>
<msg timestamp="20201031 13:30:54.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:30:54.958" starttime="20201031 13:30:54.936"></status>
</kw>
<msg timestamp="20201031 13:30:54.958" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:30:54.958" starttime="20201031 13:30:54.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:30:54.959" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:30:54.959" starttime="20201031 13:30:54.959"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:30:54.975" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:30:54.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:30:54.999" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:30:54.999" starttime="20201031 13:30:54.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:30:55.000" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:30:55.001" starttime="20201031 13:30:55.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:30:55.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:30:55.001" starttime="20201031 13:30:55.001"></status>
</kw>
<status status="PASS" endtime="20201031 13:30:55.001" starttime="20201031 13:30:54.960"></status>
</kw>
<msg timestamp="20201031 13:30:55.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:30:55.002" starttime="20201031 13:30:54.960"></status>
</kw>
<status status="PASS" endtime="20201031 13:30:55.002" starttime="20201031 13:30:54.960"></status>
</kw>
<status status="PASS" endtime="20201031 13:30:55.002" starttime="20201031 13:30:54.959"></status>
</kw>
<status status="PASS" endtime="20201031 13:30:55.002" starttime="20201031 13:30:54.935"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 13:30:55.002" critical="yes" starttime="20201031 13:30:54.933"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201031 13:30:55.010" starttime="20201031 13:30:54.826"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 13:31:37.332" level="INFO">${random} = 31787</msg>
<status status="PASS" endtime="20201031 13:31:37.332" starttime="20201031 13:31:37.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201031 13:31:37.333" level="INFO">${source} = 31787-source</msg>
<status status="PASS" endtime="20201031 13:31:37.334" starttime="20201031 13:31:37.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201031 13:31:37.335" level="INFO">${target} = 31787-target</msg>
<status status="PASS" endtime="20201031 13:31:37.335" starttime="20201031 13:31:37.334"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:31:37.339" level="INFO">Running command 'ozone sh volume create 31787-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:31:40.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:31:40.712" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:31:40.712" starttime="20201031 13:31:37.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:31:40.713" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:31:40.713" starttime="20201031 13:31:40.713"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:31:40.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:31:40.714" starttime="20201031 13:31:40.713"></status>
</kw>
<status status="PASS" endtime="20201031 13:31:40.714" starttime="20201031 13:31:37.335"></status>
</kw>
<msg timestamp="20201031 13:31:40.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:31:40.714" starttime="20201031 13:31:37.335"></status>
</kw>
<status status="PASS" endtime="20201031 13:31:40.715" starttime="20201031 13:31:37.335"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:31:40.719" level="INFO">Running command 'ozone sh volume create 31787-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:31:44.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:31:44.393" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:31:44.393" starttime="20201031 13:31:40.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:31:44.394" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:31:44.394" starttime="20201031 13:31:44.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:31:44.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:31:44.395" starttime="20201031 13:31:44.394"></status>
</kw>
<status status="PASS" endtime="20201031 13:31:44.395" starttime="20201031 13:31:40.715"></status>
</kw>
<msg timestamp="20201031 13:31:44.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:31:44.395" starttime="20201031 13:31:40.715"></status>
</kw>
<status status="PASS" endtime="20201031 13:31:44.395" starttime="20201031 13:31:40.715"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:31:44.400" level="INFO">Running command 'ozone sh bucket create 31787-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:31:48.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:31:48.509" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:31:48.509" starttime="20201031 13:31:44.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:31:48.510" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:31:48.510" starttime="20201031 13:31:48.509"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:31:48.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:31:48.511" starttime="20201031 13:31:48.510"></status>
</kw>
<status status="PASS" endtime="20201031 13:31:48.511" starttime="20201031 13:31:44.397"></status>
</kw>
<msg timestamp="20201031 13:31:48.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:31:48.511" starttime="20201031 13:31:44.397"></status>
</kw>
<status status="PASS" endtime="20201031 13:31:48.511" starttime="20201031 13:31:44.396"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:31:48.516" level="INFO">Running command 'ozone sh key put 31787-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:31:55.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:31:55.172" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:31:55.172" starttime="20201031 13:31:48.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:31:55.173" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:31:55.173" starttime="20201031 13:31:55.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:31:55.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:31:55.174" starttime="20201031 13:31:55.174"></status>
</kw>
<status status="PASS" endtime="20201031 13:31:55.174" starttime="20201031 13:31:48.512"></status>
</kw>
<msg timestamp="20201031 13:31:55.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:31:55.174" starttime="20201031 13:31:48.512"></status>
</kw>
<status status="PASS" endtime="20201031 13:31:55.175" starttime="20201031 13:31:48.511"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:31:55.178" level="INFO">Running command 'ozone sh bucket create 31787-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:31:58.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:31:58.272" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:31:58.272" starttime="20201031 13:31:55.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:31:58.273" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:31:58.273" starttime="20201031 13:31:58.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:31:58.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:31:58.273" starttime="20201031 13:31:58.273"></status>
</kw>
<status status="PASS" endtime="20201031 13:31:58.274" starttime="20201031 13:31:55.176"></status>
</kw>
<msg timestamp="20201031 13:31:58.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:31:58.274" starttime="20201031 13:31:55.175"></status>
</kw>
<status status="PASS" endtime="20201031 13:31:58.274" starttime="20201031 13:31:55.175"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:31:58.278" level="INFO">Running command 'ozone sh bucket link 31787-source/readable-bucket 31787-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:01.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:01.654" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:32:01.654" starttime="20201031 13:31:58.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:01.655" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:32:01.655" starttime="20201031 13:32:01.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:01.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:01.656" starttime="20201031 13:32:01.655"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:01.656" starttime="20201031 13:31:58.275"></status>
</kw>
<msg timestamp="20201031 13:32:01.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:01.656" starttime="20201031 13:31:58.275"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:01.657" starttime="20201031 13:31:58.274"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:01.660" level="INFO">Running command 'ozone sh bucket link 31787-source/readable-bucket 31787-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:04.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:04.989" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:32:04.989" starttime="20201031 13:32:01.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:04.990" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:32:04.990" starttime="20201031 13:32:04.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:04.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:04.991" starttime="20201031 13:32:04.990"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:04.991" starttime="20201031 13:32:01.658"></status>
</kw>
<msg timestamp="20201031 13:32:04.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:04.991" starttime="20201031 13:32:01.657"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:04.992" starttime="20201031 13:32:01.657"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:04.996" level="INFO">Running command 'ozone sh bucket link 31787-source/unreadable-bucket 31787-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:08.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:08.655" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:32:08.655" starttime="20201031 13:32:04.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:08.656" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:32:08.656" starttime="20201031 13:32:08.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:08.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:08.657" starttime="20201031 13:32:08.656"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:08.657" starttime="20201031 13:32:04.993"></status>
</kw>
<msg timestamp="20201031 13:32:08.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:08.658" starttime="20201031 13:32:04.992"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:08.658" starttime="20201031 13:32:04.992"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:08.662" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 31787-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:12.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:12.194" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:32:12.194" starttime="20201031 13:32:08.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:12.195" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 13:32:12.195" starttime="20201031 13:32:12.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:12.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:12.195" starttime="20201031 13:32:12.195"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:12.196" starttime="20201031 13:32:08.659"></status>
</kw>
<msg timestamp="20201031 13:32:12.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:12.196" starttime="20201031 13:32:08.658"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:12.196" starttime="20201031 13:32:08.658"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:12.201" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 31787-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:15.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:15.677" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:32:15.677" starttime="20201031 13:32:12.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:15.678" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 13:32:15.678" starttime="20201031 13:32:15.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:15.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:15.679" starttime="20201031 13:32:15.678"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:15.679" starttime="20201031 13:32:12.197"></status>
</kw>
<msg timestamp="20201031 13:32:15.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:15.679" starttime="20201031 13:32:12.197"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:15.679" starttime="20201031 13:32:12.196"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:15.684" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 31787-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:19.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:19.088" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:32:19.088" starttime="20201031 13:32:15.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:19.089" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 13:32:19.089" starttime="20201031 13:32:19.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:19.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:19.090" starttime="20201031 13:32:19.090"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:19.090" starttime="20201031 13:32:15.680"></status>
</kw>
<msg timestamp="20201031 13:32:19.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:19.091" starttime="20201031 13:32:15.680"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:19.091" starttime="20201031 13:32:15.680"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:19.095" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 31787-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:22.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:22.723" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:32:22.723" starttime="20201031 13:32:19.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:22.724" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 13:32:22.724" starttime="20201031 13:32:22.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:22.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:22.725" starttime="20201031 13:32:22.725"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:22.725" starttime="20201031 13:32:19.092"></status>
</kw>
<msg timestamp="20201031 13:32:22.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:22.726" starttime="20201031 13:32:19.091"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:22.726" starttime="20201031 13:32:19.091"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:22.729" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 31787-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:26.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:26.219" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:32:26.219" starttime="20201031 13:32:22.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:26.220" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 13:32:26.220" starttime="20201031 13:32:26.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:26.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:26.221" starttime="20201031 13:32:26.220"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:26.221" starttime="20201031 13:32:22.727"></status>
</kw>
<msg timestamp="20201031 13:32:26.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:26.221" starttime="20201031 13:32:22.726"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:26.222" starttime="20201031 13:32:22.726"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:26.222" starttime="20201031 13:31:44.396"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:26.222" starttime="20201031 13:31:44.396"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:26.222" starttime="20201031 13:31:37.331"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:26.229" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:26.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:26.232" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:32:26.232" starttime="20201031 13:32:26.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:26.233" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:32:26.233" starttime="20201031 13:32:26.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:26.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:26.234" starttime="20201031 13:32:26.234"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:26.234" starttime="20201031 13:32:26.226"></status>
</kw>
<msg timestamp="20201031 13:32:26.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:26.234" starttime="20201031 13:32:26.225"></status>
</kw>
<msg timestamp="20201031 13:32:26.235" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:32:26.235" starttime="20201031 13:32:26.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:32:26.236" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:32:26.236" starttime="20201031 13:32:26.235"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:26.241" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:26.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:26.271" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:32:26.271" starttime="20201031 13:32:26.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:26.273" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:32:26.273" starttime="20201031 13:32:26.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:26.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:26.274" starttime="20201031 13:32:26.274"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:26.274" starttime="20201031 13:32:26.238"></status>
</kw>
<msg timestamp="20201031 13:32:26.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:26.274" starttime="20201031 13:32:26.238"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:26.275" starttime="20201031 13:32:26.237"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:26.275" starttime="20201031 13:32:26.236"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:26.275" starttime="20201031 13:32:26.224"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:26.275" starttime="20201031 13:32:26.224"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:26.279" level="INFO">Running command 'ozone sh bucket link 31787-source/no-such-bucket 31787-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:29.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:29.879" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:32:29.879" starttime="20201031 13:32:26.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:29.880" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:32:29.880" starttime="20201031 13:32:29.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:29.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:29.881" starttime="20201031 13:32:29.881"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:29.881" starttime="20201031 13:32:26.276"></status>
</kw>
<msg timestamp="20201031 13:32:29.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:29.882" starttime="20201031 13:32:26.276"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:29.882" starttime="20201031 13:32:26.275"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:29.885" level="INFO">Running command 'ozone sh key list 31787-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:33.253" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 13:32:33.253" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:32:33.253" starttime="20201031 13:32:29.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:33.254" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201031 13:32:33.254" starttime="20201031 13:32:33.254"></status>
</kw>
<msg timestamp="20201031 13:32:33.255" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:32:33.256" starttime="20201031 13:32:29.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201031 13:32:33.256" starttime="20201031 13:32:33.256"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 13:32:33.256" critical="yes" starttime="20201031 13:32:26.222"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:33.265" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:33.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:33.270" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:32:33.270" starttime="20201031 13:32:33.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:33.271" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:32:33.271" starttime="20201031 13:32:33.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:33.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:33.271" starttime="20201031 13:32:33.271"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:33.272" starttime="20201031 13:32:33.262"></status>
</kw>
<msg timestamp="20201031 13:32:33.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:33.272" starttime="20201031 13:32:33.261"></status>
</kw>
<msg timestamp="20201031 13:32:33.272" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:32:33.272" starttime="20201031 13:32:33.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:32:33.273" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:32:33.273" starttime="20201031 13:32:33.272"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:33.278" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:33.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:33.296" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:32:33.297" starttime="20201031 13:32:33.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:33.298" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:32:33.298" starttime="20201031 13:32:33.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:33.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:33.298" starttime="20201031 13:32:33.298"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:33.299" starttime="20201031 13:32:33.274"></status>
</kw>
<msg timestamp="20201031 13:32:33.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:33.299" starttime="20201031 13:32:33.274"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:33.299" starttime="20201031 13:32:33.274"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:33.299" starttime="20201031 13:32:33.273"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:33.300" starttime="20201031 13:32:33.260"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:33.300" starttime="20201031 13:32:33.260"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:33.313" level="INFO">Running command 'ozone sh bucket link 31787-source/bucket1 31787-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:36.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:36.837" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:32:36.837" starttime="20201031 13:32:33.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:36.838" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:32:36.838" starttime="20201031 13:32:36.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:36.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:36.839" starttime="20201031 13:32:36.838"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:36.839" starttime="20201031 13:32:33.301"></status>
</kw>
<msg timestamp="20201031 13:32:36.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:36.839" starttime="20201031 13:32:33.301"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:36.839" starttime="20201031 13:32:33.300"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:36.844" level="INFO">Running command 'ozone sh bucket create 31787-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:40.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:40.330" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:32:40.330" starttime="20201031 13:32:36.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:40.331" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:32:40.331" starttime="20201031 13:32:40.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:40.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:40.331" starttime="20201031 13:32:40.331"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:40.332" starttime="20201031 13:32:36.841"></status>
</kw>
<msg timestamp="20201031 13:32:40.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:40.332" starttime="20201031 13:32:36.840"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:40.332" starttime="20201031 13:32:36.839"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:40.337" level="INFO">Running command 'ozone sh key put 31787-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:46.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:46.410" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:32:46.410" starttime="20201031 13:32:40.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:46.412" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:32:46.412" starttime="20201031 13:32:46.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:46.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:46.413" starttime="20201031 13:32:46.412"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:46.413" starttime="20201031 13:32:40.333"></status>
</kw>
<msg timestamp="20201031 13:32:46.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:46.413" starttime="20201031 13:32:40.333"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:46.413" starttime="20201031 13:32:40.332"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201031 13:32:46.415" level="INFO">${postfix} = 96127</msg>
<status status="PASS" endtime="20201031 13:32:46.415" starttime="20201031 13:32:46.415"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201031 13:32:46.416" level="INFO">${tmpfile} = /tmp/tempkey-96127</msg>
<status status="PASS" endtime="20201031 13:32:46.416" starttime="20201031 13:32:46.416"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:46.420" level="INFO">Running command 'ozone sh key get -f 31787-target/link1/key1 /tmp/tempkey-96127 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:52.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:52.370" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:32:52.370" starttime="20201031 13:32:46.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:52.371" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:32:52.372" starttime="20201031 13:32:52.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:52.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:52.372" starttime="20201031 13:32:52.372"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:52.372" starttime="20201031 13:32:46.417"></status>
</kw>
<msg timestamp="20201031 13:32:52.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:52.373" starttime="20201031 13:32:46.417"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:52.373" starttime="20201031 13:32:46.416"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201031 13:32:52.376" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-96127 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:52.378" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201031 13:32:52.378" starttime="20201031 13:32:52.373"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:52.392" level="INFO">Running command 'rm -f /tmp/tempkey-96127 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:52.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:52.398" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:32:52.398" starttime="20201031 13:32:52.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:52.399" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:32:52.400" starttime="20201031 13:32:52.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:52.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:52.400" starttime="20201031 13:32:52.400"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:52.400" starttime="20201031 13:32:52.380"></status>
</kw>
<msg timestamp="20201031 13:32:52.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:52.401" starttime="20201031 13:32:52.379"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:52.402" starttime="20201031 13:32:52.379"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 13:32:52.403" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201031 13:32:52.403" starttime="20201031 13:32:52.403"></status>
</kw>
<msg timestamp="20201031 13:32:52.403" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201031 13:32:52.403" starttime="20201031 13:32:46.414"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201031 13:32:52.404" starttime="20201031 13:32:52.403"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:52.404" starttime="20201031 13:32:46.414"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 13:32:52.404" critical="yes" starttime="20201031 13:32:33.258"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:52.418" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:52.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:52.420" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:32:52.420" starttime="20201031 13:32:52.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:52.423" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:32:52.423" starttime="20201031 13:32:52.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:52.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:52.425" starttime="20201031 13:32:52.425"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:52.426" starttime="20201031 13:32:52.413"></status>
</kw>
<msg timestamp="20201031 13:32:52.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:52.426" starttime="20201031 13:32:52.413"></status>
</kw>
<msg timestamp="20201031 13:32:52.426" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:32:52.426" starttime="20201031 13:32:52.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:32:52.427" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:32:52.427" starttime="20201031 13:32:52.426"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:52.437" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:52.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:52.451" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:32:52.452" starttime="20201031 13:32:52.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:52.452" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:32:52.453" starttime="20201031 13:32:52.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:52.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:52.453" starttime="20201031 13:32:52.453"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:52.454" starttime="20201031 13:32:52.430"></status>
</kw>
<msg timestamp="20201031 13:32:52.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:52.454" starttime="20201031 13:32:52.430"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:52.454" starttime="20201031 13:32:52.429"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:52.454" starttime="20201031 13:32:52.427"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:52.454" starttime="20201031 13:32:52.412"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:52.454" starttime="20201031 13:32:52.412"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:52.459" level="INFO">Running command 'ozone sh key put 31787-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:32:58.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:32:58.219" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:32:58.219" starttime="20201031 13:32:52.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:32:58.220" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:32:58.220" starttime="20201031 13:32:58.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:32:58.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:32:58.221" starttime="20201031 13:32:58.221"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:58.222" starttime="20201031 13:32:52.456"></status>
</kw>
<msg timestamp="20201031 13:32:58.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:32:58.222" starttime="20201031 13:32:52.455"></status>
</kw>
<status status="PASS" endtime="20201031 13:32:58.222" starttime="20201031 13:32:52.455"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201031 13:32:58.224" level="INFO">${postfix} = 84946</msg>
<status status="PASS" endtime="20201031 13:32:58.224" starttime="20201031 13:32:58.223"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201031 13:32:58.224" level="INFO">${tmpfile} = /tmp/tempkey-84946</msg>
<status status="PASS" endtime="20201031 13:32:58.224" starttime="20201031 13:32:58.224"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:32:58.228" level="INFO">Running command 'ozone sh key get -f 31787-source/bucket1/key2 /tmp/tempkey-84946 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:03.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:03.723" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:33:03.723" starttime="20201031 13:32:58.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:03.724" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:33:03.724" starttime="20201031 13:33:03.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:03.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:03.725" starttime="20201031 13:33:03.724"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:03.725" starttime="20201031 13:32:58.226"></status>
</kw>
<msg timestamp="20201031 13:33:03.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:03.725" starttime="20201031 13:32:58.225"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:03.725" starttime="20201031 13:32:58.225"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201031 13:33:03.728" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-84946 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:03.731" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201031 13:33:03.731" starttime="20201031 13:33:03.726"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:03.735" level="INFO">Running command 'rm -f /tmp/tempkey-84946 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:03.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:03.738" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:33:03.738" starttime="20201031 13:33:03.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:03.739" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:33:03.739" starttime="20201031 13:33:03.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:03.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:03.740" starttime="20201031 13:33:03.739"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:03.740" starttime="20201031 13:33:03.733"></status>
</kw>
<msg timestamp="20201031 13:33:03.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:03.740" starttime="20201031 13:33:03.732"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:03.741" starttime="20201031 13:33:03.731"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 13:33:03.742" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201031 13:33:03.742" starttime="20201031 13:33:03.741"></status>
</kw>
<msg timestamp="20201031 13:33:03.742" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201031 13:33:03.742" starttime="20201031 13:32:58.223"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201031 13:33:03.742" starttime="20201031 13:33:03.742"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:03.743" starttime="20201031 13:32:58.222"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 13:33:03.743" critical="yes" starttime="20201031 13:32:52.411"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:03.748" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:03.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:03.751" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:33:03.751" starttime="20201031 13:33:03.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:03.752" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:33:03.752" starttime="20201031 13:33:03.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:03.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:03.753" starttime="20201031 13:33:03.752"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:03.753" starttime="20201031 13:33:03.746"></status>
</kw>
<msg timestamp="20201031 13:33:03.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:03.753" starttime="20201031 13:33:03.746"></status>
</kw>
<msg timestamp="20201031 13:33:03.754" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:33:03.754" starttime="20201031 13:33:03.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:33:03.754" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:33:03.754" starttime="20201031 13:33:03.754"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:03.759" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:03.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:03.774" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:33:03.774" starttime="20201031 13:33:03.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:03.775" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:33:03.775" starttime="20201031 13:33:03.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:03.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:03.776" starttime="20201031 13:33:03.775"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:03.776" starttime="20201031 13:33:03.756"></status>
</kw>
<msg timestamp="20201031 13:33:03.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:03.776" starttime="20201031 13:33:03.755"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:03.776" starttime="20201031 13:33:03.755"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:03.776" starttime="20201031 13:33:03.755"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:03.777" starttime="20201031 13:33:03.745"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:03.777" starttime="20201031 13:33:03.744"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:03.781" level="INFO">Running command 'ozone sh key list 31787-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:07.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:07.685" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201031 13:33:07.685" starttime="20201031 13:33:03.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:07.686" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201031 13:33:07.686" starttime="20201031 13:33:07.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:07.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:07.687" starttime="20201031 13:33:07.686"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:07.687" starttime="20201031 13:33:03.778"></status>
</kw>
<msg timestamp="20201031 13:33:07.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:07.688" starttime="20201031 13:33:03.777"></status>
</kw>
<msg timestamp="20201031 13:33:07.688" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201031 13:33:07.688" starttime="20201031 13:33:03.777"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:07.694" level="INFO">Running command 'ozone sh key list 31787-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:11.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:11.428" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201031 13:33:11.428" starttime="20201031 13:33:07.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:11.429" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201031 13:33:11.429" starttime="20201031 13:33:11.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:11.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:11.430" starttime="20201031 13:33:11.429"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:11.430" starttime="20201031 13:33:07.689"></status>
</kw>
<msg timestamp="20201031 13:33:11.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:11.430" starttime="20201031 13:33:07.689"></status>
</kw>
<msg timestamp="20201031 13:33:11.431" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201031 13:33:11.431" starttime="20201031 13:33:07.688"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201031 13:33:11.431" starttime="20201031 13:33:11.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201031 13:33:11.432" starttime="20201031 13:33:11.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201031 13:33:11.432" starttime="20201031 13:33:11.432"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 13:33:11.432" critical="yes" starttime="20201031 13:33:03.743"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:11.439" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:11.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:11.446" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:33:11.446" starttime="20201031 13:33:11.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:11.447" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:33:11.447" starttime="20201031 13:33:11.446"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:11.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:11.448" starttime="20201031 13:33:11.447"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:11.448" starttime="20201031 13:33:11.435"></status>
</kw>
<msg timestamp="20201031 13:33:11.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:11.448" starttime="20201031 13:33:11.435"></status>
</kw>
<msg timestamp="20201031 13:33:11.448" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:33:11.448" starttime="20201031 13:33:11.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:33:11.449" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:33:11.449" starttime="20201031 13:33:11.448"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:11.453" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:11.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:11.464" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:33:11.464" starttime="20201031 13:33:11.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:11.465" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:33:11.465" starttime="20201031 13:33:11.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:11.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:11.466" starttime="20201031 13:33:11.465"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:11.466" starttime="20201031 13:33:11.450"></status>
</kw>
<msg timestamp="20201031 13:33:11.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:11.466" starttime="20201031 13:33:11.450"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:11.466" starttime="20201031 13:33:11.450"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:11.466" starttime="20201031 13:33:11.449"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:11.467" starttime="20201031 13:33:11.434"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:11.467" starttime="20201031 13:33:11.434"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:11.472" level="INFO">Running command 'ozone sh key delete 31787-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:15.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:15.048" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:33:15.049" starttime="20201031 13:33:11.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:15.050" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:33:15.050" starttime="20201031 13:33:15.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:15.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:15.051" starttime="20201031 13:33:15.051"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:15.052" starttime="20201031 13:33:11.468"></status>
</kw>
<msg timestamp="20201031 13:33:15.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:15.052" starttime="20201031 13:33:11.467"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:15.052" starttime="20201031 13:33:11.467"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:15.058" level="INFO">Running command 'ozone sh key list 31787-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:18.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:18.754" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201031 13:33:18.754" starttime="20201031 13:33:15.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:18.756" level="INFO">key1</msg>
<status status="PASS" endtime="20201031 13:33:18.756" starttime="20201031 13:33:18.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:18.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:18.756" starttime="20201031 13:33:18.756"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:18.757" starttime="20201031 13:33:15.053"></status>
</kw>
<msg timestamp="20201031 13:33:18.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:18.757" starttime="20201031 13:33:15.053"></status>
</kw>
<msg timestamp="20201031 13:33:18.757" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201031 13:33:18.757" starttime="20201031 13:33:15.052"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201031 13:33:18.758" starttime="20201031 13:33:18.757"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 13:33:18.758" critical="yes" starttime="20201031 13:33:11.433"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:18.767" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:18.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:18.770" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:33:18.770" starttime="20201031 13:33:18.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:18.771" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:33:18.771" starttime="20201031 13:33:18.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:18.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:18.772" starttime="20201031 13:33:18.771"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:18.772" starttime="20201031 13:33:18.761"></status>
</kw>
<msg timestamp="20201031 13:33:18.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:18.772" starttime="20201031 13:33:18.761"></status>
</kw>
<msg timestamp="20201031 13:33:18.772" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:33:18.772" starttime="20201031 13:33:18.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:33:18.773" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:33:18.773" starttime="20201031 13:33:18.773"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:18.778" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:18.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:18.790" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:33:18.790" starttime="20201031 13:33:18.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:18.791" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:33:18.791" starttime="20201031 13:33:18.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:18.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:18.792" starttime="20201031 13:33:18.792"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:18.792" starttime="20201031 13:33:18.775"></status>
</kw>
<msg timestamp="20201031 13:33:18.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:18.792" starttime="20201031 13:33:18.774"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:18.793" starttime="20201031 13:33:18.774"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:18.793" starttime="20201031 13:33:18.773"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:18.793" starttime="20201031 13:33:18.760"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:18.793" starttime="20201031 13:33:18.760"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:18.797" level="INFO">Running command 'ozone sh bucket list 31787-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:22.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:22.648" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:33:22.648" starttime="20201031 13:33:18.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:22.650" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "31787-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:32:29.709Z",
  "modificationTime" : "2020-10-31T13:32:29.709Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31787-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31787-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:32:08.379Z",
  "modificationTime" : "2020-10-31T13:32:25.987Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31787-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31787-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:32:36.636Z",
  "modificationTime" : "2020-10-31T13:32:36.636Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31787-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31787-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:32:01.526Z",
  "modificationTime" : "2020-10-31T13:32:22.633Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31787-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31787-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:32:04.905Z",
  "modificationTime" : "2020-10-31T13:32:04.905Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31787-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201031 13:33:22.650" starttime="20201031 13:33:22.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:22.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:22.650" starttime="20201031 13:33:22.650"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:22.651" starttime="20201031 13:33:18.794"></status>
</kw>
<msg timestamp="20201031 13:33:22.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:22.651" starttime="20201031 13:33:18.794"></status>
</kw>
<msg timestamp="20201031 13:33:22.651" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:33:22.651" starttime="20201031 13:33:18.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201031 13:33:22.652" starttime="20201031 13:33:22.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201031 13:33:22.652" starttime="20201031 13:33:22.652"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 13:33:22.652" critical="yes" starttime="20201031 13:33:18.759"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:22.658" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:22.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:22.661" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:33:22.661" starttime="20201031 13:33:22.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:22.662" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:33:22.662" starttime="20201031 13:33:22.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:22.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:22.663" starttime="20201031 13:33:22.662"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:22.663" starttime="20201031 13:33:22.655"></status>
</kw>
<msg timestamp="20201031 13:33:22.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:22.663" starttime="20201031 13:33:22.655"></status>
</kw>
<msg timestamp="20201031 13:33:22.663" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:33:22.663" starttime="20201031 13:33:22.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:33:22.664" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:33:22.664" starttime="20201031 13:33:22.664"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:22.669" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:22.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:22.679" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:33:22.679" starttime="20201031 13:33:22.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:22.680" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:33:22.680" starttime="20201031 13:33:22.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:22.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:22.681" starttime="20201031 13:33:22.680"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:22.681" starttime="20201031 13:33:22.666"></status>
</kw>
<msg timestamp="20201031 13:33:22.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:22.681" starttime="20201031 13:33:22.665"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:22.681" starttime="20201031 13:33:22.665"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:22.681" starttime="20201031 13:33:22.664"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:22.682" starttime="20201031 13:33:22.654"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:22.682" starttime="20201031 13:33:22.654"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:22.688" level="INFO">Running command 'ozone sh bucket info 31787-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:26.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:26.521" level="INFO">${output} = 31787-source bucket1</msg>
<status status="PASS" endtime="20201031 13:33:26.521" starttime="20201031 13:33:22.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:26.522" level="INFO">31787-source bucket1</msg>
<status status="PASS" endtime="20201031 13:33:26.522" starttime="20201031 13:33:26.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:26.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:26.523" starttime="20201031 13:33:26.523"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:26.523" starttime="20201031 13:33:22.683"></status>
</kw>
<msg timestamp="20201031 13:33:26.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:26.524" starttime="20201031 13:33:22.682"></status>
</kw>
<msg timestamp="20201031 13:33:26.524" level="INFO">${result} = 31787-source bucket1</msg>
<status status="PASS" endtime="20201031 13:33:26.524" starttime="20201031 13:33:22.682"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201031 13:33:26.524" starttime="20201031 13:33:26.524"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 13:33:26.525" critical="yes" starttime="20201031 13:33:22.653"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:26.532" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:26.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:26.534" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:33:26.534" starttime="20201031 13:33:26.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:26.534" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:33:26.535" starttime="20201031 13:33:26.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:26.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:26.536" starttime="20201031 13:33:26.535"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:26.536" starttime="20201031 13:33:26.528"></status>
</kw>
<msg timestamp="20201031 13:33:26.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:26.536" starttime="20201031 13:33:26.528"></status>
</kw>
<msg timestamp="20201031 13:33:26.536" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:33:26.536" starttime="20201031 13:33:26.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:33:26.537" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:33:26.537" starttime="20201031 13:33:26.536"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:26.542" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:26.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:26.554" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:33:26.554" starttime="20201031 13:33:26.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:26.555" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:33:26.555" starttime="20201031 13:33:26.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:26.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:26.556" starttime="20201031 13:33:26.556"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:26.556" starttime="20201031 13:33:26.539"></status>
</kw>
<msg timestamp="20201031 13:33:26.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:26.557" starttime="20201031 13:33:26.538"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:26.557" starttime="20201031 13:33:26.538"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:26.557" starttime="20201031 13:33:26.537"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:26.557" starttime="20201031 13:33:26.527"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:26.557" starttime="20201031 13:33:26.527"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:26.561" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 31787-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:29.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:29.924" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:33:29.924" starttime="20201031 13:33:26.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:29.925" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 13:33:29.925" starttime="20201031 13:33:29.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:29.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:29.926" starttime="20201031 13:33:29.925"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:29.926" starttime="20201031 13:33:26.558"></status>
</kw>
<msg timestamp="20201031 13:33:29.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:29.926" starttime="20201031 13:33:26.558"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:29.926" starttime="20201031 13:33:26.557"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:29.931" level="INFO">Running command 'ozone sh bucket getacl 31787-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:33.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:33.679" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201031 13:33:33.679" starttime="20201031 13:33:29.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:33.680" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201031 13:33:33.680" starttime="20201031 13:33:33.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:33.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:33.681" starttime="20201031 13:33:33.680"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:33.681" starttime="20201031 13:33:29.928"></status>
</kw>
<msg timestamp="20201031 13:33:33.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:33.681" starttime="20201031 13:33:29.928"></status>
</kw>
<msg timestamp="20201031 13:33:33.682" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201031 13:33:33.682" starttime="20201031 13:33:29.927"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201031 13:33:33.682" starttime="20201031 13:33:33.682"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:33.682" starttime="20201031 13:33:29.927"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:33.689" level="INFO">Running command 'ozone sh bucket getacl 31787-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:37.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:37.407" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:33:37.407" starttime="20201031 13:33:33.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:37.409" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:33:37.409" starttime="20201031 13:33:37.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:37.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:37.409" starttime="20201031 13:33:37.409"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:37.410" starttime="20201031 13:33:33.684"></status>
</kw>
<msg timestamp="20201031 13:33:37.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:37.410" starttime="20201031 13:33:33.684"></status>
</kw>
<msg timestamp="20201031 13:33:37.410" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201031 13:33:37.410" starttime="20201031 13:33:33.683"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201031 13:33:37.411" starttime="20201031 13:33:37.410"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:37.411" starttime="20201031 13:33:33.682"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:37.417" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 31787-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:40.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:40.844" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:33:40.844" starttime="20201031 13:33:37.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:40.845" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 13:33:40.845" starttime="20201031 13:33:40.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:40.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:40.846" starttime="20201031 13:33:40.845"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:40.846" starttime="20201031 13:33:37.413"></status>
</kw>
<msg timestamp="20201031 13:33:40.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:40.846" starttime="20201031 13:33:37.412"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:40.848" starttime="20201031 13:33:37.411"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:40.853" level="INFO">Running command 'ozone sh bucket getacl 31787-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:44.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:44.659" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:33:44.659" starttime="20201031 13:33:40.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:44.660" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:33:44.660" starttime="20201031 13:33:44.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:44.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:44.661" starttime="20201031 13:33:44.660"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:44.661" starttime="20201031 13:33:40.850"></status>
</kw>
<msg timestamp="20201031 13:33:44.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:44.661" starttime="20201031 13:33:40.850"></status>
</kw>
<msg timestamp="20201031 13:33:44.662" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201031 13:33:44.662" starttime="20201031 13:33:40.849"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201031 13:33:44.662" starttime="20201031 13:33:44.662"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:44.662" starttime="20201031 13:33:40.848"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:44.668" level="INFO">Running command 'ozone sh bucket getacl 31787-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:48.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:48.569" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201031 13:33:48.569" starttime="20201031 13:33:44.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:48.570" level="INFO">READ</msg>
<status status="PASS" endtime="20201031 13:33:48.570" starttime="20201031 13:33:48.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:48.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:48.571" starttime="20201031 13:33:48.570"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:48.571" starttime="20201031 13:33:44.664"></status>
</kw>
<msg timestamp="20201031 13:33:48.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:48.571" starttime="20201031 13:33:44.664"></status>
</kw>
<msg timestamp="20201031 13:33:48.571" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201031 13:33:48.571" starttime="20201031 13:33:44.663"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201031 13:33:48.572" starttime="20201031 13:33:48.572"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:48.572" starttime="20201031 13:33:44.663"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 13:33:48.572" critical="yes" starttime="20201031 13:33:26.526"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:48.579" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:48.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:48.582" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:33:48.582" starttime="20201031 13:33:48.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:48.583" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:33:48.583" starttime="20201031 13:33:48.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:48.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:48.584" starttime="20201031 13:33:48.583"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:48.584" starttime="20201031 13:33:48.576"></status>
</kw>
<msg timestamp="20201031 13:33:48.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:48.584" starttime="20201031 13:33:48.575"></status>
</kw>
<msg timestamp="20201031 13:33:48.585" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:33:48.585" starttime="20201031 13:33:48.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:33:48.585" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:33:48.585" starttime="20201031 13:33:48.585"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:48.590" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:48.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:48.601" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:33:48.601" starttime="20201031 13:33:48.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:48.602" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:33:48.602" starttime="20201031 13:33:48.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:48.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:48.603" starttime="20201031 13:33:48.602"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:48.603" starttime="20201031 13:33:48.587"></status>
</kw>
<msg timestamp="20201031 13:33:48.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:48.603" starttime="20201031 13:33:48.587"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:48.604" starttime="20201031 13:33:48.586"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:48.604" starttime="20201031 13:33:48.586"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:48.604" starttime="20201031 13:33:48.575"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:48.604" starttime="20201031 13:33:48.574"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:48.609" level="INFO">Running command 'ozone sh bucket link 31787-source/bucket2 31787-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:52.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:52.201" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:33:52.201" starttime="20201031 13:33:48.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:52.202" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:33:52.202" starttime="20201031 13:33:52.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:52.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:52.203" starttime="20201031 13:33:52.202"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:52.203" starttime="20201031 13:33:48.605"></status>
</kw>
<msg timestamp="20201031 13:33:52.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:52.203" starttime="20201031 13:33:48.605"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:52.203" starttime="20201031 13:33:48.604"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:52.208" level="INFO">Running command 'ozone sh bucket create 31787-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:55.990" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 13:33:55.990" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:33:55.990" starttime="20201031 13:33:52.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:55.992" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201031 13:33:55.992" starttime="20201031 13:33:55.991"></status>
</kw>
<msg timestamp="20201031 13:33:55.993" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:33:55.993" starttime="20201031 13:33:52.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201031 13:33:55.994" starttime="20201031 13:33:55.993"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:56.000" level="INFO">Running command 'ozone sh bucket create 31787-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:33:59.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:33:59.915" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:33:59.915" starttime="20201031 13:33:55.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:33:59.916" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:33:59.916" starttime="20201031 13:33:59.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:33:59.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:33:59.917" starttime="20201031 13:33:59.916"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:59.917" starttime="20201031 13:33:55.996"></status>
</kw>
<msg timestamp="20201031 13:33:59.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:33:59.918" starttime="20201031 13:33:55.995"></status>
</kw>
<status status="PASS" endtime="20201031 13:33:59.918" starttime="20201031 13:33:55.994"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:33:59.921" level="INFO">Running command 'ozone sh bucket link 31787-source/bucket1 31787-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:03.208" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 13:34:03.208" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:03.208" starttime="20201031 13:33:59.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:03.209" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201031 13:34:03.210" starttime="20201031 13:34:03.209"></status>
</kw>
<msg timestamp="20201031 13:34:03.210" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:03.210" starttime="20201031 13:33:59.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201031 13:34:03.211" starttime="20201031 13:34:03.210"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 13:34:03.211" critical="yes" starttime="20201031 13:33:48.573"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:03.218" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:03.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:03.221" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:34:03.221" starttime="20201031 13:34:03.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:03.222" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:34:03.222" starttime="20201031 13:34:03.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:03.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:03.223" starttime="20201031 13:34:03.222"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:03.223" starttime="20201031 13:34:03.215"></status>
</kw>
<msg timestamp="20201031 13:34:03.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:03.223" starttime="20201031 13:34:03.214"></status>
</kw>
<msg timestamp="20201031 13:34:03.223" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:34:03.223" starttime="20201031 13:34:03.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:34:03.224" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:34:03.224" starttime="20201031 13:34:03.224"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:03.229" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:03.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:03.239" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:34:03.239" starttime="20201031 13:34:03.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:03.240" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:34:03.240" starttime="20201031 13:34:03.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:03.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:03.241" starttime="20201031 13:34:03.241"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:03.241" starttime="20201031 13:34:03.225"></status>
</kw>
<msg timestamp="20201031 13:34:03.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:03.242" starttime="20201031 13:34:03.225"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:03.242" starttime="20201031 13:34:03.225"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:03.242" starttime="20201031 13:34:03.224"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:03.242" starttime="20201031 13:34:03.213"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:03.242" starttime="20201031 13:34:03.213"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:03.247" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:03.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:03.251" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:34:03.251" starttime="20201031 13:34:03.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:03.252" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:34:03.252" starttime="20201031 13:34:03.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:03.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:03.252" starttime="20201031 13:34:03.252"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:03.253" starttime="20201031 13:34:03.244"></status>
</kw>
<msg timestamp="20201031 13:34:03.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:03.253" starttime="20201031 13:34:03.244"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:03.253" starttime="20201031 13:34:03.243"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:03.257" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:03.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:03.260" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:34:03.260" starttime="20201031 13:34:03.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:03.262" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:34:03.262" starttime="20201031 13:34:03.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:03.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:03.263" starttime="20201031 13:34:03.262"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:03.263" starttime="20201031 13:34:03.255"></status>
</kw>
<msg timestamp="20201031 13:34:03.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:03.263" starttime="20201031 13:34:03.255"></status>
</kw>
<msg timestamp="20201031 13:34:03.263" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:34:03.263" starttime="20201031 13:34:03.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:34:03.264" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:34:03.264" starttime="20201031 13:34:03.263"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:03.269" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:03.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:03.278" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:34:03.278" starttime="20201031 13:34:03.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:03.279" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:34:03.279" starttime="20201031 13:34:03.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:03.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:03.280" starttime="20201031 13:34:03.279"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:03.280" starttime="20201031 13:34:03.265"></status>
</kw>
<msg timestamp="20201031 13:34:03.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:03.280" starttime="20201031 13:34:03.265"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:03.280" starttime="20201031 13:34:03.265"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:03.280" starttime="20201031 13:34:03.264"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:03.281" starttime="20201031 13:34:03.254"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:03.281" starttime="20201031 13:34:03.253"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:03.284" level="INFO">Running command 'ozone sh key list 31787-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:08.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:08.117" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:08.117" starttime="20201031 13:34:03.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:08.118" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "31787-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-10-31T13:31:52.852Z",
  "modificationTime" : "2020-10-31T13:31:54.754Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201031 13:34:08.118" starttime="20201031 13:34:08.117"></status>
</kw>
<msg timestamp="20201031 13:34:08.118" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:08.118" starttime="20201031 13:34:03.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201031 13:34:08.119" starttime="20201031 13:34:08.118"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:08.119" starttime="20201031 13:34:03.243"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:08.119" starttime="20201031 13:34:03.242"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 13:34:08.119" critical="yes" starttime="20201031 13:34:03.212"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:08.125" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:08.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:08.128" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:34:08.128" starttime="20201031 13:34:08.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:08.129" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:34:08.130" starttime="20201031 13:34:08.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:08.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:08.130" starttime="20201031 13:34:08.130"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:08.131" starttime="20201031 13:34:08.122"></status>
</kw>
<msg timestamp="20201031 13:34:08.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:08.131" starttime="20201031 13:34:08.122"></status>
</kw>
<msg timestamp="20201031 13:34:08.131" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:34:08.131" starttime="20201031 13:34:08.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:34:08.132" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:34:08.132" starttime="20201031 13:34:08.131"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:08.137" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:08.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:08.163" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:34:08.163" starttime="20201031 13:34:08.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:08.164" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:34:08.164" starttime="20201031 13:34:08.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:08.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:08.165" starttime="20201031 13:34:08.164"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:08.165" starttime="20201031 13:34:08.133"></status>
</kw>
<msg timestamp="20201031 13:34:08.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:08.165" starttime="20201031 13:34:08.133"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:08.165" starttime="20201031 13:34:08.132"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:08.165" starttime="20201031 13:34:08.132"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:08.166" starttime="20201031 13:34:08.121"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:08.166" starttime="20201031 13:34:08.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:08.172" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:08.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:08.174" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:34:08.174" starttime="20201031 13:34:08.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:08.175" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:34:08.175" starttime="20201031 13:34:08.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:08.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:08.176" starttime="20201031 13:34:08.175"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:08.176" starttime="20201031 13:34:08.168"></status>
</kw>
<msg timestamp="20201031 13:34:08.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:08.176" starttime="20201031 13:34:08.168"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:08.177" starttime="20201031 13:34:08.167"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:08.181" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:08.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:08.184" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:34:08.184" starttime="20201031 13:34:08.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:08.185" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:34:08.185" starttime="20201031 13:34:08.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:08.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:08.186" starttime="20201031 13:34:08.185"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:08.186" starttime="20201031 13:34:08.178"></status>
</kw>
<msg timestamp="20201031 13:34:08.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:08.186" starttime="20201031 13:34:08.178"></status>
</kw>
<msg timestamp="20201031 13:34:08.186" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:34:08.186" starttime="20201031 13:34:08.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:34:08.187" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:34:08.187" starttime="20201031 13:34:08.187"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:08.192" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:08.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:08.202" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:34:08.202" starttime="20201031 13:34:08.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:08.203" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:34:08.203" starttime="20201031 13:34:08.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:08.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:08.203" starttime="20201031 13:34:08.203"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:08.204" starttime="20201031 13:34:08.189"></status>
</kw>
<msg timestamp="20201031 13:34:08.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:08.204" starttime="20201031 13:34:08.189"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:08.204" starttime="20201031 13:34:08.188"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:08.204" starttime="20201031 13:34:08.188"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:08.205" starttime="20201031 13:34:08.177"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:08.205" starttime="20201031 13:34:08.177"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:08.209" level="INFO">Running command 'ozone sh key list 31787-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:11.463" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 13:34:11.463" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:11.463" starttime="20201031 13:34:08.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:11.464" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201031 13:34:11.465" starttime="20201031 13:34:11.464"></status>
</kw>
<msg timestamp="20201031 13:34:11.465" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:11.465" starttime="20201031 13:34:08.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201031 13:34:11.466" starttime="20201031 13:34:11.465"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:11.466" starttime="20201031 13:34:08.166"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:11.466" starttime="20201031 13:34:08.166"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 13:34:11.466" critical="yes" starttime="20201031 13:34:08.120"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:11.472" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:11.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:11.474" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:34:11.474" starttime="20201031 13:34:11.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:11.475" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:34:11.475" starttime="20201031 13:34:11.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:11.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:11.476" starttime="20201031 13:34:11.475"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:11.476" starttime="20201031 13:34:11.469"></status>
</kw>
<msg timestamp="20201031 13:34:11.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:11.476" starttime="20201031 13:34:11.469"></status>
</kw>
<msg timestamp="20201031 13:34:11.477" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:34:11.477" starttime="20201031 13:34:11.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:34:11.477" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:34:11.477" starttime="20201031 13:34:11.477"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:11.482" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:11.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:11.492" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:34:11.492" starttime="20201031 13:34:11.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:11.493" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:34:11.493" starttime="20201031 13:34:11.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:11.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:11.494" starttime="20201031 13:34:11.493"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:11.494" starttime="20201031 13:34:11.479"></status>
</kw>
<msg timestamp="20201031 13:34:11.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:11.494" starttime="20201031 13:34:11.479"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:11.494" starttime="20201031 13:34:11.478"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:11.494" starttime="20201031 13:34:11.478"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:11.495" starttime="20201031 13:34:11.468"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:11.495" starttime="20201031 13:34:11.467"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:11.499" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:11.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:11.503" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:34:11.503" starttime="20201031 13:34:11.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:11.504" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:34:11.504" starttime="20201031 13:34:11.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:11.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:11.505" starttime="20201031 13:34:11.504"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:11.505" starttime="20201031 13:34:11.496"></status>
</kw>
<msg timestamp="20201031 13:34:11.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:11.505" starttime="20201031 13:34:11.496"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:11.506" starttime="20201031 13:34:11.496"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:11.510" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:11.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:11.512" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:34:11.512" starttime="20201031 13:34:11.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:11.513" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:34:11.513" starttime="20201031 13:34:11.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:11.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:11.514" starttime="20201031 13:34:11.514"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:11.514" starttime="20201031 13:34:11.507"></status>
</kw>
<msg timestamp="20201031 13:34:11.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:11.514" starttime="20201031 13:34:11.507"></status>
</kw>
<msg timestamp="20201031 13:34:11.515" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:34:11.515" starttime="20201031 13:34:11.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:34:11.515" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:34:11.515" starttime="20201031 13:34:11.515"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:11.520" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:11.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:11.530" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:34:11.530" starttime="20201031 13:34:11.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:11.531" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:34:11.531" starttime="20201031 13:34:11.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:11.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:11.531" starttime="20201031 13:34:11.531"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:11.532" starttime="20201031 13:34:11.517"></status>
</kw>
<msg timestamp="20201031 13:34:11.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:11.532" starttime="20201031 13:34:11.516"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:11.532" starttime="20201031 13:34:11.516"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:11.532" starttime="20201031 13:34:11.516"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:11.532" starttime="20201031 13:34:11.506"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:11.532" starttime="20201031 13:34:11.506"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:11.537" level="INFO">Running command 'ozone sh bucket info 31787-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:15.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:15.074" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:15.074" starttime="20201031 13:34:11.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:15.075" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "31787-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:32:08.379Z",
  "modificationTime" : "2020-10-31T13:32:25.987Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31787-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201031 13:34:15.075" starttime="20201031 13:34:15.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:15.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:15.076" starttime="20201031 13:34:15.075"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:15.076" starttime="20201031 13:34:11.533"></status>
</kw>
<msg timestamp="20201031 13:34:15.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:15.076" starttime="20201031 13:34:11.533"></status>
</kw>
<msg timestamp="20201031 13:34:15.077" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:15.077" starttime="20201031 13:34:11.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201031 13:34:15.077" starttime="20201031 13:34:15.077"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201031 13:34:15.078" starttime="20201031 13:34:15.077"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:15.081" level="INFO">Running command 'ozone sh key list 31787-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:18.924" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 13:34:18.924" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:18.924" starttime="20201031 13:34:15.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:18.925" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201031 13:34:18.926" starttime="20201031 13:34:18.925"></status>
</kw>
<msg timestamp="20201031 13:34:18.926" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:18.926" starttime="20201031 13:34:15.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201031 13:34:18.926" starttime="20201031 13:34:18.926"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:18.927" starttime="20201031 13:34:11.495"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:18.927" starttime="20201031 13:34:11.495"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 13:34:18.927" critical="yes" starttime="20201031 13:34:11.467"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:18.933" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:18.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:18.936" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:34:18.936" starttime="20201031 13:34:18.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:18.937" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:34:18.937" starttime="20201031 13:34:18.936"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:18.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:18.938" starttime="20201031 13:34:18.937"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:18.938" starttime="20201031 13:34:18.930"></status>
</kw>
<msg timestamp="20201031 13:34:18.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:18.938" starttime="20201031 13:34:18.930"></status>
</kw>
<msg timestamp="20201031 13:34:18.939" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:34:18.939" starttime="20201031 13:34:18.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:34:18.939" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:34:18.939" starttime="20201031 13:34:18.939"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:18.944" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:18.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:18.955" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:34:18.955" starttime="20201031 13:34:18.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:18.956" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:34:18.956" starttime="20201031 13:34:18.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:18.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:18.956" starttime="20201031 13:34:18.956"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:18.957" starttime="20201031 13:34:18.941"></status>
</kw>
<msg timestamp="20201031 13:34:18.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:18.957" starttime="20201031 13:34:18.940"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:18.957" starttime="20201031 13:34:18.940"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:18.957" starttime="20201031 13:34:18.939"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:18.957" starttime="20201031 13:34:18.929"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:18.957" starttime="20201031 13:34:18.928"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:18.961" level="INFO">Running command 'ozone sh bucket link 31787-target/loop1 31787-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:22.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:22.587" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:22.587" starttime="20201031 13:34:18.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:22.588" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:34:22.588" starttime="20201031 13:34:22.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:22.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:22.589" starttime="20201031 13:34:22.588"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:22.589" starttime="20201031 13:34:18.958"></status>
</kw>
<msg timestamp="20201031 13:34:22.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:22.589" starttime="20201031 13:34:18.958"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:22.590" starttime="20201031 13:34:18.957"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:22.594" level="INFO">Running command 'ozone sh bucket link 31787-target/loop2 31787-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:26.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:26.529" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:26.530" starttime="20201031 13:34:22.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:26.531" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:34:26.531" starttime="20201031 13:34:26.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:26.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:26.531" starttime="20201031 13:34:26.531"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:26.532" starttime="20201031 13:34:22.591"></status>
</kw>
<msg timestamp="20201031 13:34:26.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:26.532" starttime="20201031 13:34:22.590"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:26.532" starttime="20201031 13:34:22.590"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:26.536" level="INFO">Running command 'ozone sh bucket link 31787-target/loop3 31787-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:29.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:29.884" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:29.884" starttime="20201031 13:34:26.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:29.885" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:34:29.885" starttime="20201031 13:34:29.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:29.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:29.886" starttime="20201031 13:34:29.885"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:29.886" starttime="20201031 13:34:26.533"></status>
</kw>
<msg timestamp="20201031 13:34:29.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:29.886" starttime="20201031 13:34:26.533"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:29.887" starttime="20201031 13:34:26.532"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:29.890" level="INFO">Running command 'ozone sh key list 31787-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:33.116" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 13:34:33.117" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:33.117" starttime="20201031 13:34:29.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:33.118" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201031 13:34:33.118" starttime="20201031 13:34:33.117"></status>
</kw>
<msg timestamp="20201031 13:34:33.118" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:33.118" starttime="20201031 13:34:29.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201031 13:34:33.119" starttime="20201031 13:34:33.118"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 13:34:33.119" critical="yes" starttime="20201031 13:34:18.928"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:33.127" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:33.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:33.128" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:34:33.128" starttime="20201031 13:34:33.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:33.129" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:34:33.129" starttime="20201031 13:34:33.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:33.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:33.130" starttime="20201031 13:34:33.129"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:33.130" starttime="20201031 13:34:33.123"></status>
</kw>
<msg timestamp="20201031 13:34:33.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:33.130" starttime="20201031 13:34:33.122"></status>
</kw>
<msg timestamp="20201031 13:34:33.131" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:34:33.131" starttime="20201031 13:34:33.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:34:33.131" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:34:33.131" starttime="20201031 13:34:33.131"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:33.136" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:33.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:33.147" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:34:33.147" starttime="20201031 13:34:33.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:33.148" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:34:33.148" starttime="20201031 13:34:33.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:33.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:33.149" starttime="20201031 13:34:33.148"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:33.149" starttime="20201031 13:34:33.133"></status>
</kw>
<msg timestamp="20201031 13:34:33.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:33.149" starttime="20201031 13:34:33.133"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:33.149" starttime="20201031 13:34:33.132"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:33.149" starttime="20201031 13:34:33.132"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:33.149" starttime="20201031 13:34:33.121"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:33.150" starttime="20201031 13:34:33.121"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:33.155" level="INFO">Running command 'ozone sh bucket link 31787-source/bucket1 31787-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:36.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:36.651" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:36.651" starttime="20201031 13:34:33.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:36.652" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:34:36.652" starttime="20201031 13:34:36.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:36.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:36.653" starttime="20201031 13:34:36.652"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:36.653" starttime="20201031 13:34:33.151"></status>
</kw>
<msg timestamp="20201031 13:34:36.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:36.654" starttime="20201031 13:34:33.150"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:36.654" starttime="20201031 13:34:33.150"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:36.657" level="INFO">Running command 'ozone sh key put 31787-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:41.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:41.854" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:41.854" starttime="20201031 13:34:36.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:41.855" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:34:41.855" starttime="20201031 13:34:41.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:41.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:41.856" starttime="20201031 13:34:41.856"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:41.856" starttime="20201031 13:34:36.655"></status>
</kw>
<msg timestamp="20201031 13:34:41.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:41.857" starttime="20201031 13:34:36.655"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:41.857" starttime="20201031 13:34:36.654"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201031 13:34:41.859" level="INFO">${postfix} = 67252</msg>
<status status="PASS" endtime="20201031 13:34:41.859" starttime="20201031 13:34:41.858"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201031 13:34:41.860" level="INFO">${tmpfile} = /tmp/tempkey-67252</msg>
<status status="PASS" endtime="20201031 13:34:41.860" starttime="20201031 13:34:41.859"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:41.863" level="INFO">Running command 'ozone sh key get -f 31787-target/link1/key3 /tmp/tempkey-67252 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:47.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:47.281" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:47.281" starttime="20201031 13:34:41.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:47.282" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:34:47.282" starttime="20201031 13:34:47.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:47.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:47.283" starttime="20201031 13:34:47.283"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:47.283" starttime="20201031 13:34:41.861"></status>
</kw>
<msg timestamp="20201031 13:34:47.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:47.284" starttime="20201031 13:34:41.860"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:47.284" starttime="20201031 13:34:41.860"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201031 13:34:47.286" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-67252 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:47.290" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201031 13:34:47.290" starttime="20201031 13:34:47.284"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:47.296" level="INFO">Running command 'rm -f /tmp/tempkey-67252 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:47.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:47.297" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:34:47.297" starttime="20201031 13:34:47.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:47.298" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:34:47.299" starttime="20201031 13:34:47.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:47.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:47.299" starttime="20201031 13:34:47.299"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:47.299" starttime="20201031 13:34:47.292"></status>
</kw>
<msg timestamp="20201031 13:34:47.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:47.300" starttime="20201031 13:34:47.291"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:47.300" starttime="20201031 13:34:47.290"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 13:34:47.300" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201031 13:34:47.300" starttime="20201031 13:34:47.300"></status>
</kw>
<msg timestamp="20201031 13:34:47.301" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201031 13:34:47.301" starttime="20201031 13:34:41.858"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201031 13:34:47.301" starttime="20201031 13:34:47.301"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:47.301" starttime="20201031 13:34:41.857"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 13:34:47.302" critical="yes" starttime="20201031 13:34:33.120"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:47.307" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:47.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:47.310" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 13:34:47.311" starttime="20201031 13:34:47.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:47.311" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 13:34:47.312" starttime="20201031 13:34:47.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:47.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:47.313" starttime="20201031 13:34:47.312"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:47.313" starttime="20201031 13:34:47.305"></status>
</kw>
<msg timestamp="20201031 13:34:47.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:47.313" starttime="20201031 13:34:47.305"></status>
</kw>
<msg timestamp="20201031 13:34:47.314" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 13:34:47.314" starttime="20201031 13:34:47.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 13:34:47.314" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 13:34:47.314" starttime="20201031 13:34:47.314"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:47.319" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:47.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:47.342" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 13:34:47.342" starttime="20201031 13:34:47.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:47.343" level="INFO"></msg>
<status status="PASS" endtime="20201031 13:34:47.343" starttime="20201031 13:34:47.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:47.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:47.344" starttime="20201031 13:34:47.343"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:47.344" starttime="20201031 13:34:47.316"></status>
</kw>
<msg timestamp="20201031 13:34:47.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:47.344" starttime="20201031 13:34:47.316"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:47.345" starttime="20201031 13:34:47.315"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:47.345" starttime="20201031 13:34:47.315"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:47.345" starttime="20201031 13:34:47.304"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:47.345" starttime="20201031 13:34:47.303"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:47.349" level="INFO">Running command 'ozone sh bucket delete 31787-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:50.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:50.970" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:50.970" starttime="20201031 13:34:47.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:50.971" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 13:34:50.971" starttime="20201031 13:34:50.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:50.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:50.972" starttime="20201031 13:34:50.971"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:50.972" starttime="20201031 13:34:47.346"></status>
</kw>
<msg timestamp="20201031 13:34:50.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:50.973" starttime="20201031 13:34:47.346"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:50.973" starttime="20201031 13:34:47.345"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:50.977" level="INFO">Running command 'ozone sh bucket list 31787-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:54.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:54.442" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:54.442" starttime="20201031 13:34:50.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:54.443" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "31787-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:33:59.736Z",
  "modificationTime" : "2020-10-31T13:33:59.736Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31787-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:32:29.709Z",
  "modificationTime" : "2020-10-31T13:32:29.709Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31787-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31787-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:32:08.379Z",
  "modificationTime" : "2020-10-31T13:32:25.987Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31787-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31787-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:33:52.124Z",
  "modificationTime" : "2020-10-31T13:33:52.124Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31787-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31787-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:34:36.451Z",
  "modificationTime" : "2020-10-31T13:34:36.451Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31787-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31787-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:34:29.809Z",
  "modificationTime" : "2020-10-31T13:34:29.809Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31787-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31787-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:34:22.428Z",
  "modificationTime" : "2020-10-31T13:34:22.428Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31787-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31787-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:34:26.291Z",
  "modificationTime" : "2020-10-31T13:34:26.291Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31787-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31787-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:32:01.526Z",
  "modificationTime" : "2020-10-31T13:32:22.633Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31787-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "31787-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T13:32:04.905Z",
  "modificationTime" : "2020-10-31T13:32:04.905Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "31787-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201031 13:34:54.443" starttime="20201031 13:34:54.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:54.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:54.444" starttime="20201031 13:34:54.443"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:54.444" starttime="20201031 13:34:50.974"></status>
</kw>
<msg timestamp="20201031 13:34:54.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:54.444" starttime="20201031 13:34:50.974"></status>
</kw>
<msg timestamp="20201031 13:34:54.445" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 13:34:54.445" starttime="20201031 13:34:50.973"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201031 13:34:54.445" starttime="20201031 13:34:54.445"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 13:34:54.451" level="INFO">Running command 'ozone sh key list 31787-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 13:34:58.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 13:34:58.020" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201031 13:34:58.020" starttime="20201031 13:34:54.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 13:34:58.021" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201031 13:34:58.021" starttime="20201031 13:34:58.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 13:34:58.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 13:34:58.022" starttime="20201031 13:34:58.021"></status>
</kw>
<status status="PASS" endtime="20201031 13:34:58.022" starttime="20201031 13:34:54.446"></status>
</kw>
<msg timestamp="20201031 13:34:58.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 13:34:58.022" starttime="20201031 13:34:54.446"></status>
</kw>
<msg timestamp="20201031 13:34:58.022" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201031 13:34:58.022" starttime="20201031 13:34:54.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201031 13:34:58.023" starttime="20201031 13:34:58.022"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 13:34:58.023" critical="yes" starttime="20201031 13:34:47.302"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201031 13:34:58.026" starttime="20201031 13:31:37.277"></status>
</suite>
<status status="PASS" elapsedtime="230438" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
