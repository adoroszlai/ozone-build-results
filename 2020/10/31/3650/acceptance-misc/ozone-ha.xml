<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201031 01:07:52.715" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1" name="ozone-ha">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 01:05:25.485" level="INFO">${random} = 39336</msg>
<status status="PASS" endtime="20201031 01:05:25.485" starttime="20201031 01:05:25.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201031 01:05:25.486" level="INFO">${prefix} = 39336</msg>
<status status="PASS" endtime="20201031 01:05:25.486" starttime="20201031 01:05:25.486"></status>
</kw>
<status status="PASS" endtime="20201031 01:05:25.486" starttime="20201031 01:05:25.484"></status>
</kw>
<test id="s1-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:05:25.493" level="INFO">Running command 'ozone sh volume info /39336-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:05:28.243" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 01:05:28.243" level="INFO">${output} = VOLUME_NOT_FOUND Volume 39336-rpcbasic is not found</msg>
<status status="PASS" endtime="20201031 01:05:28.243" starttime="20201031 01:05:25.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:05:28.245" level="INFO">VOLUME_NOT_FOUND Volume 39336-rpcbasic is not found</msg>
<status status="PASS" endtime="20201031 01:05:28.245" starttime="20201031 01:05:28.244"></status>
</kw>
<msg timestamp="20201031 01:05:28.245" level="INFO">${result} = VOLUME_NOT_FOUND Volume 39336-rpcbasic is not found</msg>
<status status="PASS" endtime="20201031 01:05:28.245" starttime="20201031 01:05:25.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201031 01:05:28.246" starttime="20201031 01:05:28.245"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:05:28.252" level="INFO">Running command 'ozone sh volume create /39336-rpcbasic --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:05:30.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:05:30.687" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:05:30.687" starttime="20201031 01:05:28.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:05:30.688" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:05:30.688" starttime="20201031 01:05:30.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:05:30.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:05:30.689" starttime="20201031 01:05:30.688"></status>
</kw>
<status status="PASS" endtime="20201031 01:05:30.689" starttime="20201031 01:05:28.247"></status>
</kw>
<msg timestamp="20201031 01:05:30.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:05:30.689" starttime="20201031 01:05:28.246"></status>
</kw>
<msg timestamp="20201031 01:05:30.689" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201031 01:05:30.689" starttime="20201031 01:05:28.246"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201031 01:05:30.696" starttime="20201031 01:05:30.689"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:05:30.704" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="39336-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:05:33.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:05:33.497" level="INFO">${output} = {
  "metadata": {},
  "name": "39336-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-31T01:05:30.390Z",
  "mo...</msg>
<status status="PASS" endtime="20201031 01:05:33.497" starttime="20201031 01:05:30.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:05:33.499" level="INFO">{
  "metadata": {},
  "name": "39336-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-31T01:05:30.390Z",
  "modificationTime": "2020-10-31T01:05:33.122095Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20201031 01:05:33.499" starttime="20201031 01:05:33.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:05:33.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:05:33.500" starttime="20201031 01:05:33.499"></status>
</kw>
<status status="PASS" endtime="20201031 01:05:33.500" starttime="20201031 01:05:30.698"></status>
</kw>
<msg timestamp="20201031 01:05:33.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:05:33.500" starttime="20201031 01:05:30.697"></status>
</kw>
<msg timestamp="20201031 01:05:33.500" level="INFO">${result} = {
  "metadata": {},
  "name": "39336-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-31T01:05:30.390Z",
  "mo...</msg>
<status status="PASS" endtime="20201031 01:05:33.501" starttime="20201031 01:05:30.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201031 01:05:33.501" starttime="20201031 01:05:33.501"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:05:33.508" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="39336-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:05:35.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:05:35.898" level="INFO">${output} = {
  "metadata": {},
  "name": "39336-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-31T01:05:30.390Z",
  "mo...</msg>
<status status="PASS" endtime="20201031 01:05:35.898" starttime="20201031 01:05:33.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:05:35.899" level="INFO">{
  "metadata": {},
  "name": "39336-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-31T01:05:30.390Z",
  "modificationTime": "2020-10-31T01:05:35.655154Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20201031 01:05:35.899" starttime="20201031 01:05:35.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:05:35.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:05:35.900" starttime="20201031 01:05:35.899"></status>
</kw>
<status status="PASS" endtime="20201031 01:05:35.900" starttime="20201031 01:05:33.503"></status>
</kw>
<msg timestamp="20201031 01:05:35.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:05:35.900" starttime="20201031 01:05:33.503"></status>
</kw>
<msg timestamp="20201031 01:05:35.901" level="INFO">${result} = {
  "metadata": {},
  "name": "39336-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-31T01:05:30.390Z",
  "mo...</msg>
<status status="PASS" endtime="20201031 01:05:35.901" starttime="20201031 01:05:33.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201031 01:05:35.901" starttime="20201031 01:05:35.901"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --count-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:05:35.906" level="INFO">Running command 'ozone sh volume setquota /39336-rpcbasic --space-quota 10TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:05:37.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:05:37.939" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:05:37.939" starttime="20201031 01:05:35.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:05:37.940" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:05:37.940" starttime="20201031 01:05:37.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:05:37.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:05:37.941" starttime="20201031 01:05:37.940"></status>
</kw>
<status status="PASS" endtime="20201031 01:05:37.941" starttime="20201031 01:05:35.902"></status>
</kw>
<msg timestamp="20201031 01:05:37.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:05:37.941" starttime="20201031 01:05:35.902"></status>
</kw>
<status status="PASS" endtime="20201031 01:05:37.941" starttime="20201031 01:05:35.901"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:05:37.946" level="INFO">Running command 'ozone sh volume info /39336-rpcbasic | jq -r '. | select(.name=="39336-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:05:40.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:05:40.165" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20201031 01:05:40.165" starttime="20201031 01:05:37.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:05:40.166" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20201031 01:05:40.166" starttime="20201031 01:05:40.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:05:40.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:05:40.167" starttime="20201031 01:05:40.166"></status>
</kw>
<status status="PASS" endtime="20201031 01:05:40.167" starttime="20201031 01:05:37.943"></status>
</kw>
<msg timestamp="20201031 01:05:40.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:05:40.167" starttime="20201031 01:05:37.942"></status>
</kw>
<msg timestamp="20201031 01:05:40.168" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20201031 01:05:40.168" starttime="20201031 01:05:37.942"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20201031 01:05:40.169" starttime="20201031 01:05:40.168"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --count-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:05:40.175" level="INFO">Running command 'ozone sh bucket create /39336-rpcbasic/bb1 --space-quota 10TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:05:42.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:05:42.562" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:05:42.562" starttime="20201031 01:05:40.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:05:42.563" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:05:42.563" starttime="20201031 01:05:42.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:05:42.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:05:42.564" starttime="20201031 01:05:42.563"></status>
</kw>
<status status="PASS" endtime="20201031 01:05:42.564" starttime="20201031 01:05:40.170"></status>
</kw>
<msg timestamp="20201031 01:05:42.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:05:42.564" starttime="20201031 01:05:40.170"></status>
</kw>
<status status="PASS" endtime="20201031 01:05:42.565" starttime="20201031 01:05:40.169"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:05:42.570" level="INFO">Running command 'ozone sh bucket info /39336-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:05:44.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:05:44.904" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20201031 01:05:44.904" starttime="20201031 01:05:42.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:05:44.905" level="INFO">DISK</msg>
<status status="PASS" endtime="20201031 01:05:44.905" starttime="20201031 01:05:44.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:05:44.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:05:44.906" starttime="20201031 01:05:44.905"></status>
</kw>
<status status="PASS" endtime="20201031 01:05:44.906" starttime="20201031 01:05:42.566"></status>
</kw>
<msg timestamp="20201031 01:05:44.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:05:44.906" starttime="20201031 01:05:42.566"></status>
</kw>
<msg timestamp="20201031 01:05:44.906" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20201031 01:05:44.906" starttime="20201031 01:05:42.565"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20201031 01:05:44.907" starttime="20201031 01:05:44.907"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:05:44.912" level="INFO">Running command 'ozone sh bucket info /39336-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:05:47.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:05:47.265" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20201031 01:05:47.265" starttime="20201031 01:05:44.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:05:47.267" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20201031 01:05:47.267" starttime="20201031 01:05:47.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:05:47.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:05:47.268" starttime="20201031 01:05:47.267"></status>
</kw>
<status status="PASS" endtime="20201031 01:05:47.268" starttime="20201031 01:05:44.908"></status>
</kw>
<msg timestamp="20201031 01:05:47.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:05:47.268" starttime="20201031 01:05:44.908"></status>
</kw>
<msg timestamp="20201031 01:05:47.268" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20201031 01:05:47.268" starttime="20201031 01:05:44.907"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20201031 01:05:47.269" starttime="20201031 01:05:47.269"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:05:47.274" level="INFO">Running command 'ozone sh bucket info /39336-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:05:49.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:05:49.837" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20201031 01:05:49.837" starttime="20201031 01:05:47.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:05:49.838" level="INFO">100</msg>
<status status="PASS" endtime="20201031 01:05:49.839" starttime="20201031 01:05:49.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:05:49.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:05:49.839" starttime="20201031 01:05:49.839"></status>
</kw>
<status status="PASS" endtime="20201031 01:05:49.840" starttime="20201031 01:05:47.270"></status>
</kw>
<msg timestamp="20201031 01:05:49.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:05:49.840" starttime="20201031 01:05:47.270"></status>
</kw>
<msg timestamp="20201031 01:05:49.840" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20201031 01:05:49.840" starttime="20201031 01:05:47.269"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20201031 01:05:49.841" starttime="20201031 01:05:49.840"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --count-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:05:49.846" level="INFO">Running command 'ozone sh bucket setquota /39336-rpcbasic/bb1 --space-quota 1TB --count-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:05:52.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:05:52.251" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:05:52.251" starttime="20201031 01:05:49.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:05:52.252" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:05:52.252" starttime="20201031 01:05:52.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:05:52.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:05:52.253" starttime="20201031 01:05:52.252"></status>
</kw>
<status status="PASS" endtime="20201031 01:05:52.253" starttime="20201031 01:05:49.842"></status>
</kw>
<msg timestamp="20201031 01:05:52.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:05:52.253" starttime="20201031 01:05:49.842"></status>
</kw>
<status status="PASS" endtime="20201031 01:05:52.253" starttime="20201031 01:05:49.841"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:05:52.259" level="INFO">Running command 'ozone sh bucket info /39336-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:05:54.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:05:54.717" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20201031 01:05:54.717" starttime="20201031 01:05:52.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:05:54.718" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20201031 01:05:54.718" starttime="20201031 01:05:54.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:05:54.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:05:54.719" starttime="20201031 01:05:54.718"></status>
</kw>
<status status="PASS" endtime="20201031 01:05:54.719" starttime="20201031 01:05:52.255"></status>
</kw>
<msg timestamp="20201031 01:05:54.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:05:54.719" starttime="20201031 01:05:52.254"></status>
</kw>
<msg timestamp="20201031 01:05:54.720" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20201031 01:05:54.720" starttime="20201031 01:05:52.253"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20201031 01:05:54.720" starttime="20201031 01:05:54.720"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:05:54.724" level="INFO">Running command 'ozone sh bucket info /39336-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:05:56.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:05:56.909" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20201031 01:05:56.909" starttime="20201031 01:05:54.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:05:56.910" level="INFO">1000</msg>
<status status="PASS" endtime="20201031 01:05:56.910" starttime="20201031 01:05:56.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:05:56.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:05:56.911" starttime="20201031 01:05:56.911"></status>
</kw>
<status status="PASS" endtime="20201031 01:05:56.911" starttime="20201031 01:05:54.721"></status>
</kw>
<msg timestamp="20201031 01:05:56.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:05:56.912" starttime="20201031 01:05:54.721"></status>
</kw>
<msg timestamp="20201031 01:05:56.912" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20201031 01:05:56.912" starttime="20201031 01:05:54.720"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20201031 01:05:56.912" starttime="20201031 01:05:56.912"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:05:56.918" level="INFO">Running command 'ozone sh bucket list /39336-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:05:59.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:05:59.110" level="INFO">${output} = 39336-rpcbasic</msg>
<status status="PASS" endtime="20201031 01:05:59.110" starttime="20201031 01:05:56.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:05:59.112" level="INFO">39336-rpcbasic</msg>
<status status="PASS" endtime="20201031 01:05:59.112" starttime="20201031 01:05:59.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:05:59.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:05:59.112" starttime="20201031 01:05:59.112"></status>
</kw>
<status status="PASS" endtime="20201031 01:05:59.113" starttime="20201031 01:05:56.914"></status>
</kw>
<msg timestamp="20201031 01:05:59.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:05:59.113" starttime="20201031 01:05:56.913"></status>
</kw>
<msg timestamp="20201031 01:05:59.113" level="INFO">${result} = 39336-rpcbasic</msg>
<status status="PASS" endtime="20201031 01:05:59.113" starttime="20201031 01:05:56.913"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:05:59.114" starttime="20201031 01:05:59.113"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:05:59.119" level="INFO">Running command 'ozone sh key put /39336-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:04.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:04.922" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:04.922" starttime="20201031 01:05:59.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:04.923" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:04.923" starttime="20201031 01:06:04.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:04.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:04.924" starttime="20201031 01:06:04.923"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:04.925" starttime="20201031 01:05:59.115"></status>
</kw>
<msg timestamp="20201031 01:06:04.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:04.925" starttime="20201031 01:05:59.115"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:04.925" starttime="20201031 01:05:59.115"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:04.929" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:04.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:04.932" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:04.932" starttime="20201031 01:06:04.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:04.933" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:04.933" starttime="20201031 01:06:04.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:04.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:04.934" starttime="20201031 01:06:04.934"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:04.935" starttime="20201031 01:06:04.926"></status>
</kw>
<msg timestamp="20201031 01:06:04.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:04.935" starttime="20201031 01:06:04.926"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:04.936" starttime="20201031 01:06:04.925"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:04.941" level="INFO">Running command 'ozone sh key get /39336-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:08.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:08.981" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:08.981" starttime="20201031 01:06:04.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:08.982" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:08.982" starttime="20201031 01:06:08.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:08.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:08.983" starttime="20201031 01:06:08.982"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:08.983" starttime="20201031 01:06:04.937"></status>
</kw>
<msg timestamp="20201031 01:06:08.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:08.983" starttime="20201031 01:06:04.936"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:08.983" starttime="20201031 01:06:04.936"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:08.988" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:08.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:08.991" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:08.991" starttime="20201031 01:06:08.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:08.992" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:08.992" starttime="20201031 01:06:08.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:08.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:08.992" starttime="20201031 01:06:08.992"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:08.993" starttime="20201031 01:06:08.985"></status>
</kw>
<msg timestamp="20201031 01:06:08.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:08.993" starttime="20201031 01:06:08.984"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:08.993" starttime="20201031 01:06:08.983"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:08.998" level="INFO">Running command 'ozone sh key put -t RATIS /39336-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:13.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:13.588" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:13.588" starttime="20201031 01:06:08.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:13.589" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:13.589" starttime="20201031 01:06:13.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:13.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:13.590" starttime="20201031 01:06:13.589"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:13.590" starttime="20201031 01:06:08.994"></status>
</kw>
<msg timestamp="20201031 01:06:13.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:13.590" starttime="20201031 01:06:08.994"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:13.591" starttime="20201031 01:06:08.993"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:13.594" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:13.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:13.597" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:13.597" starttime="20201031 01:06:13.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:13.598" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:13.598" starttime="20201031 01:06:13.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:13.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:13.599" starttime="20201031 01:06:13.598"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:13.599" starttime="20201031 01:06:13.592"></status>
</kw>
<msg timestamp="20201031 01:06:13.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:13.599" starttime="20201031 01:06:13.591"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:13.600" starttime="20201031 01:06:13.591"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:13.603" level="INFO">Running command 'ozone sh key get /39336-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:17.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:17.689" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:17.689" starttime="20201031 01:06:13.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:17.690" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:17.690" starttime="20201031 01:06:17.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:17.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:17.691" starttime="20201031 01:06:17.690"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:17.691" starttime="20201031 01:06:13.601"></status>
</kw>
<msg timestamp="20201031 01:06:17.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:17.691" starttime="20201031 01:06:13.600"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:17.692" starttime="20201031 01:06:13.600"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:17.696" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:17.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:17.698" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:17.698" starttime="20201031 01:06:17.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:17.699" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:17.699" starttime="20201031 01:06:17.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:17.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:17.700" starttime="20201031 01:06:17.699"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:17.700" starttime="20201031 01:06:17.693"></status>
</kw>
<msg timestamp="20201031 01:06:17.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:17.701" starttime="20201031 01:06:17.692"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:17.701" starttime="20201031 01:06:17.692"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:17.706" level="INFO">Running command 'ozone sh key info /39336-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:20.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:20.317" level="INFO">${output} = {
  "volumeName": "39336-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-10-31T01:06:11.065Z",
  "modificationTime": "2020-10-31T01:06:13.204Z",
...</msg>
<status status="PASS" endtime="20201031 01:06:20.317" starttime="20201031 01:06:17.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:20.318" level="INFO">{
  "volumeName": "39336-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-10-31T01:06:11.065Z",
  "modificationTime": "2020-10-31T01:06:13.204Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 105126715133984770,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20201031 01:06:20.318" starttime="20201031 01:06:20.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:20.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:20.319" starttime="20201031 01:06:20.318"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:20.319" starttime="20201031 01:06:17.702"></status>
</kw>
<msg timestamp="20201031 01:06:20.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:20.325" starttime="20201031 01:06:17.702"></status>
</kw>
<msg timestamp="20201031 01:06:20.326" level="INFO">${result} = {
  "volumeName": "39336-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-10-31T01:06:11.065Z",
  "modificationTime": "2020-10-31T01:06:13.204Z",
...</msg>
<status status="PASS" endtime="20201031 01:06:20.326" starttime="20201031 01:06:17.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20201031 01:06:20.327" starttime="20201031 01:06:20.326"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:20.331" level="INFO">Running command 'ozone sh key delete /39336-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:22.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:22.562" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:22.562" starttime="20201031 01:06:20.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:22.563" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:22.563" starttime="20201031 01:06:22.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:22.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:22.564" starttime="20201031 01:06:22.563"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:22.564" starttime="20201031 01:06:20.328"></status>
</kw>
<msg timestamp="20201031 01:06:22.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:22.564" starttime="20201031 01:06:20.327"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:22.564" starttime="20201031 01:06:20.327"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:22.569" level="INFO">Running command 'ozone sh key cp /39336-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:27.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:27.421" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:27.421" starttime="20201031 01:06:22.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:27.423" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:27.423" starttime="20201031 01:06:27.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:27.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:27.423" starttime="20201031 01:06:27.423"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:27.424" starttime="20201031 01:06:22.565"></status>
</kw>
<msg timestamp="20201031 01:06:27.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:27.424" starttime="20201031 01:06:22.565"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:27.424" starttime="20201031 01:06:22.564"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:27.432" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:27.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:27.436" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:27.436" starttime="20201031 01:06:27.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:27.437" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:27.437" starttime="20201031 01:06:27.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:27.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:27.437" starttime="20201031 01:06:27.437"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:27.438" starttime="20201031 01:06:27.425"></status>
</kw>
<msg timestamp="20201031 01:06:27.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:27.438" starttime="20201031 01:06:27.425"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:27.438" starttime="20201031 01:06:27.424"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:27.442" level="INFO">Running command 'ozone sh key get /39336-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:31.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:31.238" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:31.238" starttime="20201031 01:06:27.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:31.239" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:31.239" starttime="20201031 01:06:31.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:31.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:31.240" starttime="20201031 01:06:31.239"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:31.240" starttime="20201031 01:06:27.439"></status>
</kw>
<msg timestamp="20201031 01:06:31.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:31.240" starttime="20201031 01:06:27.439"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:31.241" starttime="20201031 01:06:27.438"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:31.244" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:31.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:31.248" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:31.248" starttime="20201031 01:06:31.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:31.249" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:31.249" starttime="20201031 01:06:31.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:31.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:31.249" starttime="20201031 01:06:31.249"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:31.250" starttime="20201031 01:06:31.241"></status>
</kw>
<msg timestamp="20201031 01:06:31.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:31.250" starttime="20201031 01:06:31.241"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:31.250" starttime="20201031 01:06:31.241"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:31.255" level="INFO">Running command 'ozone sh key delete /39336-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:33.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:33.481" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:33.481" starttime="20201031 01:06:31.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:33.483" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:33.483" starttime="20201031 01:06:33.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:33.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:33.483" starttime="20201031 01:06:33.483"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:33.484" starttime="20201031 01:06:31.251"></status>
</kw>
<msg timestamp="20201031 01:06:33.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:33.484" starttime="20201031 01:06:31.251"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:33.484" starttime="20201031 01:06:31.250"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:33.488" level="INFO">Running command 'ozone sh key get /39336-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:35.625" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 01:06:35.625" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201031 01:06:35.625" starttime="20201031 01:06:33.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:35.626" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201031 01:06:35.626" starttime="20201031 01:06:35.625"></status>
</kw>
<msg timestamp="20201031 01:06:35.627" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201031 01:06:35.627" starttime="20201031 01:06:33.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20201031 01:06:35.627" starttime="20201031 01:06:35.627"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:35.631" level="INFO">Running command 'ozone sh key get --force /39336-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:39.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:39.747" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:39.747" starttime="20201031 01:06:35.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:39.749" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:39.749" starttime="20201031 01:06:39.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:39.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:39.750" starttime="20201031 01:06:39.749"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:39.750" starttime="20201031 01:06:35.628"></status>
</kw>
<msg timestamp="20201031 01:06:39.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:39.750" starttime="20201031 01:06:35.628"></status>
</kw>
<msg timestamp="20201031 01:06:39.750" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201031 01:06:39.751" starttime="20201031 01:06:35.627"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20201031 01:06:39.751" starttime="20201031 01:06:39.751"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:39.757" level="INFO">Running command 'ozone sh key info /39336-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:42.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:42.255" level="INFO">${output} = {
  "volumeName": "39336-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-10-31T01:06:01.361Z",
  "modificationTime": "2020-10-31T01:06:04.488Z",
  "rep...</msg>
<status status="PASS" endtime="20201031 01:06:42.255" starttime="20201031 01:06:39.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:42.257" level="INFO">{
  "volumeName": "39336-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-10-31T01:06:01.361Z",
  "modificationTime": "2020-10-31T01:06:04.488Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105126714494418940,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20201031 01:06:42.257" starttime="20201031 01:06:42.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:42.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:42.257" starttime="20201031 01:06:42.257"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:42.258" starttime="20201031 01:06:39.752"></status>
</kw>
<msg timestamp="20201031 01:06:42.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:42.258" starttime="20201031 01:06:39.752"></status>
</kw>
<msg timestamp="20201031 01:06:42.258" level="INFO">${result} = {
  "volumeName": "39336-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-10-31T01:06:01.361Z",
  "modificationTime": "2020-10-31T01:06:04.488Z",
  "rep...</msg>
<status status="PASS" endtime="20201031 01:06:42.258" starttime="20201031 01:06:39.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201031 01:06:42.259" starttime="20201031 01:06:42.259"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:42.264" level="INFO">Running command 'ozone sh key list /39336-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:44.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:44.704" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201031 01:06:44.704" starttime="20201031 01:06:42.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:44.705" level="INFO">key1</msg>
<status status="PASS" endtime="20201031 01:06:44.705" starttime="20201031 01:06:44.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:44.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:44.706" starttime="20201031 01:06:44.705"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:44.706" starttime="20201031 01:06:42.260"></status>
</kw>
<msg timestamp="20201031 01:06:44.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:44.706" starttime="20201031 01:06:42.260"></status>
</kw>
<msg timestamp="20201031 01:06:44.707" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20201031 01:06:44.707" starttime="20201031 01:06:42.259"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:06:44.707" starttime="20201031 01:06:44.707"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:44.713" level="INFO">Running command 'ozone sh key rename /39336-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:46.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:46.991" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:46.991" starttime="20201031 01:06:44.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:46.992" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:46.992" starttime="20201031 01:06:46.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:46.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:46.993" starttime="20201031 01:06:46.992"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:46.993" starttime="20201031 01:06:44.708"></status>
</kw>
<msg timestamp="20201031 01:06:46.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:46.993" starttime="20201031 01:06:44.708"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:46.994" starttime="20201031 01:06:44.707"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:46.999" level="INFO">Running command 'ozone sh key list /39336-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:49.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:49.356" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20201031 01:06:49.356" starttime="20201031 01:06:46.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:49.357" level="INFO">key2</msg>
<status status="PASS" endtime="20201031 01:06:49.357" starttime="20201031 01:06:49.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:49.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:49.358" starttime="20201031 01:06:49.357"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:49.358" starttime="20201031 01:06:46.995"></status>
</kw>
<msg timestamp="20201031 01:06:49.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:49.358" starttime="20201031 01:06:46.995"></status>
</kw>
<msg timestamp="20201031 01:06:49.358" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20201031 01:06:49.358" starttime="20201031 01:06:46.994"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201031 01:06:49.359" starttime="20201031 01:06:49.358"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:49.366" level="INFO">Running command 'ozone sh key delete /39336-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:51.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:51.655" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:51.655" starttime="20201031 01:06:49.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:51.656" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:51.656" starttime="20201031 01:06:51.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:51.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:51.657" starttime="20201031 01:06:51.657"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:51.657" starttime="20201031 01:06:49.360"></status>
</kw>
<msg timestamp="20201031 01:06:51.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:51.658" starttime="20201031 01:06:49.360"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:51.658" starttime="20201031 01:06:49.359"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:51.658" starttime="20201031 01:05:59.114"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:51.658" starttime="20201031 01:05:59.114"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:51.662" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /39336-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:54.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:54.029" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:54.029" starttime="20201031 01:06:51.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:54.031" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:54.031" starttime="20201031 01:06:54.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:54.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:54.031" starttime="20201031 01:06:54.031"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:54.032" starttime="20201031 01:06:51.659"></status>
</kw>
<msg timestamp="20201031 01:06:54.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:54.032" starttime="20201031 01:06:51.659"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:54.032" starttime="20201031 01:06:51.658"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:54.038" level="INFO">Running command 'ozone sh bucket info /39336-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:56.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:56.511" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201031 01:06:56.511" starttime="20201031 01:06:54.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:56.515" level="INFO">-1</msg>
<status status="PASS" endtime="20201031 01:06:56.515" starttime="20201031 01:06:56.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:56.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:56.516" starttime="20201031 01:06:56.515"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:56.516" starttime="20201031 01:06:54.033"></status>
</kw>
<msg timestamp="20201031 01:06:56.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:56.516" starttime="20201031 01:06:54.033"></status>
</kw>
<msg timestamp="20201031 01:06:56.516" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201031 01:06:56.517" starttime="20201031 01:06:54.032"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:06:56.517" starttime="20201031 01:06:56.517"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --count-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:56.522" level="INFO">Running command 'ozone sh bucket clrquota --count-quota /39336-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:06:58.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:06:58.713" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:06:58.713" starttime="20201031 01:06:56.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:06:58.714" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:06:58.714" starttime="20201031 01:06:58.713"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:06:58.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:06:58.715" starttime="20201031 01:06:58.714"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:58.715" starttime="20201031 01:06:56.518"></status>
</kw>
<msg timestamp="20201031 01:06:58.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:06:58.715" starttime="20201031 01:06:56.518"></status>
</kw>
<status status="PASS" endtime="20201031 01:06:58.715" starttime="20201031 01:06:56.517"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:06:58.719" level="INFO">Running command 'ozone sh bucket info /39336-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:01.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:01.337" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201031 01:07:01.337" starttime="20201031 01:06:58.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:01.338" level="INFO">-1</msg>
<status status="PASS" endtime="20201031 01:07:01.339" starttime="20201031 01:07:01.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:01.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:01.339" starttime="20201031 01:07:01.339"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:01.340" starttime="20201031 01:06:58.717"></status>
</kw>
<msg timestamp="20201031 01:07:01.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:01.340" starttime="20201031 01:06:58.716"></status>
</kw>
<msg timestamp="20201031 01:07:01.340" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201031 01:07:01.340" starttime="20201031 01:06:58.716"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:07:01.341" starttime="20201031 01:07:01.340"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:01.344" level="INFO">Running command 'ozone sh volume clrquota --space-quota /39336-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:03.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:03.574" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:07:03.574" starttime="20201031 01:07:01.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:03.575" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:07:03.575" starttime="20201031 01:07:03.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:03.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:03.576" starttime="20201031 01:07:03.576"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:03.576" starttime="20201031 01:07:01.342"></status>
</kw>
<msg timestamp="20201031 01:07:03.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:03.577" starttime="20201031 01:07:01.341"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:03.577" starttime="20201031 01:07:01.341"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:03.583" level="INFO">Running command 'ozone sh volume info /39336-rpcbasic | jq -r '. | select(.name=="39336-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:05.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:05.880" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201031 01:07:05.880" starttime="20201031 01:07:03.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:05.881" level="INFO">-1</msg>
<status status="PASS" endtime="20201031 01:07:05.881" starttime="20201031 01:07:05.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:05.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:05.882" starttime="20201031 01:07:05.881"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:05.882" starttime="20201031 01:07:03.578"></status>
</kw>
<msg timestamp="20201031 01:07:05.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:05.883" starttime="20201031 01:07:03.578"></status>
</kw>
<msg timestamp="20201031 01:07:05.883" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201031 01:07:05.883" starttime="20201031 01:07:03.577"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:07:05.884" starttime="20201031 01:07:05.883"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --count-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:05.889" level="INFO">Running command 'ozone sh volume clrquota --count-quota /39336-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:07.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:07.853" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:07:07.853" starttime="20201031 01:07:05.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:07.854" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:07:07.855" starttime="20201031 01:07:07.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:07.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:07.855" starttime="20201031 01:07:07.855"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:07.856" starttime="20201031 01:07:05.885"></status>
</kw>
<msg timestamp="20201031 01:07:07.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:07.856" starttime="20201031 01:07:05.884"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:07.856" starttime="20201031 01:07:05.884"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:07.860" level="INFO">Running command 'ozone sh volume info /39336-rpcbasic | jq -r '. | select(.name=="39336-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:10.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:10.141" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201031 01:07:10.141" starttime="20201031 01:07:07.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:10.143" level="INFO">-1</msg>
<status status="PASS" endtime="20201031 01:07:10.143" starttime="20201031 01:07:10.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:10.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:10.143" starttime="20201031 01:07:10.143"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:10.144" starttime="20201031 01:07:07.857"></status>
</kw>
<msg timestamp="20201031 01:07:10.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:10.144" starttime="20201031 01:07:07.857"></status>
</kw>
<msg timestamp="20201031 01:07:10.144" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201031 01:07:10.144" starttime="20201031 01:07:07.856"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:07:10.145" starttime="20201031 01:07:10.144"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:10.148" level="INFO">Running command 'ozone sh bucket delete /39336-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:12.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:12.365" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:07:12.365" starttime="20201031 01:07:10.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:12.366" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:07:12.366" starttime="20201031 01:07:12.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:12.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:12.367" starttime="20201031 01:07:12.366"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:12.367" starttime="20201031 01:07:10.146"></status>
</kw>
<msg timestamp="20201031 01:07:12.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:12.367" starttime="20201031 01:07:10.145"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:12.368" starttime="20201031 01:07:10.145"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:12.372" level="INFO">Running command 'ozone sh volume delete /39336-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:14.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:14.676" level="INFO">${output} = Volume 39336-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201031 01:07:14.676" starttime="20201031 01:07:12.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:14.677" level="INFO">Volume 39336-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201031 01:07:14.677" starttime="20201031 01:07:14.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:14.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:14.678" starttime="20201031 01:07:14.677"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:14.678" starttime="20201031 01:07:12.369"></status>
</kw>
<msg timestamp="20201031 01:07:14.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:14.678" starttime="20201031 01:07:12.369"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:14.678" starttime="20201031 01:07:12.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:14.682" level="INFO">Running command 'ozone sh volume create /39336-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:16.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:16.688" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:07:16.688" starttime="20201031 01:07:14.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:16.689" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:07:16.689" starttime="20201031 01:07:16.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:16.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:16.690" starttime="20201031 01:07:16.689"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:16.690" starttime="20201031 01:07:14.680"></status>
</kw>
<msg timestamp="20201031 01:07:16.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:16.690" starttime="20201031 01:07:14.679"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:16.691" starttime="20201031 01:07:14.679"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:16.695" level="INFO">Running command 'ozone sh volume info /39336-rpcbasic | jq -r '. | select(.name=="39336-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:18.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:18.942" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201031 01:07:18.942" starttime="20201031 01:07:16.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:18.943" level="INFO">-1</msg>
<status status="PASS" endtime="20201031 01:07:18.944" starttime="20201031 01:07:18.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:18.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:18.944" starttime="20201031 01:07:18.944"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:18.945" starttime="20201031 01:07:16.692"></status>
</kw>
<msg timestamp="20201031 01:07:18.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:18.945" starttime="20201031 01:07:16.692"></status>
</kw>
<msg timestamp="20201031 01:07:18.945" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201031 01:07:18.945" starttime="20201031 01:07:16.691"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:07:18.946" starttime="20201031 01:07:18.945"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:18.951" level="INFO">Running command 'ozone sh volume info /39336-rpcbasic | jq -r '. | select(.name=="39336-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:21.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:21.257" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201031 01:07:21.258" starttime="20201031 01:07:18.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:21.259" level="INFO">-1</msg>
<status status="PASS" endtime="20201031 01:07:21.259" starttime="20201031 01:07:21.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:21.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:21.260" starttime="20201031 01:07:21.259"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:21.260" starttime="20201031 01:07:18.947"></status>
</kw>
<msg timestamp="20201031 01:07:21.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:21.260" starttime="20201031 01:07:18.947"></status>
</kw>
<msg timestamp="20201031 01:07:21.261" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201031 01:07:21.261" starttime="20201031 01:07:18.946"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:07:21.261" starttime="20201031 01:07:21.261"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:21.265" level="INFO">Running command 'ozone sh bucket create /39336-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:23.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:23.441" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:07:23.441" starttime="20201031 01:07:21.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:23.442" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:07:23.442" starttime="20201031 01:07:23.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:23.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:23.443" starttime="20201031 01:07:23.443"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:23.443" starttime="20201031 01:07:21.262"></status>
</kw>
<msg timestamp="20201031 01:07:23.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:23.444" starttime="20201031 01:07:21.262"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:23.444" starttime="20201031 01:07:21.261"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:23.448" level="INFO">Running command 'ozone sh bucket info /39336-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:25.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:25.763" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201031 01:07:25.763" starttime="20201031 01:07:23.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:25.764" level="INFO">-1</msg>
<status status="PASS" endtime="20201031 01:07:25.764" starttime="20201031 01:07:25.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:25.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:25.765" starttime="20201031 01:07:25.764"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:25.765" starttime="20201031 01:07:23.445"></status>
</kw>
<msg timestamp="20201031 01:07:25.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:25.765" starttime="20201031 01:07:23.445"></status>
</kw>
<msg timestamp="20201031 01:07:25.766" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201031 01:07:25.766" starttime="20201031 01:07:23.444"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:07:25.766" starttime="20201031 01:07:25.766"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:25.772" level="INFO">Running command 'ozone sh bucket info /39336-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:28.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:28.098" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201031 01:07:28.098" starttime="20201031 01:07:25.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:28.100" level="INFO">-1</msg>
<status status="PASS" endtime="20201031 01:07:28.100" starttime="20201031 01:07:28.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:28.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:28.100" starttime="20201031 01:07:28.100"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:28.101" starttime="20201031 01:07:25.767"></status>
</kw>
<msg timestamp="20201031 01:07:28.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:28.101" starttime="20201031 01:07:25.767"></status>
</kw>
<msg timestamp="20201031 01:07:28.101" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201031 01:07:28.101" starttime="20201031 01:07:25.766"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:07:28.102" starttime="20201031 01:07:28.101"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 0TB --count-quota 0</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:28.107" level="INFO">Running command 'ozone sh volume setquota /39336-rpcbasic --space-quota 0TB --count-quota 0 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:30.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:30.095" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:07:30.095" starttime="20201031 01:07:28.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:30.097" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:07:30.097" starttime="20201031 01:07:30.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:30.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:30.098" starttime="20201031 01:07:30.098"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:30.099" starttime="20201031 01:07:28.103"></status>
</kw>
<msg timestamp="20201031 01:07:30.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:30.099" starttime="20201031 01:07:28.103"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:30.099" starttime="20201031 01:07:28.102"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:30.103" level="INFO">Running command 'ozone sh volume info /39336-rpcbasic | jq -r '. | select(.name=="39336-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:32.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:32.310" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201031 01:07:32.310" starttime="20201031 01:07:30.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:32.312" level="INFO">-1</msg>
<status status="PASS" endtime="20201031 01:07:32.312" starttime="20201031 01:07:32.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:32.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:32.312" starttime="20201031 01:07:32.312"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:32.313" starttime="20201031 01:07:30.100"></status>
</kw>
<msg timestamp="20201031 01:07:32.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:32.313" starttime="20201031 01:07:30.100"></status>
</kw>
<msg timestamp="20201031 01:07:32.313" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201031 01:07:32.313" starttime="20201031 01:07:30.099"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:07:32.314" starttime="20201031 01:07:32.313"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:32.319" level="INFO">Running command 'ozone sh volume info /39336-rpcbasic | jq -r '. | select(.name=="39336-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:34.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:34.515" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201031 01:07:34.515" starttime="20201031 01:07:32.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:34.517" level="INFO">-1</msg>
<status status="PASS" endtime="20201031 01:07:34.517" starttime="20201031 01:07:34.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:34.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:34.518" starttime="20201031 01:07:34.517"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:34.518" starttime="20201031 01:07:32.315"></status>
</kw>
<msg timestamp="20201031 01:07:34.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:34.518" starttime="20201031 01:07:32.315"></status>
</kw>
<msg timestamp="20201031 01:07:34.518" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201031 01:07:34.518" starttime="20201031 01:07:32.314"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:07:34.519" starttime="20201031 01:07:34.519"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 0TB --count-quota 0</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:34.523" level="INFO">Running command 'ozone sh bucket setquota /39336-rpcbasic/bb1 --space-quota 0TB --count-quota 0 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:36.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:36.562" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:07:36.562" starttime="20201031 01:07:34.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:36.563" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:07:36.563" starttime="20201031 01:07:36.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:36.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:36.564" starttime="20201031 01:07:36.563"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:36.564" starttime="20201031 01:07:34.520"></status>
</kw>
<msg timestamp="20201031 01:07:36.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:36.564" starttime="20201031 01:07:34.520"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:36.564" starttime="20201031 01:07:34.519"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:36.570" level="INFO">Running command 'ozone sh bucket info /39336-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:38.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:38.966" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201031 01:07:38.966" starttime="20201031 01:07:36.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:38.967" level="INFO">-1</msg>
<status status="PASS" endtime="20201031 01:07:38.968" starttime="20201031 01:07:38.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:38.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:38.968" starttime="20201031 01:07:38.968"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:38.969" starttime="20201031 01:07:36.566"></status>
</kw>
<msg timestamp="20201031 01:07:38.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:38.969" starttime="20201031 01:07:36.566"></status>
</kw>
<msg timestamp="20201031 01:07:38.969" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201031 01:07:38.969" starttime="20201031 01:07:36.565"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:07:38.970" starttime="20201031 01:07:38.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:38.975" level="INFO">Running command 'ozone sh bucket info /39336-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:41.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:41.468" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201031 01:07:41.468" starttime="20201031 01:07:38.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:41.469" level="INFO">-1</msg>
<status status="PASS" endtime="20201031 01:07:41.469" starttime="20201031 01:07:41.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:41.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:41.470" starttime="20201031 01:07:41.469"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:41.470" starttime="20201031 01:07:38.971"></status>
</kw>
<msg timestamp="20201031 01:07:41.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:41.470" starttime="20201031 01:07:38.971"></status>
</kw>
<msg timestamp="20201031 01:07:41.470" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201031 01:07:41.470" starttime="20201031 01:07:38.970"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:07:41.471" starttime="20201031 01:07:41.471"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:41.476" level="INFO">Running command 'ozone sh bucket delete /39336-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:43.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:43.551" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:07:43.551" starttime="20201031 01:07:41.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:43.553" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:07:43.553" starttime="20201031 01:07:43.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:43.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:43.553" starttime="20201031 01:07:43.553"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:43.554" starttime="20201031 01:07:41.472"></status>
</kw>
<msg timestamp="20201031 01:07:43.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:43.554" starttime="20201031 01:07:41.472"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:43.554" starttime="20201031 01:07:41.471"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:07:43.559" level="INFO">Running command 'ozone sh volume delete /39336-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:07:45.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:07:45.598" level="INFO">${output} = Volume 39336-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201031 01:07:45.598" starttime="20201031 01:07:43.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:07:45.599" level="INFO">Volume 39336-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201031 01:07:45.599" starttime="20201031 01:07:45.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:07:45.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:07:45.600" starttime="20201031 01:07:45.600"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:45.600" starttime="20201031 01:07:43.555"></status>
</kw>
<msg timestamp="20201031 01:07:45.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:07:45.601" starttime="20201031 01:07:43.555"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:45.601" starttime="20201031 01:07:43.554"></status>
</kw>
<status status="PASS" endtime="20201031 01:07:45.601" starttime="20201031 01:05:25.487"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 01:07:45.601" critical="yes" starttime="20201031 01:05:25.487"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20201031 01:07:45.603" starttime="20201031 01:05:25.421"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-ha" pass="1">ozone-ha</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
