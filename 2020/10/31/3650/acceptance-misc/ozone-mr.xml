<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201031 01:22:47.119" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:09:09.433" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:09:11.881" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 01:09:11.881" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201031 01:09:11.881" starttime="20201031 01:09:09.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:09:11.884" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201031 01:09:11.884" starttime="20201031 01:09:11.882"></status>
</kw>
<msg timestamp="20201031 01:09:11.884" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201031 01:09:11.884" starttime="20201031 01:09:09.426"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:09:11.891" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:09:14.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:09:14.217" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:09:14.217" starttime="20201031 01:09:11.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:09:14.218" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:09:14.218" starttime="20201031 01:09:14.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:09:14.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:09:14.219" starttime="20201031 01:09:14.218"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:14.219" starttime="20201031 01:09:11.886"></status>
</kw>
<msg timestamp="20201031 01:09:14.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:09:14.219" starttime="20201031 01:09:11.886"></status>
</kw>
<msg timestamp="20201031 01:09:14.219" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201031 01:09:14.220" starttime="20201031 01:09:11.885"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201031 01:09:14.220" starttime="20201031 01:09:14.220"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:14.220" starttime="20201031 01:09:11.885"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:14.220" starttime="20201031 01:09:11.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:09:14.225" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:09:16.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:09:16.459" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:09:16.459" starttime="20201031 01:09:14.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:09:16.460" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:09:16.460" starttime="20201031 01:09:16.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:09:16.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:09:16.461" starttime="20201031 01:09:16.460"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:16.461" starttime="20201031 01:09:14.222"></status>
</kw>
<msg timestamp="20201031 01:09:16.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:09:16.462" starttime="20201031 01:09:14.222"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:16.462" starttime="20201031 01:09:14.221"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:16.462" starttime="20201031 01:09:14.221"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:16.462" starttime="20201031 01:09:14.220"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201031 01:09:16.463" starttime="20201031 01:09:16.462"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:09:16.467" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:09:18.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:09:18.615" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:09:16.416Z",
  "modificat...</msg>
<status status="PASS" endtime="20201031 01:09:18.615" starttime="20201031 01:09:16.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:09:18.616" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:09:16.416Z",
  "modificationTime" : "2020-10-31T01:09:16.416Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201031 01:09:18.616" starttime="20201031 01:09:18.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:09:18.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:09:18.617" starttime="20201031 01:09:18.616"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:18.617" starttime="20201031 01:09:16.464"></status>
</kw>
<msg timestamp="20201031 01:09:18.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:09:18.617" starttime="20201031 01:09:16.463"></status>
</kw>
<msg timestamp="20201031 01:09:18.617" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:09:16.416Z",
  "modificat...</msg>
<status status="PASS" endtime="20201031 01:09:18.617" starttime="20201031 01:09:16.463"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201031 01:09:18.618" starttime="20201031 01:09:18.618"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:09:18.622" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:09:18.622" starttime="20201031 01:09:18.622"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:09:18.623" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:09:18.623" starttime="20201031 01:09:18.622"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:18.623" starttime="20201031 01:09:18.621"></status>
</kw>
<msg timestamp="20201031 01:09:18.623" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:09:18.623" starttime="20201031 01:09:18.621"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:18.623" starttime="20201031 01:09:18.620"></status>
</kw>
<msg timestamp="20201031 01:09:18.623" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201031 01:09:18.623" starttime="20201031 01:09:18.619"></status>
</kw>
<msg timestamp="20201031 01:09:18.624" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201031 01:09:18.624" starttime="20201031 01:09:18.618"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:09:18.628" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:09:20.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:09:20.909" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:09:20.909" starttime="20201031 01:09:18.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:09:20.910" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:09:20.910" starttime="20201031 01:09:20.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:09:20.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:09:20.911" starttime="20201031 01:09:20.910"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:20.911" starttime="20201031 01:09:18.624"></status>
</kw>
<msg timestamp="20201031 01:09:20.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:09:20.911" starttime="20201031 01:09:18.624"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:20.911" starttime="20201031 01:09:18.624"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:09:20.916" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:09:26.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:09:26.877" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:09:26.877" starttime="20201031 01:09:20.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:09:26.879" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:09:26.879" starttime="20201031 01:09:26.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:09:26.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:09:26.879" starttime="20201031 01:09:26.879"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:26.880" starttime="20201031 01:09:20.912"></status>
</kw>
<msg timestamp="20201031 01:09:26.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:09:26.880" starttime="20201031 01:09:20.912"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:26.880" starttime="20201031 01:09:20.911"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:09:26.884" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:09:31.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:09:31.963" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:09:31.963" starttime="20201031 01:09:26.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:09:31.964" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:09:31.965" starttime="20201031 01:09:31.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:09:31.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:09:31.965" starttime="20201031 01:09:31.965"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:31.966" starttime="20201031 01:09:26.881"></status>
</kw>
<msg timestamp="20201031 01:09:31.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:09:31.966" starttime="20201031 01:09:26.881"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:31.966" starttime="20201031 01:09:26.880"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:09:31.970" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:09:36.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:09:36.065" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:09:36.065" starttime="20201031 01:09:31.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:09:36.066" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:09:36.066" starttime="20201031 01:09:36.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:09:36.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:09:36.067" starttime="20201031 01:09:36.066"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:36.067" starttime="20201031 01:09:31.967"></status>
</kw>
<msg timestamp="20201031 01:09:36.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:09:36.067" starttime="20201031 01:09:31.967"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:36.067" starttime="20201031 01:09:31.966"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:09:36.068" critical="yes" starttime="20201031 01:09:09.425"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:09:36.073" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:09:36.073" starttime="20201031 01:09:36.072"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:09:36.074" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:09:36.074" starttime="20201031 01:09:36.073"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:36.074" starttime="20201031 01:09:36.072"></status>
</kw>
<msg timestamp="20201031 01:09:36.074" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:09:36.074" starttime="20201031 01:09:36.072"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:36.074" starttime="20201031 01:09:36.071"></status>
</kw>
<msg timestamp="20201031 01:09:36.074" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201031 01:09:36.075" starttime="20201031 01:09:36.070"></status>
</kw>
<msg timestamp="20201031 01:09:36.075" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201031 01:09:36.075" starttime="20201031 01:09:36.069"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:09:36.078" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:09:38.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:09:38.293" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:09:38.293" starttime="20201031 01:09:36.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:09:38.294" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:09:38.294" starttime="20201031 01:09:38.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:09:38.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:09:38.295" starttime="20201031 01:09:38.295"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:38.295" starttime="20201031 01:09:36.076"></status>
</kw>
<msg timestamp="20201031 01:09:38.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:09:38.296" starttime="20201031 01:09:36.075"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:38.296" starttime="20201031 01:09:36.075"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:09:38.299" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:09:40.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:09:40.522" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:09:40.522" starttime="20201031 01:09:38.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:09:40.524" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:09:40.524" starttime="20201031 01:09:40.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:09:40.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:09:40.525" starttime="20201031 01:09:40.524"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:40.525" starttime="20201031 01:09:38.297"></status>
</kw>
<msg timestamp="20201031 01:09:40.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:09:40.525" starttime="20201031 01:09:38.297"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:40.525" starttime="20201031 01:09:38.296"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:09:40.525" critical="yes" starttime="20201031 01:09:36.068"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201031 01:09:40.527" starttime="20201031 01:09:09.371"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 01:11:16.375" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 01:11:16.375" starttime="20201031 01:11:16.375"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:11:16.376" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 01:11:16.376" starttime="20201031 01:11:16.375"></status>
</kw>
<status status="PASS" endtime="20201031 01:11:16.376" starttime="20201031 01:11:16.374"></status>
</kw>
<msg timestamp="20201031 01:11:16.376" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 01:11:16.376" starttime="20201031 01:11:16.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:11:16.377" starttime="20201031 01:11:16.377"></status>
</kw>
<msg timestamp="20201031 01:11:16.377" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201031 01:11:16.377" starttime="20201031 01:11:16.376"></status>
</kw>
<status status="PASS" endtime="20201031 01:11:16.377" starttime="20201031 01:11:16.373"></status>
</kw>
<msg timestamp="20201031 01:11:16.377" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 01:11:16.377" starttime="20201031 01:11:16.373"></status>
</kw>
<msg timestamp="20201031 01:11:16.377" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 01:11:16.377" starttime="20201031 01:11:16.371"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 01:11:16.378" level="INFO">${random} = 48846</msg>
<status status="PASS" endtime="20201031 01:11:16.378" starttime="20201031 01:11:16.378"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:11:16.385" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-48846 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:11:19.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:11:19.766" level="INFO">${output} = 2020-10-31 01:11:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:11:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 ...</msg>
<status status="PASS" endtime="20201031 01:11:19.766" starttime="20201031 01:11:16.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:11:19.767" level="INFO">2020-10-31 01:11:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:11:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 01:11:18 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-31 01:11:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:11:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1BE6A273F1B9-&gt;cf847096-91b0-4ddb-8db9-7cf63a9d4d3e
2020-10-31 01:11:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201031 01:11:19.767" starttime="20201031 01:11:19.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:11:19.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:11:19.768" starttime="20201031 01:11:19.767"></status>
</kw>
<status status="PASS" endtime="20201031 01:11:19.768" starttime="20201031 01:11:16.379"></status>
</kw>
<msg timestamp="20201031 01:11:19.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:11:19.768" starttime="20201031 01:11:16.379"></status>
</kw>
<msg timestamp="20201031 01:11:19.768" level="INFO">${result} = 2020-10-31 01:11:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:11:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 ...</msg>
<status status="PASS" endtime="20201031 01:11:19.768" starttime="20201031 01:11:16.378"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:11:19.772" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:11:21.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:11:21.691" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-31 01:11 ofs://om/volume1/bucket1/ozone-48846
-rw-...</msg>
<status status="PASS" endtime="20201031 01:11:21.691" starttime="20201031 01:11:19.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:11:21.693" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-31 01:11 ofs://om/volume1/bucket1/ozone-48846
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-31 01:09 ofs://om/volume1/bucket1/ozone-57320
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:09 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:10 ofs://om/volume1/bucket1/wordcount-02.txt</msg>
<status status="PASS" endtime="20201031 01:11:21.693" starttime="20201031 01:11:21.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:11:21.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:11:21.694" starttime="20201031 01:11:21.693"></status>
</kw>
<status status="PASS" endtime="20201031 01:11:21.694" starttime="20201031 01:11:19.769"></status>
</kw>
<msg timestamp="20201031 01:11:21.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:11:21.694" starttime="20201031 01:11:19.769"></status>
</kw>
<msg timestamp="20201031 01:11:21.694" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-31 01:11 ofs://om/volume1/bucket1/ozone-48846
-rw-...</msg>
<status status="PASS" endtime="20201031 01:11:21.694" starttime="20201031 01:11:19.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:11:21.695" starttime="20201031 01:11:21.694"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 01:11:21.695" critical="yes" starttime="20201031 01:11:16.371"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201031 01:11:21.697" starttime="20201031 01:11:16.321"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:09:45.611" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:09:45.611" starttime="20201031 01:09:45.611"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:09:45.612" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:09:45.612" starttime="20201031 01:09:45.611"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:45.612" starttime="20201031 01:09:45.610"></status>
</kw>
<msg timestamp="20201031 01:09:45.612" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:09:45.612" starttime="20201031 01:09:45.610"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:45.612" starttime="20201031 01:09:45.609"></status>
</kw>
<msg timestamp="20201031 01:09:45.612" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 01:09:45.612" starttime="20201031 01:09:45.609"></status>
</kw>
<msg timestamp="20201031 01:09:45.612" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 01:09:45.612" starttime="20201031 01:09:45.608"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 01:09:45.613" level="INFO">${random} = 57320</msg>
<status status="PASS" endtime="20201031 01:09:45.613" starttime="20201031 01:09:45.612"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:09:45.619" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-57320 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:09:49.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:09:49.166" level="INFO">${output} = 2020-10-31 01:09:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:09:47 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 ...</msg>
<status status="PASS" endtime="20201031 01:09:49.166" starttime="20201031 01:09:45.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:09:49.167" level="INFO">2020-10-31 01:09:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:09:47 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 01:09:47 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-31 01:09:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:09:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-617031D89129-&gt;cf847096-91b0-4ddb-8db9-7cf63a9d4d3e
2020-10-31 01:09:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201031 01:09:49.168" starttime="20201031 01:09:49.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:09:49.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:09:49.168" starttime="20201031 01:09:49.168"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:49.168" starttime="20201031 01:09:45.614"></status>
</kw>
<msg timestamp="20201031 01:09:49.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:09:49.169" starttime="20201031 01:09:45.613"></status>
</kw>
<msg timestamp="20201031 01:09:49.169" level="INFO">${result} = 2020-10-31 01:09:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:09:47 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 ...</msg>
<status status="PASS" endtime="20201031 01:09:49.169" starttime="20201031 01:09:45.613"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:09:49.172" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:09:51.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:09:51.041" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-31 01:09 o3fs://bucket1.volume1.om/ozone-57320
dr...</msg>
<status status="PASS" endtime="20201031 01:09:51.041" starttime="20201031 01:09:49.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:09:51.043" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-31 01:09 o3fs://bucket1.volume1.om/ozone-57320
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:09 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201031 01:09:51.043" starttime="20201031 01:09:51.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:09:51.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:09:51.043" starttime="20201031 01:09:51.043"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:51.044" starttime="20201031 01:09:49.170"></status>
</kw>
<msg timestamp="20201031 01:09:51.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:09:51.044" starttime="20201031 01:09:49.169"></status>
</kw>
<msg timestamp="20201031 01:09:51.044" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-31 01:09 o3fs://bucket1.volume1.om/ozone-57320
dr...</msg>
<status status="PASS" endtime="20201031 01:09:51.044" starttime="20201031 01:09:49.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:09:51.045" starttime="20201031 01:09:51.044"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 01:09:51.045" critical="yes" starttime="20201031 01:09:45.607"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201031 01:09:51.046" starttime="20201031 01:09:45.558"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:11:26.544" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:11:26.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:11:26.549" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 01:11:26.549" starttime="20201031 01:11:26.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:11:26.550" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 01:11:26.550" starttime="20201031 01:11:26.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:11:26.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:11:26.550" starttime="20201031 01:11:26.550"></status>
</kw>
<status status="PASS" endtime="20201031 01:11:26.551" starttime="20201031 01:11:26.538"></status>
</kw>
<msg timestamp="20201031 01:11:26.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:11:26.551" starttime="20201031 01:11:26.538"></status>
</kw>
<msg timestamp="20201031 01:11:26.551" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 01:11:26.551" starttime="20201031 01:11:26.538"></status>
</kw>
<msg timestamp="20201031 01:11:26.551" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 01:11:26.551" starttime="20201031 01:11:26.537"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 01:11:26.554" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 01:11:26.555" starttime="20201031 01:11:26.554"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:11:26.555" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 01:11:26.555" starttime="20201031 01:11:26.555"></status>
</kw>
<status status="PASS" endtime="20201031 01:11:26.555" starttime="20201031 01:11:26.554"></status>
</kw>
<msg timestamp="20201031 01:11:26.555" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 01:11:26.556" starttime="20201031 01:11:26.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:11:26.556" starttime="20201031 01:11:26.556"></status>
</kw>
<msg timestamp="20201031 01:11:26.557" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201031 01:11:26.557" starttime="20201031 01:11:26.556"></status>
</kw>
<status status="PASS" endtime="20201031 01:11:26.557" starttime="20201031 01:11:26.553"></status>
</kw>
<msg timestamp="20201031 01:11:26.557" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 01:11:26.557" starttime="20201031 01:11:26.552"></status>
</kw>
<msg timestamp="20201031 01:11:26.557" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 01:11:26.557" starttime="20201031 01:11:26.551"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:11:26.560" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:12:07.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:12:07.274" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 01:11:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:11:28 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201031 01:12:07.275" starttime="20201031 01:11:26.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:12:07.276" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-31 01:11:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:11:28 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 01:11:28 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-31 01:11:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:11:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5A485AA8D845-&gt;cf847096-91b0-4ddb-8db9-7cf63a9d4d3e
2020-10-31 01:11:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-31 01:11:32 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-31 01:11:32 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-31 01:11:32 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-31 01:11:35 INFO  JobSubmitter:198 - number of splits:3
2020-10-31 01:11:37 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604106515683_0003
2020-10-31 01:11:38 INFO  YarnClientImpl:273 - Submitted application application_1604106515683_0003
2020-10-31 01:11:38 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604106515683_0003/
2020-10-31 01:11:38 INFO  Job:1339 - Running job: job_1604106515683_0003
2020-10-31 01:11:45 INFO  Job:1360 - Job job_1604106515683_0003 running in uber mode : false
2020-10-31 01:11:45 INFO  Job:1367 -  map 0% reduce 0%
2020-10-31 01:11:51 INFO  Job:1367 -  map 33% reduce 0%
2020-10-31 01:11:56 INFO  Job:1367 -  map 67% reduce 0%
2020-10-31 01:12:01 INFO  Job:1367 -  map 100% reduce 0%
2020-10-31 01:12:06 INFO  Job:1367 -  map 100% reduce 100%
2020-10-31 01:12:06 INFO  Job:1378 - Job job_1604106515683_0003 completed successfully
2020-10-31 01:12:06 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615229
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40848
		Total time spent by all reduces in occupied slots (ms)=14952
		Total time spent by all map tasks (ms)=10212
		Total time spent by all reduce tasks (ms)=3738
		Total vcore-milliseconds taken by all map tasks=10212
		Total vcore-milliseconds taken by all reduce tasks=3738
		Total megabyte-milliseconds taken by all map tasks=41828352
		Total megabyte-milliseconds taken by all reduce tasks=15310848
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=619
		CPU time spent (ms)=7110
		Physical memory (bytes) snapshot=1129832448
		Virtual memory (bytes) snapshot=16051822592
		Total committed heap usage (bytes)=1054343168
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.513 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201031 01:12:07.276" starttime="20201031 01:12:07.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:12:07.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:12:07.277" starttime="20201031 01:12:07.276"></status>
</kw>
<status status="PASS" endtime="20201031 01:12:07.277" starttime="20201031 01:11:26.558"></status>
</kw>
<msg timestamp="20201031 01:12:07.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:12:07.277" starttime="20201031 01:11:26.558"></status>
</kw>
<msg timestamp="20201031 01:12:07.278" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 01:11:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:11:28 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201031 01:12:07.278" starttime="20201031 01:11:26.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 01:12:07.278" starttime="20201031 01:12:07.278"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 01:12:07.278" critical="yes" starttime="20201031 01:11:26.537"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:12:07.284" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:12:07.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:12:07.289" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 01:12:07.289" starttime="20201031 01:12:07.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:12:07.291" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 01:12:07.291" starttime="20201031 01:12:07.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:12:07.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:12:07.292" starttime="20201031 01:12:07.292"></status>
</kw>
<status status="PASS" endtime="20201031 01:12:07.292" starttime="20201031 01:12:07.281"></status>
</kw>
<msg timestamp="20201031 01:12:07.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:12:07.293" starttime="20201031 01:12:07.281"></status>
</kw>
<msg timestamp="20201031 01:12:07.293" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 01:12:07.293" starttime="20201031 01:12:07.281"></status>
</kw>
<msg timestamp="20201031 01:12:07.293" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 01:12:07.293" starttime="20201031 01:12:07.280"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 01:12:07.294" level="INFO">${random} = 15</msg>
<status status="PASS" endtime="20201031 01:12:07.294" starttime="20201031 01:12:07.294"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 01:12:07.298" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 01:12:07.298" starttime="20201031 01:12:07.297"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:12:07.298" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 01:12:07.298" starttime="20201031 01:12:07.298"></status>
</kw>
<status status="PASS" endtime="20201031 01:12:07.298" starttime="20201031 01:12:07.297"></status>
</kw>
<msg timestamp="20201031 01:12:07.298" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 01:12:07.299" starttime="20201031 01:12:07.297"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:12:07.299" starttime="20201031 01:12:07.299"></status>
</kw>
<msg timestamp="20201031 01:12:07.299" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201031 01:12:07.300" starttime="20201031 01:12:07.299"></status>
</kw>
<status status="PASS" endtime="20201031 01:12:07.300" starttime="20201031 01:12:07.296"></status>
</kw>
<msg timestamp="20201031 01:12:07.300" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 01:12:07.300" starttime="20201031 01:12:07.295"></status>
</kw>
<msg timestamp="20201031 01:12:07.300" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 01:12:07.300" starttime="20201031 01:12:07.294"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 01:12:07.303" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 01:12:07.303" starttime="20201031 01:12:07.303"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:12:07.304" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 01:12:07.304" starttime="20201031 01:12:07.303"></status>
</kw>
<status status="PASS" endtime="20201031 01:12:07.304" starttime="20201031 01:12:07.302"></status>
</kw>
<msg timestamp="20201031 01:12:07.304" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 01:12:07.304" starttime="20201031 01:12:07.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:12:07.305" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201031 01:12:07.305" starttime="20201031 01:12:07.305"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:12:07.306" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201031 01:12:07.306" starttime="20201031 01:12:07.305"></status>
</kw>
<status status="PASS" endtime="20201031 01:12:07.306" starttime="20201031 01:12:07.304"></status>
</kw>
<msg timestamp="20201031 01:12:07.306" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201031 01:12:07.306" starttime="20201031 01:12:07.304"></status>
</kw>
<status status="PASS" endtime="20201031 01:12:07.306" starttime="20201031 01:12:07.301"></status>
</kw>
<msg timestamp="20201031 01:12:07.306" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201031 01:12:07.307" starttime="20201031 01:12:07.301"></status>
</kw>
<msg timestamp="20201031 01:12:07.307" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201031 01:12:07.307" starttime="20201031 01:12:07.300"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 01:12:07.310" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 01:12:07.310" starttime="20201031 01:12:07.310"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:12:07.311" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 01:12:07.311" starttime="20201031 01:12:07.311"></status>
</kw>
<status status="PASS" endtime="20201031 01:12:07.311" starttime="20201031 01:12:07.309"></status>
</kw>
<msg timestamp="20201031 01:12:07.311" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 01:12:07.311" starttime="20201031 01:12:07.309"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:12:07.313" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201031 01:12:07.313" starttime="20201031 01:12:07.312"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:12:07.313" level="INFO">${result} = /wordcount-15.txt</msg>
<status status="PASS" endtime="20201031 01:12:07.313" starttime="20201031 01:12:07.313"></status>
</kw>
<status status="PASS" endtime="20201031 01:12:07.313" starttime="20201031 01:12:07.312"></status>
</kw>
<msg timestamp="20201031 01:12:07.313" level="INFO">${path_with_leading} = /wordcount-15.txt</msg>
<status status="PASS" endtime="20201031 01:12:07.313" starttime="20201031 01:12:07.311"></status>
</kw>
<status status="PASS" endtime="20201031 01:12:07.314" starttime="20201031 01:12:07.308"></status>
</kw>
<msg timestamp="20201031 01:12:07.314" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-15.txt</msg>
<status status="PASS" endtime="20201031 01:12:07.314" starttime="20201031 01:12:07.307"></status>
</kw>
<msg timestamp="20201031 01:12:07.314" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-15.txt</msg>
<status status="PASS" endtime="20201031 01:12:07.314" starttime="20201031 01:12:07.307"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:12:07.317" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-15.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:12:42.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:12:42.331" level="INFO">${output} = 2020-10-31 01:12:09 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-31 01:12:09 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201031 01:12:42.331" starttime="20201031 01:12:07.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:12:42.332" level="INFO">2020-10-31 01:12:09 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-31 01:12:09 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-31 01:12:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:12:09 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 01:12:09 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-31 01:12:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:12:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3E40A80C3DD5-&gt;cf847096-91b0-4ddb-8db9-7cf63a9d4d3e
2020-10-31 01:12:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 01:12:10 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-31 01:12:10 INFO  JobSubmitter:198 - number of splits:3
2020-10-31 01:12:11 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604106515683_0004
2020-10-31 01:12:11 INFO  YarnClientImpl:273 - Submitted application application_1604106515683_0004
2020-10-31 01:12:11 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604106515683_0004/
2020-10-31 01:12:11 INFO  Job:1339 - Running job: job_1604106515683_0004
2020-10-31 01:12:20 INFO  Job:1360 - Job job_1604106515683_0004 running in uber mode : false
2020-10-31 01:12:20 INFO  Job:1367 -  map 0% reduce 0%
2020-10-31 01:12:26 INFO  Job:1367 -  map 33% reduce 0%
2020-10-31 01:12:31 INFO  Job:1367 -  map 67% reduce 0%
2020-10-31 01:12:36 INFO  Job:1367 -  map 100% reduce 0%
2020-10-31 01:12:40 INFO  Job:1367 -  map 100% reduce 100%
2020-10-31 01:12:41 INFO  Job:1378 - Job job_1604106515683_0004 completed successfully
2020-10-31 01:12:41 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41124
		Total time spent by all reduces in occupied slots (ms)=14528
		Total time spent by all map tasks (ms)=10281
		Total time spent by all reduce tasks (ms)=3632
		Total vcore-milliseconds taken by all map tasks=10281
		Total vcore-milliseconds taken by all reduce tasks=3632
		Total megabyte-milliseconds taken by all map tasks=42110976
		Total megabyte-milliseconds taken by all reduce tasks=14876672
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=703
		CPU time spent (ms)=7210
		Physical memory (bytes) snapshot=1135341568
		Virtual memory (bytes) snapshot=16065925120
		Total committed heap usage (bytes)=1053818880
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201031 01:12:42.333" starttime="20201031 01:12:42.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:12:42.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:12:42.333" starttime="20201031 01:12:42.333"></status>
</kw>
<status status="PASS" endtime="20201031 01:12:42.334" starttime="20201031 01:12:07.315"></status>
</kw>
<msg timestamp="20201031 01:12:42.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:12:42.334" starttime="20201031 01:12:07.314"></status>
</kw>
<msg timestamp="20201031 01:12:42.334" level="INFO">${output} = 2020-10-31 01:12:09 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-31 01:12:09 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201031 01:12:42.334" starttime="20201031 01:12:07.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201031 01:12:42.335" starttime="20201031 01:12:42.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 01:12:42.335" starttime="20201031 01:12:42.335"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 01:12:42.336" critical="yes" starttime="20201031 01:12:07.279"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201031 01:12:42.337" starttime="20201031 01:11:26.487"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:09:55.947" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:09:55.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:09:55.954" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 01:09:55.955" starttime="20201031 01:09:55.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:09:55.955" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 01:09:55.955" starttime="20201031 01:09:55.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:09:55.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:09:55.956" starttime="20201031 01:09:55.956"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:55.956" starttime="20201031 01:09:55.941"></status>
</kw>
<msg timestamp="20201031 01:09:55.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:09:55.956" starttime="20201031 01:09:55.941"></status>
</kw>
<msg timestamp="20201031 01:09:55.957" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 01:09:55.957" starttime="20201031 01:09:55.941"></status>
</kw>
<msg timestamp="20201031 01:09:55.957" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 01:09:55.957" starttime="20201031 01:09:55.940"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:09:55.960" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:09:55.960" starttime="20201031 01:09:55.960"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:09:55.961" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:09:55.961" starttime="20201031 01:09:55.960"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:55.961" starttime="20201031 01:09:55.959"></status>
</kw>
<msg timestamp="20201031 01:09:55.961" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:09:55.961" starttime="20201031 01:09:55.959"></status>
</kw>
<status status="PASS" endtime="20201031 01:09:55.961" starttime="20201031 01:09:55.958"></status>
</kw>
<msg timestamp="20201031 01:09:55.961" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 01:09:55.961" starttime="20201031 01:09:55.958"></status>
</kw>
<msg timestamp="20201031 01:09:55.961" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 01:09:55.961" starttime="20201031 01:09:55.957"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:09:55.965" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:10:34.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:10:34.997" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 01:09:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:09:58 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201031 01:10:34.998" starttime="20201031 01:09:55.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:10:34.999" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-31 01:09:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:09:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 01:09:58 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-31 01:09:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:09:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-162611921726-&gt;cf847096-91b0-4ddb-8db9-7cf63a9d4d3e
2020-10-31 01:09:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-31 01:09:59 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-31 01:09:59 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-31 01:10:00 INFO  JobSubmitter:198 - number of splits:3
2020-10-31 01:10:00 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604106515683_0001
2020-10-31 01:10:00 INFO  YarnClientImpl:273 - Submitted application application_1604106515683_0001
2020-10-31 01:10:01 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604106515683_0001/
2020-10-31 01:10:01 INFO  Job:1339 - Running job: job_1604106515683_0001
2020-10-31 01:10:11 INFO  Job:1360 - Job job_1604106515683_0001 running in uber mode : false
2020-10-31 01:10:11 INFO  Job:1367 -  map 0% reduce 0%
2020-10-31 01:10:18 INFO  Job:1367 -  map 33% reduce 0%
2020-10-31 01:10:23 INFO  Job:1367 -  map 67% reduce 0%
2020-10-31 01:10:28 INFO  Job:1367 -  map 100% reduce 0%
2020-10-31 01:10:33 INFO  Job:1367 -  map 100% reduce 100%
2020-10-31 01:10:34 INFO  Job:1378 - Job job_1604106515683_0001 completed successfully
2020-10-31 01:10:34 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615457
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42380
		Total time spent by all reduces in occupied slots (ms)=16104
		Total time spent by all map tasks (ms)=10595
		Total time spent by all reduce tasks (ms)=4026
		Total vcore-milliseconds taken by all map tasks=10595
		Total vcore-milliseconds taken by all reduce tasks=4026
		Total megabyte-milliseconds taken by all map tasks=43397120
		Total megabyte-milliseconds taken by all reduce tasks=16490496
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=601
		CPU time spent (ms)=6920
		Physical memory (bytes) snapshot=1126989824
		Virtual memory (bytes) snapshot=16043323392
		Total committed heap usage (bytes)=1142423552
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.023 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201031 01:10:34.999" starttime="20201031 01:10:34.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:10:35.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:10:35.000" starttime="20201031 01:10:34.999"></status>
</kw>
<status status="PASS" endtime="20201031 01:10:35.000" starttime="20201031 01:09:55.962"></status>
</kw>
<msg timestamp="20201031 01:10:35.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:10:35.000" starttime="20201031 01:09:55.962"></status>
</kw>
<msg timestamp="20201031 01:10:35.001" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 01:09:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:09:58 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201031 01:10:35.001" starttime="20201031 01:09:55.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 01:10:35.001" starttime="20201031 01:10:35.001"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 01:10:35.001" critical="yes" starttime="20201031 01:09:55.940"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:10:35.006" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:10:35.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:10:35.012" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 01:10:35.012" starttime="20201031 01:10:35.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:10:35.013" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 01:10:35.013" starttime="20201031 01:10:35.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:10:35.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:10:35.014" starttime="20201031 01:10:35.014"></status>
</kw>
<status status="PASS" endtime="20201031 01:10:35.014" starttime="20201031 01:10:35.004"></status>
</kw>
<msg timestamp="20201031 01:10:35.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:10:35.015" starttime="20201031 01:10:35.003"></status>
</kw>
<msg timestamp="20201031 01:10:35.015" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 01:10:35.015" starttime="20201031 01:10:35.003"></status>
</kw>
<msg timestamp="20201031 01:10:35.015" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201031 01:10:35.015" starttime="20201031 01:10:35.003"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 01:10:35.016" level="INFO">${random} = 02</msg>
<status status="PASS" endtime="20201031 01:10:35.016" starttime="20201031 01:10:35.015"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:10:35.019" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:10:35.019" starttime="20201031 01:10:35.019"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:10:35.020" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:10:35.020" starttime="20201031 01:10:35.019"></status>
</kw>
<status status="PASS" endtime="20201031 01:10:35.020" starttime="20201031 01:10:35.018"></status>
</kw>
<msg timestamp="20201031 01:10:35.020" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:10:35.020" starttime="20201031 01:10:35.018"></status>
</kw>
<status status="PASS" endtime="20201031 01:10:35.020" starttime="20201031 01:10:35.017"></status>
</kw>
<msg timestamp="20201031 01:10:35.020" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 01:10:35.020" starttime="20201031 01:10:35.017"></status>
</kw>
<msg timestamp="20201031 01:10:35.020" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 01:10:35.020" starttime="20201031 01:10:35.016"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:10:35.023" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:10:35.023" starttime="20201031 01:10:35.023"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:10:35.024" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:10:35.024" starttime="20201031 01:10:35.023"></status>
</kw>
<status status="PASS" endtime="20201031 01:10:35.024" starttime="20201031 01:10:35.022"></status>
</kw>
<msg timestamp="20201031 01:10:35.024" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:10:35.024" starttime="20201031 01:10:35.022"></status>
</kw>
<status status="PASS" endtime="20201031 01:10:35.024" starttime="20201031 01:10:35.021"></status>
</kw>
<msg timestamp="20201031 01:10:35.024" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201031 01:10:35.024" starttime="20201031 01:10:35.021"></status>
</kw>
<msg timestamp="20201031 01:10:35.025" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201031 01:10:35.025" starttime="20201031 01:10:35.020"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:10:35.027" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:10:35.028" starttime="20201031 01:10:35.027"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:10:35.028" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:10:35.028" starttime="20201031 01:10:35.028"></status>
</kw>
<status status="PASS" endtime="20201031 01:10:35.028" starttime="20201031 01:10:35.027"></status>
</kw>
<msg timestamp="20201031 01:10:35.028" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:10:35.028" starttime="20201031 01:10:35.026"></status>
</kw>
<status status="PASS" endtime="20201031 01:10:35.029" starttime="20201031 01:10:35.026"></status>
</kw>
<msg timestamp="20201031 01:10:35.029" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-02.txt</msg>
<status status="PASS" endtime="20201031 01:10:35.029" starttime="20201031 01:10:35.025"></status>
</kw>
<msg timestamp="20201031 01:10:35.029" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-02.txt</msg>
<status status="PASS" endtime="20201031 01:10:35.029" starttime="20201031 01:10:35.025"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:10:35.034" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-02.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:11:11.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:11:11.443" level="INFO">${output} = 2020-10-31 01:10:36 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-31 01:10:37 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201031 01:11:11.443" starttime="20201031 01:10:35.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:11:11.444" level="INFO">2020-10-31 01:10:36 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-31 01:10:37 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-31 01:10:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:10:37 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-31 01:10:37 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-31 01:10:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:10:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-91685F3421A4-&gt;cf847096-91b0-4ddb-8db9-7cf63a9d4d3e
2020-10-31 01:10:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 01:10:38 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-31 01:10:38 INFO  JobSubmitter:198 - number of splits:3
2020-10-31 01:10:41 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604106515683_0002
2020-10-31 01:10:41 INFO  YarnClientImpl:273 - Submitted application application_1604106515683_0002
2020-10-31 01:10:41 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604106515683_0002/
2020-10-31 01:10:41 INFO  Job:1339 - Running job: job_1604106515683_0002
2020-10-31 01:10:48 INFO  Job:1360 - Job job_1604106515683_0002 running in uber mode : false
2020-10-31 01:10:48 INFO  Job:1367 -  map 0% reduce 0%
2020-10-31 01:10:55 INFO  Job:1367 -  map 33% reduce 0%
2020-10-31 01:11:00 INFO  Job:1367 -  map 67% reduce 0%
2020-10-31 01:11:05 INFO  Job:1367 -  map 100% reduce 0%
2020-10-31 01:11:09 INFO  Job:1367 -  map 100% reduce 100%
2020-10-31 01:11:10 INFO  Job:1378 - Job job_1604106515683_0002 completed successfully
2020-10-31 01:11:11 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42372
		Total time spent by all reduces in occupied slots (ms)=14708
		Total time spent by all map tasks (ms)=10593
		Total time spent by all reduce tasks (ms)=3677
		Total vcore-milliseconds taken by all map tasks=10593
		Total vcore-milliseconds taken by all reduce tasks=3677
		Total megabyte-milliseconds taken by all map tasks=43388928
		Total megabyte-milliseconds taken by all reduce tasks=15060992
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=709
		CPU time spent (ms)=7700
		Physical memory (bytes) snapshot=1151631360
		Virtual memory (bytes) snapshot=16069734400
		Total committed heap usage (bytes)=1055916032
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201031 01:11:11.444" starttime="20201031 01:11:11.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:11:11.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:11:11.445" starttime="20201031 01:11:11.445"></status>
</kw>
<status status="PASS" endtime="20201031 01:11:11.445" starttime="20201031 01:10:35.030"></status>
</kw>
<msg timestamp="20201031 01:11:11.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:11:11.446" starttime="20201031 01:10:35.030"></status>
</kw>
<msg timestamp="20201031 01:11:11.446" level="INFO">${output} = 2020-10-31 01:10:36 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-10-31 01:10:37 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201031 01:11:11.446" starttime="20201031 01:10:35.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201031 01:11:11.447" starttime="20201031 01:11:11.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 01:11:11.447" starttime="20201031 01:11:11.447"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 01:11:11.447" critical="yes" starttime="20201031 01:10:35.002"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201031 01:11:11.448" starttime="20201031 01:09:55.889"></status>
</suite>
<status status="PASS" elapsedtime="193429" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:13:48.755" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:13:51.141" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 01:13:51.141" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201031 01:13:51.141" starttime="20201031 01:13:48.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:13:51.143" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201031 01:13:51.143" starttime="20201031 01:13:51.142"></status>
</kw>
<msg timestamp="20201031 01:13:51.143" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201031 01:13:51.143" starttime="20201031 01:13:48.749"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:13:51.150" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:13:53.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:13:53.328" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:13:53.328" starttime="20201031 01:13:51.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:13:53.329" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:13:53.329" starttime="20201031 01:13:53.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:13:53.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:13:53.330" starttime="20201031 01:13:53.330"></status>
</kw>
<status status="PASS" endtime="20201031 01:13:53.330" starttime="20201031 01:13:51.145"></status>
</kw>
<msg timestamp="20201031 01:13:53.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:13:53.331" starttime="20201031 01:13:51.145"></status>
</kw>
<msg timestamp="20201031 01:13:53.331" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201031 01:13:53.331" starttime="20201031 01:13:51.144"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201031 01:13:53.331" starttime="20201031 01:13:53.331"></status>
</kw>
<status status="PASS" endtime="20201031 01:13:53.331" starttime="20201031 01:13:51.144"></status>
</kw>
<status status="PASS" endtime="20201031 01:13:53.332" starttime="20201031 01:13:51.143"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:13:53.336" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:13:55.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:13:55.406" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:13:55.406" starttime="20201031 01:13:53.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:13:55.407" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:13:55.407" starttime="20201031 01:13:55.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:13:55.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:13:55.408" starttime="20201031 01:13:55.408"></status>
</kw>
<status status="PASS" endtime="20201031 01:13:55.408" starttime="20201031 01:13:53.333"></status>
</kw>
<msg timestamp="20201031 01:13:55.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:13:55.409" starttime="20201031 01:13:53.333"></status>
</kw>
<status status="PASS" endtime="20201031 01:13:55.409" starttime="20201031 01:13:53.333"></status>
</kw>
<status status="PASS" endtime="20201031 01:13:55.409" starttime="20201031 01:13:53.332"></status>
</kw>
<status status="PASS" endtime="20201031 01:13:55.409" starttime="20201031 01:13:53.332"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201031 01:13:55.409" starttime="20201031 01:13:55.409"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:13:55.413" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:13:57.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:13:57.590" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:13:55.368Z",
  "modificat...</msg>
<status status="PASS" endtime="20201031 01:13:57.590" starttime="20201031 01:13:55.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:13:57.591" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:13:55.368Z",
  "modificationTime" : "2020-10-31T01:13:55.368Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201031 01:13:57.591" starttime="20201031 01:13:57.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:13:57.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:13:57.592" starttime="20201031 01:13:57.592"></status>
</kw>
<status status="PASS" endtime="20201031 01:13:57.592" starttime="20201031 01:13:55.411"></status>
</kw>
<msg timestamp="20201031 01:13:57.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:13:57.593" starttime="20201031 01:13:55.410"></status>
</kw>
<msg timestamp="20201031 01:13:57.593" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:13:55.368Z",
  "modificat...</msg>
<status status="PASS" endtime="20201031 01:13:57.593" starttime="20201031 01:13:55.410"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201031 01:13:57.593" starttime="20201031 01:13:57.593"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:13:57.597" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:13:57.597" starttime="20201031 01:13:57.597"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:13:57.598" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:13:57.598" starttime="20201031 01:13:57.597"></status>
</kw>
<status status="PASS" endtime="20201031 01:13:57.598" starttime="20201031 01:13:57.596"></status>
</kw>
<msg timestamp="20201031 01:13:57.598" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:13:57.598" starttime="20201031 01:13:57.596"></status>
</kw>
<status status="PASS" endtime="20201031 01:13:57.598" starttime="20201031 01:13:57.595"></status>
</kw>
<msg timestamp="20201031 01:13:57.598" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201031 01:13:57.599" starttime="20201031 01:13:57.594"></status>
</kw>
<msg timestamp="20201031 01:13:57.599" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201031 01:13:57.599" starttime="20201031 01:13:57.593"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:13:57.602" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:13:59.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:13:59.876" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:13:59.876" starttime="20201031 01:13:57.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:13:59.877" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:13:59.877" starttime="20201031 01:13:59.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:13:59.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:13:59.878" starttime="20201031 01:13:59.877"></status>
</kw>
<status status="PASS" endtime="20201031 01:13:59.878" starttime="20201031 01:13:57.600"></status>
</kw>
<msg timestamp="20201031 01:13:59.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:13:59.878" starttime="20201031 01:13:57.599"></status>
</kw>
<status status="PASS" endtime="20201031 01:13:59.879" starttime="20201031 01:13:57.599"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:13:59.882" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:14:05.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:14:05.418" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:14:05.418" starttime="20201031 01:13:59.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:14:05.419" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:14:05.419" starttime="20201031 01:14:05.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:14:05.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:14:05.420" starttime="20201031 01:14:05.419"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:05.420" starttime="20201031 01:13:59.880"></status>
</kw>
<msg timestamp="20201031 01:14:05.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:14:05.420" starttime="20201031 01:13:59.880"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:05.420" starttime="20201031 01:13:59.879"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:14:05.425" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:14:09.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:14:09.801" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:14:09.801" starttime="20201031 01:14:05.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:14:09.803" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:14:09.803" starttime="20201031 01:14:09.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:14:09.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:14:09.803" starttime="20201031 01:14:09.803"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:09.804" starttime="20201031 01:14:05.421"></status>
</kw>
<msg timestamp="20201031 01:14:09.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:14:09.804" starttime="20201031 01:14:05.421"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:09.804" starttime="20201031 01:14:05.421"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:14:09.808" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:14:14.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:14:14.036" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:14:14.036" starttime="20201031 01:14:09.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:14:14.037" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:14:14.037" starttime="20201031 01:14:14.036"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:14:14.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:14:14.038" starttime="20201031 01:14:14.037"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:14.038" starttime="20201031 01:14:09.805"></status>
</kw>
<msg timestamp="20201031 01:14:14.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:14:14.038" starttime="20201031 01:14:09.805"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:14.038" starttime="20201031 01:14:09.804"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:14:14.039" critical="yes" starttime="20201031 01:13:48.748"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:14:14.044" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:14:14.044" starttime="20201031 01:14:14.044"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:14:14.045" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:14:14.045" starttime="20201031 01:14:14.045"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:14.045" starttime="20201031 01:14:14.043"></status>
</kw>
<msg timestamp="20201031 01:14:14.045" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:14:14.045" starttime="20201031 01:14:14.043"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:14.046" starttime="20201031 01:14:14.042"></status>
</kw>
<msg timestamp="20201031 01:14:14.046" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201031 01:14:14.046" starttime="20201031 01:14:14.041"></status>
</kw>
<msg timestamp="20201031 01:14:14.046" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201031 01:14:14.046" starttime="20201031 01:14:14.040"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:14:14.049" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:14:16.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:14:16.267" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:14:16.267" starttime="20201031 01:14:14.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:14:16.268" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:14:16.268" starttime="20201031 01:14:16.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:14:16.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:14:16.269" starttime="20201031 01:14:16.268"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:16.269" starttime="20201031 01:14:14.047"></status>
</kw>
<msg timestamp="20201031 01:14:16.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:14:16.269" starttime="20201031 01:14:14.047"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:16.269" starttime="20201031 01:14:14.046"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:14:16.273" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:14:18.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:14:18.563" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:14:18.563" starttime="20201031 01:14:16.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:14:18.564" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:14:18.564" starttime="20201031 01:14:18.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:14:18.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:14:18.565" starttime="20201031 01:14:18.564"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:18.565" starttime="20201031 01:14:16.270"></status>
</kw>
<msg timestamp="20201031 01:14:18.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:14:18.565" starttime="20201031 01:14:16.270"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:18.566" starttime="20201031 01:14:16.269"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:14:18.566" critical="yes" starttime="20201031 01:14:14.039"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201031 01:14:18.567" starttime="20201031 01:13:48.694"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 01:15:59.312" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 01:15:59.312" starttime="20201031 01:15:59.311"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:15:59.312" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 01:15:59.312" starttime="20201031 01:15:59.312"></status>
</kw>
<status status="PASS" endtime="20201031 01:15:59.312" starttime="20201031 01:15:59.311"></status>
</kw>
<msg timestamp="20201031 01:15:59.312" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 01:15:59.312" starttime="20201031 01:15:59.311"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:15:59.313" starttime="20201031 01:15:59.313"></status>
</kw>
<msg timestamp="20201031 01:15:59.313" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201031 01:15:59.313" starttime="20201031 01:15:59.313"></status>
</kw>
<status status="PASS" endtime="20201031 01:15:59.314" starttime="20201031 01:15:59.310"></status>
</kw>
<msg timestamp="20201031 01:15:59.314" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 01:15:59.314" starttime="20201031 01:15:59.309"></status>
</kw>
<msg timestamp="20201031 01:15:59.314" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 01:15:59.314" starttime="20201031 01:15:59.308"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 01:15:59.314" level="INFO">${random} = 04096</msg>
<status status="PASS" endtime="20201031 01:15:59.314" starttime="20201031 01:15:59.314"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:15:59.321" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-04096 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:16:02.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:16:02.865" level="INFO">${output} = 2020-10-31 01:16:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 01:16:02.865" starttime="20201031 01:15:59.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:16:02.866" level="INFO">2020-10-31 01:16:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:01 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-31 01:16:01 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:16:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 01:16:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 01:16:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:16:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-33428A0E9BBB-&gt;695f461c-a326-4abe-8aec-9f46f8943157
2020-10-31 01:16:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 01:16:02 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201031 01:16:02.866" starttime="20201031 01:16:02.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:16:02.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:16:02.867" starttime="20201031 01:16:02.867"></status>
</kw>
<status status="PASS" endtime="20201031 01:16:02.867" starttime="20201031 01:15:59.315"></status>
</kw>
<msg timestamp="20201031 01:16:02.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:16:02.868" starttime="20201031 01:15:59.315"></status>
</kw>
<msg timestamp="20201031 01:16:02.868" level="INFO">${result} = 2020-10-31 01:16:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 01:16:02.868" starttime="20201031 01:15:59.315"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:16:02.872" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:16:04.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:16:04.706" level="INFO">${output} = 2020-10-31 01:16:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 01:16:04.706" starttime="20201031 01:16:02.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:16:04.707" level="INFO">2020-10-31 01:16:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:04 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:13 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-31 01:16 ofs://om/volume1/bucket1/ozone-04096
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-31 01:14 ofs://om/volume1/bucket1/ozone-90187
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:14 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:15 ofs://om/volume1/bucket1/wordcount-82.txt
2020-10-31 01:16:04 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201031 01:16:04.708" starttime="20201031 01:16:04.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:16:04.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:16:04.708" starttime="20201031 01:16:04.708"></status>
</kw>
<status status="PASS" endtime="20201031 01:16:04.708" starttime="20201031 01:16:02.869"></status>
</kw>
<msg timestamp="20201031 01:16:04.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:16:04.709" starttime="20201031 01:16:02.869"></status>
</kw>
<msg timestamp="20201031 01:16:04.709" level="INFO">${result} = 2020-10-31 01:16:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 01:16:04.709" starttime="20201031 01:16:02.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:16:04.709" starttime="20201031 01:16:04.709"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 01:16:04.709" critical="yes" starttime="20201031 01:15:59.307"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201031 01:16:04.710" starttime="20201031 01:15:59.259"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:14:23.382" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:14:23.382" starttime="20201031 01:14:23.381"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:14:23.382" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:14:23.382" starttime="20201031 01:14:23.382"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:23.383" starttime="20201031 01:14:23.381"></status>
</kw>
<msg timestamp="20201031 01:14:23.383" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:14:23.383" starttime="20201031 01:14:23.381"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:23.383" starttime="20201031 01:14:23.380"></status>
</kw>
<msg timestamp="20201031 01:14:23.383" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 01:14:23.383" starttime="20201031 01:14:23.380"></status>
</kw>
<msg timestamp="20201031 01:14:23.383" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 01:14:23.383" starttime="20201031 01:14:23.378"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 01:14:23.384" level="INFO">${random} = 90187</msg>
<status status="PASS" endtime="20201031 01:14:23.384" starttime="20201031 01:14:23.383"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:14:23.389" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-90187 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:14:27.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:14:27.033" level="INFO">${output} = 2020-10-31 01:14:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:25 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 01:14:27.033" starttime="20201031 01:14:23.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:14:27.034" level="INFO">2020-10-31 01:14:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:25 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-31 01:14:25 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:14:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 01:14:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 01:14:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:14:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-22ED4B28B273-&gt;695f461c-a326-4abe-8aec-9f46f8943157
2020-10-31 01:14:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 01:14:26 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201031 01:14:27.034" starttime="20201031 01:14:27.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:14:27.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:14:27.034" starttime="20201031 01:14:27.034"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:27.035" starttime="20201031 01:14:23.384"></status>
</kw>
<msg timestamp="20201031 01:14:27.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:14:27.035" starttime="20201031 01:14:23.384"></status>
</kw>
<msg timestamp="20201031 01:14:27.035" level="INFO">${result} = 2020-10-31 01:14:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:25 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 01:14:27.035" starttime="20201031 01:14:23.384"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:14:27.038" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:14:28.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:14:28.880" level="INFO">${output} = 2020-10-31 01:14:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:28 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 01:14:28.880" starttime="20201031 01:14:27.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:14:28.881" level="INFO">2020-10-31 01:14:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:28 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:13 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-31 01:14 o3fs://bucket1.volume1.om/ozone-90187
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:14 o3fs://bucket1.volume1.om/user
2020-10-31 01:14:28 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201031 01:14:28.881" starttime="20201031 01:14:28.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:14:28.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:14:28.882" starttime="20201031 01:14:28.881"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:28.882" starttime="20201031 01:14:27.036"></status>
</kw>
<msg timestamp="20201031 01:14:28.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:14:28.882" starttime="20201031 01:14:27.036"></status>
</kw>
<msg timestamp="20201031 01:14:28.883" level="INFO">${result} = 2020-10-31 01:14:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:28 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 01:14:28.883" starttime="20201031 01:14:27.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:14:28.883" starttime="20201031 01:14:28.883"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 01:14:28.883" critical="yes" starttime="20201031 01:14:23.376"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201031 01:14:28.884" starttime="20201031 01:14:23.330"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:16:09.467" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:16:09.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:16:09.471" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 01:16:09.471" starttime="20201031 01:16:09.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:16:09.471" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 01:16:09.472" starttime="20201031 01:16:09.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:16:09.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:16:09.472" starttime="20201031 01:16:09.472"></status>
</kw>
<status status="PASS" endtime="20201031 01:16:09.472" starttime="20201031 01:16:09.460"></status>
</kw>
<msg timestamp="20201031 01:16:09.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:16:09.472" starttime="20201031 01:16:09.460"></status>
</kw>
<msg timestamp="20201031 01:16:09.473" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 01:16:09.473" starttime="20201031 01:16:09.460"></status>
</kw>
<msg timestamp="20201031 01:16:09.473" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 01:16:09.473" starttime="20201031 01:16:09.460"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 01:16:09.476" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 01:16:09.476" starttime="20201031 01:16:09.475"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:16:09.476" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 01:16:09.477" starttime="20201031 01:16:09.476"></status>
</kw>
<status status="PASS" endtime="20201031 01:16:09.477" starttime="20201031 01:16:09.475"></status>
</kw>
<msg timestamp="20201031 01:16:09.477" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 01:16:09.477" starttime="20201031 01:16:09.475"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:16:09.478" starttime="20201031 01:16:09.477"></status>
</kw>
<msg timestamp="20201031 01:16:09.478" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201031 01:16:09.478" starttime="20201031 01:16:09.477"></status>
</kw>
<status status="PASS" endtime="20201031 01:16:09.478" starttime="20201031 01:16:09.474"></status>
</kw>
<msg timestamp="20201031 01:16:09.478" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 01:16:09.478" starttime="20201031 01:16:09.474"></status>
</kw>
<msg timestamp="20201031 01:16:09.478" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 01:16:09.478" starttime="20201031 01:16:09.473"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:16:09.481" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:16:48.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:16:48.781" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 01:16:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16...</msg>
<status status="PASS" endtime="20201031 01:16:48.781" starttime="20201031 01:16:09.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:16:48.783" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-31 01:16:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:11 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-31 01:16:11 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:16:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 01:16:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 01:16:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:16:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1651E782FB18-&gt;695f461c-a326-4abe-8aec-9f46f8943157
2020-10-31 01:16:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-31 01:16:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-31 01:16:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-31 01:16:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:13 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-31 01:16:15 INFO  JobSubmitter:202 - number of splits:3
2020-10-31 01:16:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604106808393_0003
2020-10-31 01:16:16 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-31 01:16:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:16 INFO  Configuration:2752 - resource-types.xml not found
2020-10-31 01:16:16 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-31 01:16:16 INFO  YarnClientImpl:324 - Submitted application application_1604106808393_0003
2020-10-31 01:16:16 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604106808393_0003/
2020-10-31 01:16:16 INFO  Job:1619 - Running job: job_1604106808393_0003
2020-10-31 01:16:24 INFO  Job:1640 - Job job_1604106808393_0003 running in uber mode : false
2020-10-31 01:16:24 INFO  Job:1647 -  map 0% reduce 0%
2020-10-31 01:16:30 INFO  Job:1647 -  map 33% reduce 0%
2020-10-31 01:16:36 INFO  Job:1647 -  map 67% reduce 0%
2020-10-31 01:16:43 INFO  Job:1647 -  map 100% reduce 0%
2020-10-31 01:16:48 INFO  Job:1647 -  map 100% reduce 100%
2020-10-31 01:16:48 INFO  Job:1658 - Job job_1604106808393_0003 completed successfully
2020-10-31 01:16:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:48 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021317
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41292
		Total time spent by all reduces in occupied slots (ms)=15640
		Total time spent by all map tasks (ms)=10323
		Total time spent by all reduce tasks (ms)=3910
		Total vcore-milliseconds taken by all map tasks=10323
		Total vcore-milliseconds taken by all reduce tasks=3910
		Total megabyte-milliseconds taken by all map tasks=42283008
		Total megabyte-milliseconds taken by all reduce tasks=16015360
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=651
		CPU time spent (ms)=6900
		Physical memory (bytes) snapshot=1169772544
		Virtual memory (bytes) snapshot=16062398464
		Total committed heap usage (bytes)=1065353216
		Peak Map Physical memory (bytes)=297086976
		Peak Map Virtual memory (bytes)=4014030848
		Peak Reduce Physical memory (bytes)=301441024
		Peak Reduce Virtual memory (bytes)=4035993600
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.499 seconds
2020-10-31 01:16:48 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-31 01:16:48 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201031 01:16:48.783" starttime="20201031 01:16:48.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:16:48.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:16:48.784" starttime="20201031 01:16:48.783"></status>
</kw>
<status status="PASS" endtime="20201031 01:16:48.784" starttime="20201031 01:16:09.479"></status>
</kw>
<msg timestamp="20201031 01:16:48.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:16:48.784" starttime="20201031 01:16:09.479"></status>
</kw>
<msg timestamp="20201031 01:16:48.784" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 01:16:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16...</msg>
<status status="PASS" endtime="20201031 01:16:48.784" starttime="20201031 01:16:09.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 01:16:48.785" starttime="20201031 01:16:48.785"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 01:16:48.785" critical="yes" starttime="20201031 01:16:09.459"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:16:48.792" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:16:48.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:16:48.798" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 01:16:48.798" starttime="20201031 01:16:48.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:16:48.799" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 01:16:48.799" starttime="20201031 01:16:48.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:16:48.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:16:48.799" starttime="20201031 01:16:48.799"></status>
</kw>
<status status="PASS" endtime="20201031 01:16:48.800" starttime="20201031 01:16:48.788"></status>
</kw>
<msg timestamp="20201031 01:16:48.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:16:48.800" starttime="20201031 01:16:48.787"></status>
</kw>
<msg timestamp="20201031 01:16:48.800" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 01:16:48.800" starttime="20201031 01:16:48.787"></status>
</kw>
<msg timestamp="20201031 01:16:48.800" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 01:16:48.800" starttime="20201031 01:16:48.787"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 01:16:48.801" level="INFO">${random} = 85</msg>
<status status="PASS" endtime="20201031 01:16:48.801" starttime="20201031 01:16:48.800"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 01:16:48.804" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 01:16:48.804" starttime="20201031 01:16:48.804"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:16:48.805" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 01:16:48.805" starttime="20201031 01:16:48.804"></status>
</kw>
<status status="PASS" endtime="20201031 01:16:48.805" starttime="20201031 01:16:48.803"></status>
</kw>
<msg timestamp="20201031 01:16:48.805" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 01:16:48.805" starttime="20201031 01:16:48.803"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:16:48.806" starttime="20201031 01:16:48.806"></status>
</kw>
<msg timestamp="20201031 01:16:48.806" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201031 01:16:48.806" starttime="20201031 01:16:48.805"></status>
</kw>
<status status="PASS" endtime="20201031 01:16:48.806" starttime="20201031 01:16:48.802"></status>
</kw>
<msg timestamp="20201031 01:16:48.806" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 01:16:48.806" starttime="20201031 01:16:48.802"></status>
</kw>
<msg timestamp="20201031 01:16:48.807" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 01:16:48.807" starttime="20201031 01:16:48.801"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 01:16:48.810" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 01:16:48.810" starttime="20201031 01:16:48.809"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:16:48.810" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 01:16:48.810" starttime="20201031 01:16:48.810"></status>
</kw>
<status status="PASS" endtime="20201031 01:16:48.810" starttime="20201031 01:16:48.809"></status>
</kw>
<msg timestamp="20201031 01:16:48.810" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 01:16:48.810" starttime="20201031 01:16:48.808"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:16:48.812" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201031 01:16:48.812" starttime="20201031 01:16:48.811"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:16:48.812" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201031 01:16:48.812" starttime="20201031 01:16:48.812"></status>
</kw>
<status status="PASS" endtime="20201031 01:16:48.812" starttime="20201031 01:16:48.811"></status>
</kw>
<msg timestamp="20201031 01:16:48.812" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201031 01:16:48.812" starttime="20201031 01:16:48.810"></status>
</kw>
<status status="PASS" endtime="20201031 01:16:48.813" starttime="20201031 01:16:48.808"></status>
</kw>
<msg timestamp="20201031 01:16:48.813" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201031 01:16:48.813" starttime="20201031 01:16:48.807"></status>
</kw>
<msg timestamp="20201031 01:16:48.813" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201031 01:16:48.813" starttime="20201031 01:16:48.807"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 01:16:48.816" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 01:16:48.816" starttime="20201031 01:16:48.815"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:16:48.816" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 01:16:48.816" starttime="20201031 01:16:48.816"></status>
</kw>
<status status="PASS" endtime="20201031 01:16:48.816" starttime="20201031 01:16:48.815"></status>
</kw>
<msg timestamp="20201031 01:16:48.816" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 01:16:48.816" starttime="20201031 01:16:48.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:16:48.818" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201031 01:16:48.818" starttime="20201031 01:16:48.817"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:16:48.818" level="INFO">${result} = /wordcount-85.txt</msg>
<status status="PASS" endtime="20201031 01:16:48.818" starttime="20201031 01:16:48.818"></status>
</kw>
<status status="PASS" endtime="20201031 01:16:48.818" starttime="20201031 01:16:48.817"></status>
</kw>
<msg timestamp="20201031 01:16:48.818" level="INFO">${path_with_leading} = /wordcount-85.txt</msg>
<status status="PASS" endtime="20201031 01:16:48.818" starttime="20201031 01:16:48.816"></status>
</kw>
<status status="PASS" endtime="20201031 01:16:48.819" starttime="20201031 01:16:48.814"></status>
</kw>
<msg timestamp="20201031 01:16:48.819" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-85.txt</msg>
<status status="PASS" endtime="20201031 01:16:48.819" starttime="20201031 01:16:48.813"></status>
</kw>
<msg timestamp="20201031 01:16:48.819" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-85.txt</msg>
<status status="PASS" endtime="20201031 01:16:48.819" starttime="20201031 01:16:48.813"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:16:48.823" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-85.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:17:27.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:17:27.279" level="INFO">${output} = 2020-10-31 01:16:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:50 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 01:17:27.279" starttime="20201031 01:16:48.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:17:27.280" level="INFO">2020-10-31 01:16:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-31 01:16:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-31 01:16:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:51 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-31 01:16:51 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:16:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 01:16:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 01:16:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:16:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BA97EE79A169-&gt;695f461c-a326-4abe-8aec-9f46f8943157
2020-10-31 01:16:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 01:16:52 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-31 01:16:52 INFO  JobSubmitter:202 - number of splits:3
2020-10-31 01:16:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604106808393_0004
2020-10-31 01:16:52 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-31 01:16:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:53 INFO  Configuration:2752 - resource-types.xml not found
2020-10-31 01:16:53 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-31 01:16:53 INFO  YarnClientImpl:324 - Submitted application application_1604106808393_0004
2020-10-31 01:16:53 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604106808393_0004/
2020-10-31 01:16:53 INFO  Job:1619 - Running job: job_1604106808393_0004
2020-10-31 01:17:01 INFO  Job:1640 - Job job_1604106808393_0004 running in uber mode : false
2020-10-31 01:17:01 INFO  Job:1647 -  map 0% reduce 0%
2020-10-31 01:17:08 INFO  Job:1647 -  map 33% reduce 0%
2020-10-31 01:17:14 INFO  Job:1647 -  map 67% reduce 0%
2020-10-31 01:17:20 INFO  Job:1647 -  map 100% reduce 0%
2020-10-31 01:17:25 INFO  Job:1647 -  map 100% reduce 100%
2020-10-31 01:17:26 INFO  Job:1658 - Job job_1604106808393_0004 completed successfully
2020-10-31 01:17:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:17:26 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41952
		Total time spent by all reduces in occupied slots (ms)=15368
		Total time spent by all map tasks (ms)=10488
		Total time spent by all reduce tasks (ms)=3842
		Total vcore-milliseconds taken by all map tasks=10488
		Total vcore-milliseconds taken by all reduce tasks=3842
		Total megabyte-milliseconds taken by all map tasks=42958848
		Total megabyte-milliseconds taken by all reduce tasks=15736832
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=660
		CPU time spent (ms)=7470
		Physical memory (bytes) snapshot=1164931072
		Virtual memory (bytes) snapshot=16075976704
		Total committed heap usage (bytes)=1146093568
		Peak Map Physical memory (bytes)=292978688
		Peak Map Virtual memory (bytes)=4022501376
		Peak Reduce Physical memory (bytes)=290861056
		Peak Reduce Virtual memory (bytes)=4030922752
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-31 01:17:26 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201031 01:17:27.280" starttime="20201031 01:17:27.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:17:27.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:17:27.281" starttime="20201031 01:17:27.280"></status>
</kw>
<status status="PASS" endtime="20201031 01:17:27.281" starttime="20201031 01:16:48.820"></status>
</kw>
<msg timestamp="20201031 01:17:27.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:17:27.281" starttime="20201031 01:16:48.819"></status>
</kw>
<msg timestamp="20201031 01:17:27.282" level="INFO">${output} = 2020-10-31 01:16:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:16:50 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 01:17:27.282" starttime="20201031 01:16:48.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201031 01:17:27.283" starttime="20201031 01:17:27.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 01:17:27.283" starttime="20201031 01:17:27.283"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 01:17:27.284" critical="yes" starttime="20201031 01:16:48.786"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201031 01:17:27.284" starttime="20201031 01:16:09.413"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:14:33.631" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:14:33.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:14:33.638" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 01:14:33.638" starttime="20201031 01:14:33.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:14:33.639" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 01:14:33.639" starttime="20201031 01:14:33.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:14:33.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:14:33.640" starttime="20201031 01:14:33.639"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:33.640" starttime="20201031 01:14:33.626"></status>
</kw>
<msg timestamp="20201031 01:14:33.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:14:33.640" starttime="20201031 01:14:33.626"></status>
</kw>
<msg timestamp="20201031 01:14:33.641" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 01:14:33.641" starttime="20201031 01:14:33.626"></status>
</kw>
<msg timestamp="20201031 01:14:33.641" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 01:14:33.641" starttime="20201031 01:14:33.625"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:14:33.644" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:14:33.644" starttime="20201031 01:14:33.643"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:14:33.645" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:14:33.645" starttime="20201031 01:14:33.644"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:33.645" starttime="20201031 01:14:33.643"></status>
</kw>
<msg timestamp="20201031 01:14:33.645" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:14:33.645" starttime="20201031 01:14:33.643"></status>
</kw>
<status status="PASS" endtime="20201031 01:14:33.645" starttime="20201031 01:14:33.642"></status>
</kw>
<msg timestamp="20201031 01:14:33.645" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 01:14:33.645" starttime="20201031 01:14:33.642"></status>
</kw>
<msg timestamp="20201031 01:14:33.645" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 01:14:33.645" starttime="20201031 01:14:33.641"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:14:33.648" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:15:15.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:15:15.869" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 01:14:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14...</msg>
<status status="PASS" endtime="20201031 01:15:15.869" starttime="20201031 01:14:33.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:15:15.870" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-31 01:14:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:35 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-31 01:14:35 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:14:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 01:14:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 01:14:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:14:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F1F1DD767CAA-&gt;695f461c-a326-4abe-8aec-9f46f8943157
2020-10-31 01:14:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-31 01:14:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:37 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-31 01:14:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:37 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-31 01:14:37 INFO  JobSubmitter:202 - number of splits:3
2020-10-31 01:14:38 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604106808393_0001
2020-10-31 01:14:38 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-31 01:14:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:38 INFO  Configuration:2752 - resource-types.xml not found
2020-10-31 01:14:38 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-31 01:14:38 INFO  YarnClientImpl:324 - Submitted application application_1604106808393_0001
2020-10-31 01:14:38 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604106808393_0001/
2020-10-31 01:14:38 INFO  Job:1619 - Running job: job_1604106808393_0001
2020-10-31 01:14:49 INFO  Job:1640 - Job job_1604106808393_0001 running in uber mode : false
2020-10-31 01:14:49 INFO  Job:1647 -  map 0% reduce 0%
2020-10-31 01:14:57 INFO  Job:1647 -  map 33% reduce 0%
2020-10-31 01:15:02 INFO  Job:1647 -  map 67% reduce 0%
2020-10-31 01:15:07 INFO  Job:1647 -  map 100% reduce 0%
2020-10-31 01:15:12 INFO  Job:1647 -  map 100% reduce 100%
2020-10-31 01:15:15 INFO  Job:1658 - Job job_1604106808393_0001 completed successfully
2020-10-31 01:15:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:15 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40472
		Total time spent by all reduces in occupied slots (ms)=14876
		Total time spent by all map tasks (ms)=10118
		Total time spent by all reduce tasks (ms)=3719
		Total vcore-milliseconds taken by all map tasks=10118
		Total vcore-milliseconds taken by all reduce tasks=3719
		Total megabyte-milliseconds taken by all map tasks=41443328
		Total megabyte-milliseconds taken by all reduce tasks=15233024
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=619
		CPU time spent (ms)=6810
		Physical memory (bytes) snapshot=1150365696
		Virtual memory (bytes) snapshot=16056365056
		Total committed heap usage (bytes)=1059586048
		Peak Map Physical memory (bytes)=293761024
		Peak Map Virtual memory (bytes)=4013617152
		Peak Reduce Physical memory (bytes)=273141760
		Peak Reduce Virtual memory (bytes)=4017344512
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.192 seconds
2020-10-31 01:15:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:15 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-31 01:15:15 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201031 01:15:15.871" starttime="20201031 01:15:15.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:15:15.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:15:15.871" starttime="20201031 01:15:15.871"></status>
</kw>
<status status="PASS" endtime="20201031 01:15:15.872" starttime="20201031 01:14:33.646"></status>
</kw>
<msg timestamp="20201031 01:15:15.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:15:15.872" starttime="20201031 01:14:33.646"></status>
</kw>
<msg timestamp="20201031 01:15:15.872" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 01:14:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:14...</msg>
<status status="PASS" endtime="20201031 01:15:15.872" starttime="20201031 01:14:33.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 01:15:15.873" starttime="20201031 01:15:15.872"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 01:15:15.873" critical="yes" starttime="20201031 01:14:33.625"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:15:15.877" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:15:15.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:15:15.884" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 01:15:15.884" starttime="20201031 01:15:15.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:15:15.885" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 01:15:15.885" starttime="20201031 01:15:15.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:15:15.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:15:15.886" starttime="20201031 01:15:15.885"></status>
</kw>
<status status="PASS" endtime="20201031 01:15:15.886" starttime="20201031 01:15:15.875"></status>
</kw>
<msg timestamp="20201031 01:15:15.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:15:15.886" starttime="20201031 01:15:15.875"></status>
</kw>
<msg timestamp="20201031 01:15:15.886" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 01:15:15.886" starttime="20201031 01:15:15.874"></status>
</kw>
<msg timestamp="20201031 01:15:15.887" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201031 01:15:15.887" starttime="20201031 01:15:15.874"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 01:15:15.887" level="INFO">${random} = 82</msg>
<status status="PASS" endtime="20201031 01:15:15.887" starttime="20201031 01:15:15.887"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:15:15.890" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:15:15.890" starttime="20201031 01:15:15.890"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:15:15.891" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:15:15.891" starttime="20201031 01:15:15.891"></status>
</kw>
<status status="PASS" endtime="20201031 01:15:15.891" starttime="20201031 01:15:15.890"></status>
</kw>
<msg timestamp="20201031 01:15:15.891" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:15:15.891" starttime="20201031 01:15:15.889"></status>
</kw>
<status status="PASS" endtime="20201031 01:15:15.891" starttime="20201031 01:15:15.888"></status>
</kw>
<msg timestamp="20201031 01:15:15.892" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 01:15:15.892" starttime="20201031 01:15:15.888"></status>
</kw>
<msg timestamp="20201031 01:15:15.892" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 01:15:15.892" starttime="20201031 01:15:15.887"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:15:15.894" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:15:15.894" starttime="20201031 01:15:15.894"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:15:15.895" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:15:15.895" starttime="20201031 01:15:15.895"></status>
</kw>
<status status="PASS" endtime="20201031 01:15:15.895" starttime="20201031 01:15:15.894"></status>
</kw>
<msg timestamp="20201031 01:15:15.895" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:15:15.895" starttime="20201031 01:15:15.893"></status>
</kw>
<status status="PASS" endtime="20201031 01:15:15.895" starttime="20201031 01:15:15.893"></status>
</kw>
<msg timestamp="20201031 01:15:15.895" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201031 01:15:15.895" starttime="20201031 01:15:15.892"></status>
</kw>
<msg timestamp="20201031 01:15:15.896" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201031 01:15:15.896" starttime="20201031 01:15:15.892"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:15:15.898" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:15:15.898" starttime="20201031 01:15:15.898"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:15:15.899" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:15:15.899" starttime="20201031 01:15:15.898"></status>
</kw>
<status status="PASS" endtime="20201031 01:15:15.899" starttime="20201031 01:15:15.897"></status>
</kw>
<msg timestamp="20201031 01:15:15.899" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:15:15.899" starttime="20201031 01:15:15.897"></status>
</kw>
<status status="PASS" endtime="20201031 01:15:15.899" starttime="20201031 01:15:15.896"></status>
</kw>
<msg timestamp="20201031 01:15:15.899" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-82.txt</msg>
<status status="PASS" endtime="20201031 01:15:15.899" starttime="20201031 01:15:15.896"></status>
</kw>
<msg timestamp="20201031 01:15:15.899" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-82.txt</msg>
<status status="PASS" endtime="20201031 01:15:15.899" starttime="20201031 01:15:15.896"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:15:15.903" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-82.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:15:54.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:15:54.519" level="INFO">${output} = 2020-10-31 01:15:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:17 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 01:15:54.520" starttime="20201031 01:15:15.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:15:54.521" level="INFO">2020-10-31 01:15:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-31 01:15:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:17 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-31 01:15:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:18 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-31 01:15:18 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-31 01:15:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 01:15:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 01:15:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:15:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1A7772FAAE41-&gt;695f461c-a326-4abe-8aec-9f46f8943157
2020-10-31 01:15:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 01:15:21 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-31 01:15:22 INFO  JobSubmitter:202 - number of splits:3
2020-10-31 01:15:22 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604106808393_0002
2020-10-31 01:15:22 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-31 01:15:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:22 INFO  Configuration:2752 - resource-types.xml not found
2020-10-31 01:15:22 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-31 01:15:22 INFO  YarnClientImpl:324 - Submitted application application_1604106808393_0002
2020-10-31 01:15:22 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604106808393_0002/
2020-10-31 01:15:22 INFO  Job:1619 - Running job: job_1604106808393_0002
2020-10-31 01:15:30 INFO  Job:1640 - Job job_1604106808393_0002 running in uber mode : false
2020-10-31 01:15:30 INFO  Job:1647 -  map 0% reduce 0%
2020-10-31 01:15:37 INFO  Job:1647 -  map 33% reduce 0%
2020-10-31 01:15:42 INFO  Job:1647 -  map 67% reduce 0%
2020-10-31 01:15:48 INFO  Job:1647 -  map 100% reduce 0%
2020-10-31 01:15:53 INFO  Job:1647 -  map 100% reduce 100%
2020-10-31 01:15:54 INFO  Job:1658 - Job job_1604106808393_0002 completed successfully
2020-10-31 01:15:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:54 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41920
		Total time spent by all reduces in occupied slots (ms)=14604
		Total time spent by all map tasks (ms)=10480
		Total time spent by all reduce tasks (ms)=3651
		Total vcore-milliseconds taken by all map tasks=10480
		Total vcore-milliseconds taken by all reduce tasks=3651
		Total megabyte-milliseconds taken by all map tasks=42926080
		Total megabyte-milliseconds taken by all reduce tasks=14954496
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=646
		CPU time spent (ms)=6910
		Physical memory (bytes) snapshot=1157640192
		Virtual memory (bytes) snapshot=16060547072
		Total committed heap usage (bytes)=1151336448
		Peak Map Physical memory (bytes)=295403520
		Peak Map Virtual memory (bytes)=4014628864
		Peak Reduce Physical memory (bytes)=295714816
		Peak Reduce Virtual memory (bytes)=4035293184
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-31 01:15:54 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201031 01:15:54.521" starttime="20201031 01:15:54.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:15:54.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:15:54.522" starttime="20201031 01:15:54.521"></status>
</kw>
<status status="PASS" endtime="20201031 01:15:54.522" starttime="20201031 01:15:15.900"></status>
</kw>
<msg timestamp="20201031 01:15:54.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:15:54.522" starttime="20201031 01:15:15.900"></status>
</kw>
<msg timestamp="20201031 01:15:54.523" level="INFO">${output} = 2020-10-31 01:15:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-31 01:15:17 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201031 01:15:54.523" starttime="20201031 01:15:15.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201031 01:15:54.523" starttime="20201031 01:15:54.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 01:15:54.524" starttime="20201031 01:15:54.524"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 01:15:54.524" critical="yes" starttime="20201031 01:15:15.873"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201031 01:15:54.525" starttime="20201031 01:14:33.578"></status>
</suite>
<status status="PASS" elapsedtime="199696" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:18:35.429" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:18:39.767" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 01:18:39.767" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201031 01:18:39.767" starttime="20201031 01:18:35.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:18:39.768" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201031 01:18:39.768" starttime="20201031 01:18:39.767"></status>
</kw>
<msg timestamp="20201031 01:18:39.768" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201031 01:18:39.768" starttime="20201031 01:18:35.419"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:18:39.774" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:18:44.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:18:44.292" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:18:44.292" starttime="20201031 01:18:39.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:18:44.293" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:18:44.293" starttime="20201031 01:18:44.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:18:44.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:18:44.294" starttime="20201031 01:18:44.293"></status>
</kw>
<status status="PASS" endtime="20201031 01:18:44.294" starttime="20201031 01:18:39.770"></status>
</kw>
<msg timestamp="20201031 01:18:44.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:18:44.295" starttime="20201031 01:18:39.770"></status>
</kw>
<msg timestamp="20201031 01:18:44.295" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201031 01:18:44.295" starttime="20201031 01:18:39.769"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201031 01:18:44.295" starttime="20201031 01:18:44.295"></status>
</kw>
<status status="PASS" endtime="20201031 01:18:44.296" starttime="20201031 01:18:39.769"></status>
</kw>
<status status="PASS" endtime="20201031 01:18:44.296" starttime="20201031 01:18:39.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:18:44.301" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:18:47.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:18:47.381" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:18:47.381" starttime="20201031 01:18:44.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:18:47.382" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:18:47.382" starttime="20201031 01:18:47.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:18:47.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:18:47.383" starttime="20201031 01:18:47.382"></status>
</kw>
<status status="PASS" endtime="20201031 01:18:47.383" starttime="20201031 01:18:44.297"></status>
</kw>
<msg timestamp="20201031 01:18:47.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:18:47.383" starttime="20201031 01:18:44.297"></status>
</kw>
<status status="PASS" endtime="20201031 01:18:47.383" starttime="20201031 01:18:44.297"></status>
</kw>
<status status="PASS" endtime="20201031 01:18:47.384" starttime="20201031 01:18:44.296"></status>
</kw>
<status status="PASS" endtime="20201031 01:18:47.384" starttime="20201031 01:18:44.296"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201031 01:18:47.384" starttime="20201031 01:18:47.384"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:18:47.388" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:18:51.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:18:51.083" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:18:47.247Z",
  "modificat...</msg>
<status status="PASS" endtime="20201031 01:18:51.083" starttime="20201031 01:18:47.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:18:51.085" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:18:47.247Z",
  "modificationTime" : "2020-10-31T01:18:47.247Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201031 01:18:51.085" starttime="20201031 01:18:51.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:18:51.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:18:51.085" starttime="20201031 01:18:51.085"></status>
</kw>
<status status="PASS" endtime="20201031 01:18:51.086" starttime="20201031 01:18:47.385"></status>
</kw>
<msg timestamp="20201031 01:18:51.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:18:51.086" starttime="20201031 01:18:47.385"></status>
</kw>
<msg timestamp="20201031 01:18:51.086" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:18:47.247Z",
  "modificat...</msg>
<status status="PASS" endtime="20201031 01:18:51.086" starttime="20201031 01:18:47.384"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201031 01:18:51.087" starttime="20201031 01:18:51.086"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:18:51.091" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:18:51.091" starttime="20201031 01:18:51.091"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:18:51.092" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:18:51.092" starttime="20201031 01:18:51.091"></status>
</kw>
<status status="PASS" endtime="20201031 01:18:51.092" starttime="20201031 01:18:51.090"></status>
</kw>
<msg timestamp="20201031 01:18:51.092" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:18:51.092" starttime="20201031 01:18:51.089"></status>
</kw>
<status status="PASS" endtime="20201031 01:18:51.092" starttime="20201031 01:18:51.088"></status>
</kw>
<msg timestamp="20201031 01:18:51.093" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201031 01:18:51.093" starttime="20201031 01:18:51.087"></status>
</kw>
<msg timestamp="20201031 01:18:51.093" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201031 01:18:51.093" starttime="20201031 01:18:51.087"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:18:51.096" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:18:54.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:18:54.492" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:18:54.492" starttime="20201031 01:18:51.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:18:54.493" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:18:54.493" starttime="20201031 01:18:54.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:18:54.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:18:54.494" starttime="20201031 01:18:54.493"></status>
</kw>
<status status="PASS" endtime="20201031 01:18:54.494" starttime="20201031 01:18:51.094"></status>
</kw>
<msg timestamp="20201031 01:18:54.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:18:54.495" starttime="20201031 01:18:51.093"></status>
</kw>
<status status="PASS" endtime="20201031 01:18:54.495" starttime="20201031 01:18:51.093"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:18:54.500" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:19:02.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:19:02.365" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:19:02.365" starttime="20201031 01:18:54.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:19:02.366" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:19:02.366" starttime="20201031 01:19:02.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:19:02.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:19:02.367" starttime="20201031 01:19:02.367"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:02.367" starttime="20201031 01:18:54.497"></status>
</kw>
<msg timestamp="20201031 01:19:02.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:19:02.368" starttime="20201031 01:18:54.497"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:02.368" starttime="20201031 01:18:54.495"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:19:02.373" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:19:08.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:19:08.435" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:19:08.435" starttime="20201031 01:19:02.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:19:08.436" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:19:08.436" starttime="20201031 01:19:08.435"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:19:08.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:19:08.437" starttime="20201031 01:19:08.437"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:08.437" starttime="20201031 01:19:02.369"></status>
</kw>
<msg timestamp="20201031 01:19:08.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:19:08.438" starttime="20201031 01:19:02.369"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:08.438" starttime="20201031 01:19:02.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:19:08.442" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:19:13.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:19:13.901" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:19:13.901" starttime="20201031 01:19:08.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:19:13.902" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:19:13.902" starttime="20201031 01:19:13.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:19:13.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:19:13.903" starttime="20201031 01:19:13.903"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:13.903" starttime="20201031 01:19:08.439"></status>
</kw>
<msg timestamp="20201031 01:19:13.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:19:13.904" starttime="20201031 01:19:08.439"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:13.904" starttime="20201031 01:19:08.438"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:19:13.904" critical="yes" starttime="20201031 01:18:35.418"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:19:13.910" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:19:13.910" starttime="20201031 01:19:13.909"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:19:13.910" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:19:13.910" starttime="20201031 01:19:13.910"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:13.910" starttime="20201031 01:19:13.908"></status>
</kw>
<msg timestamp="20201031 01:19:13.911" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:19:13.911" starttime="20201031 01:19:13.908"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:13.911" starttime="20201031 01:19:13.907"></status>
</kw>
<msg timestamp="20201031 01:19:13.911" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201031 01:19:13.911" starttime="20201031 01:19:13.907"></status>
</kw>
<msg timestamp="20201031 01:19:13.911" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201031 01:19:13.911" starttime="20201031 01:19:13.906"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:19:13.915" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:19:17.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:19:17.109" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:19:17.109" starttime="20201031 01:19:13.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:19:17.111" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:19:17.111" starttime="20201031 01:19:17.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:19:17.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:19:17.111" starttime="20201031 01:19:17.111"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:17.112" starttime="20201031 01:19:13.912"></status>
</kw>
<msg timestamp="20201031 01:19:17.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:19:17.112" starttime="20201031 01:19:13.912"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:17.112" starttime="20201031 01:19:13.911"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:19:17.116" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:19:20.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:19:20.377" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:19:20.377" starttime="20201031 01:19:17.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:19:20.378" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:19:20.378" starttime="20201031 01:19:20.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:19:20.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:19:20.379" starttime="20201031 01:19:20.379"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:20.379" starttime="20201031 01:19:17.113"></status>
</kw>
<msg timestamp="20201031 01:19:20.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:19:20.380" starttime="20201031 01:19:17.113"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:20.380" starttime="20201031 01:19:17.112"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:19:20.380" critical="yes" starttime="20201031 01:19:13.905"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201031 01:19:20.381" starttime="20201031 01:18:35.359"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 01:21:06.378" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 01:21:06.378" starttime="20201031 01:21:06.377"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:21:06.378" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 01:21:06.379" starttime="20201031 01:21:06.378"></status>
</kw>
<status status="PASS" endtime="20201031 01:21:06.379" starttime="20201031 01:21:06.377"></status>
</kw>
<msg timestamp="20201031 01:21:06.379" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 01:21:06.379" starttime="20201031 01:21:06.377"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:21:06.380" starttime="20201031 01:21:06.379"></status>
</kw>
<msg timestamp="20201031 01:21:06.380" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201031 01:21:06.380" starttime="20201031 01:21:06.379"></status>
</kw>
<status status="PASS" endtime="20201031 01:21:06.380" starttime="20201031 01:21:06.376"></status>
</kw>
<msg timestamp="20201031 01:21:06.380" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 01:21:06.380" starttime="20201031 01:21:06.376"></status>
</kw>
<msg timestamp="20201031 01:21:06.380" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 01:21:06.380" starttime="20201031 01:21:06.374"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 01:21:06.381" level="INFO">${random} = 39370</msg>
<status status="PASS" endtime="20201031 01:21:06.381" starttime="20201031 01:21:06.380"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:21:06.386" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-39370 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:21:10.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:21:10.086" level="INFO">${output} = 2020-10-31 01:21:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 01:21:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201031 01:21:10.086" starttime="20201031 01:21:06.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:21:10.087" level="INFO">2020-10-31 01:21:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 01:21:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 01:21:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 01:21:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:21:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-85941C6BA24B-&gt;63245f66-3480-44c5-acbc-198836837146
2020-10-31 01:21:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201031 01:21:10.087" starttime="20201031 01:21:10.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:21:10.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:21:10.088" starttime="20201031 01:21:10.087"></status>
</kw>
<status status="PASS" endtime="20201031 01:21:10.088" starttime="20201031 01:21:06.382"></status>
</kw>
<msg timestamp="20201031 01:21:10.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:21:10.088" starttime="20201031 01:21:06.381"></status>
</kw>
<msg timestamp="20201031 01:21:10.088" level="INFO">${result} = 2020-10-31 01:21:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 01:21:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201031 01:21:10.088" starttime="20201031 01:21:06.381"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:21:10.092" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:21:11.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:21:11.927" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-31 01:21 ofs://om/volume1/bucket1/ozone-39370
-rw-...</msg>
<status status="PASS" endtime="20201031 01:21:11.927" starttime="20201031 01:21:10.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:21:11.928" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-31 01:21 ofs://om/volume1/bucket1/ozone-39370
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-31 01:19 ofs://om/volume1/bucket1/ozone-76162
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:19 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:20 ofs://om/volume1/bucket1/wordcount-36.txt</msg>
<status status="PASS" endtime="20201031 01:21:11.929" starttime="20201031 01:21:11.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:21:11.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:21:11.929" starttime="20201031 01:21:11.929"></status>
</kw>
<status status="PASS" endtime="20201031 01:21:11.929" starttime="20201031 01:21:10.089"></status>
</kw>
<msg timestamp="20201031 01:21:11.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:21:11.930" starttime="20201031 01:21:10.089"></status>
</kw>
<msg timestamp="20201031 01:21:11.930" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-31 01:21 ofs://om/volume1/bucket1/ozone-39370
-rw-...</msg>
<status status="PASS" endtime="20201031 01:21:11.930" starttime="20201031 01:21:10.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:21:11.930" starttime="20201031 01:21:11.930"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 01:21:11.931" critical="yes" starttime="20201031 01:21:06.374"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201031 01:21:11.932" starttime="20201031 01:21:06.325"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:19:25.184" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:19:25.184" starttime="20201031 01:19:25.183"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:19:25.184" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:19:25.184" starttime="20201031 01:19:25.184"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:25.184" starttime="20201031 01:19:25.183"></status>
</kw>
<msg timestamp="20201031 01:19:25.184" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:19:25.184" starttime="20201031 01:19:25.182"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:25.185" starttime="20201031 01:19:25.182"></status>
</kw>
<msg timestamp="20201031 01:19:25.185" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 01:19:25.185" starttime="20201031 01:19:25.181"></status>
</kw>
<msg timestamp="20201031 01:19:25.185" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 01:19:25.185" starttime="20201031 01:19:25.180"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 01:19:25.185" level="INFO">${random} = 76162</msg>
<status status="PASS" endtime="20201031 01:19:25.186" starttime="20201031 01:19:25.185"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:19:25.191" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-76162 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:19:28.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:19:28.985" level="INFO">${output} = 2020-10-31 01:19:27 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 01:19:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201031 01:19:28.985" starttime="20201031 01:19:25.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:19:28.986" level="INFO">2020-10-31 01:19:27 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 01:19:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 01:19:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 01:19:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:19:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6AF3BBEB8217-&gt;63245f66-3480-44c5-acbc-198836837146
2020-10-31 01:19:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201031 01:19:28.986" starttime="20201031 01:19:28.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:19:28.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:19:28.988" starttime="20201031 01:19:28.986"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:28.988" starttime="20201031 01:19:25.186"></status>
</kw>
<msg timestamp="20201031 01:19:28.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:19:28.988" starttime="20201031 01:19:25.186"></status>
</kw>
<msg timestamp="20201031 01:19:28.989" level="INFO">${result} = 2020-10-31 01:19:27 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 01:19:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201031 01:19:28.989" starttime="20201031 01:19:25.186"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:19:28.992" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:19:30.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:19:30.891" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-31 01:19 o3fs://bucket1.volume1.om/ozone-76162
dr...</msg>
<status status="PASS" endtime="20201031 01:19:30.891" starttime="20201031 01:19:28.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:19:30.892" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-31 01:19 o3fs://bucket1.volume1.om/ozone-76162
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:19 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201031 01:19:30.892" starttime="20201031 01:19:30.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:19:30.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:19:30.893" starttime="20201031 01:19:30.893"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:30.893" starttime="20201031 01:19:28.990"></status>
</kw>
<msg timestamp="20201031 01:19:30.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:19:30.894" starttime="20201031 01:19:28.989"></status>
</kw>
<msg timestamp="20201031 01:19:30.894" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-31 01:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-31 01:19 o3fs://bucket1.volume1.om/ozone-76162
dr...</msg>
<status status="PASS" endtime="20201031 01:19:30.894" starttime="20201031 01:19:28.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:19:30.894" starttime="20201031 01:19:30.894"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 01:19:30.894" critical="yes" starttime="20201031 01:19:25.179"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201031 01:19:30.895" starttime="20201031 01:19:25.133"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:21:16.879" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:21:16.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:21:16.885" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 01:21:16.885" starttime="20201031 01:21:16.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:21:16.886" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 01:21:16.887" starttime="20201031 01:21:16.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:21:16.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:21:16.887" starttime="20201031 01:21:16.887"></status>
</kw>
<status status="PASS" endtime="20201031 01:21:16.887" starttime="20201031 01:21:16.874"></status>
</kw>
<msg timestamp="20201031 01:21:16.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:21:16.888" starttime="20201031 01:21:16.874"></status>
</kw>
<msg timestamp="20201031 01:21:16.888" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 01:21:16.888" starttime="20201031 01:21:16.874"></status>
</kw>
<msg timestamp="20201031 01:21:16.888" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 01:21:16.888" starttime="20201031 01:21:16.873"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 01:21:16.891" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 01:21:16.891" starttime="20201031 01:21:16.890"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:21:16.892" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 01:21:16.892" starttime="20201031 01:21:16.891"></status>
</kw>
<status status="PASS" endtime="20201031 01:21:16.892" starttime="20201031 01:21:16.890"></status>
</kw>
<msg timestamp="20201031 01:21:16.892" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 01:21:16.892" starttime="20201031 01:21:16.890"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:21:16.893" starttime="20201031 01:21:16.892"></status>
</kw>
<msg timestamp="20201031 01:21:16.893" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201031 01:21:16.893" starttime="20201031 01:21:16.892"></status>
</kw>
<status status="PASS" endtime="20201031 01:21:16.893" starttime="20201031 01:21:16.889"></status>
</kw>
<msg timestamp="20201031 01:21:16.893" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 01:21:16.893" starttime="20201031 01:21:16.889"></status>
</kw>
<msg timestamp="20201031 01:21:16.893" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 01:21:16.893" starttime="20201031 01:21:16.888"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:21:16.898" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:22:00.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:22:00.343" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 01:21:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 01:21:19 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201031 01:22:00.343" starttime="20201031 01:21:16.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:22:00.344" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-31 01:21:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 01:21:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 01:21:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 01:21:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:21:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-831CDF68C797-&gt;63245f66-3480-44c5-acbc-198836837146
2020-10-31 01:21:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-31 01:21:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-10-31 01:21:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-31 01:21:23 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-31 01:21:23 INFO  JobSubmitter:202 - number of splits:3
2020-10-31 01:21:23 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604107091645_0003
2020-10-31 01:21:23 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-31 01:21:24 INFO  Configuration:2795 - resource-types.xml not found
2020-10-31 01:21:24 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-31 01:21:24 INFO  YarnClientImpl:329 - Submitted application application_1604107091645_0003
2020-10-31 01:21:24 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604107091645_0003/
2020-10-31 01:21:24 INFO  Job:1619 - Running job: job_1604107091645_0003
2020-10-31 01:21:32 INFO  Job:1640 - Job job_1604107091645_0003 running in uber mode : false
2020-10-31 01:21:32 INFO  Job:1647 -  map 0% reduce 0%
2020-10-31 01:21:39 INFO  Job:1647 -  map 33% reduce 0%
2020-10-31 01:21:45 INFO  Job:1647 -  map 67% reduce 0%
2020-10-31 01:21:51 INFO  Job:1647 -  map 100% reduce 0%
2020-10-31 01:21:56 INFO  Job:1647 -  map 100% reduce 100%
2020-10-31 01:21:59 INFO  Job:1658 - Job job_1604107091645_0003 completed successfully
2020-10-31 01:21:59 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061445
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41732
		Total time spent by all reduces in occupied slots (ms)=15160
		Total time spent by all map tasks (ms)=10433
		Total time spent by all reduce tasks (ms)=3790
		Total vcore-milliseconds taken by all map tasks=10433
		Total vcore-milliseconds taken by all reduce tasks=3790
		Total megabyte-milliseconds taken by all map tasks=42733568
		Total megabyte-milliseconds taken by all reduce tasks=15523840
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=646
		CPU time spent (ms)=7490
		Physical memory (bytes) snapshot=1466478592
		Virtual memory (bytes) snapshot=16074051584
		Total committed heap usage (bytes)=1685585920
		Peak Map Physical memory (bytes)=371929088
		Peak Map Virtual memory (bytes)=4017717248
		Peak Reduce Physical memory (bytes)=375308288
		Peak Reduce Virtual memory (bytes)=4037517312
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.397 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201031 01:22:00.344" starttime="20201031 01:22:00.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:22:00.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:22:00.345" starttime="20201031 01:22:00.344"></status>
</kw>
<status status="PASS" endtime="20201031 01:22:00.345" starttime="20201031 01:21:16.894"></status>
</kw>
<msg timestamp="20201031 01:22:00.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:22:00.345" starttime="20201031 01:21:16.894"></status>
</kw>
<msg timestamp="20201031 01:22:00.346" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 01:21:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 01:21:19 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201031 01:22:00.346" starttime="20201031 01:21:16.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 01:22:00.346" starttime="20201031 01:22:00.346"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 01:22:00.346" critical="yes" starttime="20201031 01:21:16.873"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:22:00.351" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:22:00.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:22:00.356" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 01:22:00.356" starttime="20201031 01:22:00.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:22:00.357" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 01:22:00.357" starttime="20201031 01:22:00.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:22:00.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:22:00.358" starttime="20201031 01:22:00.357"></status>
</kw>
<status status="PASS" endtime="20201031 01:22:00.358" starttime="20201031 01:22:00.348"></status>
</kw>
<msg timestamp="20201031 01:22:00.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:22:00.358" starttime="20201031 01:22:00.348"></status>
</kw>
<msg timestamp="20201031 01:22:00.358" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 01:22:00.358" starttime="20201031 01:22:00.348"></status>
</kw>
<msg timestamp="20201031 01:22:00.359" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 01:22:00.359" starttime="20201031 01:22:00.347"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 01:22:00.359" level="INFO">${random} = 06</msg>
<status status="PASS" endtime="20201031 01:22:00.359" starttime="20201031 01:22:00.359"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 01:22:00.362" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 01:22:00.362" starttime="20201031 01:22:00.362"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:22:00.363" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 01:22:00.363" starttime="20201031 01:22:00.362"></status>
</kw>
<status status="PASS" endtime="20201031 01:22:00.363" starttime="20201031 01:22:00.362"></status>
</kw>
<msg timestamp="20201031 01:22:00.363" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 01:22:00.363" starttime="20201031 01:22:00.361"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:22:00.364" starttime="20201031 01:22:00.364"></status>
</kw>
<msg timestamp="20201031 01:22:00.364" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201031 01:22:00.364" starttime="20201031 01:22:00.363"></status>
</kw>
<status status="PASS" endtime="20201031 01:22:00.365" starttime="20201031 01:22:00.360"></status>
</kw>
<msg timestamp="20201031 01:22:00.365" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 01:22:00.365" starttime="20201031 01:22:00.360"></status>
</kw>
<msg timestamp="20201031 01:22:00.365" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201031 01:22:00.365" starttime="20201031 01:22:00.359"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 01:22:00.368" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 01:22:00.368" starttime="20201031 01:22:00.368"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:22:00.369" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 01:22:00.369" starttime="20201031 01:22:00.368"></status>
</kw>
<status status="PASS" endtime="20201031 01:22:00.369" starttime="20201031 01:22:00.367"></status>
</kw>
<msg timestamp="20201031 01:22:00.369" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 01:22:00.369" starttime="20201031 01:22:00.367"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:22:00.370" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201031 01:22:00.370" starttime="20201031 01:22:00.370"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:22:00.371" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201031 01:22:00.371" starttime="20201031 01:22:00.371"></status>
</kw>
<status status="PASS" endtime="20201031 01:22:00.371" starttime="20201031 01:22:00.369"></status>
</kw>
<msg timestamp="20201031 01:22:00.371" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201031 01:22:00.371" starttime="20201031 01:22:00.369"></status>
</kw>
<status status="PASS" endtime="20201031 01:22:00.372" starttime="20201031 01:22:00.366"></status>
</kw>
<msg timestamp="20201031 01:22:00.372" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201031 01:22:00.372" starttime="20201031 01:22:00.366"></status>
</kw>
<msg timestamp="20201031 01:22:00.372" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201031 01:22:00.372" starttime="20201031 01:22:00.365"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201031 01:22:00.375" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201031 01:22:00.375" starttime="20201031 01:22:00.374"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:22:00.375" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201031 01:22:00.375" starttime="20201031 01:22:00.375"></status>
</kw>
<status status="PASS" endtime="20201031 01:22:00.375" starttime="20201031 01:22:00.374"></status>
</kw>
<msg timestamp="20201031 01:22:00.376" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201031 01:22:00.376" starttime="20201031 01:22:00.373"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:22:00.377" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201031 01:22:00.377" starttime="20201031 01:22:00.376"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:22:00.377" level="INFO">${result} = /wordcount-06.txt</msg>
<status status="PASS" endtime="20201031 01:22:00.377" starttime="20201031 01:22:00.377"></status>
</kw>
<status status="PASS" endtime="20201031 01:22:00.378" starttime="20201031 01:22:00.376"></status>
</kw>
<msg timestamp="20201031 01:22:00.378" level="INFO">${path_with_leading} = /wordcount-06.txt</msg>
<status status="PASS" endtime="20201031 01:22:00.378" starttime="20201031 01:22:00.376"></status>
</kw>
<status status="PASS" endtime="20201031 01:22:00.378" starttime="20201031 01:22:00.373"></status>
</kw>
<msg timestamp="20201031 01:22:00.378" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-06.txt</msg>
<status status="PASS" endtime="20201031 01:22:00.378" starttime="20201031 01:22:00.372"></status>
</kw>
<msg timestamp="20201031 01:22:00.378" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-06.txt</msg>
<status status="PASS" endtime="20201031 01:22:00.378" starttime="20201031 01:22:00.372"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:22:00.381" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-06.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:22:39.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:22:39.735" level="INFO">${output} = 2020-10-31 01:22:02 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-10-31 01:22:02 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201031 01:22:39.735" starttime="20201031 01:22:00.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:22:39.736" level="INFO">2020-10-31 01:22:02 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-10-31 01:22:02 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-31 01:22:02 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 01:22:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 01:22:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 01:22:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:22:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7329D44D990E-&gt;63245f66-3480-44c5-acbc-198836837146
2020-10-31 01:22:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 01:22:04 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-31 01:22:04 INFO  JobSubmitter:202 - number of splits:3
2020-10-31 01:22:04 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604107091645_0004
2020-10-31 01:22:04 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-31 01:22:04 INFO  Configuration:2795 - resource-types.xml not found
2020-10-31 01:22:04 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-31 01:22:04 INFO  YarnClientImpl:329 - Submitted application application_1604107091645_0004
2020-10-31 01:22:04 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604107091645_0004/
2020-10-31 01:22:04 INFO  Job:1619 - Running job: job_1604107091645_0004
2020-10-31 01:22:13 INFO  Job:1640 - Job job_1604107091645_0004 running in uber mode : false
2020-10-31 01:22:13 INFO  Job:1647 -  map 0% reduce 0%
2020-10-31 01:22:19 INFO  Job:1647 -  map 33% reduce 0%
2020-10-31 01:22:25 INFO  Job:1647 -  map 67% reduce 0%
2020-10-31 01:22:31 INFO  Job:1647 -  map 100% reduce 0%
2020-10-31 01:22:36 INFO  Job:1647 -  map 100% reduce 100%
2020-10-31 01:22:39 INFO  Job:1658 - Job job_1604107091645_0004 completed successfully
2020-10-31 01:22:39 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42720
		Total time spent by all reduces in occupied slots (ms)=15372
		Total time spent by all map tasks (ms)=10680
		Total time spent by all reduce tasks (ms)=3843
		Total vcore-milliseconds taken by all map tasks=10680
		Total vcore-milliseconds taken by all reduce tasks=3843
		Total megabyte-milliseconds taken by all map tasks=43745280
		Total megabyte-milliseconds taken by all reduce tasks=15740928
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=713
		CPU time spent (ms)=7980
		Physical memory (bytes) snapshot=1448968192
		Virtual memory (bytes) snapshot=16065028096
		Total committed heap usage (bytes)=1685061632
		Peak Map Physical memory (bytes)=373403648
		Peak Map Virtual memory (bytes)=4017754112
		Peak Reduce Physical memory (bytes)=375128064
		Peak Reduce Virtual memory (bytes)=4036378624
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201031 01:22:39.737" starttime="20201031 01:22:39.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:22:39.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:22:39.737" starttime="20201031 01:22:39.737"></status>
</kw>
<status status="PASS" endtime="20201031 01:22:39.737" starttime="20201031 01:22:00.379"></status>
</kw>
<msg timestamp="20201031 01:22:39.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:22:39.738" starttime="20201031 01:22:00.379"></status>
</kw>
<msg timestamp="20201031 01:22:39.738" level="INFO">${output} = 2020-10-31 01:22:02 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-10-31 01:22:02 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201031 01:22:39.738" starttime="20201031 01:22:00.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201031 01:22:39.739" starttime="20201031 01:22:39.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 01:22:39.739" starttime="20201031 01:22:39.739"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 01:22:39.739" critical="yes" starttime="20201031 01:22:00.347"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201031 01:22:39.740" starttime="20201031 01:21:16.826"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:19:35.706" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:19:35.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:19:35.712" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 01:19:35.712" starttime="20201031 01:19:35.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:19:35.713" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 01:19:35.713" starttime="20201031 01:19:35.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:19:35.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:19:35.713" starttime="20201031 01:19:35.713"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:35.713" starttime="20201031 01:19:35.702"></status>
</kw>
<msg timestamp="20201031 01:19:35.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:19:35.714" starttime="20201031 01:19:35.702"></status>
</kw>
<msg timestamp="20201031 01:19:35.714" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 01:19:35.714" starttime="20201031 01:19:35.702"></status>
</kw>
<msg timestamp="20201031 01:19:35.714" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 01:19:35.714" starttime="20201031 01:19:35.701"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:19:35.717" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:19:35.717" starttime="20201031 01:19:35.717"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:19:35.718" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:19:35.718" starttime="20201031 01:19:35.717"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:35.718" starttime="20201031 01:19:35.716"></status>
</kw>
<msg timestamp="20201031 01:19:35.718" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:19:35.718" starttime="20201031 01:19:35.716"></status>
</kw>
<status status="PASS" endtime="20201031 01:19:35.718" starttime="20201031 01:19:35.715"></status>
</kw>
<msg timestamp="20201031 01:19:35.718" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 01:19:35.718" starttime="20201031 01:19:35.715"></status>
</kw>
<msg timestamp="20201031 01:19:35.718" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 01:19:35.718" starttime="20201031 01:19:35.714"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:19:35.723" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:20:23.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:20:23.596" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 01:19:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 01:19:37 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201031 01:20:23.596" starttime="20201031 01:19:35.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:20:23.597" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-31 01:19:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 01:19:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 01:19:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 01:19:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:19:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5441BF2E6938-&gt;63245f66-3480-44c5-acbc-198836837146
2020-10-31 01:19:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-31 01:19:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-10-31 01:19:39 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-31 01:19:42 INFO  JobSubmitter:202 - number of splits:3
2020-10-31 01:19:42 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604107091645_0001
2020-10-31 01:19:42 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-31 01:19:42 INFO  Configuration:2795 - resource-types.xml not found
2020-10-31 01:19:42 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-31 01:19:43 INFO  YarnClientImpl:329 - Submitted application application_1604107091645_0001
2020-10-31 01:19:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604107091645_0001/
2020-10-31 01:19:43 INFO  Job:1619 - Running job: job_1604107091645_0001
2020-10-31 01:19:53 INFO  Job:1640 - Job job_1604107091645_0001 running in uber mode : false
2020-10-31 01:19:53 INFO  Job:1647 -  map 0% reduce 0%
2020-10-31 01:20:00 INFO  Job:1647 -  map 33% reduce 0%
2020-10-31 01:20:05 INFO  Job:1647 -  map 67% reduce 0%
2020-10-31 01:20:11 INFO  Job:1647 -  map 100% reduce 0%
2020-10-31 01:20:18 INFO  Job:1647 -  map 100% reduce 100%
2020-10-31 01:20:22 INFO  Job:1658 - Job job_1604107091645_0001 completed successfully
2020-10-31 01:20:22 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42064
		Total time spent by all reduces in occupied slots (ms)=25904
		Total time spent by all map tasks (ms)=10516
		Total time spent by all reduce tasks (ms)=6476
		Total vcore-milliseconds taken by all map tasks=10516
		Total vcore-milliseconds taken by all reduce tasks=6476
		Total megabyte-milliseconds taken by all map tasks=43073536
		Total megabyte-milliseconds taken by all reduce tasks=26525696
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=668
		CPU time spent (ms)=7450
		Physical memory (bytes) snapshot=1462042624
		Virtual memory (bytes) snapshot=16072577024
		Total committed heap usage (bytes)=1679294464
		Peak Map Physical memory (bytes)=369164288
		Peak Map Virtual memory (bytes)=4016730112
		Peak Reduce Physical memory (bytes)=376279040
		Peak Reduce Virtual memory (bytes)=4035682304
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 43.894 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201031 01:20:23.597" starttime="20201031 01:20:23.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:20:23.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:20:23.598" starttime="20201031 01:20:23.597"></status>
</kw>
<status status="PASS" endtime="20201031 01:20:23.598" starttime="20201031 01:19:35.719"></status>
</kw>
<msg timestamp="20201031 01:20:23.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:20:23.599" starttime="20201031 01:19:35.719"></status>
</kw>
<msg timestamp="20201031 01:20:23.599" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-31 01:19:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 01:19:37 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201031 01:20:23.599" starttime="20201031 01:19:35.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 01:20:23.600" starttime="20201031 01:20:23.599"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 01:20:23.600" critical="yes" starttime="20201031 01:19:35.701"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:20:23.605" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:20:23.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:20:23.612" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 01:20:23.612" starttime="20201031 01:20:23.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:20:23.613" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 01:20:23.613" starttime="20201031 01:20:23.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:20:23.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:20:23.613" starttime="20201031 01:20:23.613"></status>
</kw>
<status status="PASS" endtime="20201031 01:20:23.614" starttime="20201031 01:20:23.603"></status>
</kw>
<msg timestamp="20201031 01:20:23.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:20:23.614" starttime="20201031 01:20:23.602"></status>
</kw>
<msg timestamp="20201031 01:20:23.614" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 01:20:23.614" starttime="20201031 01:20:23.602"></status>
</kw>
<msg timestamp="20201031 01:20:23.614" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201031 01:20:23.614" starttime="20201031 01:20:23.602"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 01:20:23.615" level="INFO">${random} = 36</msg>
<status status="PASS" endtime="20201031 01:20:23.615" starttime="20201031 01:20:23.614"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:20:23.618" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:20:23.618" starttime="20201031 01:20:23.618"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:20:23.619" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:20:23.619" starttime="20201031 01:20:23.618"></status>
</kw>
<status status="PASS" endtime="20201031 01:20:23.619" starttime="20201031 01:20:23.617"></status>
</kw>
<msg timestamp="20201031 01:20:23.619" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:20:23.619" starttime="20201031 01:20:23.617"></status>
</kw>
<status status="PASS" endtime="20201031 01:20:23.619" starttime="20201031 01:20:23.616"></status>
</kw>
<msg timestamp="20201031 01:20:23.619" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 01:20:23.619" starttime="20201031 01:20:23.616"></status>
</kw>
<msg timestamp="20201031 01:20:23.619" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201031 01:20:23.619" starttime="20201031 01:20:23.615"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:20:23.622" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:20:23.622" starttime="20201031 01:20:23.622"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:20:23.623" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:20:23.623" starttime="20201031 01:20:23.622"></status>
</kw>
<status status="PASS" endtime="20201031 01:20:23.623" starttime="20201031 01:20:23.622"></status>
</kw>
<msg timestamp="20201031 01:20:23.623" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:20:23.623" starttime="20201031 01:20:23.621"></status>
</kw>
<status status="PASS" endtime="20201031 01:20:23.623" starttime="20201031 01:20:23.621"></status>
</kw>
<msg timestamp="20201031 01:20:23.623" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201031 01:20:23.623" starttime="20201031 01:20:23.620"></status>
</kw>
<msg timestamp="20201031 01:20:23.624" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201031 01:20:23.624" starttime="20201031 01:20:23.620"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201031 01:20:23.626" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201031 01:20:23.626" starttime="20201031 01:20:23.626"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:20:23.627" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201031 01:20:23.627" starttime="20201031 01:20:23.627"></status>
</kw>
<status status="PASS" endtime="20201031 01:20:23.627" starttime="20201031 01:20:23.626"></status>
</kw>
<msg timestamp="20201031 01:20:23.627" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201031 01:20:23.627" starttime="20201031 01:20:23.625"></status>
</kw>
<status status="PASS" endtime="20201031 01:20:23.627" starttime="20201031 01:20:23.625"></status>
</kw>
<msg timestamp="20201031 01:20:23.628" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-36.txt</msg>
<status status="PASS" endtime="20201031 01:20:23.628" starttime="20201031 01:20:23.624"></status>
</kw>
<msg timestamp="20201031 01:20:23.628" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-36.txt</msg>
<status status="PASS" endtime="20201031 01:20:23.628" starttime="20201031 01:20:23.624"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:20:23.633" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-36.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:21:01.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:21:01.481" level="INFO">${output} = 2020-10-31 01:20:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-10-31 01:20:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201031 01:21:01.481" starttime="20201031 01:20:23.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:21:01.482" level="INFO">2020-10-31 01:20:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-10-31 01:20:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-31 01:20:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-31 01:20:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-31 01:20:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-31 01:20:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:20:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BA74F300CB43-&gt;63245f66-3480-44c5-acbc-198836837146
2020-10-31 01:20:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 01:20:27 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-31 01:20:27 INFO  JobSubmitter:202 - number of splits:3
2020-10-31 01:20:30 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604107091645_0002
2020-10-31 01:20:30 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-31 01:20:30 INFO  Configuration:2795 - resource-types.xml not found
2020-10-31 01:20:30 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-31 01:20:30 INFO  YarnClientImpl:329 - Submitted application application_1604107091645_0002
2020-10-31 01:20:30 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604107091645_0002/
2020-10-31 01:20:30 INFO  Job:1619 - Running job: job_1604107091645_0002
2020-10-31 01:20:38 INFO  Job:1640 - Job job_1604107091645_0002 running in uber mode : false
2020-10-31 01:20:38 INFO  Job:1647 -  map 0% reduce 0%
2020-10-31 01:20:44 INFO  Job:1647 -  map 33% reduce 0%
2020-10-31 01:20:50 INFO  Job:1647 -  map 67% reduce 0%
2020-10-31 01:20:55 INFO  Job:1647 -  map 100% reduce 0%
2020-10-31 01:20:59 INFO  Job:1647 -  map 100% reduce 100%
2020-10-31 01:21:00 INFO  Job:1658 - Job job_1604107091645_0002 completed successfully
2020-10-31 01:21:01 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124185
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41240
		Total time spent by all reduces in occupied slots (ms)=15608
		Total time spent by all map tasks (ms)=10310
		Total time spent by all reduce tasks (ms)=3902
		Total vcore-milliseconds taken by all map tasks=10310
		Total vcore-milliseconds taken by all reduce tasks=3902
		Total megabyte-milliseconds taken by all map tasks=42229760
		Total megabyte-milliseconds taken by all reduce tasks=15982592
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=689
		CPU time spent (ms)=7690
		Physical memory (bytes) snapshot=1464107008
		Virtual memory (bytes) snapshot=16080994304
		Total committed heap usage (bytes)=1669332992
		Peak Map Physical memory (bytes)=369139712
		Peak Map Virtual memory (bytes)=4018933760
		Peak Reduce Physical memory (bytes)=369012736
		Peak Reduce Virtual memory (bytes)=4036255744
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201031 01:21:01.483" starttime="20201031 01:21:01.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:21:01.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:21:01.483" starttime="20201031 01:21:01.483"></status>
</kw>
<status status="PASS" endtime="20201031 01:21:01.484" starttime="20201031 01:20:23.629"></status>
</kw>
<msg timestamp="20201031 01:21:01.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:21:01.484" starttime="20201031 01:20:23.628"></status>
</kw>
<msg timestamp="20201031 01:21:01.484" level="INFO">${output} = 2020-10-31 01:20:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-10-31 01:20:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201031 01:21:01.484" starttime="20201031 01:20:23.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201031 01:21:01.485" starttime="20201031 01:21:01.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201031 01:21:01.485" starttime="20201031 01:21:01.485"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201031 01:21:01.486" critical="yes" starttime="20201031 01:20:23.601"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201031 01:21:01.487" starttime="20201031 01:19:35.655"></status>
</suite>
<status status="PASS" elapsedtime="225137" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="618262" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
