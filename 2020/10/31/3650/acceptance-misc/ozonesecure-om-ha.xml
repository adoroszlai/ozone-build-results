<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201031 01:54:34.474" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:50:20.635" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:50:32.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:50:32.422" level="INFO">${output} = 2020-10-31 01:50:22,582 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 01:50:22,894 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 01:50:32.422" starttime="20201031 01:50:20.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:50:32.423" level="INFO">2020-10-31 01:50:22,582 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 01:50:22,894 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-31 01:50:22,895 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-31 01:50:25,131 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-10-31 01:50:26,330 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-31 01:50:26,331 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-10-31 01:50:26,331 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-10-31 01:50:26,331 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-10-31 01:50:26,331 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-31 01:50:26,331 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-31 01:50:26,331 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-10-31 01:50:26,335 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-31 01:50:26,347 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 01:50:26,381 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-30041, with testuser/scm@EXAMPLE.COM as owner.
2020-10-31 01:50:26,912 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-30041/bucket-0-95715, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-31 01:50:27,351 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 01:50:28,358 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 01:50:29,363 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 01:50:29,944 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-31 01:50:30,363 [Thread-9] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,504
Average Time spent in bucket creation: 00:00:00,199
Average Time spent in key creation: 00:00:01,298
Average Time spent in key write: 00:00:01,884
Total bytes written: 10240
Total Execution time: 00:00:08,980
***************************************************</msg>
<status status="PASS" endtime="20201031 01:50:32.423" starttime="20201031 01:50:32.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:50:32.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:50:32.424" starttime="20201031 01:50:32.423"></status>
</kw>
<status status="PASS" endtime="20201031 01:50:32.424" starttime="20201031 01:50:20.629"></status>
</kw>
<msg timestamp="20201031 01:50:32.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:50:32.425" starttime="20201031 01:50:20.629"></status>
</kw>
<msg timestamp="20201031 01:50:32.425" level="INFO">${result} = 2020-10-31 01:50:22,582 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 01:50:22,894 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 01:50:32.425" starttime="20201031 01:50:20.628"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:50:32.426" starttime="20201031 01:50:32.426"></status>
</kw>
<status status="PASS" endtime="20201031 01:50:32.426" starttime="20201031 01:50:32.425"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 01:50:32.427" critical="yes" starttime="20201031 01:50:20.628"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:50:32.432" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:50:41.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:50:41.135" level="INFO">${output} = 2020-10-31 01:50:34,216 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 01:50:34,406 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 01:50:41.135" starttime="20201031 01:50:32.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:50:41.138" level="INFO">2020-10-31 01:50:34,216 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 01:50:34,406 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-31 01:50:34,406 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-31 01:50:34,571 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 6halkrto4u
2020-10-31 01:50:34,590 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-31 01:50:35,601 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 01:50:35,675 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-10-31 01:50:36,177 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-10-31 01:50:36,270 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-31 01:50:36,602 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 01:50:36,880 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-31 01:50:37,285 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 01:50:37,286 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-FD327BFF3976-&gt;3b35827a-658a-40f5-a124-ed712bbe8308
2020-10-31 01:50:37,290 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 01:50:37,604 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 01:50:38,605 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 01:50:39,606 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 01:50:40,607 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-31 01:50:40,768 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3331.674453, max=3331.674453, mean=3331.674453, stddev=0.0, median=3331.674453, p75=3331.674453, p95=3331.674453, p98=3331.674453, p99=3331.674453, p999=3331.674453, mean_rate=0.22550851760859006, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-31 01:50:40,768 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-10-31 01:50:40,771 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-31 01:50:40,771 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201031 01:50:41.138" starttime="20201031 01:50:41.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:50:41.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:50:41.138" starttime="20201031 01:50:41.138"></status>
</kw>
<status status="PASS" endtime="20201031 01:50:41.139" starttime="20201031 01:50:32.429"></status>
</kw>
<msg timestamp="20201031 01:50:41.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:50:41.139" starttime="20201031 01:50:32.429"></status>
</kw>
<msg timestamp="20201031 01:50:41.139" level="INFO">${result} = 2020-10-31 01:50:34,216 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 01:50:34,406 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 01:50:41.139" starttime="20201031 01:50:32.428"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:50:41.140" starttime="20201031 01:50:41.140"></status>
</kw>
<status status="PASS" endtime="20201031 01:50:41.140" starttime="20201031 01:50:41.139"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 01:50:41.140" critical="yes" starttime="20201031 01:50:32.427"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:50:41.146" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:50:46.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:50:46.375" level="INFO">${output} = 2020-10-31 01:50:42,858 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 01:50:43,022 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 01:50:46.375" starttime="20201031 01:50:41.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:50:46.376" level="INFO">2020-10-31 01:50:42,858 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 01:50:43,022 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-31 01:50:43,022 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-31 01:50:43,184 [main] INFO freon.BaseFreonGenerator: Executing test with prefix q7ybpzn7kw
2020-10-31 01:50:43,201 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-31 01:50:44,205 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 01:50:44,414 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-10-31 01:50:45,037 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-10-31 01:50:45,206 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 01:50:46,209 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-31 01:50:46,334 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=401.531966, max=401.531966, mean=401.531966, stddev=0.0, median=401.531966, p75=401.531966, p95=401.531966, p98=401.531966, p99=401.531966, p999=401.531966, mean_rate=0.6974915340535196, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-31 01:50:46,337 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-31 01:50:46,338 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-31 01:50:46,338 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201031 01:50:46.376" starttime="20201031 01:50:46.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:50:46.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:50:46.377" starttime="20201031 01:50:46.376"></status>
</kw>
<status status="PASS" endtime="20201031 01:50:46.377" starttime="20201031 01:50:41.143"></status>
</kw>
<msg timestamp="20201031 01:50:46.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:50:46.377" starttime="20201031 01:50:41.143"></status>
</kw>
<msg timestamp="20201031 01:50:46.378" level="INFO">${result} = 2020-10-31 01:50:42,858 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 01:50:43,022 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 01:50:46.378" starttime="20201031 01:50:41.142"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:50:46.379" starttime="20201031 01:50:46.378"></status>
</kw>
<status status="PASS" endtime="20201031 01:50:46.379" starttime="20201031 01:50:46.378"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 01:50:46.379" critical="yes" starttime="20201031 01:50:41.141"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:50:46.384" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:50:51.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:50:51.263" level="INFO">${output} = 2020-10-31 01:50:48,151 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 01:50:48,298 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 01:50:51.263" starttime="20201031 01:50:46.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:50:51.265" level="INFO">2020-10-31 01:50:48,151 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 01:50:48,298 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-31 01:50:48,298 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-31 01:50:48,489 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qcwub90cf1
2020-10-31 01:50:48,511 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-31 01:50:49,520 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 01:50:49,626 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-10-31 01:50:50,190 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-10-31 01:50:50,521 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-31 01:50:51,219 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=163.157404, max=163.157404, mean=163.157404, stddev=0.0, median=163.157404, p75=163.157404, p95=163.157404, p98=163.157404, p99=163.157404, p999=163.157404, mean_rate=0.882630425644851, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-31 01:50:51,234 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-31 01:50:51,238 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-31 01:50:51,238 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201031 01:50:51.265" starttime="20201031 01:50:51.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:50:51.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:50:51.267" starttime="20201031 01:50:51.265"></status>
</kw>
<status status="PASS" endtime="20201031 01:50:51.267" starttime="20201031 01:50:46.382"></status>
</kw>
<msg timestamp="20201031 01:50:51.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:50:51.268" starttime="20201031 01:50:46.381"></status>
</kw>
<msg timestamp="20201031 01:50:51.268" level="INFO">${result} = 2020-10-31 01:50:48,151 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 01:50:48,298 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 01:50:51.268" starttime="20201031 01:50:46.381"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:50:51.269" starttime="20201031 01:50:51.269"></status>
</kw>
<status status="PASS" endtime="20201031 01:50:51.269" starttime="20201031 01:50:51.268"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 01:50:51.270" critical="yes" starttime="20201031 01:50:46.380"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201031 01:50:51.273" starttime="20201031 01:50:20.602"></status>
</suite>
<status status="PASS" endtime="20201031 01:50:51.277" starttime="20201031 01:50:20.576"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:50:13.451" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:50:13.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:50:13.457" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:50:13.457" starttime="20201031 01:50:13.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:50:13.458" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:50:13.458" starttime="20201031 01:50:13.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:50:13.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:50:13.461" starttime="20201031 01:50:13.458"></status>
</kw>
<status status="PASS" endtime="20201031 01:50:13.461" starttime="20201031 01:50:13.444"></status>
</kw>
<msg timestamp="20201031 01:50:13.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:50:13.461" starttime="20201031 01:50:13.444"></status>
</kw>
<msg timestamp="20201031 01:50:13.461" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:50:13.461" starttime="20201031 01:50:13.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:50:13.462" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:50:13.462" starttime="20201031 01:50:13.461"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:50:13.479" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:50:13.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:50:13.520" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:50:13.520" starttime="20201031 01:50:13.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:50:13.521" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:50:13.521" starttime="20201031 01:50:13.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:50:13.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:50:13.522" starttime="20201031 01:50:13.521"></status>
</kw>
<status status="PASS" endtime="20201031 01:50:13.522" starttime="20201031 01:50:13.472"></status>
</kw>
<msg timestamp="20201031 01:50:13.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:50:13.522" starttime="20201031 01:50:13.471"></status>
</kw>
<status status="PASS" endtime="20201031 01:50:13.523" starttime="20201031 01:50:13.471"></status>
</kw>
<status status="PASS" endtime="20201031 01:50:13.523" starttime="20201031 01:50:13.462"></status>
</kw>
<status status="PASS" endtime="20201031 01:50:13.523" starttime="20201031 01:50:13.438"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:50:13.523" critical="yes" starttime="20201031 01:50:13.435"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201031 01:50:13.528" starttime="20201031 01:50:13.325"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 01:50:57.061" level="INFO">${random} = 36796</msg>
<status status="PASS" endtime="20201031 01:50:57.061" starttime="20201031 01:50:57.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201031 01:50:57.063" level="INFO">${source} = 36796-source</msg>
<status status="PASS" endtime="20201031 01:50:57.063" starttime="20201031 01:50:57.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201031 01:50:57.064" level="INFO">${target} = 36796-target</msg>
<status status="PASS" endtime="20201031 01:50:57.064" starttime="20201031 01:50:57.063"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:50:57.069" level="INFO">Running command 'ozone sh volume create 36796-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:00.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:00.463" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:51:00.463" starttime="20201031 01:50:57.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:00.465" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:51:00.465" starttime="20201031 01:51:00.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:00.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:00.465" starttime="20201031 01:51:00.465"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:00.466" starttime="20201031 01:50:57.065"></status>
</kw>
<msg timestamp="20201031 01:51:00.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:00.466" starttime="20201031 01:50:57.064"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:00.466" starttime="20201031 01:50:57.064"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:00.471" level="INFO">Running command 'ozone sh volume create 36796-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:05.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:05.053" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:51:05.053" starttime="20201031 01:51:00.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:05.054" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:51:05.054" starttime="20201031 01:51:05.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:05.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:05.055" starttime="20201031 01:51:05.054"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:05.055" starttime="20201031 01:51:00.467"></status>
</kw>
<msg timestamp="20201031 01:51:05.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:05.055" starttime="20201031 01:51:00.467"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:05.055" starttime="20201031 01:51:00.466"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:05.061" level="INFO">Running command 'ozone sh bucket create 36796-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:08.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:08.774" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:51:08.775" starttime="20201031 01:51:05.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:08.776" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:51:08.776" starttime="20201031 01:51:08.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:08.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:08.777" starttime="20201031 01:51:08.777"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:08.778" starttime="20201031 01:51:05.057"></status>
</kw>
<msg timestamp="20201031 01:51:08.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:08.778" starttime="20201031 01:51:05.057"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:08.779" starttime="20201031 01:51:05.056"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:08.784" level="INFO">Running command 'ozone sh key put 36796-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:14.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:14.713" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:51:14.713" starttime="20201031 01:51:08.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:14.714" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:51:14.714" starttime="20201031 01:51:14.713"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:14.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:14.715" starttime="20201031 01:51:14.714"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:14.715" starttime="20201031 01:51:08.780"></status>
</kw>
<msg timestamp="20201031 01:51:14.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:14.715" starttime="20201031 01:51:08.780"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:14.715" starttime="20201031 01:51:08.779"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:14.719" level="INFO">Running command 'ozone sh bucket create 36796-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:18.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:18.492" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:51:18.492" starttime="20201031 01:51:14.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:18.493" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:51:18.493" starttime="20201031 01:51:18.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:18.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:18.494" starttime="20201031 01:51:18.494"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:18.494" starttime="20201031 01:51:14.716"></status>
</kw>
<msg timestamp="20201031 01:51:18.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:18.495" starttime="20201031 01:51:14.716"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:18.495" starttime="20201031 01:51:14.716"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:18.500" level="INFO">Running command 'ozone sh bucket link 36796-source/readable-bucket 36796-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:22.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:22.121" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:51:22.121" starttime="20201031 01:51:18.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:22.123" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:51:22.123" starttime="20201031 01:51:22.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:22.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:22.124" starttime="20201031 01:51:22.123"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:22.124" starttime="20201031 01:51:18.496"></status>
</kw>
<msg timestamp="20201031 01:51:22.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:22.124" starttime="20201031 01:51:18.496"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:22.124" starttime="20201031 01:51:18.495"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:22.129" level="INFO">Running command 'ozone sh bucket link 36796-source/readable-bucket 36796-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:25.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:25.662" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:51:25.662" starttime="20201031 01:51:22.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:25.663" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:51:25.663" starttime="20201031 01:51:25.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:25.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:25.664" starttime="20201031 01:51:25.663"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:25.664" starttime="20201031 01:51:22.125"></status>
</kw>
<msg timestamp="20201031 01:51:25.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:25.664" starttime="20201031 01:51:22.125"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:25.664" starttime="20201031 01:51:22.124"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:25.669" level="INFO">Running command 'ozone sh bucket link 36796-source/unreadable-bucket 36796-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:29.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:29.388" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:51:29.388" starttime="20201031 01:51:25.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:29.389" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:51:29.389" starttime="20201031 01:51:29.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:29.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:29.390" starttime="20201031 01:51:29.389"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:29.390" starttime="20201031 01:51:25.665"></status>
</kw>
<msg timestamp="20201031 01:51:29.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:29.390" starttime="20201031 01:51:25.665"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:29.390" starttime="20201031 01:51:25.664"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:29.394" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 36796-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:33.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:33.014" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:51:33.014" starttime="20201031 01:51:29.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:33.015" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 01:51:33.015" starttime="20201031 01:51:33.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:33.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:33.016" starttime="20201031 01:51:33.016"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:33.016" starttime="20201031 01:51:29.391"></status>
</kw>
<msg timestamp="20201031 01:51:33.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:33.017" starttime="20201031 01:51:29.391"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:33.017" starttime="20201031 01:51:29.390"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:33.023" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 36796-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:36.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:36.624" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:51:36.624" starttime="20201031 01:51:33.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:36.625" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 01:51:36.625" starttime="20201031 01:51:36.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:36.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:36.626" starttime="20201031 01:51:36.626"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:36.626" starttime="20201031 01:51:33.018"></status>
</kw>
<msg timestamp="20201031 01:51:36.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:36.627" starttime="20201031 01:51:33.017"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:36.627" starttime="20201031 01:51:33.017"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:36.635" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 36796-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:40.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:40.420" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:51:40.420" starttime="20201031 01:51:36.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:40.421" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 01:51:40.422" starttime="20201031 01:51:40.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:40.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:40.422" starttime="20201031 01:51:40.422"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:40.422" starttime="20201031 01:51:36.628"></status>
</kw>
<msg timestamp="20201031 01:51:40.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:40.423" starttime="20201031 01:51:36.627"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:40.423" starttime="20201031 01:51:36.627"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:40.426" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 36796-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:44.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:44.132" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:51:44.132" starttime="20201031 01:51:40.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:44.133" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 01:51:44.133" starttime="20201031 01:51:44.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:44.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:44.134" starttime="20201031 01:51:44.134"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:44.135" starttime="20201031 01:51:40.424"></status>
</kw>
<msg timestamp="20201031 01:51:44.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:44.135" starttime="20201031 01:51:40.424"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:44.135" starttime="20201031 01:51:40.423"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:44.139" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 36796-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:47.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:47.830" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:51:47.830" starttime="20201031 01:51:44.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:47.831" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 01:51:47.831" starttime="20201031 01:51:47.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:47.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:47.831" starttime="20201031 01:51:47.831"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:47.832" starttime="20201031 01:51:44.136"></status>
</kw>
<msg timestamp="20201031 01:51:47.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:47.832" starttime="20201031 01:51:44.136"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:47.832" starttime="20201031 01:51:44.135"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:47.832" starttime="20201031 01:51:05.056"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:47.832" starttime="20201031 01:51:05.056"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:47.833" starttime="20201031 01:50:57.061"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:47.838" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:47.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:47.842" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:51:47.842" starttime="20201031 01:51:47.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:47.843" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:51:47.843" starttime="20201031 01:51:47.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:47.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:47.844" starttime="20201031 01:51:47.843"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:47.844" starttime="20201031 01:51:47.836"></status>
</kw>
<msg timestamp="20201031 01:51:47.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:47.844" starttime="20201031 01:51:47.836"></status>
</kw>
<msg timestamp="20201031 01:51:47.844" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:51:47.844" starttime="20201031 01:51:47.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:51:47.846" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:51:47.846" starttime="20201031 01:51:47.845"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:47.851" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:47.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:47.867" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:51:47.867" starttime="20201031 01:51:47.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:47.868" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:51:47.868" starttime="20201031 01:51:47.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:47.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:47.869" starttime="20201031 01:51:47.868"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:47.869" starttime="20201031 01:51:47.847"></status>
</kw>
<msg timestamp="20201031 01:51:47.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:47.869" starttime="20201031 01:51:47.847"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:47.870" starttime="20201031 01:51:47.846"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:47.870" starttime="20201031 01:51:47.846"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:47.870" starttime="20201031 01:51:47.835"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:47.870" starttime="20201031 01:51:47.834"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:47.875" level="INFO">Running command 'ozone sh bucket link 36796-source/no-such-bucket 36796-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:51.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:51.552" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:51:51.552" starttime="20201031 01:51:47.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:51.553" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:51:51.553" starttime="20201031 01:51:51.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:51.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:51.554" starttime="20201031 01:51:51.554"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:51.554" starttime="20201031 01:51:47.871"></status>
</kw>
<msg timestamp="20201031 01:51:51.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:51.555" starttime="20201031 01:51:47.871"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:51.555" starttime="20201031 01:51:47.870"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:51.559" level="INFO">Running command 'ozone sh key list 36796-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:55.314" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 01:51:55.314" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:51:55.315" starttime="20201031 01:51:51.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:55.316" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201031 01:51:55.316" starttime="20201031 01:51:55.315"></status>
</kw>
<msg timestamp="20201031 01:51:55.317" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:51:55.317" starttime="20201031 01:51:51.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201031 01:51:55.318" starttime="20201031 01:51:55.317"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:51:55.318" critical="yes" starttime="20201031 01:51:47.833"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:55.325" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:55.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:55.328" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:51:55.329" starttime="20201031 01:51:55.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:55.329" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:51:55.330" starttime="20201031 01:51:55.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:55.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:55.330" starttime="20201031 01:51:55.330"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:55.330" starttime="20201031 01:51:55.323"></status>
</kw>
<msg timestamp="20201031 01:51:55.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:55.331" starttime="20201031 01:51:55.322"></status>
</kw>
<msg timestamp="20201031 01:51:55.331" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:51:55.331" starttime="20201031 01:51:55.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:51:55.332" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:51:55.332" starttime="20201031 01:51:55.331"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:55.337" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:55.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:55.348" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:51:55.348" starttime="20201031 01:51:55.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:55.349" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:51:55.349" starttime="20201031 01:51:55.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:55.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:55.350" starttime="20201031 01:51:55.349"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:55.350" starttime="20201031 01:51:55.334"></status>
</kw>
<msg timestamp="20201031 01:51:55.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:55.350" starttime="20201031 01:51:55.333"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:55.350" starttime="20201031 01:51:55.333"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:55.350" starttime="20201031 01:51:55.332"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:55.351" starttime="20201031 01:51:55.321"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:55.351" starttime="20201031 01:51:55.320"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:55.355" level="INFO">Running command 'ozone sh bucket link 36796-source/bucket1 36796-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:51:59.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:51:59.053" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:51:59.053" starttime="20201031 01:51:55.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:51:59.055" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:51:59.055" starttime="20201031 01:51:59.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:51:59.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:51:59.056" starttime="20201031 01:51:59.055"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:59.056" starttime="20201031 01:51:55.352"></status>
</kw>
<msg timestamp="20201031 01:51:59.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:51:59.056" starttime="20201031 01:51:55.351"></status>
</kw>
<status status="PASS" endtime="20201031 01:51:59.056" starttime="20201031 01:51:55.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:51:59.062" level="INFO">Running command 'ozone sh bucket create 36796-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:02.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:02.818" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:52:02.818" starttime="20201031 01:51:59.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:02.819" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:52:02.819" starttime="20201031 01:52:02.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:02.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:02.820" starttime="20201031 01:52:02.819"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:02.820" starttime="20201031 01:51:59.058"></status>
</kw>
<msg timestamp="20201031 01:52:02.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:02.821" starttime="20201031 01:51:59.057"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:02.821" starttime="20201031 01:51:59.057"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:02.826" level="INFO">Running command 'ozone sh key put 36796-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:10.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:10.060" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:52:10.060" starttime="20201031 01:52:02.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:10.061" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:52:10.061" starttime="20201031 01:52:10.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:10.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:10.062" starttime="20201031 01:52:10.061"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:10.062" starttime="20201031 01:52:02.822"></status>
</kw>
<msg timestamp="20201031 01:52:10.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:10.062" starttime="20201031 01:52:02.822"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:10.063" starttime="20201031 01:52:02.821"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201031 01:52:10.065" level="INFO">${postfix} = 75657</msg>
<status status="PASS" endtime="20201031 01:52:10.065" starttime="20201031 01:52:10.064"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201031 01:52:10.065" level="INFO">${tmpfile} = /tmp/tempkey-75657</msg>
<status status="PASS" endtime="20201031 01:52:10.065" starttime="20201031 01:52:10.065"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:10.069" level="INFO">Running command 'ozone sh key get -f 36796-target/link1/key1 /tmp/tempkey-75657 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:16.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:16.199" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:52:16.200" starttime="20201031 01:52:10.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:16.201" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:52:16.201" starttime="20201031 01:52:16.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:16.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:16.202" starttime="20201031 01:52:16.201"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:16.202" starttime="20201031 01:52:10.066"></status>
</kw>
<msg timestamp="20201031 01:52:16.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:16.202" starttime="20201031 01:52:10.066"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:16.202" starttime="20201031 01:52:10.065"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201031 01:52:16.205" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-75657 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:16.207" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201031 01:52:16.208" starttime="20201031 01:52:16.202"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:16.214" level="INFO">Running command 'rm -f /tmp/tempkey-75657 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:16.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:16.215" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:52:16.215" starttime="20201031 01:52:16.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:16.217" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:52:16.217" starttime="20201031 01:52:16.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:16.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:16.217" starttime="20201031 01:52:16.217"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:16.218" starttime="20201031 01:52:16.209"></status>
</kw>
<msg timestamp="20201031 01:52:16.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:16.218" starttime="20201031 01:52:16.209"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:16.218" starttime="20201031 01:52:16.208"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:52:16.219" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201031 01:52:16.219" starttime="20201031 01:52:16.218"></status>
</kw>
<msg timestamp="20201031 01:52:16.219" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201031 01:52:16.219" starttime="20201031 01:52:10.064"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:52:16.219" starttime="20201031 01:52:16.219"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:16.220" starttime="20201031 01:52:10.063"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:52:16.220" critical="yes" starttime="20201031 01:51:55.319"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:16.229" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:16.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:16.230" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:52:16.230" starttime="20201031 01:52:16.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:16.231" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:52:16.231" starttime="20201031 01:52:16.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:16.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:16.232" starttime="20201031 01:52:16.232"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:16.232" starttime="20201031 01:52:16.223"></status>
</kw>
<msg timestamp="20201031 01:52:16.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:16.232" starttime="20201031 01:52:16.223"></status>
</kw>
<msg timestamp="20201031 01:52:16.233" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:52:16.233" starttime="20201031 01:52:16.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:52:16.233" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:52:16.233" starttime="20201031 01:52:16.233"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:16.237" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:16.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:16.250" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:52:16.250" starttime="20201031 01:52:16.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:16.251" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:52:16.251" starttime="20201031 01:52:16.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:16.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:16.252" starttime="20201031 01:52:16.251"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:16.252" starttime="20201031 01:52:16.235"></status>
</kw>
<msg timestamp="20201031 01:52:16.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:16.252" starttime="20201031 01:52:16.235"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:16.252" starttime="20201031 01:52:16.234"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:16.253" starttime="20201031 01:52:16.233"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:16.253" starttime="20201031 01:52:16.222"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:16.253" starttime="20201031 01:52:16.221"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:16.259" level="INFO">Running command 'ozone sh key put 36796-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:22.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:22.187" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:52:22.187" starttime="20201031 01:52:16.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:22.188" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:52:22.188" starttime="20201031 01:52:22.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:22.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:22.189" starttime="20201031 01:52:22.188"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:22.189" starttime="20201031 01:52:16.254"></status>
</kw>
<msg timestamp="20201031 01:52:22.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:22.189" starttime="20201031 01:52:16.254"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:22.190" starttime="20201031 01:52:16.253"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201031 01:52:22.192" level="INFO">${postfix} = 24829</msg>
<status status="PASS" endtime="20201031 01:52:22.192" starttime="20201031 01:52:22.191"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201031 01:52:22.194" level="INFO">${tmpfile} = /tmp/tempkey-24829</msg>
<status status="PASS" endtime="20201031 01:52:22.194" starttime="20201031 01:52:22.192"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:22.197" level="INFO">Running command 'ozone sh key get -f 36796-source/bucket1/key2 /tmp/tempkey-24829 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:27.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:27.592" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:52:27.592" starttime="20201031 01:52:22.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:27.593" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:52:27.593" starttime="20201031 01:52:27.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:27.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:27.594" starttime="20201031 01:52:27.594"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:27.595" starttime="20201031 01:52:22.195"></status>
</kw>
<msg timestamp="20201031 01:52:27.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:27.595" starttime="20201031 01:52:22.194"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:27.595" starttime="20201031 01:52:22.194"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201031 01:52:27.599" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-24829 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:27.600" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201031 01:52:27.600" starttime="20201031 01:52:27.595"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:27.606" level="INFO">Running command 'rm -f /tmp/tempkey-24829 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:27.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:27.608" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:52:27.608" starttime="20201031 01:52:27.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:27.609" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:52:27.609" starttime="20201031 01:52:27.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:27.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:27.610" starttime="20201031 01:52:27.609"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:27.610" starttime="20201031 01:52:27.602"></status>
</kw>
<msg timestamp="20201031 01:52:27.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:27.610" starttime="20201031 01:52:27.602"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:27.610" starttime="20201031 01:52:27.601"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:52:27.611" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201031 01:52:27.611" starttime="20201031 01:52:27.610"></status>
</kw>
<msg timestamp="20201031 01:52:27.611" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201031 01:52:27.611" starttime="20201031 01:52:22.190"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:52:27.612" starttime="20201031 01:52:27.611"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:27.612" starttime="20201031 01:52:22.190"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:52:27.612" critical="yes" starttime="20201031 01:52:16.221"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:27.619" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:27.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:27.621" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:52:27.621" starttime="20201031 01:52:27.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:27.622" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:52:27.622" starttime="20201031 01:52:27.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:27.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:27.623" starttime="20201031 01:52:27.622"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:27.623" starttime="20201031 01:52:27.616"></status>
</kw>
<msg timestamp="20201031 01:52:27.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:27.623" starttime="20201031 01:52:27.616"></status>
</kw>
<msg timestamp="20201031 01:52:27.623" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:52:27.623" starttime="20201031 01:52:27.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:52:27.624" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:52:27.624" starttime="20201031 01:52:27.624"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:27.629" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:27.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:27.640" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:52:27.640" starttime="20201031 01:52:27.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:27.641" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:52:27.641" starttime="20201031 01:52:27.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:27.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:27.642" starttime="20201031 01:52:27.641"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:27.642" starttime="20201031 01:52:27.626"></status>
</kw>
<msg timestamp="20201031 01:52:27.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:27.642" starttime="20201031 01:52:27.625"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:27.643" starttime="20201031 01:52:27.625"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:27.643" starttime="20201031 01:52:27.624"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:27.643" starttime="20201031 01:52:27.614"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:27.643" starttime="20201031 01:52:27.614"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:27.647" level="INFO">Running command 'ozone sh key list 36796-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:31.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:31.545" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201031 01:52:31.545" starttime="20201031 01:52:27.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:31.546" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201031 01:52:31.546" starttime="20201031 01:52:31.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:31.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:31.547" starttime="20201031 01:52:31.547"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:31.547" starttime="20201031 01:52:27.644"></status>
</kw>
<msg timestamp="20201031 01:52:31.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:31.548" starttime="20201031 01:52:27.644"></status>
</kw>
<msg timestamp="20201031 01:52:31.548" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201031 01:52:31.548" starttime="20201031 01:52:27.643"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:31.553" level="INFO">Running command 'ozone sh key list 36796-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:35.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:35.386" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201031 01:52:35.386" starttime="20201031 01:52:31.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:35.387" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201031 01:52:35.387" starttime="20201031 01:52:35.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:35.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:35.388" starttime="20201031 01:52:35.387"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:35.388" starttime="20201031 01:52:31.549"></status>
</kw>
<msg timestamp="20201031 01:52:35.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:35.388" starttime="20201031 01:52:31.549"></status>
</kw>
<msg timestamp="20201031 01:52:35.389" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201031 01:52:35.389" starttime="20201031 01:52:31.548"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:52:35.389" starttime="20201031 01:52:35.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:52:35.390" starttime="20201031 01:52:35.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201031 01:52:35.390" starttime="20201031 01:52:35.390"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:52:35.390" critical="yes" starttime="20201031 01:52:27.613"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:35.399" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:35.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:35.400" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:52:35.400" starttime="20201031 01:52:35.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:35.401" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:52:35.401" starttime="20201031 01:52:35.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:35.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:35.402" starttime="20201031 01:52:35.401"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:35.402" starttime="20201031 01:52:35.394"></status>
</kw>
<msg timestamp="20201031 01:52:35.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:35.403" starttime="20201031 01:52:35.394"></status>
</kw>
<msg timestamp="20201031 01:52:35.403" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:52:35.403" starttime="20201031 01:52:35.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:52:35.404" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:52:35.404" starttime="20201031 01:52:35.403"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:35.408" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:35.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:35.420" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:52:35.420" starttime="20201031 01:52:35.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:35.421" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:52:35.421" starttime="20201031 01:52:35.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:35.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:35.421" starttime="20201031 01:52:35.421"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:35.422" starttime="20201031 01:52:35.405"></status>
</kw>
<msg timestamp="20201031 01:52:35.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:35.422" starttime="20201031 01:52:35.405"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:35.422" starttime="20201031 01:52:35.404"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:35.422" starttime="20201031 01:52:35.404"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:35.422" starttime="20201031 01:52:35.393"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:35.423" starttime="20201031 01:52:35.392"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:35.428" level="INFO">Running command 'ozone sh key delete 36796-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:39.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:39.182" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:52:39.185" starttime="20201031 01:52:35.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:39.186" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:52:39.186" starttime="20201031 01:52:39.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:39.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:39.187" starttime="20201031 01:52:39.187"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:39.188" starttime="20201031 01:52:35.424"></status>
</kw>
<msg timestamp="20201031 01:52:39.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:39.188" starttime="20201031 01:52:35.423"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:39.188" starttime="20201031 01:52:35.423"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:39.204" level="INFO">Running command 'ozone sh key list 36796-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:43.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:43.174" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201031 01:52:43.174" starttime="20201031 01:52:39.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:43.175" level="INFO">key1</msg>
<status status="PASS" endtime="20201031 01:52:43.175" starttime="20201031 01:52:43.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:43.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:43.176" starttime="20201031 01:52:43.175"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:43.176" starttime="20201031 01:52:39.199"></status>
</kw>
<msg timestamp="20201031 01:52:43.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:43.176" starttime="20201031 01:52:39.199"></status>
</kw>
<msg timestamp="20201031 01:52:43.177" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201031 01:52:43.177" starttime="20201031 01:52:39.188"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201031 01:52:43.177" starttime="20201031 01:52:43.177"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:52:43.177" critical="yes" starttime="20201031 01:52:35.392"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:43.184" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:43.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:43.186" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:52:43.186" starttime="20201031 01:52:43.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:43.187" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:52:43.187" starttime="20201031 01:52:43.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:43.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:43.188" starttime="20201031 01:52:43.187"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:43.188" starttime="20201031 01:52:43.181"></status>
</kw>
<msg timestamp="20201031 01:52:43.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:43.188" starttime="20201031 01:52:43.180"></status>
</kw>
<msg timestamp="20201031 01:52:43.188" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:52:43.188" starttime="20201031 01:52:43.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:52:43.189" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:52:43.189" starttime="20201031 01:52:43.189"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:43.195" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:43.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:43.205" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:52:43.205" starttime="20201031 01:52:43.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:43.206" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:52:43.206" starttime="20201031 01:52:43.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:43.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:43.206" starttime="20201031 01:52:43.206"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:43.207" starttime="20201031 01:52:43.190"></status>
</kw>
<msg timestamp="20201031 01:52:43.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:43.207" starttime="20201031 01:52:43.190"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:43.207" starttime="20201031 01:52:43.190"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:43.207" starttime="20201031 01:52:43.189"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:43.207" starttime="20201031 01:52:43.180"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:43.207" starttime="20201031 01:52:43.179"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:43.212" level="INFO">Running command 'ozone sh bucket list 36796-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:46.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:46.913" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:52:46.913" starttime="20201031 01:52:43.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:46.914" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "36796-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:51:51.472Z",
  "modificationTime" : "2020-10-31T01:51:51.472Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36796-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36796-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:51:29.102Z",
  "modificationTime" : "2020-10-31T01:51:47.642Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36796-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36796-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:51:58.762Z",
  "modificationTime" : "2020-10-31T01:51:58.762Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36796-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36796-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:51:21.885Z",
  "modificationTime" : "2020-10-31T01:51:44.050Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36796-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36796-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:51:25.567Z",
  "modificationTime" : "2020-10-31T01:51:25.567Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36796-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201031 01:52:46.914" starttime="20201031 01:52:46.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:46.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:46.915" starttime="20201031 01:52:46.914"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:46.915" starttime="20201031 01:52:43.208"></status>
</kw>
<msg timestamp="20201031 01:52:46.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:46.915" starttime="20201031 01:52:43.208"></status>
</kw>
<msg timestamp="20201031 01:52:46.916" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:52:46.916" starttime="20201031 01:52:43.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:52:46.916" starttime="20201031 01:52:46.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201031 01:52:46.917" starttime="20201031 01:52:46.916"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:52:46.917" critical="yes" starttime="20201031 01:52:43.178"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:46.922" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:46.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:46.925" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:52:46.925" starttime="20201031 01:52:46.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:46.926" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:52:46.926" starttime="20201031 01:52:46.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:46.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:46.927" starttime="20201031 01:52:46.926"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:46.927" starttime="20201031 01:52:46.920"></status>
</kw>
<msg timestamp="20201031 01:52:46.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:46.927" starttime="20201031 01:52:46.919"></status>
</kw>
<msg timestamp="20201031 01:52:46.928" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:52:46.928" starttime="20201031 01:52:46.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:52:46.928" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:52:46.929" starttime="20201031 01:52:46.928"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:46.934" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:46.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:46.950" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:52:46.950" starttime="20201031 01:52:46.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:46.951" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:52:46.951" starttime="20201031 01:52:46.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:46.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:46.952" starttime="20201031 01:52:46.951"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:46.952" starttime="20201031 01:52:46.930"></status>
</kw>
<msg timestamp="20201031 01:52:46.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:46.952" starttime="20201031 01:52:46.930"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:46.952" starttime="20201031 01:52:46.929"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:46.952" starttime="20201031 01:52:46.929"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:46.953" starttime="20201031 01:52:46.919"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:46.953" starttime="20201031 01:52:46.918"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:46.957" level="INFO">Running command 'ozone sh bucket info 36796-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:50.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:50.745" level="INFO">${output} = 36796-source bucket1</msg>
<status status="PASS" endtime="20201031 01:52:50.745" starttime="20201031 01:52:46.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:50.746" level="INFO">36796-source bucket1</msg>
<status status="PASS" endtime="20201031 01:52:50.746" starttime="20201031 01:52:50.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:50.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:50.747" starttime="20201031 01:52:50.746"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:50.747" starttime="20201031 01:52:46.954"></status>
</kw>
<msg timestamp="20201031 01:52:50.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:50.747" starttime="20201031 01:52:46.953"></status>
</kw>
<msg timestamp="20201031 01:52:50.748" level="INFO">${result} = 36796-source bucket1</msg>
<status status="PASS" endtime="20201031 01:52:50.748" starttime="20201031 01:52:46.953"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:52:50.748" starttime="20201031 01:52:50.748"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:52:50.749" critical="yes" starttime="20201031 01:52:46.917"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:50.755" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:50.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:50.758" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:52:50.758" starttime="20201031 01:52:50.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:50.759" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:52:50.759" starttime="20201031 01:52:50.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:50.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:50.760" starttime="20201031 01:52:50.759"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:50.760" starttime="20201031 01:52:50.752"></status>
</kw>
<msg timestamp="20201031 01:52:50.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:50.761" starttime="20201031 01:52:50.752"></status>
</kw>
<msg timestamp="20201031 01:52:50.761" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:52:50.761" starttime="20201031 01:52:50.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:52:50.761" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:52:50.762" starttime="20201031 01:52:50.761"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:50.767" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:50.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:50.783" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:52:50.783" starttime="20201031 01:52:50.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:50.785" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:52:50.785" starttime="20201031 01:52:50.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:50.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:50.785" starttime="20201031 01:52:50.785"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:50.786" starttime="20201031 01:52:50.763"></status>
</kw>
<msg timestamp="20201031 01:52:50.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:50.786" starttime="20201031 01:52:50.763"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:50.786" starttime="20201031 01:52:50.762"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:50.786" starttime="20201031 01:52:50.762"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:50.786" starttime="20201031 01:52:50.751"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:50.786" starttime="20201031 01:52:50.750"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:50.790" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 36796-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:54.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:54.772" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:52:54.772" starttime="20201031 01:52:50.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:54.773" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 01:52:54.773" starttime="20201031 01:52:54.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:54.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:54.774" starttime="20201031 01:52:54.773"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:54.774" starttime="20201031 01:52:50.787"></status>
</kw>
<msg timestamp="20201031 01:52:54.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:54.774" starttime="20201031 01:52:50.787"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:54.775" starttime="20201031 01:52:50.787"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:54.781" level="INFO">Running command 'ozone sh bucket getacl 36796-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:52:58.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:52:58.656" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201031 01:52:58.656" starttime="20201031 01:52:54.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:52:58.658" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201031 01:52:58.658" starttime="20201031 01:52:58.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:52:58.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:52:58.659" starttime="20201031 01:52:58.658"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:58.659" starttime="20201031 01:52:54.777"></status>
</kw>
<msg timestamp="20201031 01:52:58.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:52:58.659" starttime="20201031 01:52:54.776"></status>
</kw>
<msg timestamp="20201031 01:52:58.660" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201031 01:52:58.660" starttime="20201031 01:52:54.775"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:52:58.660" starttime="20201031 01:52:58.660"></status>
</kw>
<status status="PASS" endtime="20201031 01:52:58.661" starttime="20201031 01:52:54.775"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:52:58.667" level="INFO">Running command 'ozone sh bucket getacl 36796-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:02.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:02.788" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:53:02.789" starttime="20201031 01:52:58.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:02.790" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:53:02.790" starttime="20201031 01:53:02.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:02.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:02.790" starttime="20201031 01:53:02.790"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:02.791" starttime="20201031 01:52:58.663"></status>
</kw>
<msg timestamp="20201031 01:53:02.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:02.791" starttime="20201031 01:52:58.662"></status>
</kw>
<msg timestamp="20201031 01:53:02.791" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201031 01:53:02.791" starttime="20201031 01:52:58.662"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:53:02.792" starttime="20201031 01:53:02.791"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:02.792" starttime="20201031 01:52:58.661"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:02.797" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 36796-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:06.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:06.688" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:06.688" starttime="20201031 01:53:02.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:06.689" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 01:53:06.689" starttime="20201031 01:53:06.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:06.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:06.690" starttime="20201031 01:53:06.689"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:06.690" starttime="20201031 01:53:02.793"></status>
</kw>
<msg timestamp="20201031 01:53:06.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:06.690" starttime="20201031 01:53:02.793"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:06.691" starttime="20201031 01:53:02.792"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:06.697" level="INFO">Running command 'ozone sh bucket getacl 36796-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:10.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:10.566" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:53:10.566" starttime="20201031 01:53:06.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:10.568" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:53:10.568" starttime="20201031 01:53:10.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:10.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:10.569" starttime="20201031 01:53:10.568"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:10.569" starttime="20201031 01:53:06.693"></status>
</kw>
<msg timestamp="20201031 01:53:10.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:10.569" starttime="20201031 01:53:06.692"></status>
</kw>
<msg timestamp="20201031 01:53:10.569" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201031 01:53:10.569" starttime="20201031 01:53:06.692"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:53:10.570" starttime="20201031 01:53:10.570"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:10.570" starttime="20201031 01:53:06.691"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:10.577" level="INFO">Running command 'ozone sh bucket getacl 36796-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:14.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:14.812" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201031 01:53:14.812" starttime="20201031 01:53:10.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:14.813" level="INFO">READ</msg>
<status status="PASS" endtime="20201031 01:53:14.813" starttime="20201031 01:53:14.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:14.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:14.814" starttime="20201031 01:53:14.813"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:14.814" starttime="20201031 01:53:10.572"></status>
</kw>
<msg timestamp="20201031 01:53:14.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:14.814" starttime="20201031 01:53:10.572"></status>
</kw>
<msg timestamp="20201031 01:53:14.815" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201031 01:53:14.815" starttime="20201031 01:53:10.571"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:53:14.815" starttime="20201031 01:53:14.815"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:14.816" starttime="20201031 01:53:10.570"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:53:14.816" critical="yes" starttime="20201031 01:52:50.749"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:14.823" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:14.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:14.830" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:53:14.831" starttime="20201031 01:53:14.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:14.831" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:53:14.832" starttime="20201031 01:53:14.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:14.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:14.832" starttime="20201031 01:53:14.832"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:14.833" starttime="20201031 01:53:14.820"></status>
</kw>
<msg timestamp="20201031 01:53:14.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:14.833" starttime="20201031 01:53:14.819"></status>
</kw>
<msg timestamp="20201031 01:53:14.833" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:53:14.833" starttime="20201031 01:53:14.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:53:14.834" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:53:14.834" starttime="20201031 01:53:14.833"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:14.839" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:14.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:14.856" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:53:14.856" starttime="20201031 01:53:14.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:14.857" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:53:14.857" starttime="20201031 01:53:14.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:14.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:14.857" starttime="20201031 01:53:14.857"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:14.858" starttime="20201031 01:53:14.836"></status>
</kw>
<msg timestamp="20201031 01:53:14.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:14.858" starttime="20201031 01:53:14.835"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:14.858" starttime="20201031 01:53:14.835"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:14.858" starttime="20201031 01:53:14.834"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:14.858" starttime="20201031 01:53:14.818"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:14.858" starttime="20201031 01:53:14.817"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:14.863" level="INFO">Running command 'ozone sh bucket link 36796-source/bucket2 36796-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:18.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:18.968" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:18.968" starttime="20201031 01:53:14.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:18.969" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:53:18.970" starttime="20201031 01:53:18.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:18.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:18.970" starttime="20201031 01:53:18.970"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:18.970" starttime="20201031 01:53:14.859"></status>
</kw>
<msg timestamp="20201031 01:53:18.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:18.971" starttime="20201031 01:53:14.859"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:18.971" starttime="20201031 01:53:14.859"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:18.977" level="INFO">Running command 'ozone sh bucket create 36796-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:22.978" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 01:53:22.978" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:22.979" starttime="20201031 01:53:18.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:22.980" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201031 01:53:22.980" starttime="20201031 01:53:22.979"></status>
</kw>
<msg timestamp="20201031 01:53:22.980" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:22.980" starttime="20201031 01:53:18.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201031 01:53:22.981" starttime="20201031 01:53:22.980"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:22.998" level="INFO">Running command 'ozone sh bucket create 36796-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:27.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:27.164" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:27.164" starttime="20201031 01:53:22.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:27.165" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:53:27.165" starttime="20201031 01:53:27.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:27.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:27.166" starttime="20201031 01:53:27.165"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:27.166" starttime="20201031 01:53:22.982"></status>
</kw>
<msg timestamp="20201031 01:53:27.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:27.166" starttime="20201031 01:53:22.981"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:27.167" starttime="20201031 01:53:22.981"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:27.171" level="INFO">Running command 'ozone sh bucket link 36796-source/bucket1 36796-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:30.554" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 01:53:30.554" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:30.554" starttime="20201031 01:53:27.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:30.555" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201031 01:53:30.555" starttime="20201031 01:53:30.554"></status>
</kw>
<msg timestamp="20201031 01:53:30.556" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:30.556" starttime="20201031 01:53:27.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201031 01:53:30.556" starttime="20201031 01:53:30.556"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:53:30.557" critical="yes" starttime="20201031 01:53:14.817"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:30.563" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:30.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:30.566" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:53:30.566" starttime="20201031 01:53:30.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:30.567" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:53:30.567" starttime="20201031 01:53:30.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:30.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:30.567" starttime="20201031 01:53:30.567"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:30.568" starttime="20201031 01:53:30.560"></status>
</kw>
<msg timestamp="20201031 01:53:30.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:30.568" starttime="20201031 01:53:30.560"></status>
</kw>
<msg timestamp="20201031 01:53:30.568" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:53:30.568" starttime="20201031 01:53:30.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:53:30.569" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:53:30.569" starttime="20201031 01:53:30.568"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:30.573" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:30.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:30.586" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:53:30.586" starttime="20201031 01:53:30.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:30.587" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:53:30.587" starttime="20201031 01:53:30.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:30.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:30.588" starttime="20201031 01:53:30.587"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:30.588" starttime="20201031 01:53:30.570"></status>
</kw>
<msg timestamp="20201031 01:53:30.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:30.588" starttime="20201031 01:53:30.570"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:30.588" starttime="20201031 01:53:30.570"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:30.588" starttime="20201031 01:53:30.569"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:30.589" starttime="20201031 01:53:30.559"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:30.589" starttime="20201031 01:53:30.559"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:30.594" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:30.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:30.597" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:53:30.597" starttime="20201031 01:53:30.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:30.598" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:53:30.598" starttime="20201031 01:53:30.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:30.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:30.599" starttime="20201031 01:53:30.598"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:30.599" starttime="20201031 01:53:30.591"></status>
</kw>
<msg timestamp="20201031 01:53:30.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:30.599" starttime="20201031 01:53:30.590"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:30.600" starttime="20201031 01:53:30.590"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:30.605" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:30.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:30.606" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:53:30.606" starttime="20201031 01:53:30.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:30.607" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:53:30.607" starttime="20201031 01:53:30.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:30.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:30.608" starttime="20201031 01:53:30.607"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:30.608" starttime="20201031 01:53:30.601"></status>
</kw>
<msg timestamp="20201031 01:53:30.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:30.608" starttime="20201031 01:53:30.601"></status>
</kw>
<msg timestamp="20201031 01:53:30.609" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:53:30.609" starttime="20201031 01:53:30.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:53:30.609" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:53:30.609" starttime="20201031 01:53:30.609"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:30.614" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:30.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:30.624" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:53:30.625" starttime="20201031 01:53:30.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:30.626" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:53:30.626" starttime="20201031 01:53:30.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:30.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:30.627" starttime="20201031 01:53:30.626"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:30.627" starttime="20201031 01:53:30.611"></status>
</kw>
<msg timestamp="20201031 01:53:30.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:30.627" starttime="20201031 01:53:30.611"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:30.628" starttime="20201031 01:53:30.610"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:30.628" starttime="20201031 01:53:30.610"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:30.628" starttime="20201031 01:53:30.600"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:30.628" starttime="20201031 01:53:30.600"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:30.631" level="INFO">Running command 'ozone sh key list 36796-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:35.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:35.195" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:35.195" starttime="20201031 01:53:30.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:35.197" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "36796-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-10-31T01:51:12.462Z",
  "modificationTime" : "2020-10-31T01:51:14.201Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201031 01:53:35.197" starttime="20201031 01:53:35.196"></status>
</kw>
<msg timestamp="20201031 01:53:35.197" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:35.197" starttime="20201031 01:53:30.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201031 01:53:35.198" starttime="20201031 01:53:35.197"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:35.198" starttime="20201031 01:53:30.589"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:35.198" starttime="20201031 01:53:30.589"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:53:35.198" critical="yes" starttime="20201031 01:53:30.557"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:35.205" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:35.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:35.209" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:53:35.209" starttime="20201031 01:53:35.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:35.210" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:53:35.210" starttime="20201031 01:53:35.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:35.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:35.211" starttime="20201031 01:53:35.210"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:35.211" starttime="20201031 01:53:35.201"></status>
</kw>
<msg timestamp="20201031 01:53:35.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:35.211" starttime="20201031 01:53:35.201"></status>
</kw>
<msg timestamp="20201031 01:53:35.211" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:53:35.212" starttime="20201031 01:53:35.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:53:35.212" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:53:35.212" starttime="20201031 01:53:35.212"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:35.217" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:35.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:35.228" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:53:35.228" starttime="20201031 01:53:35.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:35.229" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:53:35.229" starttime="20201031 01:53:35.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:35.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:35.230" starttime="20201031 01:53:35.229"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:35.230" starttime="20201031 01:53:35.214"></status>
</kw>
<msg timestamp="20201031 01:53:35.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:35.230" starttime="20201031 01:53:35.214"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:35.231" starttime="20201031 01:53:35.214"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:35.231" starttime="20201031 01:53:35.212"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:35.231" starttime="20201031 01:53:35.200"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:35.231" starttime="20201031 01:53:35.200"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:35.237" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:35.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:35.239" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:53:35.239" starttime="20201031 01:53:35.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:35.240" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:53:35.240" starttime="20201031 01:53:35.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:35.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:35.241" starttime="20201031 01:53:35.240"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:35.241" starttime="20201031 01:53:35.233"></status>
</kw>
<msg timestamp="20201031 01:53:35.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:35.241" starttime="20201031 01:53:35.233"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:35.241" starttime="20201031 01:53:35.232"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:35.247" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:35.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:35.248" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:53:35.248" starttime="20201031 01:53:35.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:35.249" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:53:35.249" starttime="20201031 01:53:35.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:35.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:35.250" starttime="20201031 01:53:35.249"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:35.250" starttime="20201031 01:53:35.243"></status>
</kw>
<msg timestamp="20201031 01:53:35.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:35.250" starttime="20201031 01:53:35.243"></status>
</kw>
<msg timestamp="20201031 01:53:35.250" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:53:35.250" starttime="20201031 01:53:35.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:53:35.251" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:53:35.251" starttime="20201031 01:53:35.251"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:35.256" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:35.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:35.272" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:53:35.272" starttime="20201031 01:53:35.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:35.273" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:53:35.274" starttime="20201031 01:53:35.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:35.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:35.274" starttime="20201031 01:53:35.274"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:35.274" starttime="20201031 01:53:35.253"></status>
</kw>
<msg timestamp="20201031 01:53:35.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:35.275" starttime="20201031 01:53:35.252"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:35.275" starttime="20201031 01:53:35.252"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:35.275" starttime="20201031 01:53:35.251"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:35.275" starttime="20201031 01:53:35.242"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:35.275" starttime="20201031 01:53:35.242"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:35.279" level="INFO">Running command 'ozone sh key list 36796-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:38.606" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 01:53:38.606" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:38.606" starttime="20201031 01:53:35.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:38.607" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201031 01:53:38.607" starttime="20201031 01:53:38.606"></status>
</kw>
<msg timestamp="20201031 01:53:38.608" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:38.608" starttime="20201031 01:53:35.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201031 01:53:38.608" starttime="20201031 01:53:38.608"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:38.608" starttime="20201031 01:53:35.232"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:38.608" starttime="20201031 01:53:35.231"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:53:38.609" critical="yes" starttime="20201031 01:53:35.199"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:38.615" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:38.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:38.617" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:53:38.617" starttime="20201031 01:53:38.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:38.618" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:53:38.618" starttime="20201031 01:53:38.618"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:38.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:38.619" starttime="20201031 01:53:38.619"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:38.619" starttime="20201031 01:53:38.612"></status>
</kw>
<msg timestamp="20201031 01:53:38.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:38.620" starttime="20201031 01:53:38.612"></status>
</kw>
<msg timestamp="20201031 01:53:38.620" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:53:38.620" starttime="20201031 01:53:38.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:53:38.621" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:53:38.621" starttime="20201031 01:53:38.620"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:38.626" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:38.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:38.642" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:53:38.642" starttime="20201031 01:53:38.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:38.643" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:53:38.643" starttime="20201031 01:53:38.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:38.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:38.643" starttime="20201031 01:53:38.643"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:38.644" starttime="20201031 01:53:38.622"></status>
</kw>
<msg timestamp="20201031 01:53:38.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:38.644" starttime="20201031 01:53:38.622"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:38.644" starttime="20201031 01:53:38.621"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:38.644" starttime="20201031 01:53:38.621"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:38.644" starttime="20201031 01:53:38.611"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:38.644" starttime="20201031 01:53:38.610"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:38.650" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:38.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:38.655" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:53:38.655" starttime="20201031 01:53:38.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:38.656" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:53:38.656" starttime="20201031 01:53:38.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:38.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:38.657" starttime="20201031 01:53:38.656"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:38.657" starttime="20201031 01:53:38.646"></status>
</kw>
<msg timestamp="20201031 01:53:38.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:38.657" starttime="20201031 01:53:38.645"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:38.657" starttime="20201031 01:53:38.645"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:38.662" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:38.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:38.664" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:53:38.665" starttime="20201031 01:53:38.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:38.665" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:53:38.665" starttime="20201031 01:53:38.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:38.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:38.666" starttime="20201031 01:53:38.666"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:38.666" starttime="20201031 01:53:38.659"></status>
</kw>
<msg timestamp="20201031 01:53:38.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:38.666" starttime="20201031 01:53:38.658"></status>
</kw>
<msg timestamp="20201031 01:53:38.667" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:53:38.667" starttime="20201031 01:53:38.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:53:38.667" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:53:38.667" starttime="20201031 01:53:38.667"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:38.672" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:38.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:38.681" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:53:38.681" starttime="20201031 01:53:38.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:38.682" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:53:38.682" starttime="20201031 01:53:38.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:38.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:38.683" starttime="20201031 01:53:38.682"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:38.683" starttime="20201031 01:53:38.669"></status>
</kw>
<msg timestamp="20201031 01:53:38.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:38.683" starttime="20201031 01:53:38.668"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:38.683" starttime="20201031 01:53:38.668"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:38.683" starttime="20201031 01:53:38.667"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:38.684" starttime="20201031 01:53:38.658"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:38.684" starttime="20201031 01:53:38.657"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:38.689" level="INFO">Running command 'ozone sh bucket info 36796-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:42.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:42.584" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:42.584" starttime="20201031 01:53:38.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:42.586" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "36796-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:51:29.102Z",
  "modificationTime" : "2020-10-31T01:51:47.642Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36796-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201031 01:53:42.586" starttime="20201031 01:53:42.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:42.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:42.586" starttime="20201031 01:53:42.586"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:42.587" starttime="20201031 01:53:38.684"></status>
</kw>
<msg timestamp="20201031 01:53:42.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:42.587" starttime="20201031 01:53:38.684"></status>
</kw>
<msg timestamp="20201031 01:53:42.587" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:42.587" starttime="20201031 01:53:38.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201031 01:53:42.588" starttime="20201031 01:53:42.587"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201031 01:53:42.588" starttime="20201031 01:53:42.588"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:42.592" level="INFO">Running command 'ozone sh key list 36796-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:45.965" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 01:53:45.966" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:45.966" starttime="20201031 01:53:42.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:45.967" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201031 01:53:45.967" starttime="20201031 01:53:45.966"></status>
</kw>
<msg timestamp="20201031 01:53:45.967" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:45.967" starttime="20201031 01:53:42.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201031 01:53:45.968" starttime="20201031 01:53:45.967"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:45.968" starttime="20201031 01:53:38.645"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:45.968" starttime="20201031 01:53:38.644"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:53:45.968" critical="yes" starttime="20201031 01:53:38.609"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:45.974" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:45.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:45.977" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:53:45.977" starttime="20201031 01:53:45.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:45.978" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:53:45.978" starttime="20201031 01:53:45.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:45.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:45.979" starttime="20201031 01:53:45.978"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:45.979" starttime="20201031 01:53:45.971"></status>
</kw>
<msg timestamp="20201031 01:53:45.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:45.979" starttime="20201031 01:53:45.971"></status>
</kw>
<msg timestamp="20201031 01:53:45.979" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:53:45.980" starttime="20201031 01:53:45.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:53:45.980" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:53:45.980" starttime="20201031 01:53:45.980"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:45.985" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:46.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:46.001" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:53:46.001" starttime="20201031 01:53:45.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:46.002" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:53:46.002" starttime="20201031 01:53:46.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:46.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:46.003" starttime="20201031 01:53:46.002"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:46.003" starttime="20201031 01:53:45.981"></status>
</kw>
<msg timestamp="20201031 01:53:46.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:46.003" starttime="20201031 01:53:45.981"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:46.003" starttime="20201031 01:53:45.981"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:46.004" starttime="20201031 01:53:45.980"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:46.004" starttime="20201031 01:53:45.970"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:46.004" starttime="20201031 01:53:45.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:46.009" level="INFO">Running command 'ozone sh bucket link 36796-target/loop1 36796-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:49.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:49.482" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:49.482" starttime="20201031 01:53:46.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:49.483" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:53:49.483" starttime="20201031 01:53:49.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:49.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:49.484" starttime="20201031 01:53:49.483"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:49.484" starttime="20201031 01:53:46.005"></status>
</kw>
<msg timestamp="20201031 01:53:49.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:49.484" starttime="20201031 01:53:46.005"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:49.484" starttime="20201031 01:53:46.004"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:49.488" level="INFO">Running command 'ozone sh bucket link 36796-target/loop2 36796-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:52.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:52.985" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:52.985" starttime="20201031 01:53:49.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:52.986" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:53:52.986" starttime="20201031 01:53:52.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:52.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:52.987" starttime="20201031 01:53:52.986"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:52.987" starttime="20201031 01:53:49.485"></status>
</kw>
<msg timestamp="20201031 01:53:52.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:52.987" starttime="20201031 01:53:49.485"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:52.988" starttime="20201031 01:53:49.484"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:52.993" level="INFO">Running command 'ozone sh bucket link 36796-target/loop3 36796-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:56.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:56.397" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:56.397" starttime="20201031 01:53:52.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:56.398" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:53:56.398" starttime="20201031 01:53:56.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:56.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:56.399" starttime="20201031 01:53:56.398"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:56.399" starttime="20201031 01:53:52.989"></status>
</kw>
<msg timestamp="20201031 01:53:56.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:56.399" starttime="20201031 01:53:52.988"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:56.400" starttime="20201031 01:53:52.988"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:56.403" level="INFO">Running command 'ozone sh key list 36796-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:59.726" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 01:53:59.726" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:59.726" starttime="20201031 01:53:56.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:59.727" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201031 01:53:59.727" starttime="20201031 01:53:59.726"></status>
</kw>
<msg timestamp="20201031 01:53:59.728" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:53:59.728" starttime="20201031 01:53:56.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201031 01:53:59.728" starttime="20201031 01:53:59.728"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:53:59.728" critical="yes" starttime="20201031 01:53:45.969"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:59.737" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:59.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:59.738" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:53:59.738" starttime="20201031 01:53:59.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:59.739" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:53:59.739" starttime="20201031 01:53:59.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:59.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:59.740" starttime="20201031 01:53:59.739"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:59.740" starttime="20201031 01:53:59.732"></status>
</kw>
<msg timestamp="20201031 01:53:59.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:59.740" starttime="20201031 01:53:59.732"></status>
</kw>
<msg timestamp="20201031 01:53:59.740" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:53:59.740" starttime="20201031 01:53:59.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:53:59.741" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:53:59.741" starttime="20201031 01:53:59.741"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:59.746" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:53:59.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:53:59.767" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:53:59.767" starttime="20201031 01:53:59.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:53:59.768" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:53:59.768" starttime="20201031 01:53:59.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:53:59.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:53:59.769" starttime="20201031 01:53:59.768"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:59.769" starttime="20201031 01:53:59.742"></status>
</kw>
<msg timestamp="20201031 01:53:59.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:53:59.769" starttime="20201031 01:53:59.742"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:59.770" starttime="20201031 01:53:59.742"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:59.770" starttime="20201031 01:53:59.741"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:59.770" starttime="20201031 01:53:59.731"></status>
</kw>
<status status="PASS" endtime="20201031 01:53:59.770" starttime="20201031 01:53:59.730"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:53:59.773" level="INFO">Running command 'ozone sh bucket link 36796-source/bucket1 36796-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:54:03.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:54:03.173" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:54:03.173" starttime="20201031 01:53:59.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:54:03.175" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:54:03.175" starttime="20201031 01:54:03.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:54:03.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:54:03.176" starttime="20201031 01:54:03.175"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:03.176" starttime="20201031 01:53:59.771"></status>
</kw>
<msg timestamp="20201031 01:54:03.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:54:03.176" starttime="20201031 01:53:59.771"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:03.176" starttime="20201031 01:53:59.770"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:54:03.181" level="INFO">Running command 'ozone sh key put 36796-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:54:08.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:54:08.718" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:54:08.718" starttime="20201031 01:54:03.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:54:08.719" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:54:08.719" starttime="20201031 01:54:08.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:54:08.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:54:08.720" starttime="20201031 01:54:08.719"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:08.720" starttime="20201031 01:54:03.177"></status>
</kw>
<msg timestamp="20201031 01:54:08.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:54:08.720" starttime="20201031 01:54:03.177"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:08.721" starttime="20201031 01:54:03.176"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201031 01:54:08.723" level="INFO">${postfix} = 22450</msg>
<status status="PASS" endtime="20201031 01:54:08.723" starttime="20201031 01:54:08.722"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201031 01:54:08.723" level="INFO">${tmpfile} = /tmp/tempkey-22450</msg>
<status status="PASS" endtime="20201031 01:54:08.723" starttime="20201031 01:54:08.723"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:54:08.728" level="INFO">Running command 'ozone sh key get -f 36796-target/link1/key3 /tmp/tempkey-22450 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:54:14.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:54:14.056" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:54:14.056" starttime="20201031 01:54:08.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:54:14.058" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:54:14.058" starttime="20201031 01:54:14.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:54:14.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:54:14.058" starttime="20201031 01:54:14.058"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:14.058" starttime="20201031 01:54:08.724"></status>
</kw>
<msg timestamp="20201031 01:54:14.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:54:14.059" starttime="20201031 01:54:08.724"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:14.059" starttime="20201031 01:54:08.723"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201031 01:54:14.061" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-22450 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:54:14.064" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201031 01:54:14.064" starttime="20201031 01:54:14.059"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:54:14.068" level="INFO">Running command 'rm -f /tmp/tempkey-22450 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:54:14.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:54:14.071" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:54:14.071" starttime="20201031 01:54:14.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:54:14.072" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:54:14.072" starttime="20201031 01:54:14.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:54:14.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:54:14.073" starttime="20201031 01:54:14.072"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:14.073" starttime="20201031 01:54:14.065"></status>
</kw>
<msg timestamp="20201031 01:54:14.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:54:14.074" starttime="20201031 01:54:14.065"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:14.074" starttime="20201031 01:54:14.064"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 01:54:14.075" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201031 01:54:14.075" starttime="20201031 01:54:14.074"></status>
</kw>
<msg timestamp="20201031 01:54:14.075" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201031 01:54:14.075" starttime="20201031 01:54:08.721"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201031 01:54:14.075" starttime="20201031 01:54:14.075"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:14.076" starttime="20201031 01:54:08.721"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:54:14.076" critical="yes" starttime="20201031 01:53:59.729"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:54:14.082" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:54:14.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:54:14.084" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 01:54:14.084" starttime="20201031 01:54:14.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:54:14.085" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 01:54:14.085" starttime="20201031 01:54:14.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:54:14.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:54:14.086" starttime="20201031 01:54:14.085"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:14.087" starttime="20201031 01:54:14.079"></status>
</kw>
<msg timestamp="20201031 01:54:14.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:54:14.087" starttime="20201031 01:54:14.079"></status>
</kw>
<msg timestamp="20201031 01:54:14.087" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 01:54:14.087" starttime="20201031 01:54:14.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 01:54:14.088" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 01:54:14.088" starttime="20201031 01:54:14.087"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:54:14.091" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:54:14.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:54:14.116" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 01:54:14.116" starttime="20201031 01:54:14.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:54:14.117" level="INFO"></msg>
<status status="PASS" endtime="20201031 01:54:14.117" starttime="20201031 01:54:14.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:54:14.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:54:14.118" starttime="20201031 01:54:14.117"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:14.118" starttime="20201031 01:54:14.089"></status>
</kw>
<msg timestamp="20201031 01:54:14.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:54:14.119" starttime="20201031 01:54:14.089"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:14.119" starttime="20201031 01:54:14.088"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:14.119" starttime="20201031 01:54:14.088"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:14.119" starttime="20201031 01:54:14.078"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:14.119" starttime="20201031 01:54:14.077"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:54:14.123" level="INFO">Running command 'ozone sh bucket delete 36796-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:54:17.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:54:17.565" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:54:17.566" starttime="20201031 01:54:14.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:54:17.567" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 01:54:17.567" starttime="20201031 01:54:17.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:54:17.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:54:17.567" starttime="20201031 01:54:17.567"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:17.568" starttime="20201031 01:54:14.120"></status>
</kw>
<msg timestamp="20201031 01:54:17.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:54:17.568" starttime="20201031 01:54:14.120"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:17.568" starttime="20201031 01:54:14.119"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:54:17.573" level="INFO">Running command 'ozone sh bucket list 36796-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:54:20.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:54:20.984" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:54:20.984" starttime="20201031 01:54:17.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:54:20.986" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "36796-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:53:26.980Z",
  "modificationTime" : "2020-10-31T01:53:26.980Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36796-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:51:51.472Z",
  "modificationTime" : "2020-10-31T01:51:51.472Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36796-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36796-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:51:29.102Z",
  "modificationTime" : "2020-10-31T01:51:47.642Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36796-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36796-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:53:18.758Z",
  "modificationTime" : "2020-10-31T01:53:18.758Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36796-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36796-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:54:03.094Z",
  "modificationTime" : "2020-10-31T01:54:03.094Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36796-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36796-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:53:56.205Z",
  "modificationTime" : "2020-10-31T01:53:56.205Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36796-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36796-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:53:49.284Z",
  "modificationTime" : "2020-10-31T01:53:49.284Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36796-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36796-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:53:52.815Z",
  "modificationTime" : "2020-10-31T01:53:52.815Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36796-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36796-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:51:21.885Z",
  "modificationTime" : "2020-10-31T01:51:44.050Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36796-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36796-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T01:51:25.567Z",
  "modificationTime" : "2020-10-31T01:51:25.567Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36796-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201031 01:54:20.986" starttime="20201031 01:54:20.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:54:20.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:54:20.987" starttime="20201031 01:54:20.986"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:20.987" starttime="20201031 01:54:17.569"></status>
</kw>
<msg timestamp="20201031 01:54:20.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:54:20.987" starttime="20201031 01:54:17.569"></status>
</kw>
<msg timestamp="20201031 01:54:20.987" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 01:54:20.988" starttime="20201031 01:54:17.568"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:54:20.988" starttime="20201031 01:54:20.988"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 01:54:20.994" level="INFO">Running command 'ozone sh key list 36796-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 01:54:24.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 01:54:24.527" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201031 01:54:24.527" starttime="20201031 01:54:20.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 01:54:24.528" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201031 01:54:24.528" starttime="20201031 01:54:24.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 01:54:24.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 01:54:24.529" starttime="20201031 01:54:24.528"></status>
</kw>
<status status="PASS" endtime="20201031 01:54:24.529" starttime="20201031 01:54:20.989"></status>
</kw>
<msg timestamp="20201031 01:54:24.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 01:54:24.529" starttime="20201031 01:54:20.989"></status>
</kw>
<msg timestamp="20201031 01:54:24.529" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201031 01:54:24.529" starttime="20201031 01:54:20.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201031 01:54:24.530" starttime="20201031 01:54:24.530"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 01:54:24.530" critical="yes" starttime="20201031 01:54:14.077"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201031 01:54:24.533" starttime="20201031 01:50:57.007"></status>
</suite>
<status status="PASS" elapsedtime="238430" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
