<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201029 20:14:09.086" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:09:55.383" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:10:06.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:10:06.522" level="INFO">${output} = 2020-10-29 20:09:57,112 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-29 20:09:57,284 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201029 20:10:06.522" starttime="20201029 20:09:55.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:10:06.524" level="INFO">2020-10-29 20:09:57,112 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-29 20:09:57,284 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-29 20:09:57,285 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-29 20:10:00,399 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-29 20:10:00,400 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-10-29 20:10:00,400 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-10-29 20:10:00,400 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-10-29 20:10:00,400 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-29 20:10:00,400 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-29 20:10:00,401 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-10-29 20:10:00,405 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-29 20:10:00,415 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-29 20:10:00,463 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-68846, with testuser/scm@EXAMPLE.COM as owner.
2020-10-29 20:10:00,949 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-68846/bucket-0-14420, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 20:10:01,420 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-29 20:10:02,420 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-29 20:10:03,426 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-29 20:10:03,700 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-29 20:10:04,426 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,490
Average Time spent in bucket creation: 00:00:00,162
Average Time spent in key creation: 00:00:01,391
Average Time spent in key write: 00:00:01,550
Total bytes written: 10240
Total Execution time: 00:00:08,327
***************************************************</msg>
<status status="PASS" endtime="20201029 20:10:06.524" starttime="20201029 20:10:06.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:10:06.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:10:06.525" starttime="20201029 20:10:06.524"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:06.525" starttime="20201029 20:09:55.378"></status>
</kw>
<msg timestamp="20201029 20:10:06.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:10:06.525" starttime="20201029 20:09:55.378"></status>
</kw>
<msg timestamp="20201029 20:10:06.526" level="INFO">${result} = 2020-10-29 20:09:57,112 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-29 20:09:57,284 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201029 20:10:06.526" starttime="20201029 20:09:55.377"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201029 20:10:06.527" starttime="20201029 20:10:06.527"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:06.527" starttime="20201029 20:10:06.526"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201029 20:10:06.527" critical="yes" starttime="20201029 20:09:55.376"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:10:06.533" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:10:15.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:10:15.233" level="INFO">${output} = 2020-10-29 20:10:08,248 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-29 20:10:08,488 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201029 20:10:15.233" starttime="20201029 20:10:06.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:10:15.235" level="INFO">2020-10-29 20:10:08,248 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-29 20:10:08,488 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-29 20:10:08,489 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-29 20:10:08,688 [main] INFO freon.BaseFreonGenerator: Executing test with prefix k9hyjqwy5y
2020-10-29 20:10:08,703 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-29 20:10:09,717 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-29 20:10:10,421 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-10-29 20:10:10,486 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 20:10:10,717 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-29 20:10:11,112 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-29 20:10:11,441 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 20:10:11,442 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-56A2BBDF9A7C-&gt;547745e9-40be-49d5-9e07-3a7e2b2886b8
2020-10-29 20:10:11,443 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-29 20:10:11,718 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-29 20:10:12,718 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-29 20:10:13,719 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-29 20:10:14,719 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-29 20:10:14,859 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3670.717136, max=3670.717136, mean=3670.717136, stddev=0.0, median=3670.717136, p75=3670.717136, p95=3670.717136, p98=3670.717136, p99=3670.717136, p999=3670.717136, mean_rate=0.23132052357426885, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-29 20:10:14,860 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-10-29 20:10:14,863 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-29 20:10:14,863 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201029 20:10:15.236" starttime="20201029 20:10:15.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:10:15.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:10:15.236" starttime="20201029 20:10:15.236"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:15.236" starttime="20201029 20:10:06.530"></status>
</kw>
<msg timestamp="20201029 20:10:15.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:10:15.237" starttime="20201029 20:10:06.530"></status>
</kw>
<msg timestamp="20201029 20:10:15.237" level="INFO">${result} = 2020-10-29 20:10:08,248 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-29 20:10:08,488 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201029 20:10:15.237" starttime="20201029 20:10:06.529"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201029 20:10:15.238" starttime="20201029 20:10:15.238"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:15.238" starttime="20201029 20:10:15.237"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201029 20:10:15.238" critical="yes" starttime="20201029 20:10:06.528"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:10:15.243" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:10:20.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:10:20.750" level="INFO">${output} = 2020-10-29 20:10:17,747 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-29 20:10:17,923 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201029 20:10:20.750" starttime="20201029 20:10:15.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:10:20.751" level="INFO">2020-10-29 20:10:17,747 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-29 20:10:17,923 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-29 20:10:17,924 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-29 20:10:18,091 [main] INFO freon.BaseFreonGenerator: Executing test with prefix gwjb5i9hqq
2020-10-29 20:10:18,112 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-29 20:10:19,115 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-29 20:10:20,115 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-29 20:10:20,691 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=207.898089, max=207.898089, mean=207.898089, stddev=0.0, median=207.898089, p75=207.898089, p95=207.898089, p98=207.898089, p99=207.898089, p999=207.898089, mean_rate=0.8884116799369844, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-29 20:10:20,692 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-29 20:10:20,693 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-29 20:10:20,693 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201029 20:10:20.752" starttime="20201029 20:10:20.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:10:20.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:10:20.752" starttime="20201029 20:10:20.752"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:20.753" starttime="20201029 20:10:15.241"></status>
</kw>
<msg timestamp="20201029 20:10:20.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:10:20.753" starttime="20201029 20:10:15.241"></status>
</kw>
<msg timestamp="20201029 20:10:20.753" level="INFO">${result} = 2020-10-29 20:10:17,747 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-29 20:10:17,923 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201029 20:10:20.753" starttime="20201029 20:10:15.240"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201029 20:10:20.754" starttime="20201029 20:10:20.754"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:20.754" starttime="20201029 20:10:20.753"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201029 20:10:20.755" critical="yes" starttime="20201029 20:10:15.239"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:10:20.760" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:10:25.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:10:25.494" level="INFO">${output} = 2020-10-29 20:10:22,367 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-29 20:10:22,576 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201029 20:10:25.494" starttime="20201029 20:10:20.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:10:25.495" level="INFO">2020-10-29 20:10:22,367 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-29 20:10:22,576 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-29 20:10:22,576 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-29 20:10:22,739 [main] INFO freon.BaseFreonGenerator: Executing test with prefix yl78dsamzn
2020-10-29 20:10:22,761 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-29 20:10:23,763 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-29 20:10:24,764 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-29 20:10:25,441 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=95.344029, max=95.344029, mean=95.344029, stddev=0.0, median=95.344029, p75=95.344029, p95=95.344029, p98=95.344029, p99=95.344029, p999=95.344029, mean_rate=0.8883888728337772, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-29 20:10:25,450 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-29 20:10:25,451 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-29 20:10:25,451 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201029 20:10:25.496" starttime="20201029 20:10:25.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:10:25.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:10:25.496" starttime="20201029 20:10:25.496"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:25.496" starttime="20201029 20:10:20.757"></status>
</kw>
<msg timestamp="20201029 20:10:25.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:10:25.497" starttime="20201029 20:10:20.757"></status>
</kw>
<msg timestamp="20201029 20:10:25.497" level="INFO">${result} = 2020-10-29 20:10:22,367 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-29 20:10:22,576 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201029 20:10:25.497" starttime="20201029 20:10:20.756"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201029 20:10:25.498" starttime="20201029 20:10:25.498"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:25.498" starttime="20201029 20:10:25.497"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201029 20:10:25.498" critical="yes" starttime="20201029 20:10:20.755"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201029 20:10:25.500" starttime="20201029 20:09:55.350"></status>
</suite>
<status status="PASS" endtime="20201029 20:10:25.504" starttime="20201029 20:09:55.321"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:09:49.917" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:09:49.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:09:49.921" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:09:49.921" starttime="20201029 20:09:49.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:09:49.922" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:09:49.922" starttime="20201029 20:09:49.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:09:49.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:09:49.923" starttime="20201029 20:09:49.922"></status>
</kw>
<status status="PASS" endtime="20201029 20:09:49.923" starttime="20201029 20:09:49.912"></status>
</kw>
<msg timestamp="20201029 20:09:49.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:09:49.923" starttime="20201029 20:09:49.912"></status>
</kw>
<msg timestamp="20201029 20:09:49.924" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:09:49.924" starttime="20201029 20:09:49.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:09:49.924" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:09:49.924" starttime="20201029 20:09:49.924"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:09:49.930" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:09:49.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:09:49.942" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:09:49.942" starttime="20201029 20:09:49.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:09:49.943" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:09:49.943" starttime="20201029 20:09:49.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:09:49.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:09:49.944" starttime="20201029 20:09:49.943"></status>
</kw>
<status status="PASS" endtime="20201029 20:09:49.944" starttime="20201029 20:09:49.926"></status>
</kw>
<msg timestamp="20201029 20:09:49.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:09:49.944" starttime="20201029 20:09:49.926"></status>
</kw>
<status status="PASS" endtime="20201029 20:09:49.945" starttime="20201029 20:09:49.925"></status>
</kw>
<status status="PASS" endtime="20201029 20:09:49.945" starttime="20201029 20:09:49.925"></status>
</kw>
<status status="PASS" endtime="20201029 20:09:49.946" starttime="20201029 20:09:49.910"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 20:09:49.946" critical="yes" starttime="20201029 20:09:49.909"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201029 20:09:49.947" starttime="20201029 20:09:49.848"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201029 20:10:31.126" level="INFO">${random} = 67386</msg>
<status status="PASS" endtime="20201029 20:10:31.126" starttime="20201029 20:10:31.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201029 20:10:31.127" level="INFO">${source} = 67386-source</msg>
<status status="PASS" endtime="20201029 20:10:31.128" starttime="20201029 20:10:31.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201029 20:10:31.128" level="INFO">${target} = 67386-target</msg>
<status status="PASS" endtime="20201029 20:10:31.129" starttime="20201029 20:10:31.128"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:10:31.135" level="INFO">Running command 'ozone sh volume create 67386-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:10:34.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:10:34.853" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:10:34.853" starttime="20201029 20:10:31.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:10:34.854" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:10:34.854" starttime="20201029 20:10:34.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:10:34.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:10:34.855" starttime="20201029 20:10:34.854"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:34.855" starttime="20201029 20:10:31.129"></status>
</kw>
<msg timestamp="20201029 20:10:34.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:10:34.856" starttime="20201029 20:10:31.129"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:34.856" starttime="20201029 20:10:31.129"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:10:34.860" level="INFO">Running command 'ozone sh volume create 67386-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:10:38.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:10:38.628" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:10:38.628" starttime="20201029 20:10:34.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:10:38.629" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:10:38.629" starttime="20201029 20:10:38.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:10:38.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:10:38.630" starttime="20201029 20:10:38.630"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:38.630" starttime="20201029 20:10:34.857"></status>
</kw>
<msg timestamp="20201029 20:10:38.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:10:38.631" starttime="20201029 20:10:34.857"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:38.631" starttime="20201029 20:10:34.856"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:10:38.637" level="INFO">Running command 'ozone sh bucket create 67386-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:10:42.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:10:42.546" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:10:42.546" starttime="20201029 20:10:38.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:10:42.547" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:10:42.547" starttime="20201029 20:10:42.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:10:42.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:10:42.548" starttime="20201029 20:10:42.548"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:42.548" starttime="20201029 20:10:38.633"></status>
</kw>
<msg timestamp="20201029 20:10:42.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:10:42.549" starttime="20201029 20:10:38.632"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:42.549" starttime="20201029 20:10:38.632"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:10:42.552" level="INFO">Running command 'ozone sh key put 67386-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:10:48.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:10:48.723" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:10:48.723" starttime="20201029 20:10:42.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:10:48.724" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:10:48.724" starttime="20201029 20:10:48.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:10:48.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:10:48.725" starttime="20201029 20:10:48.724"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:48.725" starttime="20201029 20:10:42.550"></status>
</kw>
<msg timestamp="20201029 20:10:48.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:10:48.726" starttime="20201029 20:10:42.550"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:48.726" starttime="20201029 20:10:42.549"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:10:48.730" level="INFO">Running command 'ozone sh bucket create 67386-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:10:52.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:10:52.062" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:10:52.062" starttime="20201029 20:10:48.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:10:52.063" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:10:52.063" starttime="20201029 20:10:52.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:10:52.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:10:52.064" starttime="20201029 20:10:52.063"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:52.064" starttime="20201029 20:10:48.727"></status>
</kw>
<msg timestamp="20201029 20:10:52.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:10:52.064" starttime="20201029 20:10:48.727"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:52.064" starttime="20201029 20:10:48.726"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:10:52.068" level="INFO">Running command 'ozone sh bucket link 67386-source/readable-bucket 67386-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:10:55.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:10:55.677" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:10:55.677" starttime="20201029 20:10:52.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:10:55.678" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:10:55.678" starttime="20201029 20:10:55.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:10:55.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:10:55.679" starttime="20201029 20:10:55.679"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:55.680" starttime="20201029 20:10:52.065"></status>
</kw>
<msg timestamp="20201029 20:10:55.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:10:55.680" starttime="20201029 20:10:52.065"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:55.681" starttime="20201029 20:10:52.065"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:10:55.684" level="INFO">Running command 'ozone sh bucket link 67386-source/readable-bucket 67386-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:10:59.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:10:59.294" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:10:59.294" starttime="20201029 20:10:55.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:10:59.295" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:10:59.295" starttime="20201029 20:10:59.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:10:59.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:10:59.296" starttime="20201029 20:10:59.295"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:59.296" starttime="20201029 20:10:55.682"></status>
</kw>
<msg timestamp="20201029 20:10:59.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:10:59.296" starttime="20201029 20:10:55.682"></status>
</kw>
<status status="PASS" endtime="20201029 20:10:59.297" starttime="20201029 20:10:55.681"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:10:59.302" level="INFO">Running command 'ozone sh bucket link 67386-source/unreadable-bucket 67386-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:03.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:03.099" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:11:03.099" starttime="20201029 20:10:59.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:03.100" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:11:03.101" starttime="20201029 20:11:03.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:03.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:03.101" starttime="20201029 20:11:03.101"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:03.102" starttime="20201029 20:10:59.298"></status>
</kw>
<msg timestamp="20201029 20:11:03.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:03.102" starttime="20201029 20:10:59.297"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:03.102" starttime="20201029 20:10:59.297"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:03.107" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 67386-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:06.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:06.718" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:11:06.719" starttime="20201029 20:11:03.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:06.719" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201029 20:11:06.720" starttime="20201029 20:11:06.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:06.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:06.720" starttime="20201029 20:11:06.720"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:06.721" starttime="20201029 20:11:03.103"></status>
</kw>
<msg timestamp="20201029 20:11:06.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:06.721" starttime="20201029 20:11:03.103"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:06.721" starttime="20201029 20:11:03.102"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:06.726" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 67386-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:10.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:10.155" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:11:10.155" starttime="20201029 20:11:06.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:10.156" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201029 20:11:10.156" starttime="20201029 20:11:10.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:10.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:10.157" starttime="20201029 20:11:10.156"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:10.157" starttime="20201029 20:11:06.722"></status>
</kw>
<msg timestamp="20201029 20:11:10.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:10.157" starttime="20201029 20:11:06.722"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:10.157" starttime="20201029 20:11:06.721"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:10.168" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 67386-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:13.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:13.918" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:11:13.918" starttime="20201029 20:11:10.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:13.919" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201029 20:11:13.919" starttime="20201029 20:11:13.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:13.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:13.920" starttime="20201029 20:11:13.919"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:13.920" starttime="20201029 20:11:10.158"></status>
</kw>
<msg timestamp="20201029 20:11:13.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:13.920" starttime="20201029 20:11:10.158"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:13.920" starttime="20201029 20:11:10.158"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:13.924" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 67386-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:17.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:17.787" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:11:17.787" starttime="20201029 20:11:13.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:17.788" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201029 20:11:17.788" starttime="20201029 20:11:17.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:17.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:17.789" starttime="20201029 20:11:17.788"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:17.789" starttime="20201029 20:11:13.922"></status>
</kw>
<msg timestamp="20201029 20:11:17.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:17.790" starttime="20201029 20:11:13.921"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:17.790" starttime="20201029 20:11:13.921"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:17.795" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 67386-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:21.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:21.175" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:11:21.175" starttime="20201029 20:11:17.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:21.176" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201029 20:11:21.176" starttime="20201029 20:11:21.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:21.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:21.177" starttime="20201029 20:11:21.176"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:21.177" starttime="20201029 20:11:17.791"></status>
</kw>
<msg timestamp="20201029 20:11:21.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:21.177" starttime="20201029 20:11:17.791"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:21.178" starttime="20201029 20:11:17.791"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:21.178" starttime="20201029 20:10:38.632"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:21.178" starttime="20201029 20:10:38.631"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:21.178" starttime="20201029 20:10:31.125"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:21.185" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:21.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:21.188" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:11:21.188" starttime="20201029 20:11:21.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:21.189" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:11:21.189" starttime="20201029 20:11:21.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:21.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:21.190" starttime="20201029 20:11:21.189"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:21.190" starttime="20201029 20:11:21.182"></status>
</kw>
<msg timestamp="20201029 20:11:21.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:21.190" starttime="20201029 20:11:21.182"></status>
</kw>
<msg timestamp="20201029 20:11:21.190" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:11:21.190" starttime="20201029 20:11:21.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:11:21.192" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:11:21.192" starttime="20201029 20:11:21.191"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:21.197" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:21.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:21.207" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:11:21.207" starttime="20201029 20:11:21.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:21.208" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:11:21.208" starttime="20201029 20:11:21.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:21.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:21.209" starttime="20201029 20:11:21.208"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:21.209" starttime="20201029 20:11:21.193"></status>
</kw>
<msg timestamp="20201029 20:11:21.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:21.209" starttime="20201029 20:11:21.193"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:21.210" starttime="20201029 20:11:21.192"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:21.210" starttime="20201029 20:11:21.192"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:21.210" starttime="20201029 20:11:21.180"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:21.210" starttime="20201029 20:11:21.180"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:21.214" level="INFO">Running command 'ozone sh bucket link 67386-source/no-such-bucket 67386-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:24.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:24.739" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:11:24.739" starttime="20201029 20:11:21.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:24.741" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:11:24.741" starttime="20201029 20:11:24.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:24.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:24.742" starttime="20201029 20:11:24.741"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:24.742" starttime="20201029 20:11:21.211"></status>
</kw>
<msg timestamp="20201029 20:11:24.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:24.742" starttime="20201029 20:11:21.211"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:24.743" starttime="20201029 20:11:21.210"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:24.746" level="INFO">Running command 'ozone sh key list 67386-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:28.632" level="INFO">${rc} = 255</msg>
<msg timestamp="20201029 20:11:28.632" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:11:28.632" starttime="20201029 20:11:24.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:28.633" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201029 20:11:28.633" starttime="20201029 20:11:28.632"></status>
</kw>
<msg timestamp="20201029 20:11:28.634" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:11:28.634" starttime="20201029 20:11:24.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201029 20:11:28.635" starttime="20201029 20:11:28.634"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 20:11:28.635" critical="yes" starttime="20201029 20:11:21.178"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:28.643" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:28.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:28.644" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:11:28.644" starttime="20201029 20:11:28.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:28.645" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:11:28.645" starttime="20201029 20:11:28.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:28.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:28.646" starttime="20201029 20:11:28.645"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:28.646" starttime="20201029 20:11:28.639"></status>
</kw>
<msg timestamp="20201029 20:11:28.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:28.646" starttime="20201029 20:11:28.639"></status>
</kw>
<msg timestamp="20201029 20:11:28.647" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:11:28.647" starttime="20201029 20:11:28.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:11:28.647" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:11:28.648" starttime="20201029 20:11:28.647"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:28.653" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:28.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:28.671" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:11:28.671" starttime="20201029 20:11:28.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:28.672" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:11:28.673" starttime="20201029 20:11:28.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:28.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:28.673" starttime="20201029 20:11:28.673"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:28.674" starttime="20201029 20:11:28.649"></status>
</kw>
<msg timestamp="20201029 20:11:28.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:28.674" starttime="20201029 20:11:28.649"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:28.674" starttime="20201029 20:11:28.648"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:28.674" starttime="20201029 20:11:28.648"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:28.674" starttime="20201029 20:11:28.638"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:28.675" starttime="20201029 20:11:28.637"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:28.678" level="INFO">Running command 'ozone sh bucket link 67386-source/bucket1 67386-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:32.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:32.603" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:11:32.603" starttime="20201029 20:11:28.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:32.604" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:11:32.604" starttime="20201029 20:11:32.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:32.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:32.605" starttime="20201029 20:11:32.604"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:32.605" starttime="20201029 20:11:28.676"></status>
</kw>
<msg timestamp="20201029 20:11:32.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:32.606" starttime="20201029 20:11:28.675"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:32.606" starttime="20201029 20:11:28.675"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:32.610" level="INFO">Running command 'ozone sh bucket create 67386-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:36.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:36.426" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:11:36.426" starttime="20201029 20:11:32.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:36.427" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:11:36.428" starttime="20201029 20:11:36.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:36.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:36.428" starttime="20201029 20:11:36.428"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:36.429" starttime="20201029 20:11:32.607"></status>
</kw>
<msg timestamp="20201029 20:11:36.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:36.429" starttime="20201029 20:11:32.607"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:36.429" starttime="20201029 20:11:32.606"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:36.434" level="INFO">Running command 'ozone sh key put 67386-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:42.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:42.665" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:11:42.665" starttime="20201029 20:11:36.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:42.667" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:11:42.667" starttime="20201029 20:11:42.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:42.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:42.667" starttime="20201029 20:11:42.667"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:42.668" starttime="20201029 20:11:36.430"></status>
</kw>
<msg timestamp="20201029 20:11:42.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:42.668" starttime="20201029 20:11:36.430"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:42.668" starttime="20201029 20:11:36.429"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201029 20:11:42.672" level="INFO">${postfix} = 52153</msg>
<status status="PASS" endtime="20201029 20:11:42.672" starttime="20201029 20:11:42.672"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201029 20:11:42.673" level="INFO">${tmpfile} = /tmp/tempkey-52153</msg>
<status status="PASS" endtime="20201029 20:11:42.673" starttime="20201029 20:11:42.672"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:42.676" level="INFO">Running command 'ozone sh key get -f 67386-target/link1/key1 /tmp/tempkey-52153 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:48.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:48.839" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:11:48.839" starttime="20201029 20:11:42.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:48.840" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:11:48.840" starttime="20201029 20:11:48.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:48.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:48.841" starttime="20201029 20:11:48.840"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:48.841" starttime="20201029 20:11:42.674"></status>
</kw>
<msg timestamp="20201029 20:11:48.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:48.841" starttime="20201029 20:11:42.673"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:48.842" starttime="20201029 20:11:42.673"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201029 20:11:48.844" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-52153 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:48.846" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201029 20:11:48.847" starttime="20201029 20:11:48.842"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:48.851" level="INFO">Running command 'rm -f /tmp/tempkey-52153 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:48.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:48.854" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:11:48.854" starttime="20201029 20:11:48.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:48.855" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:11:48.855" starttime="20201029 20:11:48.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:48.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:48.856" starttime="20201029 20:11:48.856"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:48.856" starttime="20201029 20:11:48.848"></status>
</kw>
<msg timestamp="20201029 20:11:48.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:48.857" starttime="20201029 20:11:48.848"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:48.857" starttime="20201029 20:11:48.847"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 20:11:48.857" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201029 20:11:48.858" starttime="20201029 20:11:48.857"></status>
</kw>
<msg timestamp="20201029 20:11:48.858" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201029 20:11:48.858" starttime="20201029 20:11:42.669"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201029 20:11:48.858" starttime="20201029 20:11:48.858"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:48.859" starttime="20201029 20:11:42.668"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 20:11:48.859" critical="yes" starttime="20201029 20:11:28.636"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:48.865" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:48.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:48.867" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:11:48.867" starttime="20201029 20:11:48.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:48.868" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:11:48.868" starttime="20201029 20:11:48.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:48.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:48.869" starttime="20201029 20:11:48.868"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:48.869" starttime="20201029 20:11:48.862"></status>
</kw>
<msg timestamp="20201029 20:11:48.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:48.869" starttime="20201029 20:11:48.862"></status>
</kw>
<msg timestamp="20201029 20:11:48.870" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:11:48.870" starttime="20201029 20:11:48.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:11:48.870" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:11:48.871" starttime="20201029 20:11:48.870"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:48.875" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:48.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:48.894" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:11:48.894" starttime="20201029 20:11:48.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:48.895" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:11:48.895" starttime="20201029 20:11:48.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:48.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:48.896" starttime="20201029 20:11:48.895"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:48.896" starttime="20201029 20:11:48.872"></status>
</kw>
<msg timestamp="20201029 20:11:48.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:48.896" starttime="20201029 20:11:48.872"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:48.897" starttime="20201029 20:11:48.871"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:48.897" starttime="20201029 20:11:48.871"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:48.897" starttime="20201029 20:11:48.861"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:48.897" starttime="20201029 20:11:48.860"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:48.905" level="INFO">Running command 'ozone sh key put 67386-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:11:54.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:11:54.876" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:11:54.876" starttime="20201029 20:11:48.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:11:54.877" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:11:54.877" starttime="20201029 20:11:54.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:11:54.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:11:54.878" starttime="20201029 20:11:54.877"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:54.878" starttime="20201029 20:11:48.898"></status>
</kw>
<msg timestamp="20201029 20:11:54.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:11:54.878" starttime="20201029 20:11:48.898"></status>
</kw>
<status status="PASS" endtime="20201029 20:11:54.879" starttime="20201029 20:11:48.897"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201029 20:11:54.881" level="INFO">${postfix} = 07213</msg>
<status status="PASS" endtime="20201029 20:11:54.881" starttime="20201029 20:11:54.880"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201029 20:11:54.881" level="INFO">${tmpfile} = /tmp/tempkey-07213</msg>
<status status="PASS" endtime="20201029 20:11:54.881" starttime="20201029 20:11:54.881"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:11:54.885" level="INFO">Running command 'ozone sh key get -f 67386-source/bucket1/key2 /tmp/tempkey-07213 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:00.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:00.675" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:12:00.675" starttime="20201029 20:11:54.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:00.676" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:12:00.676" starttime="20201029 20:12:00.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:00.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:00.677" starttime="20201029 20:12:00.676"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:00.677" starttime="20201029 20:11:54.882"></status>
</kw>
<msg timestamp="20201029 20:12:00.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:00.677" starttime="20201029 20:11:54.882"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:00.678" starttime="20201029 20:11:54.881"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201029 20:12:00.681" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-07213 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:00.683" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201029 20:12:00.683" starttime="20201029 20:12:00.678"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:00.689" level="INFO">Running command 'rm -f /tmp/tempkey-07213 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:00.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:00.690" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:12:00.690" starttime="20201029 20:12:00.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:00.691" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:12:00.691" starttime="20201029 20:12:00.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:00.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:00.692" starttime="20201029 20:12:00.691"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:00.692" starttime="20201029 20:12:00.685"></status>
</kw>
<msg timestamp="20201029 20:12:00.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:00.692" starttime="20201029 20:12:00.684"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:00.692" starttime="20201029 20:12:00.683"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 20:12:00.693" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201029 20:12:00.693" starttime="20201029 20:12:00.692"></status>
</kw>
<msg timestamp="20201029 20:12:00.693" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201029 20:12:00.693" starttime="20201029 20:11:54.879"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201029 20:12:00.694" starttime="20201029 20:12:00.693"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:00.694" starttime="20201029 20:11:54.879"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 20:12:00.694" critical="yes" starttime="20201029 20:11:48.859"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:00.701" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:00.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:00.704" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:12:00.704" starttime="20201029 20:12:00.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:00.705" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:12:00.705" starttime="20201029 20:12:00.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:00.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:00.706" starttime="20201029 20:12:00.705"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:00.706" starttime="20201029 20:12:00.698"></status>
</kw>
<msg timestamp="20201029 20:12:00.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:00.706" starttime="20201029 20:12:00.698"></status>
</kw>
<msg timestamp="20201029 20:12:00.706" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:12:00.706" starttime="20201029 20:12:00.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:12:00.707" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:12:00.707" starttime="20201029 20:12:00.707"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:00.712" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:00.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:00.722" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:12:00.722" starttime="20201029 20:12:00.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:00.723" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:12:00.723" starttime="20201029 20:12:00.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:00.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:00.724" starttime="20201029 20:12:00.723"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:00.724" starttime="20201029 20:12:00.709"></status>
</kw>
<msg timestamp="20201029 20:12:00.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:00.724" starttime="20201029 20:12:00.708"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:00.725" starttime="20201029 20:12:00.708"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:00.725" starttime="20201029 20:12:00.707"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:00.725" starttime="20201029 20:12:00.697"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:00.725" starttime="20201029 20:12:00.696"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:00.729" level="INFO">Running command 'ozone sh key list 67386-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:04.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:04.902" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201029 20:12:04.902" starttime="20201029 20:12:00.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:04.903" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201029 20:12:04.903" starttime="20201029 20:12:04.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:04.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:04.904" starttime="20201029 20:12:04.903"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:04.904" starttime="20201029 20:12:00.726"></status>
</kw>
<msg timestamp="20201029 20:12:04.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:04.904" starttime="20201029 20:12:00.726"></status>
</kw>
<msg timestamp="20201029 20:12:04.905" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201029 20:12:04.905" starttime="20201029 20:12:00.725"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:04.910" level="INFO">Running command 'ozone sh key list 67386-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:09.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:09.054" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201029 20:12:09.054" starttime="20201029 20:12:04.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:09.055" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201029 20:12:09.055" starttime="20201029 20:12:09.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:09.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:09.056" starttime="20201029 20:12:09.056"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:09.057" starttime="20201029 20:12:04.906"></status>
</kw>
<msg timestamp="20201029 20:12:09.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:09.057" starttime="20201029 20:12:04.906"></status>
</kw>
<msg timestamp="20201029 20:12:09.057" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201029 20:12:09.057" starttime="20201029 20:12:04.905"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201029 20:12:09.058" starttime="20201029 20:12:09.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201029 20:12:09.059" starttime="20201029 20:12:09.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201029 20:12:09.059" starttime="20201029 20:12:09.059"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 20:12:09.059" critical="yes" starttime="20201029 20:12:00.695"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:09.066" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:09.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:09.069" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:12:09.070" starttime="20201029 20:12:09.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:09.071" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:12:09.071" starttime="20201029 20:12:09.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:09.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:09.072" starttime="20201029 20:12:09.071"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:09.072" starttime="20201029 20:12:09.063"></status>
</kw>
<msg timestamp="20201029 20:12:09.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:09.072" starttime="20201029 20:12:09.063"></status>
</kw>
<msg timestamp="20201029 20:12:09.073" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:12:09.073" starttime="20201029 20:12:09.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:12:09.074" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:12:09.074" starttime="20201029 20:12:09.073"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:09.079" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:09.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:09.098" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:12:09.098" starttime="20201029 20:12:09.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:09.099" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:12:09.099" starttime="20201029 20:12:09.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:09.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:09.099" starttime="20201029 20:12:09.099"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:09.100" starttime="20201029 20:12:09.076"></status>
</kw>
<msg timestamp="20201029 20:12:09.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:09.100" starttime="20201029 20:12:09.075"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:09.100" starttime="20201029 20:12:09.074"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:09.100" starttime="20201029 20:12:09.074"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:09.100" starttime="20201029 20:12:09.062"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:09.100" starttime="20201029 20:12:09.061"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:09.105" level="INFO">Running command 'ozone sh key delete 67386-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:13.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:13.128" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:12:13.128" starttime="20201029 20:12:09.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:13.129" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:12:13.129" starttime="20201029 20:12:13.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:13.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:13.130" starttime="20201029 20:12:13.129"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:13.130" starttime="20201029 20:12:09.102"></status>
</kw>
<msg timestamp="20201029 20:12:13.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:13.131" starttime="20201029 20:12:09.101"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:13.131" starttime="20201029 20:12:09.101"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:13.140" level="INFO">Running command 'ozone sh key list 67386-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:17.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:17.267" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201029 20:12:17.267" starttime="20201029 20:12:13.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:17.269" level="INFO">key1</msg>
<status status="PASS" endtime="20201029 20:12:17.269" starttime="20201029 20:12:17.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:17.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:17.270" starttime="20201029 20:12:17.269"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:17.270" starttime="20201029 20:12:13.132"></status>
</kw>
<msg timestamp="20201029 20:12:17.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:17.270" starttime="20201029 20:12:13.132"></status>
</kw>
<msg timestamp="20201029 20:12:17.271" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201029 20:12:17.271" starttime="20201029 20:12:13.131"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201029 20:12:17.271" starttime="20201029 20:12:17.271"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 20:12:17.272" critical="yes" starttime="20201029 20:12:09.060"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:17.281" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:17.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:17.284" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:12:17.284" starttime="20201029 20:12:17.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:17.285" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:12:17.286" starttime="20201029 20:12:17.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:17.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:17.286" starttime="20201029 20:12:17.286"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:17.287" starttime="20201029 20:12:17.278"></status>
</kw>
<msg timestamp="20201029 20:12:17.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:17.287" starttime="20201029 20:12:17.278"></status>
</kw>
<msg timestamp="20201029 20:12:17.287" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:12:17.287" starttime="20201029 20:12:17.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:12:17.288" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:12:17.288" starttime="20201029 20:12:17.287"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:17.294" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:17.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:17.316" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:12:17.316" starttime="20201029 20:12:17.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:17.317" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:12:17.317" starttime="20201029 20:12:17.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:17.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:17.318" starttime="20201029 20:12:17.317"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:17.318" starttime="20201029 20:12:17.290"></status>
</kw>
<msg timestamp="20201029 20:12:17.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:17.319" starttime="20201029 20:12:17.289"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:17.319" starttime="20201029 20:12:17.289"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:17.319" starttime="20201029 20:12:17.288"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:17.319" starttime="20201029 20:12:17.277"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:17.319" starttime="20201029 20:12:17.275"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:17.323" level="INFO">Running command 'ozone sh bucket list 67386-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:21.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:21.675" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:12:21.675" starttime="20201029 20:12:17.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:21.676" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "67386-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T20:11:24.565Z",
  "modificationTime" : "2020-10-29T20:11:24.565Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "67386-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "67386-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T20:11:02.798Z",
  "modificationTime" : "2020-10-29T20:11:20.998Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "67386-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "67386-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T20:11:32.407Z",
  "modificationTime" : "2020-10-29T20:11:32.407Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "67386-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "67386-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T20:10:55.584Z",
  "modificationTime" : "2020-10-29T20:11:17.635Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "67386-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "67386-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T20:10:59.128Z",
  "modificationTime" : "2020-10-29T20:10:59.128Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "67386-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201029 20:12:21.676" starttime="20201029 20:12:21.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:21.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:21.677" starttime="20201029 20:12:21.676"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:21.677" starttime="20201029 20:12:17.320"></status>
</kw>
<msg timestamp="20201029 20:12:21.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:21.678" starttime="20201029 20:12:17.320"></status>
</kw>
<msg timestamp="20201029 20:12:21.678" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:12:21.678" starttime="20201029 20:12:17.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201029 20:12:21.679" starttime="20201029 20:12:21.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201029 20:12:21.679" starttime="20201029 20:12:21.679"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 20:12:21.679" critical="yes" starttime="20201029 20:12:17.273"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:21.694" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:21.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:21.695" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:12:21.695" starttime="20201029 20:12:21.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:21.696" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:12:21.696" starttime="20201029 20:12:21.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:21.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:21.697" starttime="20201029 20:12:21.697"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:21.698" starttime="20201029 20:12:21.690"></status>
</kw>
<msg timestamp="20201029 20:12:21.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:21.698" starttime="20201029 20:12:21.690"></status>
</kw>
<msg timestamp="20201029 20:12:21.698" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:12:21.698" starttime="20201029 20:12:21.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:12:21.699" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:12:21.700" starttime="20201029 20:12:21.699"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:21.706" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:21.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:21.719" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:12:21.720" starttime="20201029 20:12:21.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:21.721" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:12:21.721" starttime="20201029 20:12:21.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:21.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:21.722" starttime="20201029 20:12:21.721"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:21.722" starttime="20201029 20:12:21.702"></status>
</kw>
<msg timestamp="20201029 20:12:21.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:21.722" starttime="20201029 20:12:21.701"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:21.722" starttime="20201029 20:12:21.700"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:21.722" starttime="20201029 20:12:21.700"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:21.723" starttime="20201029 20:12:21.689"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:21.723" starttime="20201029 20:12:21.681"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:21.728" level="INFO">Running command 'ozone sh bucket info 67386-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:25.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:25.732" level="INFO">${output} = 67386-source bucket1</msg>
<status status="PASS" endtime="20201029 20:12:25.732" starttime="20201029 20:12:21.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:25.733" level="INFO">67386-source bucket1</msg>
<status status="PASS" endtime="20201029 20:12:25.733" starttime="20201029 20:12:25.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:25.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:25.734" starttime="20201029 20:12:25.733"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:25.734" starttime="20201029 20:12:21.724"></status>
</kw>
<msg timestamp="20201029 20:12:25.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:25.734" starttime="20201029 20:12:21.723"></status>
</kw>
<msg timestamp="20201029 20:12:25.735" level="INFO">${result} = 67386-source bucket1</msg>
<status status="PASS" endtime="20201029 20:12:25.735" starttime="20201029 20:12:21.723"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201029 20:12:25.735" starttime="20201029 20:12:25.735"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 20:12:25.736" critical="yes" starttime="20201029 20:12:21.680"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:25.743" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:25.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:25.744" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:12:25.744" starttime="20201029 20:12:25.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:25.745" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:12:25.745" starttime="20201029 20:12:25.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:25.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:25.746" starttime="20201029 20:12:25.746"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:25.747" starttime="20201029 20:12:25.739"></status>
</kw>
<msg timestamp="20201029 20:12:25.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:25.747" starttime="20201029 20:12:25.739"></status>
</kw>
<msg timestamp="20201029 20:12:25.747" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:12:25.747" starttime="20201029 20:12:25.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:12:25.748" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:12:25.748" starttime="20201029 20:12:25.747"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:25.753" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:25.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:25.768" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:12:25.768" starttime="20201029 20:12:25.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:25.770" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:12:25.770" starttime="20201029 20:12:25.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:25.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:25.770" starttime="20201029 20:12:25.770"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:25.771" starttime="20201029 20:12:25.750"></status>
</kw>
<msg timestamp="20201029 20:12:25.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:25.771" starttime="20201029 20:12:25.749"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:25.771" starttime="20201029 20:12:25.748"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:25.771" starttime="20201029 20:12:25.748"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:25.771" starttime="20201029 20:12:25.738"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:25.771" starttime="20201029 20:12:25.737"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:25.775" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 67386-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:29.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:29.472" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:12:29.472" starttime="20201029 20:12:25.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:29.473" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201029 20:12:29.474" starttime="20201029 20:12:29.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:29.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:29.474" starttime="20201029 20:12:29.474"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:29.475" starttime="20201029 20:12:25.772"></status>
</kw>
<msg timestamp="20201029 20:12:29.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:29.475" starttime="20201029 20:12:25.772"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:29.475" starttime="20201029 20:12:25.772"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:29.481" level="INFO">Running command 'ozone sh bucket getacl 67386-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:33.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:33.600" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201029 20:12:33.600" starttime="20201029 20:12:29.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:33.602" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201029 20:12:33.602" starttime="20201029 20:12:33.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:33.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:33.603" starttime="20201029 20:12:33.602"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:33.603" starttime="20201029 20:12:29.478"></status>
</kw>
<msg timestamp="20201029 20:12:33.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:33.603" starttime="20201029 20:12:29.477"></status>
</kw>
<msg timestamp="20201029 20:12:33.603" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201029 20:12:33.603" starttime="20201029 20:12:29.476"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201029 20:12:33.604" starttime="20201029 20:12:33.604"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:33.604" starttime="20201029 20:12:29.475"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:33.611" level="INFO">Running command 'ozone sh bucket getacl 67386-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:37.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:37.328" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:12:37.328" starttime="20201029 20:12:33.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:37.329" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:12:37.329" starttime="20201029 20:12:37.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:37.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:37.330" starttime="20201029 20:12:37.329"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:37.330" starttime="20201029 20:12:33.607"></status>
</kw>
<msg timestamp="20201029 20:12:37.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:37.331" starttime="20201029 20:12:33.606"></status>
</kw>
<msg timestamp="20201029 20:12:37.331" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201029 20:12:37.331" starttime="20201029 20:12:33.606"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201029 20:12:37.331" starttime="20201029 20:12:37.331"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:37.332" starttime="20201029 20:12:33.605"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:37.336" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 67386-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:41.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:41.150" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:12:41.150" starttime="20201029 20:12:37.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:41.151" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201029 20:12:41.151" starttime="20201029 20:12:41.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:41.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:41.152" starttime="20201029 20:12:41.151"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:41.153" starttime="20201029 20:12:37.333"></status>
</kw>
<msg timestamp="20201029 20:12:41.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:41.153" starttime="20201029 20:12:37.332"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:41.153" starttime="20201029 20:12:37.332"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:41.159" level="INFO">Running command 'ozone sh bucket getacl 67386-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:45.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:45.110" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:12:45.110" starttime="20201029 20:12:41.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:45.112" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:12:45.112" starttime="20201029 20:12:45.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:45.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:45.113" starttime="20201029 20:12:45.112"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:45.113" starttime="20201029 20:12:41.155"></status>
</kw>
<msg timestamp="20201029 20:12:45.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:45.113" starttime="20201029 20:12:41.155"></status>
</kw>
<msg timestamp="20201029 20:12:45.114" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201029 20:12:45.114" starttime="20201029 20:12:41.154"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201029 20:12:45.114" starttime="20201029 20:12:45.114"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:45.115" starttime="20201029 20:12:41.153"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:45.122" level="INFO">Running command 'ozone sh bucket getacl 67386-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:49.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:49.048" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201029 20:12:49.048" starttime="20201029 20:12:45.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:49.050" level="INFO">READ</msg>
<status status="PASS" endtime="20201029 20:12:49.050" starttime="20201029 20:12:49.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:49.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:49.050" starttime="20201029 20:12:49.050"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:49.051" starttime="20201029 20:12:45.117"></status>
</kw>
<msg timestamp="20201029 20:12:49.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:49.051" starttime="20201029 20:12:45.117"></status>
</kw>
<msg timestamp="20201029 20:12:49.051" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201029 20:12:49.051" starttime="20201029 20:12:45.115"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201029 20:12:49.052" starttime="20201029 20:12:49.051"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:49.052" starttime="20201029 20:12:45.115"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 20:12:49.052" critical="yes" starttime="20201029 20:12:25.737"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:49.061" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:49.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:49.062" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:12:49.062" starttime="20201029 20:12:49.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:49.063" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:12:49.063" starttime="20201029 20:12:49.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:49.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:49.064" starttime="20201029 20:12:49.064"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:49.065" starttime="20201029 20:12:49.057"></status>
</kw>
<msg timestamp="20201029 20:12:49.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:49.065" starttime="20201029 20:12:49.056"></status>
</kw>
<msg timestamp="20201029 20:12:49.065" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:12:49.065" starttime="20201029 20:12:49.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:12:49.066" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:12:49.066" starttime="20201029 20:12:49.066"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:49.072" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:49.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:49.086" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:12:49.086" starttime="20201029 20:12:49.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:49.087" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:12:49.087" starttime="20201029 20:12:49.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:49.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:49.088" starttime="20201029 20:12:49.087"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:49.088" starttime="20201029 20:12:49.068"></status>
</kw>
<msg timestamp="20201029 20:12:49.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:49.088" starttime="20201029 20:12:49.068"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:49.089" starttime="20201029 20:12:49.067"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:49.089" starttime="20201029 20:12:49.066"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:49.089" starttime="20201029 20:12:49.055"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:49.089" starttime="20201029 20:12:49.055"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:49.093" level="INFO">Running command 'ozone sh bucket link 67386-source/bucket2 67386-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:52.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:52.618" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:12:52.618" starttime="20201029 20:12:49.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:52.620" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:12:52.622" starttime="20201029 20:12:52.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:52.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:52.623" starttime="20201029 20:12:52.623"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:52.624" starttime="20201029 20:12:49.091"></status>
</kw>
<msg timestamp="20201029 20:12:52.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:52.624" starttime="20201029 20:12:49.090"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:52.624" starttime="20201029 20:12:49.090"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:52.627" level="INFO">Running command 'ozone sh bucket create 67386-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:56.121" level="INFO">${rc} = 255</msg>
<msg timestamp="20201029 20:12:56.121" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:12:56.122" starttime="20201029 20:12:52.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:56.123" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201029 20:12:56.123" starttime="20201029 20:12:56.122"></status>
</kw>
<msg timestamp="20201029 20:12:56.123" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:12:56.123" starttime="20201029 20:12:52.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201029 20:12:56.124" starttime="20201029 20:12:56.124"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:56.129" level="INFO">Running command 'ozone sh bucket create 67386-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:12:59.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:12:59.648" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:12:59.648" starttime="20201029 20:12:56.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:12:59.650" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:12:59.650" starttime="20201029 20:12:59.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:12:59.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:12:59.651" starttime="20201029 20:12:59.650"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:59.651" starttime="20201029 20:12:56.125"></status>
</kw>
<msg timestamp="20201029 20:12:59.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:12:59.651" starttime="20201029 20:12:56.125"></status>
</kw>
<status status="PASS" endtime="20201029 20:12:59.651" starttime="20201029 20:12:56.124"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:12:59.654" level="INFO">Running command 'ozone sh bucket link 67386-source/bucket1 67386-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:03.206" level="INFO">${rc} = 255</msg>
<msg timestamp="20201029 20:13:03.206" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:03.206" starttime="20201029 20:12:59.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:03.208" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201029 20:13:03.208" starttime="20201029 20:13:03.207"></status>
</kw>
<msg timestamp="20201029 20:13:03.208" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:03.208" starttime="20201029 20:12:59.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201029 20:13:03.209" starttime="20201029 20:13:03.209"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 20:13:03.209" critical="yes" starttime="20201029 20:12:49.053"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:03.217" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:03.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:03.218" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:13:03.218" starttime="20201029 20:13:03.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:03.219" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:13:03.219" starttime="20201029 20:13:03.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:03.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:03.220" starttime="20201029 20:13:03.220"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:03.221" starttime="20201029 20:13:03.213"></status>
</kw>
<msg timestamp="20201029 20:13:03.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:03.221" starttime="20201029 20:13:03.213"></status>
</kw>
<msg timestamp="20201029 20:13:03.221" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:13:03.221" starttime="20201029 20:13:03.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:13:03.222" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:13:03.222" starttime="20201029 20:13:03.221"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:03.227" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:03.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:03.257" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:13:03.257" starttime="20201029 20:13:03.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:03.258" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:13:03.258" starttime="20201029 20:13:03.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:03.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:03.259" starttime="20201029 20:13:03.258"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:03.259" starttime="20201029 20:13:03.224"></status>
</kw>
<msg timestamp="20201029 20:13:03.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:03.259" starttime="20201029 20:13:03.223"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:03.259" starttime="20201029 20:13:03.223"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:03.259" starttime="20201029 20:13:03.222"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:03.260" starttime="20201029 20:13:03.212"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:03.260" starttime="20201029 20:13:03.211"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:03.265" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:03.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:03.270" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:13:03.270" starttime="20201029 20:13:03.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:03.271" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:13:03.271" starttime="20201029 20:13:03.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:03.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:03.272" starttime="20201029 20:13:03.271"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:03.272" starttime="20201029 20:13:03.262"></status>
</kw>
<msg timestamp="20201029 20:13:03.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:03.272" starttime="20201029 20:13:03.262"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:03.272" starttime="20201029 20:13:03.261"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:03.279" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:03.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:03.280" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:13:03.280" starttime="20201029 20:13:03.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:03.281" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:13:03.281" starttime="20201029 20:13:03.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:03.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:03.282" starttime="20201029 20:13:03.281"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:03.282" starttime="20201029 20:13:03.274"></status>
</kw>
<msg timestamp="20201029 20:13:03.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:03.282" starttime="20201029 20:13:03.274"></status>
</kw>
<msg timestamp="20201029 20:13:03.282" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:13:03.282" starttime="20201029 20:13:03.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:13:03.283" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:13:03.283" starttime="20201029 20:13:03.283"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:03.289" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:03.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:03.311" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:13:03.311" starttime="20201029 20:13:03.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:03.313" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:13:03.313" starttime="20201029 20:13:03.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:03.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:03.314" starttime="20201029 20:13:03.313"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:03.315" starttime="20201029 20:13:03.286"></status>
</kw>
<msg timestamp="20201029 20:13:03.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:03.315" starttime="20201029 20:13:03.285"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:03.315" starttime="20201029 20:13:03.284"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:03.315" starttime="20201029 20:13:03.283"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:03.315" starttime="20201029 20:13:03.273"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:03.315" starttime="20201029 20:13:03.272"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:03.319" level="INFO">Running command 'ozone sh key list 67386-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:07.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:07.054" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:07.054" starttime="20201029 20:13:03.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:07.055" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "67386-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-10-29T20:10:46.318Z",
  "modificationTime" : "2020-10-29T20:10:48.202Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201029 20:13:07.056" starttime="20201029 20:13:07.055"></status>
</kw>
<msg timestamp="20201029 20:13:07.056" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:07.056" starttime="20201029 20:13:03.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201029 20:13:07.057" starttime="20201029 20:13:07.056"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:07.057" starttime="20201029 20:13:03.260"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:07.057" starttime="20201029 20:13:03.260"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 20:13:07.057" critical="yes" starttime="20201029 20:13:03.210"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:07.065" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:07.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:07.067" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:13:07.067" starttime="20201029 20:13:07.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:07.068" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:13:07.068" starttime="20201029 20:13:07.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:07.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:07.069" starttime="20201029 20:13:07.068"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:07.069" starttime="20201029 20:13:07.062"></status>
</kw>
<msg timestamp="20201029 20:13:07.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:07.070" starttime="20201029 20:13:07.061"></status>
</kw>
<msg timestamp="20201029 20:13:07.070" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:13:07.070" starttime="20201029 20:13:07.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:13:07.071" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:13:07.071" starttime="20201029 20:13:07.070"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:07.076" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:07.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:07.086" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:13:07.086" starttime="20201029 20:13:07.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:07.087" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:13:07.087" starttime="20201029 20:13:07.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:07.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:07.088" starttime="20201029 20:13:07.088"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:07.088" starttime="20201029 20:13:07.072"></status>
</kw>
<msg timestamp="20201029 20:13:07.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:07.090" starttime="20201029 20:13:07.072"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:07.090" starttime="20201029 20:13:07.071"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:07.090" starttime="20201029 20:13:07.071"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:07.090" starttime="20201029 20:13:07.060"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:07.090" starttime="20201029 20:13:07.060"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:07.096" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:07.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:07.098" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:13:07.098" starttime="20201029 20:13:07.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:07.099" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:13:07.099" starttime="20201029 20:13:07.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:07.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:07.100" starttime="20201029 20:13:07.099"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:07.100" starttime="20201029 20:13:07.092"></status>
</kw>
<msg timestamp="20201029 20:13:07.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:07.100" starttime="20201029 20:13:07.092"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:07.100" starttime="20201029 20:13:07.091"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:07.107" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:07.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:07.109" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:13:07.109" starttime="20201029 20:13:07.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:07.110" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:13:07.110" starttime="20201029 20:13:07.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:07.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:07.111" starttime="20201029 20:13:07.110"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:07.111" starttime="20201029 20:13:07.102"></status>
</kw>
<msg timestamp="20201029 20:13:07.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:07.111" starttime="20201029 20:13:07.102"></status>
</kw>
<msg timestamp="20201029 20:13:07.111" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:13:07.111" starttime="20201029 20:13:07.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:13:07.112" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:13:07.112" starttime="20201029 20:13:07.111"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:07.118" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:07.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:07.138" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:13:07.139" starttime="20201029 20:13:07.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:07.140" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:13:07.140" starttime="20201029 20:13:07.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:07.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:07.140" starttime="20201029 20:13:07.140"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:07.141" starttime="20201029 20:13:07.114"></status>
</kw>
<msg timestamp="20201029 20:13:07.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:07.141" starttime="20201029 20:13:07.113"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:07.141" starttime="20201029 20:13:07.113"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:07.141" starttime="20201029 20:13:07.112"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:07.141" starttime="20201029 20:13:07.101"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:07.142" starttime="20201029 20:13:07.101"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:07.145" level="INFO">Running command 'ozone sh key list 67386-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:10.848" level="INFO">${rc} = 255</msg>
<msg timestamp="20201029 20:13:10.848" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:10.848" starttime="20201029 20:13:07.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:10.849" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201029 20:13:10.849" starttime="20201029 20:13:10.848"></status>
</kw>
<msg timestamp="20201029 20:13:10.850" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:10.850" starttime="20201029 20:13:07.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201029 20:13:10.850" starttime="20201029 20:13:10.850"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:10.850" starttime="20201029 20:13:07.091"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:10.850" starttime="20201029 20:13:07.091"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 20:13:10.851" critical="yes" starttime="20201029 20:13:07.059"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:10.858" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:10.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:10.860" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:13:10.860" starttime="20201029 20:13:10.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:10.861" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:13:10.861" starttime="20201029 20:13:10.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:10.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:10.862" starttime="20201029 20:13:10.861"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:10.862" starttime="20201029 20:13:10.855"></status>
</kw>
<msg timestamp="20201029 20:13:10.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:10.862" starttime="20201029 20:13:10.854"></status>
</kw>
<msg timestamp="20201029 20:13:10.863" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:13:10.863" starttime="20201029 20:13:10.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:13:10.863" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:13:10.863" starttime="20201029 20:13:10.863"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:10.869" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:10.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:10.891" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:13:10.891" starttime="20201029 20:13:10.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:10.892" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:13:10.892" starttime="20201029 20:13:10.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:10.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:10.892" starttime="20201029 20:13:10.892"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:10.893" starttime="20201029 20:13:10.865"></status>
</kw>
<msg timestamp="20201029 20:13:10.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:10.893" starttime="20201029 20:13:10.864"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:10.893" starttime="20201029 20:13:10.864"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:10.893" starttime="20201029 20:13:10.863"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:10.893" starttime="20201029 20:13:10.853"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:10.894" starttime="20201029 20:13:10.853"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:10.898" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:10.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:10.901" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:13:10.901" starttime="20201029 20:13:10.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:10.902" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:13:10.902" starttime="20201029 20:13:10.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:10.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:10.903" starttime="20201029 20:13:10.903"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:10.903" starttime="20201029 20:13:10.895"></status>
</kw>
<msg timestamp="20201029 20:13:10.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:10.904" starttime="20201029 20:13:10.895"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:10.904" starttime="20201029 20:13:10.895"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:10.908" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:10.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:10.910" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:13:10.910" starttime="20201029 20:13:10.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:10.911" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:13:10.911" starttime="20201029 20:13:10.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:10.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:10.912" starttime="20201029 20:13:10.911"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:10.912" starttime="20201029 20:13:10.906"></status>
</kw>
<msg timestamp="20201029 20:13:10.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:10.912" starttime="20201029 20:13:10.905"></status>
</kw>
<msg timestamp="20201029 20:13:10.912" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:13:10.912" starttime="20201029 20:13:10.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:13:10.913" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:13:10.913" starttime="20201029 20:13:10.913"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:10.917" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:10.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:10.939" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:13:10.939" starttime="20201029 20:13:10.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:10.940" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:13:10.940" starttime="20201029 20:13:10.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:10.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:10.940" starttime="20201029 20:13:10.940"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:10.941" starttime="20201029 20:13:10.915"></status>
</kw>
<msg timestamp="20201029 20:13:10.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:10.941" starttime="20201029 20:13:10.914"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:10.941" starttime="20201029 20:13:10.914"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:10.941" starttime="20201029 20:13:10.913"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:10.941" starttime="20201029 20:13:10.904"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:10.941" starttime="20201029 20:13:10.904"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:10.947" level="INFO">Running command 'ozone sh bucket info 67386-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:14.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:14.775" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:14.775" starttime="20201029 20:13:10.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:14.776" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "67386-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T20:11:02.798Z",
  "modificationTime" : "2020-10-29T20:11:20.998Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "67386-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201029 20:13:14.776" starttime="20201029 20:13:14.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:14.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:14.777" starttime="20201029 20:13:14.776"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:14.777" starttime="20201029 20:13:10.942"></status>
</kw>
<msg timestamp="20201029 20:13:14.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:14.777" starttime="20201029 20:13:10.942"></status>
</kw>
<msg timestamp="20201029 20:13:14.778" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:14.778" starttime="20201029 20:13:10.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201029 20:13:14.778" starttime="20201029 20:13:14.778"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201029 20:13:14.779" starttime="20201029 20:13:14.779"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:14.783" level="INFO">Running command 'ozone sh key list 67386-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:18.438" level="INFO">${rc} = 255</msg>
<msg timestamp="20201029 20:13:18.439" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:18.439" starttime="20201029 20:13:14.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:18.440" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201029 20:13:18.440" starttime="20201029 20:13:18.439"></status>
</kw>
<msg timestamp="20201029 20:13:18.440" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:18.440" starttime="20201029 20:13:14.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201029 20:13:18.441" starttime="20201029 20:13:18.440"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:18.441" starttime="20201029 20:13:10.894"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:18.441" starttime="20201029 20:13:10.894"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 20:13:18.441" critical="yes" starttime="20201029 20:13:10.851"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:18.448" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:18.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:18.451" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:13:18.451" starttime="20201029 20:13:18.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:18.452" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:13:18.453" starttime="20201029 20:13:18.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:18.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:18.453" starttime="20201029 20:13:18.453"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:18.454" starttime="20201029 20:13:18.445"></status>
</kw>
<msg timestamp="20201029 20:13:18.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:18.454" starttime="20201029 20:13:18.445"></status>
</kw>
<msg timestamp="20201029 20:13:18.454" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:13:18.454" starttime="20201029 20:13:18.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:13:18.455" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:13:18.455" starttime="20201029 20:13:18.454"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:18.460" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:18.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:18.477" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:13:18.477" starttime="20201029 20:13:18.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:18.478" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:13:18.478" starttime="20201029 20:13:18.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:18.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:18.478" starttime="20201029 20:13:18.478"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:18.479" starttime="20201029 20:13:18.457"></status>
</kw>
<msg timestamp="20201029 20:13:18.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:18.479" starttime="20201029 20:13:18.456"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:18.479" starttime="20201029 20:13:18.456"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:18.479" starttime="20201029 20:13:18.455"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:18.479" starttime="20201029 20:13:18.444"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:18.479" starttime="20201029 20:13:18.443"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:18.485" level="INFO">Running command 'ozone sh bucket link 67386-target/loop1 67386-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:22.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:22.206" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:22.206" starttime="20201029 20:13:18.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:22.207" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:13:22.207" starttime="20201029 20:13:22.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:22.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:22.208" starttime="20201029 20:13:22.208"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:22.208" starttime="20201029 20:13:18.481"></status>
</kw>
<msg timestamp="20201029 20:13:22.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:22.209" starttime="20201029 20:13:18.481"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:22.209" starttime="20201029 20:13:18.480"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:22.213" level="INFO">Running command 'ozone sh bucket link 67386-target/loop2 67386-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:25.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:25.825" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:25.825" starttime="20201029 20:13:22.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:25.826" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:13:25.827" starttime="20201029 20:13:25.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:25.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:25.827" starttime="20201029 20:13:25.827"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:25.828" starttime="20201029 20:13:22.210"></status>
</kw>
<msg timestamp="20201029 20:13:25.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:25.828" starttime="20201029 20:13:22.210"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:25.828" starttime="20201029 20:13:22.209"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:25.833" level="INFO">Running command 'ozone sh bucket link 67386-target/loop3 67386-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:29.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:29.422" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:29.423" starttime="20201029 20:13:25.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:29.424" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:13:29.424" starttime="20201029 20:13:29.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:29.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:29.425" starttime="20201029 20:13:29.424"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:29.425" starttime="20201029 20:13:25.829"></status>
</kw>
<msg timestamp="20201029 20:13:29.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:29.425" starttime="20201029 20:13:25.829"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:29.425" starttime="20201029 20:13:25.828"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:29.430" level="INFO">Running command 'ozone sh key list 67386-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:32.705" level="INFO">${rc} = 255</msg>
<msg timestamp="20201029 20:13:32.705" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:32.705" starttime="20201029 20:13:29.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:32.706" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201029 20:13:32.706" starttime="20201029 20:13:32.706"></status>
</kw>
<msg timestamp="20201029 20:13:32.707" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:32.707" starttime="20201029 20:13:29.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201029 20:13:32.707" starttime="20201029 20:13:32.707"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 20:13:32.708" critical="yes" starttime="20201029 20:13:18.442"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:32.714" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:32.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:32.717" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:13:32.717" starttime="20201029 20:13:32.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:32.718" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:13:32.718" starttime="20201029 20:13:32.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:32.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:32.719" starttime="20201029 20:13:32.718"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:32.719" starttime="20201029 20:13:32.711"></status>
</kw>
<msg timestamp="20201029 20:13:32.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:32.719" starttime="20201029 20:13:32.711"></status>
</kw>
<msg timestamp="20201029 20:13:32.719" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:13:32.720" starttime="20201029 20:13:32.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:13:32.720" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:13:32.720" starttime="20201029 20:13:32.720"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:32.724" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:32.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:32.747" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:13:32.747" starttime="20201029 20:13:32.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:32.748" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:13:32.748" starttime="20201029 20:13:32.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:32.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:32.749" starttime="20201029 20:13:32.748"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:32.749" starttime="20201029 20:13:32.722"></status>
</kw>
<msg timestamp="20201029 20:13:32.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:32.749" starttime="20201029 20:13:32.722"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:32.749" starttime="20201029 20:13:32.721"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:32.749" starttime="20201029 20:13:32.720"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:32.750" starttime="20201029 20:13:32.710"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:32.750" starttime="20201029 20:13:32.709"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:32.753" level="INFO">Running command 'ozone sh bucket link 67386-source/bucket1 67386-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:36.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:36.524" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:36.524" starttime="20201029 20:13:32.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:36.525" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:13:36.525" starttime="20201029 20:13:36.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:36.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:36.526" starttime="20201029 20:13:36.525"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:36.526" starttime="20201029 20:13:32.751"></status>
</kw>
<msg timestamp="20201029 20:13:36.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:36.526" starttime="20201029 20:13:32.751"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:36.527" starttime="20201029 20:13:32.750"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:36.530" level="INFO">Running command 'ozone sh key put 67386-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:42.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:42.318" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:42.318" starttime="20201029 20:13:36.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:42.319" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:13:42.319" starttime="20201029 20:13:42.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:42.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:42.320" starttime="20201029 20:13:42.320"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:42.320" starttime="20201029 20:13:36.528"></status>
</kw>
<msg timestamp="20201029 20:13:42.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:42.321" starttime="20201029 20:13:36.528"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:42.321" starttime="20201029 20:13:36.527"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201029 20:13:42.323" level="INFO">${postfix} = 73250</msg>
<status status="PASS" endtime="20201029 20:13:42.323" starttime="20201029 20:13:42.323"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201029 20:13:42.324" level="INFO">${tmpfile} = /tmp/tempkey-73250</msg>
<status status="PASS" endtime="20201029 20:13:42.324" starttime="20201029 20:13:42.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:42.328" level="INFO">Running command 'ozone sh key get -f 67386-target/link1/key3 /tmp/tempkey-73250 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:47.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:47.944" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:47.944" starttime="20201029 20:13:42.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:47.945" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:13:47.945" starttime="20201029 20:13:47.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:47.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:47.946" starttime="20201029 20:13:47.945"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:47.946" starttime="20201029 20:13:42.325"></status>
</kw>
<msg timestamp="20201029 20:13:47.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:47.947" starttime="20201029 20:13:42.325"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:47.947" starttime="20201029 20:13:42.324"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201029 20:13:47.951" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-73250 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:47.952" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201029 20:13:47.952" starttime="20201029 20:13:47.947"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:47.958" level="INFO">Running command 'rm -f /tmp/tempkey-73250 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:47.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:47.959" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:13:47.959" starttime="20201029 20:13:47.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:47.960" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:13:47.960" starttime="20201029 20:13:47.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:47.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:47.961" starttime="20201029 20:13:47.960"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:47.961" starttime="20201029 20:13:47.954"></status>
</kw>
<msg timestamp="20201029 20:13:47.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:47.961" starttime="20201029 20:13:47.954"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:47.962" starttime="20201029 20:13:47.953"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 20:13:47.963" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201029 20:13:47.963" starttime="20201029 20:13:47.962"></status>
</kw>
<msg timestamp="20201029 20:13:47.963" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201029 20:13:47.963" starttime="20201029 20:13:42.322"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201029 20:13:47.963" starttime="20201029 20:13:47.963"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:47.964" starttime="20201029 20:13:42.321"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 20:13:47.964" critical="yes" starttime="20201029 20:13:32.708"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:47.974" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:47.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:47.976" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201029 20:13:47.976" starttime="20201029 20:13:47.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:47.977" level="INFO">scm</msg>
<status status="PASS" endtime="20201029 20:13:47.977" starttime="20201029 20:13:47.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:47.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:47.978" starttime="20201029 20:13:47.977"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:47.978" starttime="20201029 20:13:47.971"></status>
</kw>
<msg timestamp="20201029 20:13:47.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:47.978" starttime="20201029 20:13:47.971"></status>
</kw>
<msg timestamp="20201029 20:13:47.979" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201029 20:13:47.979" starttime="20201029 20:13:47.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201029 20:13:47.979" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201029 20:13:47.980" starttime="20201029 20:13:47.979"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:47.985" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:48.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:48.008" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 20:13:48.008" starttime="20201029 20:13:47.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:48.009" level="INFO"></msg>
<status status="PASS" endtime="20201029 20:13:48.009" starttime="20201029 20:13:48.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:48.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:48.010" starttime="20201029 20:13:48.009"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:48.010" starttime="20201029 20:13:47.982"></status>
</kw>
<msg timestamp="20201029 20:13:48.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:48.010" starttime="20201029 20:13:47.981"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:48.011" starttime="20201029 20:13:47.981"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:48.011" starttime="20201029 20:13:47.980"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:48.011" starttime="20201029 20:13:47.969"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:48.011" starttime="20201029 20:13:47.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:48.015" level="INFO">Running command 'ozone sh bucket delete 67386-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:51.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:51.646" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:51.646" starttime="20201029 20:13:48.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:51.647" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201029 20:13:51.647" starttime="20201029 20:13:51.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:51.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:51.648" starttime="20201029 20:13:51.647"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:51.648" starttime="20201029 20:13:48.012"></status>
</kw>
<msg timestamp="20201029 20:13:51.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:51.648" starttime="20201029 20:13:48.012"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:51.649" starttime="20201029 20:13:48.011"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:51.653" level="INFO">Running command 'ozone sh bucket list 67386-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:55.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:55.671" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:55.671" starttime="20201029 20:13:51.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:55.672" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "67386-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T20:12:59.442Z",
  "modificationTime" : "2020-10-29T20:12:59.442Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "67386-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T20:11:24.565Z",
  "modificationTime" : "2020-10-29T20:11:24.565Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "67386-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "67386-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T20:11:02.798Z",
  "modificationTime" : "2020-10-29T20:11:20.998Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "67386-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "67386-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T20:12:52.532Z",
  "modificationTime" : "2020-10-29T20:12:52.532Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "67386-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "67386-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T20:13:36.342Z",
  "modificationTime" : "2020-10-29T20:13:36.342Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "67386-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "67386-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T20:13:29.307Z",
  "modificationTime" : "2020-10-29T20:13:29.307Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "67386-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "67386-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T20:13:22.140Z",
  "modificationTime" : "2020-10-29T20:13:22.140Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "67386-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "67386-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T20:13:25.735Z",
  "modificationTime" : "2020-10-29T20:13:25.735Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "67386-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "67386-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T20:10:55.584Z",
  "modificationTime" : "2020-10-29T20:11:17.635Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "67386-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "67386-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T20:10:59.128Z",
  "modificationTime" : "2020-10-29T20:10:59.128Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "67386-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201029 20:13:55.672" starttime="20201029 20:13:55.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:55.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:55.673" starttime="20201029 20:13:55.672"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:55.673" starttime="20201029 20:13:51.650"></status>
</kw>
<msg timestamp="20201029 20:13:55.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:55.674" starttime="20201029 20:13:51.650"></status>
</kw>
<msg timestamp="20201029 20:13:55.674" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201029 20:13:55.674" starttime="20201029 20:13:51.649"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201029 20:13:55.675" starttime="20201029 20:13:55.674"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 20:13:55.679" level="INFO">Running command 'ozone sh key list 67386-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 20:13:59.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 20:13:59.401" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201029 20:13:59.401" starttime="20201029 20:13:55.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 20:13:59.402" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201029 20:13:59.402" starttime="20201029 20:13:59.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 20:13:59.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 20:13:59.403" starttime="20201029 20:13:59.402"></status>
</kw>
<status status="PASS" endtime="20201029 20:13:59.404" starttime="20201029 20:13:55.676"></status>
</kw>
<msg timestamp="20201029 20:13:59.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 20:13:59.404" starttime="20201029 20:13:55.675"></status>
</kw>
<msg timestamp="20201029 20:13:59.404" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201029 20:13:59.404" starttime="20201029 20:13:55.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201029 20:13:59.405" starttime="20201029 20:13:59.404"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 20:13:59.405" critical="yes" starttime="20201029 20:13:47.968"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201029 20:13:59.409" starttime="20201029 20:10:31.066"></status>
</suite>
<status status="PASS" elapsedtime="238625" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
