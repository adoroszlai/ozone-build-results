<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201029 19:49:21.716" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:36:09.146" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:36:11.416" level="INFO">${rc} = 255</msg>
<msg timestamp="20201029 19:36:11.417" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201029 19:36:11.417" starttime="20201029 19:36:09.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:36:11.418" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201029 19:36:11.418" starttime="20201029 19:36:11.417"></status>
</kw>
<msg timestamp="20201029 19:36:11.418" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201029 19:36:11.418" starttime="20201029 19:36:09.141"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:36:11.424" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:36:13.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:36:13.470" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:36:13.470" starttime="20201029 19:36:11.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:36:13.471" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:36:13.471" starttime="20201029 19:36:13.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:36:13.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:36:13.472" starttime="20201029 19:36:13.472"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:13.472" starttime="20201029 19:36:11.420"></status>
</kw>
<msg timestamp="20201029 19:36:13.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:36:13.473" starttime="20201029 19:36:11.420"></status>
</kw>
<msg timestamp="20201029 19:36:13.473" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201029 19:36:13.473" starttime="20201029 19:36:11.419"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201029 19:36:13.473" starttime="20201029 19:36:13.473"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:13.474" starttime="20201029 19:36:11.419"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:13.474" starttime="20201029 19:36:11.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:36:13.479" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:36:15.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:36:15.540" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:36:15.540" starttime="20201029 19:36:13.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:36:15.541" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:36:15.541" starttime="20201029 19:36:15.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:36:15.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:36:15.542" starttime="20201029 19:36:15.541"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:15.542" starttime="20201029 19:36:13.476"></status>
</kw>
<msg timestamp="20201029 19:36:15.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:36:15.543" starttime="20201029 19:36:13.475"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:15.543" starttime="20201029 19:36:13.475"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:15.543" starttime="20201029 19:36:13.474"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:15.543" starttime="20201029 19:36:13.474"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201029 19:36:15.544" starttime="20201029 19:36:15.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:36:15.548" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:36:17.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:36:17.741" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T19:36:15.420Z",
  "modificat...</msg>
<status status="PASS" endtime="20201029 19:36:17.741" starttime="20201029 19:36:15.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:36:17.742" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T19:36:15.420Z",
  "modificationTime" : "2020-10-29T19:36:15.420Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201029 19:36:17.742" starttime="20201029 19:36:17.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:36:17.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:36:17.743" starttime="20201029 19:36:17.742"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:17.743" starttime="20201029 19:36:15.545"></status>
</kw>
<msg timestamp="20201029 19:36:17.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:36:17.744" starttime="20201029 19:36:15.544"></status>
</kw>
<msg timestamp="20201029 19:36:17.744" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T19:36:15.420Z",
  "modificat...</msg>
<status status="PASS" endtime="20201029 19:36:17.744" starttime="20201029 19:36:15.544"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201029 19:36:17.745" starttime="20201029 19:36:17.744"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:36:17.749" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:36:17.749" starttime="20201029 19:36:17.748"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:36:17.749" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:36:17.749" starttime="20201029 19:36:17.749"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:17.749" starttime="20201029 19:36:17.748"></status>
</kw>
<msg timestamp="20201029 19:36:17.750" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:36:17.750" starttime="20201029 19:36:17.747"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:17.750" starttime="20201029 19:36:17.746"></status>
</kw>
<msg timestamp="20201029 19:36:17.750" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201029 19:36:17.750" starttime="20201029 19:36:17.746"></status>
</kw>
<msg timestamp="20201029 19:36:17.750" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201029 19:36:17.750" starttime="20201029 19:36:17.745"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:36:17.755" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:36:19.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:36:19.940" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:36:19.940" starttime="20201029 19:36:17.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:36:19.941" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:36:19.941" starttime="20201029 19:36:19.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:36:19.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:36:19.942" starttime="20201029 19:36:19.941"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:19.942" starttime="20201029 19:36:17.751"></status>
</kw>
<msg timestamp="20201029 19:36:19.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:36:19.942" starttime="20201029 19:36:17.751"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:19.942" starttime="20201029 19:36:17.750"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:36:19.947" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:36:25.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:36:25.216" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:36:25.216" starttime="20201029 19:36:19.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:36:25.217" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:36:25.217" starttime="20201029 19:36:25.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:36:25.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:36:25.218" starttime="20201029 19:36:25.217"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:25.218" starttime="20201029 19:36:19.943"></status>
</kw>
<msg timestamp="20201029 19:36:25.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:36:25.219" starttime="20201029 19:36:19.943"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:25.219" starttime="20201029 19:36:19.942"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:36:25.222" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:36:29.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:36:29.056" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:36:29.059" starttime="20201029 19:36:25.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:36:29.061" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:36:29.062" starttime="20201029 19:36:29.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:36:29.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:36:29.063" starttime="20201029 19:36:29.062"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:29.063" starttime="20201029 19:36:25.220"></status>
</kw>
<msg timestamp="20201029 19:36:29.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:36:29.064" starttime="20201029 19:36:25.220"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:29.064" starttime="20201029 19:36:25.219"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:36:29.068" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:36:32.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:36:32.999" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:36:32.999" starttime="20201029 19:36:29.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:36:33.000" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:36:33.000" starttime="20201029 19:36:32.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:36:33.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:36:33.001" starttime="20201029 19:36:33.000"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:33.001" starttime="20201029 19:36:29.065"></status>
</kw>
<msg timestamp="20201029 19:36:33.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:36:33.002" starttime="20201029 19:36:29.065"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:33.002" starttime="20201029 19:36:29.064"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 19:36:33.002" critical="yes" starttime="20201029 19:36:09.140"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:36:33.008" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:36:33.008" starttime="20201029 19:36:33.007"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:36:33.009" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:36:33.009" starttime="20201029 19:36:33.008"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:33.009" starttime="20201029 19:36:33.007"></status>
</kw>
<msg timestamp="20201029 19:36:33.009" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:36:33.009" starttime="20201029 19:36:33.006"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:33.010" starttime="20201029 19:36:33.005"></status>
</kw>
<msg timestamp="20201029 19:36:33.010" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201029 19:36:33.010" starttime="20201029 19:36:33.005"></status>
</kw>
<msg timestamp="20201029 19:36:33.010" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201029 19:36:33.010" starttime="20201029 19:36:33.004"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:36:33.014" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:36:35.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:36:35.134" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:36:35.134" starttime="20201029 19:36:33.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:36:35.135" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:36:35.136" starttime="20201029 19:36:35.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:36:35.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:36:35.136" starttime="20201029 19:36:35.136"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:35.137" starttime="20201029 19:36:33.011"></status>
</kw>
<msg timestamp="20201029 19:36:35.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:36:35.137" starttime="20201029 19:36:33.011"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:35.137" starttime="20201029 19:36:33.010"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:36:35.141" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:36:37.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:36:37.223" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:36:37.223" starttime="20201029 19:36:35.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:36:37.224" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:36:37.224" starttime="20201029 19:36:37.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:36:37.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:36:37.225" starttime="20201029 19:36:37.224"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:37.225" starttime="20201029 19:36:35.138"></status>
</kw>
<msg timestamp="20201029 19:36:37.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:36:37.225" starttime="20201029 19:36:35.138"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:37.225" starttime="20201029 19:36:35.137"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 19:36:37.226" critical="yes" starttime="20201029 19:36:33.003"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201029 19:36:37.227" starttime="20201029 19:36:09.075"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201029 19:38:09.854" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201029 19:38:09.854" starttime="20201029 19:38:09.854"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:38:09.855" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201029 19:38:09.855" starttime="20201029 19:38:09.855"></status>
</kw>
<status status="PASS" endtime="20201029 19:38:09.855" starttime="20201029 19:38:09.854"></status>
</kw>
<msg timestamp="20201029 19:38:09.855" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201029 19:38:09.855" starttime="20201029 19:38:09.853"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201029 19:38:09.857" starttime="20201029 19:38:09.856"></status>
</kw>
<msg timestamp="20201029 19:38:09.857" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201029 19:38:09.857" starttime="20201029 19:38:09.856"></status>
</kw>
<status status="PASS" endtime="20201029 19:38:09.857" starttime="20201029 19:38:09.853"></status>
</kw>
<msg timestamp="20201029 19:38:09.857" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201029 19:38:09.857" starttime="20201029 19:38:09.852"></status>
</kw>
<msg timestamp="20201029 19:38:09.857" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201029 19:38:09.857" starttime="20201029 19:38:09.850"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201029 19:38:09.858" level="INFO">${random} = 36344</msg>
<status status="PASS" endtime="20201029 19:38:09.858" starttime="20201029 19:38:09.858"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:38:09.866" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-36344 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:38:13.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:38:13.178" level="INFO">${output} = 2020-10-29 19:38:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:38:11 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-29 ...</msg>
<status status="PASS" endtime="20201029 19:38:13.178" starttime="20201029 19:38:09.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:38:13.179" level="INFO">2020-10-29 19:38:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:38:11 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-29 19:38:11 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-29 19:38:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:38:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-97A8A7BB3FB6-&gt;7a77d18a-4f22-4011-ac1d-192d7c4f9de5
2020-10-29 19:38:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201029 19:38:13.180" starttime="20201029 19:38:13.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:38:13.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:38:13.180" starttime="20201029 19:38:13.180"></status>
</kw>
<status status="PASS" endtime="20201029 19:38:13.180" starttime="20201029 19:38:09.859"></status>
</kw>
<msg timestamp="20201029 19:38:13.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:38:13.181" starttime="20201029 19:38:09.859"></status>
</kw>
<msg timestamp="20201029 19:38:13.181" level="INFO">${result} = 2020-10-29 19:38:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:38:11 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-29 ...</msg>
<status status="PASS" endtime="20201029 19:38:13.181" starttime="20201029 19:38:09.858"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:38:13.185" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:38:14.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:38:14.961" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:36 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-29 19:38 ofs://om/volume1/bucket1/ozone-36344
-rw-...</msg>
<status status="PASS" endtime="20201029 19:38:14.961" starttime="20201029 19:38:13.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:38:14.962" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:36 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-29 19:38 ofs://om/volume1/bucket1/ozone-36344
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-29 19:36 ofs://om/volume1/bucket1/ozone-44927
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:36 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:37 ofs://om/volume1/bucket1/wordcount-84.txt</msg>
<status status="PASS" endtime="20201029 19:38:14.962" starttime="20201029 19:38:14.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:38:14.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:38:14.963" starttime="20201029 19:38:14.963"></status>
</kw>
<status status="PASS" endtime="20201029 19:38:14.963" starttime="20201029 19:38:13.182"></status>
</kw>
<msg timestamp="20201029 19:38:14.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:38:14.964" starttime="20201029 19:38:13.182"></status>
</kw>
<msg timestamp="20201029 19:38:14.964" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:36 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-29 19:38 ofs://om/volume1/bucket1/ozone-36344
-rw-...</msg>
<status status="PASS" endtime="20201029 19:38:14.964" starttime="20201029 19:38:13.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201029 19:38:14.965" starttime="20201029 19:38:14.964"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201029 19:38:14.965" critical="yes" starttime="20201029 19:38:09.850"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201029 19:38:14.966" starttime="20201029 19:38:09.788"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:36:42.111" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:36:42.111" starttime="20201029 19:36:42.111"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:36:42.112" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:36:42.112" starttime="20201029 19:36:42.111"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:42.112" starttime="20201029 19:36:42.110"></status>
</kw>
<msg timestamp="20201029 19:36:42.112" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:36:42.112" starttime="20201029 19:36:42.110"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:42.113" starttime="20201029 19:36:42.109"></status>
</kw>
<msg timestamp="20201029 19:36:42.113" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201029 19:36:42.113" starttime="20201029 19:36:42.109"></status>
</kw>
<msg timestamp="20201029 19:36:42.113" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201029 19:36:42.113" starttime="20201029 19:36:42.107"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201029 19:36:42.113" level="INFO">${random} = 44927</msg>
<status status="PASS" endtime="20201029 19:36:42.113" starttime="20201029 19:36:42.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:36:42.122" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-44927 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:36:45.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:36:45.598" level="INFO">${output} = 2020-10-29 19:36:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:36:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-29 ...</msg>
<status status="PASS" endtime="20201029 19:36:45.598" starttime="20201029 19:36:42.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:36:45.599" level="INFO">2020-10-29 19:36:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:36:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-29 19:36:44 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-29 19:36:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:36:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-28C22AEAD5BB-&gt;7a77d18a-4f22-4011-ac1d-192d7c4f9de5
2020-10-29 19:36:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201029 19:36:45.599" starttime="20201029 19:36:45.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:36:45.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:36:45.600" starttime="20201029 19:36:45.599"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:45.600" starttime="20201029 19:36:42.114"></status>
</kw>
<msg timestamp="20201029 19:36:45.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:36:45.600" starttime="20201029 19:36:42.114"></status>
</kw>
<msg timestamp="20201029 19:36:45.601" level="INFO">${result} = 2020-10-29 19:36:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:36:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-29 ...</msg>
<status status="PASS" endtime="20201029 19:36:45.601" starttime="20201029 19:36:42.114"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:36:45.605" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:36:47.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:36:47.425" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:36 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-29 19:36 o3fs://bucket1.volume1.om/ozone-44927
dr...</msg>
<status status="PASS" endtime="20201029 19:36:47.425" starttime="20201029 19:36:45.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:36:47.426" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:36 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-29 19:36 o3fs://bucket1.volume1.om/ozone-44927
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:36 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201029 19:36:47.426" starttime="20201029 19:36:47.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:36:47.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:36:47.427" starttime="20201029 19:36:47.426"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:47.427" starttime="20201029 19:36:45.602"></status>
</kw>
<msg timestamp="20201029 19:36:47.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:36:47.427" starttime="20201029 19:36:45.601"></status>
</kw>
<msg timestamp="20201029 19:36:47.427" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:36 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-29 19:36 o3fs://bucket1.volume1.om/ozone-44927
dr...</msg>
<status status="PASS" endtime="20201029 19:36:47.427" starttime="20201029 19:36:45.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201029 19:36:47.428" starttime="20201029 19:36:47.427"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201029 19:36:47.428" critical="yes" starttime="20201029 19:36:42.107"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201029 19:36:47.429" starttime="20201029 19:36:42.050"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:38:19.562" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:38:19.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:38:19.567" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201029 19:38:19.567" starttime="20201029 19:38:19.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:38:19.568" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201029 19:38:19.568" starttime="20201029 19:38:19.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:38:19.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:38:19.568" starttime="20201029 19:38:19.568"></status>
</kw>
<status status="PASS" endtime="20201029 19:38:19.569" starttime="20201029 19:38:19.556"></status>
</kw>
<msg timestamp="20201029 19:38:19.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:38:19.569" starttime="20201029 19:38:19.556"></status>
</kw>
<msg timestamp="20201029 19:38:19.569" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201029 19:38:19.569" starttime="20201029 19:38:19.556"></status>
</kw>
<msg timestamp="20201029 19:38:19.569" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201029 19:38:19.569" starttime="20201029 19:38:19.555"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201029 19:38:19.573" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201029 19:38:19.573" starttime="20201029 19:38:19.572"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:38:19.574" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201029 19:38:19.574" starttime="20201029 19:38:19.573"></status>
</kw>
<status status="PASS" endtime="20201029 19:38:19.574" starttime="20201029 19:38:19.572"></status>
</kw>
<msg timestamp="20201029 19:38:19.574" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201029 19:38:19.574" starttime="20201029 19:38:19.571"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201029 19:38:19.575" starttime="20201029 19:38:19.575"></status>
</kw>
<msg timestamp="20201029 19:38:19.575" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201029 19:38:19.575" starttime="20201029 19:38:19.574"></status>
</kw>
<status status="PASS" endtime="20201029 19:38:19.575" starttime="20201029 19:38:19.571"></status>
</kw>
<msg timestamp="20201029 19:38:19.575" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201029 19:38:19.575" starttime="20201029 19:38:19.570"></status>
</kw>
<msg timestamp="20201029 19:38:19.576" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201029 19:38:19.576" starttime="20201029 19:38:19.569"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:38:19.580" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:38:52.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:38:52.657" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-29 19:38:21 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:38:21 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201029 19:38:52.657" starttime="20201029 19:38:19.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:38:52.658" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-29 19:38:21 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:38:21 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-29 19:38:21 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-29 19:38:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:38:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-544C350936F3-&gt;7a77d18a-4f22-4011-ac1d-192d7c4f9de5
2020-10-29 19:38:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-29 19:38:22 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-29 19:38:22 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-29 19:38:23 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-29 19:38:23 INFO  JobSubmitter:198 - number of splits:3
2020-10-29 19:38:23 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604000139768_0003
2020-10-29 19:38:23 INFO  YarnClientImpl:273 - Submitted application application_1604000139768_0003
2020-10-29 19:38:23 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604000139768_0003/
2020-10-29 19:38:23 INFO  Job:1339 - Running job: job_1604000139768_0003
2020-10-29 19:38:30 INFO  Job:1360 - Job job_1604000139768_0003 running in uber mode : false
2020-10-29 19:38:30 INFO  Job:1367 -  map 0% reduce 0%
2020-10-29 19:38:36 INFO  Job:1367 -  map 33% reduce 0%
2020-10-29 19:38:41 INFO  Job:1367 -  map 67% reduce 0%
2020-10-29 19:38:46 INFO  Job:1367 -  map 100% reduce 0%
2020-10-29 19:38:50 INFO  Job:1367 -  map 100% reduce 100%
2020-10-29 19:38:52 INFO  Job:1378 - Job job_1604000139768_0003 completed successfully
2020-10-29 19:38:52 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615229
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39408
		Total time spent by all reduces in occupied slots (ms)=14308
		Total time spent by all map tasks (ms)=9852
		Total time spent by all reduce tasks (ms)=3577
		Total vcore-milliseconds taken by all map tasks=9852
		Total vcore-milliseconds taken by all reduce tasks=3577
		Total megabyte-milliseconds taken by all map tasks=40353792
		Total megabyte-milliseconds taken by all reduce tasks=14651392
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=573
		CPU time spent (ms)=6750
		Physical memory (bytes) snapshot=1124581376
		Virtual memory (bytes) snapshot=16058294272
		Total committed heap usage (bytes)=1014497280
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.347 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201029 19:38:52.658" starttime="20201029 19:38:52.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:38:52.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:38:52.659" starttime="20201029 19:38:52.658"></status>
</kw>
<status status="PASS" endtime="20201029 19:38:52.659" starttime="20201029 19:38:19.577"></status>
</kw>
<msg timestamp="20201029 19:38:52.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:38:52.659" starttime="20201029 19:38:19.576"></status>
</kw>
<msg timestamp="20201029 19:38:52.660" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-29 19:38:21 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:38:21 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201029 19:38:52.660" starttime="20201029 19:38:19.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201029 19:38:52.660" starttime="20201029 19:38:52.660"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201029 19:38:52.661" critical="yes" starttime="20201029 19:38:19.555"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:38:52.665" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:38:52.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:38:52.673" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201029 19:38:52.674" starttime="20201029 19:38:52.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:38:52.674" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201029 19:38:52.674" starttime="20201029 19:38:52.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:38:52.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:38:52.675" starttime="20201029 19:38:52.675"></status>
</kw>
<status status="PASS" endtime="20201029 19:38:52.675" starttime="20201029 19:38:52.663"></status>
</kw>
<msg timestamp="20201029 19:38:52.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:38:52.676" starttime="20201029 19:38:52.663"></status>
</kw>
<msg timestamp="20201029 19:38:52.676" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201029 19:38:52.676" starttime="20201029 19:38:52.663"></status>
</kw>
<msg timestamp="20201029 19:38:52.676" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201029 19:38:52.676" starttime="20201029 19:38:52.662"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201029 19:38:52.677" level="INFO">${random} = 20</msg>
<status status="PASS" endtime="20201029 19:38:52.677" starttime="20201029 19:38:52.676"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201029 19:38:52.680" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201029 19:38:52.680" starttime="20201029 19:38:52.680"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:38:52.680" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201029 19:38:52.681" starttime="20201029 19:38:52.680"></status>
</kw>
<status status="PASS" endtime="20201029 19:38:52.681" starttime="20201029 19:38:52.679"></status>
</kw>
<msg timestamp="20201029 19:38:52.681" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201029 19:38:52.681" starttime="20201029 19:38:52.679"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201029 19:38:52.682" starttime="20201029 19:38:52.682"></status>
</kw>
<msg timestamp="20201029 19:38:52.682" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201029 19:38:52.682" starttime="20201029 19:38:52.681"></status>
</kw>
<status status="PASS" endtime="20201029 19:38:52.682" starttime="20201029 19:38:52.678"></status>
</kw>
<msg timestamp="20201029 19:38:52.682" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201029 19:38:52.683" starttime="20201029 19:38:52.677"></status>
</kw>
<msg timestamp="20201029 19:38:52.683" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201029 19:38:52.683" starttime="20201029 19:38:52.677"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201029 19:38:52.686" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201029 19:38:52.686" starttime="20201029 19:38:52.685"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:38:52.686" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201029 19:38:52.687" starttime="20201029 19:38:52.686"></status>
</kw>
<status status="PASS" endtime="20201029 19:38:52.687" starttime="20201029 19:38:52.685"></status>
</kw>
<msg timestamp="20201029 19:38:52.687" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201029 19:38:52.687" starttime="20201029 19:38:52.685"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:38:52.688" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201029 19:38:52.688" starttime="20201029 19:38:52.688"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:38:52.689" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201029 19:38:52.689" starttime="20201029 19:38:52.688"></status>
</kw>
<status status="PASS" endtime="20201029 19:38:52.689" starttime="20201029 19:38:52.687"></status>
</kw>
<msg timestamp="20201029 19:38:52.689" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201029 19:38:52.689" starttime="20201029 19:38:52.687"></status>
</kw>
<status status="PASS" endtime="20201029 19:38:52.689" starttime="20201029 19:38:52.684"></status>
</kw>
<msg timestamp="20201029 19:38:52.690" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201029 19:38:52.690" starttime="20201029 19:38:52.683"></status>
</kw>
<msg timestamp="20201029 19:38:52.690" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201029 19:38:52.690" starttime="20201029 19:38:52.683"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201029 19:38:52.693" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201029 19:38:52.693" starttime="20201029 19:38:52.692"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:38:52.693" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201029 19:38:52.693" starttime="20201029 19:38:52.693"></status>
</kw>
<status status="PASS" endtime="20201029 19:38:52.694" starttime="20201029 19:38:52.692"></status>
</kw>
<msg timestamp="20201029 19:38:52.694" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201029 19:38:52.694" starttime="20201029 19:38:52.691"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:38:52.695" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201029 19:38:52.695" starttime="20201029 19:38:52.695"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:38:52.696" level="INFO">${result} = /wordcount-20.txt</msg>
<status status="PASS" endtime="20201029 19:38:52.696" starttime="20201029 19:38:52.695"></status>
</kw>
<status status="PASS" endtime="20201029 19:38:52.696" starttime="20201029 19:38:52.694"></status>
</kw>
<msg timestamp="20201029 19:38:52.696" level="INFO">${path_with_leading} = /wordcount-20.txt</msg>
<status status="PASS" endtime="20201029 19:38:52.696" starttime="20201029 19:38:52.694"></status>
</kw>
<status status="PASS" endtime="20201029 19:38:52.696" starttime="20201029 19:38:52.691"></status>
</kw>
<msg timestamp="20201029 19:38:52.696" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-20.txt</msg>
<status status="PASS" endtime="20201029 19:38:52.696" starttime="20201029 19:38:52.690"></status>
</kw>
<msg timestamp="20201029 19:38:52.696" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-20.txt</msg>
<status status="PASS" endtime="20201029 19:38:52.696" starttime="20201029 19:38:52.690"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:38:52.700" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-20.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:39:31.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:39:31.471" level="INFO">${output} = 2020-10-29 19:38:54 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-29 19:38:54 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201029 19:39:31.471" starttime="20201029 19:38:52.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:39:31.472" level="INFO">2020-10-29 19:38:54 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-29 19:38:54 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-29 19:38:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:38:55 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-29 19:38:55 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-29 19:38:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:38:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3E717FBD75C8-&gt;7a77d18a-4f22-4011-ac1d-192d7c4f9de5
2020-10-29 19:38:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-29 19:38:56 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-29 19:38:59 INFO  JobSubmitter:198 - number of splits:3
2020-10-29 19:38:59 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604000139768_0004
2020-10-29 19:38:59 INFO  YarnClientImpl:273 - Submitted application application_1604000139768_0004
2020-10-29 19:38:59 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604000139768_0004/
2020-10-29 19:38:59 INFO  Job:1339 - Running job: job_1604000139768_0004
2020-10-29 19:39:07 INFO  Job:1360 - Job job_1604000139768_0004 running in uber mode : false
2020-10-29 19:39:07 INFO  Job:1367 -  map 0% reduce 0%
2020-10-29 19:39:13 INFO  Job:1367 -  map 33% reduce 0%
2020-10-29 19:39:18 INFO  Job:1367 -  map 67% reduce 0%
2020-10-29 19:39:23 INFO  Job:1367 -  map 100% reduce 0%
2020-10-29 19:39:30 INFO  Job:1367 -  map 100% reduce 100%
2020-10-29 19:39:30 INFO  Job:1378 - Job job_1604000139768_0004 completed successfully
2020-10-29 19:39:31 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40292
		Total time spent by all reduces in occupied slots (ms)=24488
		Total time spent by all map tasks (ms)=10073
		Total time spent by all reduce tasks (ms)=6122
		Total vcore-milliseconds taken by all map tasks=10073
		Total vcore-milliseconds taken by all reduce tasks=6122
		Total megabyte-milliseconds taken by all map tasks=41259008
		Total megabyte-milliseconds taken by all reduce tasks=25075712
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=568
		CPU time spent (ms)=7740
		Physical memory (bytes) snapshot=1148956672
		Virtual memory (bytes) snapshot=16069185536
		Total committed heap usage (bytes)=1056964608
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201029 19:39:31.472" starttime="20201029 19:39:31.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:39:31.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:39:31.473" starttime="20201029 19:39:31.472"></status>
</kw>
<status status="PASS" endtime="20201029 19:39:31.473" starttime="20201029 19:38:52.697"></status>
</kw>
<msg timestamp="20201029 19:39:31.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:39:31.473" starttime="20201029 19:38:52.697"></status>
</kw>
<msg timestamp="20201029 19:39:31.474" level="INFO">${output} = 2020-10-29 19:38:54 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-29 19:38:54 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201029 19:39:31.474" starttime="20201029 19:38:52.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201029 19:39:31.474" starttime="20201029 19:39:31.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201029 19:39:31.475" starttime="20201029 19:39:31.475"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201029 19:39:31.475" critical="yes" starttime="20201029 19:38:52.661"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201029 19:39:31.476" starttime="20201029 19:38:19.494"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:36:51.948" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:36:51.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:36:51.952" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201029 19:36:51.952" starttime="20201029 19:36:51.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:36:51.953" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201029 19:36:51.953" starttime="20201029 19:36:51.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:36:51.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:36:51.954" starttime="20201029 19:36:51.953"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:51.954" starttime="20201029 19:36:51.943"></status>
</kw>
<msg timestamp="20201029 19:36:51.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:36:51.954" starttime="20201029 19:36:51.942"></status>
</kw>
<msg timestamp="20201029 19:36:51.954" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201029 19:36:51.954" starttime="20201029 19:36:51.942"></status>
</kw>
<msg timestamp="20201029 19:36:51.954" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201029 19:36:51.954" starttime="20201029 19:36:51.942"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:36:51.957" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:36:51.957" starttime="20201029 19:36:51.957"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:36:51.958" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:36:51.958" starttime="20201029 19:36:51.958"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:51.958" starttime="20201029 19:36:51.957"></status>
</kw>
<msg timestamp="20201029 19:36:51.959" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:36:51.959" starttime="20201029 19:36:51.956"></status>
</kw>
<status status="PASS" endtime="20201029 19:36:51.959" starttime="20201029 19:36:51.956"></status>
</kw>
<msg timestamp="20201029 19:36:51.959" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201029 19:36:51.959" starttime="20201029 19:36:51.955"></status>
</kw>
<msg timestamp="20201029 19:36:51.959" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201029 19:36:51.959" starttime="20201029 19:36:51.955"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:36:51.963" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:37:31.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:37:31.358" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-29 19:36:53 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:36:54 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201029 19:37:31.358" starttime="20201029 19:36:51.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:37:31.360" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-29 19:36:53 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:36:54 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-29 19:36:54 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-29 19:36:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:36:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-24E38E0D9716-&gt;7a77d18a-4f22-4011-ac1d-192d7c4f9de5
2020-10-29 19:36:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-29 19:36:55 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-29 19:36:55 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-29 19:36:55 INFO  JobSubmitter:198 - number of splits:3
2020-10-29 19:36:55 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604000139768_0001
2020-10-29 19:36:56 INFO  YarnClientImpl:273 - Submitted application application_1604000139768_0001
2020-10-29 19:36:56 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604000139768_0001/
2020-10-29 19:36:56 INFO  Job:1339 - Running job: job_1604000139768_0001
2020-10-29 19:37:06 INFO  Job:1360 - Job job_1604000139768_0001 running in uber mode : false
2020-10-29 19:37:06 INFO  Job:1367 -  map 0% reduce 0%
2020-10-29 19:37:12 INFO  Job:1367 -  map 33% reduce 0%
2020-10-29 19:37:17 INFO  Job:1367 -  map 67% reduce 0%
2020-10-29 19:37:22 INFO  Job:1367 -  map 100% reduce 0%
2020-10-29 19:37:29 INFO  Job:1367 -  map 100% reduce 100%
2020-10-29 19:37:30 INFO  Job:1378 - Job job_1604000139768_0001 completed successfully
2020-10-29 19:37:30 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615465
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39948
		Total time spent by all reduces in occupied slots (ms)=25148
		Total time spent by all map tasks (ms)=9987
		Total time spent by all reduce tasks (ms)=6287
		Total vcore-milliseconds taken by all map tasks=9987
		Total vcore-milliseconds taken by all reduce tasks=6287
		Total megabyte-milliseconds taken by all map tasks=40906752
		Total megabyte-milliseconds taken by all reduce tasks=25751552
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=525
		CPU time spent (ms)=6930
		Physical memory (bytes) snapshot=1142587392
		Virtual memory (bytes) snapshot=16064688128
		Total committed heap usage (bytes)=1052246016
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.689 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201029 19:37:31.360" starttime="20201029 19:37:31.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:37:31.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:37:31.361" starttime="20201029 19:37:31.360"></status>
</kw>
<status status="PASS" endtime="20201029 19:37:31.361" starttime="20201029 19:36:51.960"></status>
</kw>
<msg timestamp="20201029 19:37:31.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:37:31.361" starttime="20201029 19:36:51.960"></status>
</kw>
<msg timestamp="20201029 19:37:31.362" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-29 19:36:53 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:36:54 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201029 19:37:31.362" starttime="20201029 19:36:51.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201029 19:37:31.362" starttime="20201029 19:37:31.362"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201029 19:37:31.362" critical="yes" starttime="20201029 19:36:51.941"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:37:31.367" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:37:31.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:37:31.374" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201029 19:37:31.374" starttime="20201029 19:37:31.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:37:31.375" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201029 19:37:31.375" starttime="20201029 19:37:31.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:37:31.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:37:31.376" starttime="20201029 19:37:31.375"></status>
</kw>
<status status="PASS" endtime="20201029 19:37:31.376" starttime="20201029 19:37:31.365"></status>
</kw>
<msg timestamp="20201029 19:37:31.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:37:31.376" starttime="20201029 19:37:31.364"></status>
</kw>
<msg timestamp="20201029 19:37:31.377" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201029 19:37:31.377" starttime="20201029 19:37:31.364"></status>
</kw>
<msg timestamp="20201029 19:37:31.377" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201029 19:37:31.377" starttime="20201029 19:37:31.364"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201029 19:37:31.377" level="INFO">${random} = 84</msg>
<status status="PASS" endtime="20201029 19:37:31.377" starttime="20201029 19:37:31.377"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:37:31.381" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:37:31.381" starttime="20201029 19:37:31.381"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:37:31.382" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:37:31.382" starttime="20201029 19:37:31.381"></status>
</kw>
<status status="PASS" endtime="20201029 19:37:31.382" starttime="20201029 19:37:31.380"></status>
</kw>
<msg timestamp="20201029 19:37:31.382" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:37:31.382" starttime="20201029 19:37:31.380"></status>
</kw>
<status status="PASS" endtime="20201029 19:37:31.382" starttime="20201029 19:37:31.379"></status>
</kw>
<msg timestamp="20201029 19:37:31.382" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201029 19:37:31.382" starttime="20201029 19:37:31.378"></status>
</kw>
<msg timestamp="20201029 19:37:31.383" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201029 19:37:31.383" starttime="20201029 19:37:31.378"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:37:31.386" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:37:31.386" starttime="20201029 19:37:31.385"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:37:31.387" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:37:31.387" starttime="20201029 19:37:31.386"></status>
</kw>
<status status="PASS" endtime="20201029 19:37:31.387" starttime="20201029 19:37:31.385"></status>
</kw>
<msg timestamp="20201029 19:37:31.387" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:37:31.387" starttime="20201029 19:37:31.384"></status>
</kw>
<status status="PASS" endtime="20201029 19:37:31.387" starttime="20201029 19:37:31.384"></status>
</kw>
<msg timestamp="20201029 19:37:31.388" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201029 19:37:31.388" starttime="20201029 19:37:31.383"></status>
</kw>
<msg timestamp="20201029 19:37:31.388" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201029 19:37:31.388" starttime="20201029 19:37:31.383"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:37:31.391" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:37:31.391" starttime="20201029 19:37:31.390"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:37:31.391" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:37:31.391" starttime="20201029 19:37:31.391"></status>
</kw>
<status status="PASS" endtime="20201029 19:37:31.392" starttime="20201029 19:37:31.390"></status>
</kw>
<msg timestamp="20201029 19:37:31.392" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:37:31.392" starttime="20201029 19:37:31.389"></status>
</kw>
<status status="PASS" endtime="20201029 19:37:31.392" starttime="20201029 19:37:31.389"></status>
</kw>
<msg timestamp="20201029 19:37:31.392" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-84.txt</msg>
<status status="PASS" endtime="20201029 19:37:31.392" starttime="20201029 19:37:31.388"></status>
</kw>
<msg timestamp="20201029 19:37:31.392" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-84.txt</msg>
<status status="PASS" endtime="20201029 19:37:31.392" starttime="20201029 19:37:31.388"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:37:31.397" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-84.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:38:05.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:38:05.242" level="INFO">${output} = 2020-10-29 19:37:33 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-29 19:37:33 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201029 19:38:05.242" starttime="20201029 19:37:31.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:38:05.243" level="INFO">2020-10-29 19:37:33 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-29 19:37:33 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-29 19:37:33 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:37:33 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-29 19:37:33 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-29 19:37:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:37:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DA6C0D3738E9-&gt;7a77d18a-4f22-4011-ac1d-192d7c4f9de5
2020-10-29 19:37:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-29 19:37:34 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-29 19:37:34 INFO  JobSubmitter:198 - number of splits:3
2020-10-29 19:37:35 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604000139768_0002
2020-10-29 19:37:35 INFO  YarnClientImpl:273 - Submitted application application_1604000139768_0002
2020-10-29 19:37:35 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604000139768_0002/
2020-10-29 19:37:35 INFO  Job:1339 - Running job: job_1604000139768_0002
2020-10-29 19:37:43 INFO  Job:1360 - Job job_1604000139768_0002 running in uber mode : false
2020-10-29 19:37:43 INFO  Job:1367 -  map 0% reduce 0%
2020-10-29 19:37:49 INFO  Job:1367 -  map 33% reduce 0%
2020-10-29 19:37:54 INFO  Job:1367 -  map 67% reduce 0%
2020-10-29 19:37:59 INFO  Job:1367 -  map 100% reduce 0%
2020-10-29 19:38:03 INFO  Job:1367 -  map 100% reduce 100%
2020-10-29 19:38:04 INFO  Job:1378 - Job job_1604000139768_0002 completed successfully
2020-10-29 19:38:04 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39544
		Total time spent by all reduces in occupied slots (ms)=14460
		Total time spent by all map tasks (ms)=9886
		Total time spent by all reduce tasks (ms)=3615
		Total vcore-milliseconds taken by all map tasks=9886
		Total vcore-milliseconds taken by all reduce tasks=3615
		Total megabyte-milliseconds taken by all map tasks=40493056
		Total megabyte-milliseconds taken by all reduce tasks=14807040
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=514
		CPU time spent (ms)=6930
		Physical memory (bytes) snapshot=1112887296
		Virtual memory (bytes) snapshot=16051740672
		Total committed heap usage (bytes)=1019740160
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201029 19:38:05.243" starttime="20201029 19:38:05.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:38:05.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:38:05.244" starttime="20201029 19:38:05.243"></status>
</kw>
<status status="PASS" endtime="20201029 19:38:05.244" starttime="20201029 19:37:31.393"></status>
</kw>
<msg timestamp="20201029 19:38:05.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:38:05.245" starttime="20201029 19:37:31.393"></status>
</kw>
<msg timestamp="20201029 19:38:05.245" level="INFO">${output} = 2020-10-29 19:37:33 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-10-29 19:37:33 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201029 19:38:05.245" starttime="20201029 19:37:31.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201029 19:38:05.246" starttime="20201029 19:38:05.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201029 19:38:05.246" starttime="20201029 19:38:05.246"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201029 19:38:05.246" critical="yes" starttime="20201029 19:37:31.363"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201029 19:38:05.248" starttime="20201029 19:36:51.885"></status>
</suite>
<status status="PASS" elapsedtime="184054" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:40:38.872" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:40:41.305" level="INFO">${rc} = 255</msg>
<msg timestamp="20201029 19:40:41.305" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201029 19:40:41.305" starttime="20201029 19:40:38.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:40:41.306" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201029 19:40:41.306" starttime="20201029 19:40:41.305"></status>
</kw>
<msg timestamp="20201029 19:40:41.306" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201029 19:40:41.306" starttime="20201029 19:40:38.868"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:40:41.311" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:40:43.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:40:43.377" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:40:43.377" starttime="20201029 19:40:41.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:40:43.379" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:40:43.379" starttime="20201029 19:40:43.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:40:43.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:40:43.380" starttime="20201029 19:40:43.379"></status>
</kw>
<status status="PASS" endtime="20201029 19:40:43.380" starttime="20201029 19:40:41.308"></status>
</kw>
<msg timestamp="20201029 19:40:43.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:40:43.380" starttime="20201029 19:40:41.308"></status>
</kw>
<msg timestamp="20201029 19:40:43.380" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201029 19:40:43.380" starttime="20201029 19:40:41.307"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201029 19:40:43.381" starttime="20201029 19:40:43.381"></status>
</kw>
<status status="PASS" endtime="20201029 19:40:43.381" starttime="20201029 19:40:41.307"></status>
</kw>
<status status="PASS" endtime="20201029 19:40:43.381" starttime="20201029 19:40:41.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:40:43.386" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:40:45.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:40:45.543" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:40:45.543" starttime="20201029 19:40:43.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:40:45.544" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:40:45.545" starttime="20201029 19:40:45.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:40:45.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:40:45.545" starttime="20201029 19:40:45.545"></status>
</kw>
<status status="PASS" endtime="20201029 19:40:45.545" starttime="20201029 19:40:43.383"></status>
</kw>
<msg timestamp="20201029 19:40:45.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:40:45.546" starttime="20201029 19:40:43.383"></status>
</kw>
<status status="PASS" endtime="20201029 19:40:45.546" starttime="20201029 19:40:43.382"></status>
</kw>
<status status="PASS" endtime="20201029 19:40:45.546" starttime="20201029 19:40:43.382"></status>
</kw>
<status status="PASS" endtime="20201029 19:40:45.546" starttime="20201029 19:40:43.382"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201029 19:40:45.547" starttime="20201029 19:40:45.547"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:40:45.552" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:40:47.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:40:47.684" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T19:40:45.406Z",
  "modificat...</msg>
<status status="PASS" endtime="20201029 19:40:47.684" starttime="20201029 19:40:45.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:40:47.685" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T19:40:45.406Z",
  "modificationTime" : "2020-10-29T19:40:45.406Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201029 19:40:47.685" starttime="20201029 19:40:47.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:40:47.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:40:47.686" starttime="20201029 19:40:47.685"></status>
</kw>
<status status="PASS" endtime="20201029 19:40:47.686" starttime="20201029 19:40:45.548"></status>
</kw>
<msg timestamp="20201029 19:40:47.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:40:47.686" starttime="20201029 19:40:45.548"></status>
</kw>
<msg timestamp="20201029 19:40:47.687" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T19:40:45.406Z",
  "modificat...</msg>
<status status="PASS" endtime="20201029 19:40:47.687" starttime="20201029 19:40:45.547"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201029 19:40:47.688" starttime="20201029 19:40:47.688"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:40:47.692" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:40:47.692" starttime="20201029 19:40:47.692"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:40:47.693" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:40:47.693" starttime="20201029 19:40:47.693"></status>
</kw>
<status status="PASS" endtime="20201029 19:40:47.694" starttime="20201029 19:40:47.691"></status>
</kw>
<msg timestamp="20201029 19:40:47.694" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:40:47.694" starttime="20201029 19:40:47.691"></status>
</kw>
<status status="PASS" endtime="20201029 19:40:47.694" starttime="20201029 19:40:47.690"></status>
</kw>
<msg timestamp="20201029 19:40:47.694" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201029 19:40:47.694" starttime="20201029 19:40:47.689"></status>
</kw>
<msg timestamp="20201029 19:40:47.694" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201029 19:40:47.695" starttime="20201029 19:40:47.688"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:40:47.698" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:40:49.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:40:49.864" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:40:49.864" starttime="20201029 19:40:47.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:40:49.865" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:40:49.865" starttime="20201029 19:40:49.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:40:49.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:40:49.866" starttime="20201029 19:40:49.865"></status>
</kw>
<status status="PASS" endtime="20201029 19:40:49.866" starttime="20201029 19:40:47.695"></status>
</kw>
<msg timestamp="20201029 19:40:49.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:40:49.866" starttime="20201029 19:40:47.695"></status>
</kw>
<status status="PASS" endtime="20201029 19:40:49.866" starttime="20201029 19:40:47.695"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:40:49.870" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:40:55.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:40:55.266" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:40:55.266" starttime="20201029 19:40:49.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:40:55.267" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:40:55.267" starttime="20201029 19:40:55.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:40:55.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:40:55.268" starttime="20201029 19:40:55.267"></status>
</kw>
<status status="PASS" endtime="20201029 19:40:55.268" starttime="20201029 19:40:49.868"></status>
</kw>
<msg timestamp="20201029 19:40:55.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:40:55.268" starttime="20201029 19:40:49.867"></status>
</kw>
<status status="PASS" endtime="20201029 19:40:55.268" starttime="20201029 19:40:49.866"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:40:55.272" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:40:59.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:40:59.171" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:40:59.171" starttime="20201029 19:40:55.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:40:59.173" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:40:59.173" starttime="20201029 19:40:59.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:40:59.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:40:59.174" starttime="20201029 19:40:59.173"></status>
</kw>
<status status="PASS" endtime="20201029 19:40:59.175" starttime="20201029 19:40:55.270"></status>
</kw>
<msg timestamp="20201029 19:40:59.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:40:59.175" starttime="20201029 19:40:55.269"></status>
</kw>
<status status="PASS" endtime="20201029 19:40:59.175" starttime="20201029 19:40:55.269"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:40:59.179" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:41:03.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:41:03.288" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:41:03.288" starttime="20201029 19:40:59.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:41:03.289" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:41:03.289" starttime="20201029 19:41:03.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:41:03.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:41:03.290" starttime="20201029 19:41:03.290"></status>
</kw>
<status status="PASS" endtime="20201029 19:41:03.290" starttime="20201029 19:40:59.176"></status>
</kw>
<msg timestamp="20201029 19:41:03.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:41:03.291" starttime="20201029 19:40:59.176"></status>
</kw>
<status status="PASS" endtime="20201029 19:41:03.291" starttime="20201029 19:40:59.176"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 19:41:03.292" critical="yes" starttime="20201029 19:40:38.867"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:41:03.298" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:41:03.298" starttime="20201029 19:41:03.297"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:41:03.298" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:41:03.299" starttime="20201029 19:41:03.298"></status>
</kw>
<status status="PASS" endtime="20201029 19:41:03.299" starttime="20201029 19:41:03.296"></status>
</kw>
<msg timestamp="20201029 19:41:03.299" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:41:03.299" starttime="20201029 19:41:03.296"></status>
</kw>
<status status="PASS" endtime="20201029 19:41:03.299" starttime="20201029 19:41:03.295"></status>
</kw>
<msg timestamp="20201029 19:41:03.299" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201029 19:41:03.299" starttime="20201029 19:41:03.294"></status>
</kw>
<msg timestamp="20201029 19:41:03.300" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201029 19:41:03.300" starttime="20201029 19:41:03.293"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:41:03.304" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:41:05.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:41:05.505" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:41:05.505" starttime="20201029 19:41:03.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:41:05.506" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:41:05.507" starttime="20201029 19:41:05.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:41:05.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:41:05.507" starttime="20201029 19:41:05.507"></status>
</kw>
<status status="PASS" endtime="20201029 19:41:05.508" starttime="20201029 19:41:03.300"></status>
</kw>
<msg timestamp="20201029 19:41:05.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:41:05.508" starttime="20201029 19:41:03.300"></status>
</kw>
<status status="PASS" endtime="20201029 19:41:05.508" starttime="20201029 19:41:03.300"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:41:05.512" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:41:07.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:41:07.512" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:41:07.512" starttime="20201029 19:41:05.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:41:07.513" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:41:07.513" starttime="20201029 19:41:07.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:41:07.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:41:07.514" starttime="20201029 19:41:07.514"></status>
</kw>
<status status="PASS" endtime="20201029 19:41:07.515" starttime="20201029 19:41:05.509"></status>
</kw>
<msg timestamp="20201029 19:41:07.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:41:07.515" starttime="20201029 19:41:05.509"></status>
</kw>
<status status="PASS" endtime="20201029 19:41:07.515" starttime="20201029 19:41:05.508"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 19:41:07.515" critical="yes" starttime="20201029 19:41:03.293"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201029 19:41:07.518" starttime="20201029 19:40:38.810"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201029 19:42:51.799" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201029 19:42:51.799" starttime="20201029 19:42:51.798"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:42:51.799" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201029 19:42:51.799" starttime="20201029 19:42:51.799"></status>
</kw>
<status status="PASS" endtime="20201029 19:42:51.800" starttime="20201029 19:42:51.798"></status>
</kw>
<msg timestamp="20201029 19:42:51.800" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201029 19:42:51.800" starttime="20201029 19:42:51.797"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201029 19:42:51.801" starttime="20201029 19:42:51.800"></status>
</kw>
<msg timestamp="20201029 19:42:51.801" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201029 19:42:51.801" starttime="20201029 19:42:51.800"></status>
</kw>
<status status="PASS" endtime="20201029 19:42:51.801" starttime="20201029 19:42:51.797"></status>
</kw>
<msg timestamp="20201029 19:42:51.801" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201029 19:42:51.801" starttime="20201029 19:42:51.796"></status>
</kw>
<msg timestamp="20201029 19:42:51.802" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201029 19:42:51.802" starttime="20201029 19:42:51.794"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201029 19:42:51.802" level="INFO">${random} = 58274</msg>
<status status="PASS" endtime="20201029 19:42:51.802" starttime="20201029 19:42:51.802"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:42:51.809" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-58274 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:42:55.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:42:55.294" level="INFO">${output} = 2020-10-29 19:42:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:53 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201029 19:42:55.294" starttime="20201029 19:42:51.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:42:55.296" level="INFO">2020-10-29 19:42:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:53 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-29 19:42:53 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:42:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-29 19:42:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-29 19:42:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:42:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7624C2D53CBC-&gt;13549138-7436-4de6-8e74-fd8405797f3e
2020-10-29 19:42:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-29 19:42:54 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201029 19:42:55.296" starttime="20201029 19:42:55.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:42:55.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:42:55.297" starttime="20201029 19:42:55.296"></status>
</kw>
<status status="PASS" endtime="20201029 19:42:55.297" starttime="20201029 19:42:51.803"></status>
</kw>
<msg timestamp="20201029 19:42:55.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:42:55.297" starttime="20201029 19:42:51.803"></status>
</kw>
<msg timestamp="20201029 19:42:55.297" level="INFO">${result} = 2020-10-29 19:42:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:53 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201029 19:42:55.297" starttime="20201029 19:42:51.802"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:42:55.302" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:42:57.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:42:57.046" level="INFO">${output} = 2020-10-29 19:42:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201029 19:42:57.046" starttime="20201029 19:42:55.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:42:57.047" level="INFO">2020-10-29 19:42:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:56 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:40 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-29 19:41 ofs://om/volume1/bucket1/ozone-17754
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-29 19:42 ofs://om/volume1/bucket1/ozone-58274
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:41 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:42 ofs://om/volume1/bucket1/wordcount-74.txt
2020-10-29 19:42:57 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201029 19:42:57.047" starttime="20201029 19:42:57.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:42:57.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:42:57.048" starttime="20201029 19:42:57.048"></status>
</kw>
<status status="PASS" endtime="20201029 19:42:57.048" starttime="20201029 19:42:55.298"></status>
</kw>
<msg timestamp="20201029 19:42:57.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:42:57.049" starttime="20201029 19:42:55.298"></status>
</kw>
<msg timestamp="20201029 19:42:57.049" level="INFO">${result} = 2020-10-29 19:42:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201029 19:42:57.049" starttime="20201029 19:42:55.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201029 19:42:57.050" starttime="20201029 19:42:57.049"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201029 19:42:57.050" critical="yes" starttime="20201029 19:42:51.794"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201029 19:42:57.052" starttime="20201029 19:42:51.737"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:41:12.124" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:41:12.125" starttime="20201029 19:41:12.124"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:41:12.125" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:41:12.125" starttime="20201029 19:41:12.125"></status>
</kw>
<status status="PASS" endtime="20201029 19:41:12.126" starttime="20201029 19:41:12.124"></status>
</kw>
<msg timestamp="20201029 19:41:12.126" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:41:12.126" starttime="20201029 19:41:12.123"></status>
</kw>
<status status="PASS" endtime="20201029 19:41:12.126" starttime="20201029 19:41:12.123"></status>
</kw>
<msg timestamp="20201029 19:41:12.126" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201029 19:41:12.126" starttime="20201029 19:41:12.122"></status>
</kw>
<msg timestamp="20201029 19:41:12.126" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201029 19:41:12.126" starttime="20201029 19:41:12.121"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201029 19:41:12.127" level="INFO">${random} = 17754</msg>
<status status="PASS" endtime="20201029 19:41:12.127" starttime="20201029 19:41:12.126"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:41:12.133" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-17754 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:41:15.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:41:15.615" level="INFO">${output} = 2020-10-29 19:41:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201029 19:41:15.616" starttime="20201029 19:41:12.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:41:15.617" level="INFO">2020-10-29 19:41:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:14 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-29 19:41:14 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:41:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-29 19:41:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-29 19:41:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:41:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-260AA9716755-&gt;13549138-7436-4de6-8e74-fd8405797f3e
2020-10-29 19:41:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-29 19:41:15 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201029 19:41:15.617" starttime="20201029 19:41:15.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:41:15.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:41:15.618" starttime="20201029 19:41:15.617"></status>
</kw>
<status status="PASS" endtime="20201029 19:41:15.618" starttime="20201029 19:41:12.128"></status>
</kw>
<msg timestamp="20201029 19:41:15.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:41:15.618" starttime="20201029 19:41:12.128"></status>
</kw>
<msg timestamp="20201029 19:41:15.619" level="INFO">${result} = 2020-10-29 19:41:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201029 19:41:15.619" starttime="20201029 19:41:12.127"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:41:15.623" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:41:17.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:41:17.448" level="INFO">${output} = 2020-10-29 19:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:17 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201029 19:41:17.448" starttime="20201029 19:41:15.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:41:17.449" level="INFO">2020-10-29 19:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:17 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:40 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-29 19:41 o3fs://bucket1.volume1.om/ozone-17754
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:41 o3fs://bucket1.volume1.om/user
2020-10-29 19:41:17 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201029 19:41:17.449" starttime="20201029 19:41:17.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:41:17.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:41:17.449" starttime="20201029 19:41:17.449"></status>
</kw>
<status status="PASS" endtime="20201029 19:41:17.450" starttime="20201029 19:41:15.620"></status>
</kw>
<msg timestamp="20201029 19:41:17.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:41:17.450" starttime="20201029 19:41:15.619"></status>
</kw>
<msg timestamp="20201029 19:41:17.450" level="INFO">${result} = 2020-10-29 19:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:17 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201029 19:41:17.450" starttime="20201029 19:41:15.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201029 19:41:17.451" starttime="20201029 19:41:17.450"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201029 19:41:17.451" critical="yes" starttime="20201029 19:41:12.120"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201029 19:41:17.452" starttime="20201029 19:41:12.054"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:43:01.542" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:43:01.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:43:01.547" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201029 19:43:01.547" starttime="20201029 19:43:01.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:43:01.548" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201029 19:43:01.548" starttime="20201029 19:43:01.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:43:01.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:43:01.549" starttime="20201029 19:43:01.548"></status>
</kw>
<status status="PASS" endtime="20201029 19:43:01.549" starttime="20201029 19:43:01.536"></status>
</kw>
<msg timestamp="20201029 19:43:01.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:43:01.550" starttime="20201029 19:43:01.536"></status>
</kw>
<msg timestamp="20201029 19:43:01.550" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201029 19:43:01.550" starttime="20201029 19:43:01.536"></status>
</kw>
<msg timestamp="20201029 19:43:01.550" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201029 19:43:01.550" starttime="20201029 19:43:01.535"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201029 19:43:01.554" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201029 19:43:01.554" starttime="20201029 19:43:01.553"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:43:01.555" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201029 19:43:01.555" starttime="20201029 19:43:01.554"></status>
</kw>
<status status="PASS" endtime="20201029 19:43:01.555" starttime="20201029 19:43:01.553"></status>
</kw>
<msg timestamp="20201029 19:43:01.555" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201029 19:43:01.555" starttime="20201029 19:43:01.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201029 19:43:01.556" starttime="20201029 19:43:01.556"></status>
</kw>
<msg timestamp="20201029 19:43:01.556" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201029 19:43:01.556" starttime="20201029 19:43:01.555"></status>
</kw>
<status status="PASS" endtime="20201029 19:43:01.556" starttime="20201029 19:43:01.552"></status>
</kw>
<msg timestamp="20201029 19:43:01.557" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201029 19:43:01.557" starttime="20201029 19:43:01.551"></status>
</kw>
<msg timestamp="20201029 19:43:01.557" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201029 19:43:01.557" starttime="20201029 19:43:01.551"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:43:01.560" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:43:42.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:43:42.745" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-29 19:43:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43...</msg>
<status status="PASS" endtime="20201029 19:43:42.745" starttime="20201029 19:43:01.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:43:42.746" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-29 19:43:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:03 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-29 19:43:03 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:43:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-29 19:43:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-29 19:43:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:43:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-395F7089DF9E-&gt;13549138-7436-4de6-8e74-fd8405797f3e
2020-10-29 19:43:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-29 19:43:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-29 19:43:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:05 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-29 19:43:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:07 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-29 19:43:08 INFO  JobSubmitter:202 - number of splits:3
2020-10-29 19:43:08 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604000417029_0003
2020-10-29 19:43:08 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-29 19:43:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:08 INFO  Configuration:2752 - resource-types.xml not found
2020-10-29 19:43:08 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-29 19:43:08 INFO  YarnClientImpl:324 - Submitted application application_1604000417029_0003
2020-10-29 19:43:08 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604000417029_0003/
2020-10-29 19:43:08 INFO  Job:1619 - Running job: job_1604000417029_0003
2020-10-29 19:43:16 INFO  Job:1640 - Job job_1604000417029_0003 running in uber mode : false
2020-10-29 19:43:16 INFO  Job:1647 -  map 0% reduce 0%
2020-10-29 19:43:23 INFO  Job:1647 -  map 33% reduce 0%
2020-10-29 19:43:28 INFO  Job:1647 -  map 67% reduce 0%
2020-10-29 19:43:34 INFO  Job:1647 -  map 100% reduce 0%
2020-10-29 19:43:39 INFO  Job:1647 -  map 100% reduce 100%
2020-10-29 19:43:42 INFO  Job:1658 - Job job_1604000417029_0003 completed successfully
2020-10-29 19:43:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:42 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021317
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39712
		Total time spent by all reduces in occupied slots (ms)=14512
		Total time spent by all map tasks (ms)=9928
		Total time spent by all reduce tasks (ms)=3628
		Total vcore-milliseconds taken by all map tasks=9928
		Total vcore-milliseconds taken by all reduce tasks=3628
		Total megabyte-milliseconds taken by all map tasks=40665088
		Total megabyte-milliseconds taken by all reduce tasks=14860288
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=575
		CPU time spent (ms)=6850
		Physical memory (bytes) snapshot=1179795456
		Virtual memory (bytes) snapshot=16080457728
		Total committed heap usage (bytes)=1067450368
		Peak Map Physical memory (bytes)=294842368
		Peak Map Virtual memory (bytes)=4021477376
		Peak Reduce Physical memory (bytes)=300851200
		Peak Reduce Virtual memory (bytes)=4034007040
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.346 seconds
2020-10-29 19:43:42 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-29 19:43:42 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201029 19:43:42.746" starttime="20201029 19:43:42.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:43:42.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:43:42.747" starttime="20201029 19:43:42.747"></status>
</kw>
<status status="PASS" endtime="20201029 19:43:42.747" starttime="20201029 19:43:01.558"></status>
</kw>
<msg timestamp="20201029 19:43:42.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:43:42.748" starttime="20201029 19:43:01.557"></status>
</kw>
<msg timestamp="20201029 19:43:42.748" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-29 19:43:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43...</msg>
<status status="PASS" endtime="20201029 19:43:42.748" starttime="20201029 19:43:01.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201029 19:43:42.749" starttime="20201029 19:43:42.748"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201029 19:43:42.749" critical="yes" starttime="20201029 19:43:01.534"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:43:42.754" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:43:42.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:43:42.761" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201029 19:43:42.761" starttime="20201029 19:43:42.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:43:42.762" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201029 19:43:42.762" starttime="20201029 19:43:42.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:43:42.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:43:42.762" starttime="20201029 19:43:42.762"></status>
</kw>
<status status="PASS" endtime="20201029 19:43:42.763" starttime="20201029 19:43:42.752"></status>
</kw>
<msg timestamp="20201029 19:43:42.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:43:42.763" starttime="20201029 19:43:42.751"></status>
</kw>
<msg timestamp="20201029 19:43:42.763" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201029 19:43:42.763" starttime="20201029 19:43:42.751"></status>
</kw>
<msg timestamp="20201029 19:43:42.763" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201029 19:43:42.763" starttime="20201029 19:43:42.750"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201029 19:43:42.764" level="INFO">${random} = 71</msg>
<status status="PASS" endtime="20201029 19:43:42.764" starttime="20201029 19:43:42.763"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201029 19:43:42.768" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201029 19:43:42.768" starttime="20201029 19:43:42.767"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:43:42.768" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201029 19:43:42.768" starttime="20201029 19:43:42.768"></status>
</kw>
<status status="PASS" endtime="20201029 19:43:42.768" starttime="20201029 19:43:42.767"></status>
</kw>
<msg timestamp="20201029 19:43:42.769" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201029 19:43:42.769" starttime="20201029 19:43:42.766"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201029 19:43:42.770" starttime="20201029 19:43:42.769"></status>
</kw>
<msg timestamp="20201029 19:43:42.770" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201029 19:43:42.770" starttime="20201029 19:43:42.769"></status>
</kw>
<status status="PASS" endtime="20201029 19:43:42.770" starttime="20201029 19:43:42.765"></status>
</kw>
<msg timestamp="20201029 19:43:42.770" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201029 19:43:42.770" starttime="20201029 19:43:42.765"></status>
</kw>
<msg timestamp="20201029 19:43:42.771" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201029 19:43:42.771" starttime="20201029 19:43:42.764"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201029 19:43:42.774" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201029 19:43:42.774" starttime="20201029 19:43:42.774"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:43:42.775" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201029 19:43:42.775" starttime="20201029 19:43:42.774"></status>
</kw>
<status status="PASS" endtime="20201029 19:43:42.775" starttime="20201029 19:43:42.773"></status>
</kw>
<msg timestamp="20201029 19:43:42.775" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201029 19:43:42.775" starttime="20201029 19:43:42.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:43:42.777" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201029 19:43:42.777" starttime="20201029 19:43:42.776"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:43:42.777" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201029 19:43:42.777" starttime="20201029 19:43:42.777"></status>
</kw>
<status status="PASS" endtime="20201029 19:43:42.777" starttime="20201029 19:43:42.776"></status>
</kw>
<msg timestamp="20201029 19:43:42.778" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201029 19:43:42.778" starttime="20201029 19:43:42.775"></status>
</kw>
<status status="PASS" endtime="20201029 19:43:42.778" starttime="20201029 19:43:42.772"></status>
</kw>
<msg timestamp="20201029 19:43:42.778" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201029 19:43:42.778" starttime="20201029 19:43:42.772"></status>
</kw>
<msg timestamp="20201029 19:43:42.778" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201029 19:43:42.778" starttime="20201029 19:43:42.771"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201029 19:43:42.782" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201029 19:43:42.782" starttime="20201029 19:43:42.781"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:43:42.782" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201029 19:43:42.782" starttime="20201029 19:43:42.782"></status>
</kw>
<status status="PASS" endtime="20201029 19:43:42.782" starttime="20201029 19:43:42.781"></status>
</kw>
<msg timestamp="20201029 19:43:42.782" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201029 19:43:42.782" starttime="20201029 19:43:42.780"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:43:42.784" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201029 19:43:42.784" starttime="20201029 19:43:42.783"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:43:42.784" level="INFO">${result} = /wordcount-71.txt</msg>
<status status="PASS" endtime="20201029 19:43:42.785" starttime="20201029 19:43:42.784"></status>
</kw>
<status status="PASS" endtime="20201029 19:43:42.785" starttime="20201029 19:43:42.783"></status>
</kw>
<msg timestamp="20201029 19:43:42.785" level="INFO">${path_with_leading} = /wordcount-71.txt</msg>
<status status="PASS" endtime="20201029 19:43:42.785" starttime="20201029 19:43:42.783"></status>
</kw>
<status status="PASS" endtime="20201029 19:43:42.785" starttime="20201029 19:43:42.779"></status>
</kw>
<msg timestamp="20201029 19:43:42.785" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-71.txt</msg>
<status status="PASS" endtime="20201029 19:43:42.785" starttime="20201029 19:43:42.779"></status>
</kw>
<msg timestamp="20201029 19:43:42.785" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-71.txt</msg>
<status status="PASS" endtime="20201029 19:43:42.785" starttime="20201029 19:43:42.778"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:43:42.789" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-71.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:44:20.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:44:20.975" level="INFO">${output} = 2020-10-29 19:43:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:44 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201029 19:44:20.975" starttime="20201029 19:43:42.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:44:20.976" level="INFO">2020-10-29 19:43:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:44 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-29 19:43:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:44 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-29 19:43:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:45 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-29 19:43:45 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:43:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-29 19:43:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-29 19:43:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:43:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-36001CFD8F03-&gt;13549138-7436-4de6-8e74-fd8405797f3e
2020-10-29 19:43:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-29 19:43:46 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-29 19:43:46 INFO  JobSubmitter:202 - number of splits:3
2020-10-29 19:43:46 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604000417029_0004
2020-10-29 19:43:46 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-29 19:43:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:46 INFO  Configuration:2752 - resource-types.xml not found
2020-10-29 19:43:46 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-29 19:43:47 INFO  YarnClientImpl:324 - Submitted application application_1604000417029_0004
2020-10-29 19:43:47 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604000417029_0004/
2020-10-29 19:43:47 INFO  Job:1619 - Running job: job_1604000417029_0004
2020-10-29 19:43:55 INFO  Job:1640 - Job job_1604000417029_0004 running in uber mode : false
2020-10-29 19:43:55 INFO  Job:1647 -  map 0% reduce 0%
2020-10-29 19:44:01 INFO  Job:1647 -  map 33% reduce 0%
2020-10-29 19:44:07 INFO  Job:1647 -  map 67% reduce 0%
2020-10-29 19:44:12 INFO  Job:1647 -  map 100% reduce 0%
2020-10-29 19:44:20 INFO  Job:1647 -  map 100% reduce 100%
2020-10-29 19:44:20 INFO  Job:1658 - Job job_1604000417029_0004 completed successfully
2020-10-29 19:44:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:44:20 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39276
		Total time spent by all reduces in occupied slots (ms)=28352
		Total time spent by all map tasks (ms)=9819
		Total time spent by all reduce tasks (ms)=7088
		Total vcore-milliseconds taken by all map tasks=9819
		Total vcore-milliseconds taken by all reduce tasks=7088
		Total megabyte-milliseconds taken by all map tasks=40218624
		Total megabyte-milliseconds taken by all reduce tasks=29032448
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=558
		CPU time spent (ms)=7480
		Physical memory (bytes) snapshot=1170063360
		Virtual memory (bytes) snapshot=16072994816
		Total committed heap usage (bytes)=1060110336
		Peak Map Physical memory (bytes)=298295296
		Peak Map Virtual memory (bytes)=4020649984
		Peak Reduce Physical memory (bytes)=290557952
		Peak Reduce Virtual memory (bytes)=4033015808
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-29 19:44:20 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201029 19:44:20.976" starttime="20201029 19:44:20.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:44:20.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:44:20.977" starttime="20201029 19:44:20.976"></status>
</kw>
<status status="PASS" endtime="20201029 19:44:20.977" starttime="20201029 19:43:42.787"></status>
</kw>
<msg timestamp="20201029 19:44:20.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:44:20.977" starttime="20201029 19:43:42.786"></status>
</kw>
<msg timestamp="20201029 19:44:20.978" level="INFO">${output} = 2020-10-29 19:43:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:43:44 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201029 19:44:20.978" starttime="20201029 19:43:42.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201029 19:44:20.978" starttime="20201029 19:44:20.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201029 19:44:20.979" starttime="20201029 19:44:20.978"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201029 19:44:20.979" critical="yes" starttime="20201029 19:43:42.750"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201029 19:44:20.980" starttime="20201029 19:43:01.479"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:41:22.038" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:41:22.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:41:22.043" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201029 19:41:22.043" starttime="20201029 19:41:22.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:41:22.044" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201029 19:41:22.044" starttime="20201029 19:41:22.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:41:22.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:41:22.045" starttime="20201029 19:41:22.044"></status>
</kw>
<status status="PASS" endtime="20201029 19:41:22.045" starttime="20201029 19:41:22.034"></status>
</kw>
<msg timestamp="20201029 19:41:22.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:41:22.045" starttime="20201029 19:41:22.033"></status>
</kw>
<msg timestamp="20201029 19:41:22.045" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201029 19:41:22.045" starttime="20201029 19:41:22.033"></status>
</kw>
<msg timestamp="20201029 19:41:22.046" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201029 19:41:22.046" starttime="20201029 19:41:22.033"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:41:22.051" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:41:22.051" starttime="20201029 19:41:22.050"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:41:22.052" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:41:22.052" starttime="20201029 19:41:22.051"></status>
</kw>
<status status="PASS" endtime="20201029 19:41:22.052" starttime="20201029 19:41:22.050"></status>
</kw>
<msg timestamp="20201029 19:41:22.052" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:41:22.052" starttime="20201029 19:41:22.049"></status>
</kw>
<status status="PASS" endtime="20201029 19:41:22.052" starttime="20201029 19:41:22.047"></status>
</kw>
<msg timestamp="20201029 19:41:22.052" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201029 19:41:22.052" starttime="20201029 19:41:22.046"></status>
</kw>
<msg timestamp="20201029 19:41:22.053" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201029 19:41:22.053" starttime="20201029 19:41:22.046"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:41:22.056" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:42:06.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:42:06.267" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-29 19:41:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41...</msg>
<status status="PASS" endtime="20201029 19:42:06.268" starttime="20201029 19:41:22.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:42:06.269" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-29 19:41:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:24 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-29 19:41:24 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:41:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-29 19:41:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-29 19:41:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:41:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-765361D62C6F-&gt;13549138-7436-4de6-8e74-fd8405797f3e
2020-10-29 19:41:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-29 19:41:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-29 19:41:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:25 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-29 19:41:26 INFO  JobSubmitter:202 - number of splits:3
2020-10-29 19:41:26 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604000417029_0001
2020-10-29 19:41:26 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-29 19:41:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:26 INFO  Configuration:2752 - resource-types.xml not found
2020-10-29 19:41:26 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-29 19:41:27 INFO  YarnClientImpl:324 - Submitted application application_1604000417029_0001
2020-10-29 19:41:27 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604000417029_0001/
2020-10-29 19:41:27 INFO  Job:1619 - Running job: job_1604000417029_0001
2020-10-29 19:41:37 INFO  Job:1640 - Job job_1604000417029_0001 running in uber mode : false
2020-10-29 19:41:37 INFO  Job:1647 -  map 0% reduce 0%
2020-10-29 19:41:44 INFO  Job:1647 -  map 33% reduce 0%
2020-10-29 19:41:49 INFO  Job:1647 -  map 67% reduce 0%
2020-10-29 19:41:54 INFO  Job:1647 -  map 100% reduce 0%
2020-10-29 19:42:01 INFO  Job:1647 -  map 100% reduce 100%
2020-10-29 19:42:05 INFO  Job:1658 - Job job_1604000417029_0001 completed successfully
2020-10-29 19:42:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:05 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021529
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41072
		Total time spent by all reduces in occupied slots (ms)=25492
		Total time spent by all map tasks (ms)=10268
		Total time spent by all reduce tasks (ms)=6373
		Total vcore-milliseconds taken by all map tasks=10268
		Total vcore-milliseconds taken by all reduce tasks=6373
		Total megabyte-milliseconds taken by all map tasks=42057728
		Total megabyte-milliseconds taken by all reduce tasks=26103808
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=595
		CPU time spent (ms)=6790
		Physical memory (bytes) snapshot=1155330048
		Virtual memory (bytes) snapshot=16058900480
		Total committed heap usage (bytes)=1065353216
		Peak Map Physical memory (bytes)=290795520
		Peak Map Virtual memory (bytes)=4011352064
		Peak Reduce Physical memory (bytes)=291921920
		Peak Reduce Virtual memory (bytes)=4029120512
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.33 seconds
2020-10-29 19:42:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:05 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-29 19:42:05 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201029 19:42:06.269" starttime="20201029 19:42:06.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:42:06.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:42:06.270" starttime="20201029 19:42:06.270"></status>
</kw>
<status status="PASS" endtime="20201029 19:42:06.270" starttime="20201029 19:41:22.054"></status>
</kw>
<msg timestamp="20201029 19:42:06.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:42:06.270" starttime="20201029 19:41:22.053"></status>
</kw>
<msg timestamp="20201029 19:42:06.271" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-29 19:41:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:41...</msg>
<status status="PASS" endtime="20201029 19:42:06.271" starttime="20201029 19:41:22.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201029 19:42:06.272" starttime="20201029 19:42:06.271"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201029 19:42:06.272" critical="yes" starttime="20201029 19:41:22.032"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:42:06.277" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:42:06.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:42:06.284" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201029 19:42:06.284" starttime="20201029 19:42:06.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:42:06.284" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201029 19:42:06.285" starttime="20201029 19:42:06.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:42:06.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:42:06.285" starttime="20201029 19:42:06.285"></status>
</kw>
<status status="PASS" endtime="20201029 19:42:06.285" starttime="20201029 19:42:06.275"></status>
</kw>
<msg timestamp="20201029 19:42:06.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:42:06.286" starttime="20201029 19:42:06.274"></status>
</kw>
<msg timestamp="20201029 19:42:06.286" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201029 19:42:06.286" starttime="20201029 19:42:06.274"></status>
</kw>
<msg timestamp="20201029 19:42:06.286" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201029 19:42:06.286" starttime="20201029 19:42:06.274"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201029 19:42:06.287" level="INFO">${random} = 74</msg>
<status status="PASS" endtime="20201029 19:42:06.287" starttime="20201029 19:42:06.286"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:42:06.290" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:42:06.290" starttime="20201029 19:42:06.290"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:42:06.291" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:42:06.291" starttime="20201029 19:42:06.291"></status>
</kw>
<status status="PASS" endtime="20201029 19:42:06.291" starttime="20201029 19:42:06.289"></status>
</kw>
<msg timestamp="20201029 19:42:06.291" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:42:06.291" starttime="20201029 19:42:06.289"></status>
</kw>
<status status="PASS" endtime="20201029 19:42:06.292" starttime="20201029 19:42:06.288"></status>
</kw>
<msg timestamp="20201029 19:42:06.292" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201029 19:42:06.292" starttime="20201029 19:42:06.287"></status>
</kw>
<msg timestamp="20201029 19:42:06.292" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201029 19:42:06.292" starttime="20201029 19:42:06.287"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:42:06.295" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:42:06.295" starttime="20201029 19:42:06.295"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:42:06.296" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:42:06.296" starttime="20201029 19:42:06.295"></status>
</kw>
<status status="PASS" endtime="20201029 19:42:06.296" starttime="20201029 19:42:06.294"></status>
</kw>
<msg timestamp="20201029 19:42:06.296" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:42:06.296" starttime="20201029 19:42:06.294"></status>
</kw>
<status status="PASS" endtime="20201029 19:42:06.296" starttime="20201029 19:42:06.293"></status>
</kw>
<msg timestamp="20201029 19:42:06.296" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201029 19:42:06.296" starttime="20201029 19:42:06.293"></status>
</kw>
<msg timestamp="20201029 19:42:06.297" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201029 19:42:06.297" starttime="20201029 19:42:06.292"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:42:06.300" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:42:06.300" starttime="20201029 19:42:06.299"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:42:06.300" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:42:06.300" starttime="20201029 19:42:06.300"></status>
</kw>
<status status="PASS" endtime="20201029 19:42:06.301" starttime="20201029 19:42:06.299"></status>
</kw>
<msg timestamp="20201029 19:42:06.301" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:42:06.301" starttime="20201029 19:42:06.298"></status>
</kw>
<status status="PASS" endtime="20201029 19:42:06.301" starttime="20201029 19:42:06.298"></status>
</kw>
<msg timestamp="20201029 19:42:06.301" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-74.txt</msg>
<status status="PASS" endtime="20201029 19:42:06.301" starttime="20201029 19:42:06.297"></status>
</kw>
<msg timestamp="20201029 19:42:06.301" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-74.txt</msg>
<status status="PASS" endtime="20201029 19:42:06.301" starttime="20201029 19:42:06.297"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:42:06.305" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-74.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:42:47.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:42:47.169" level="INFO">${output} = 2020-10-29 19:42:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:07 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201029 19:42:47.169" starttime="20201029 19:42:06.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:42:47.170" level="INFO">2020-10-29 19:42:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-29 19:42:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-29 19:42:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:08 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-29 19:42:08 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-29 19:42:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-29 19:42:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-29 19:42:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:42:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-41AF8E389A7B-&gt;13549138-7436-4de6-8e74-fd8405797f3e
2020-10-29 19:42:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-29 19:42:10 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-29 19:42:10 INFO  JobSubmitter:202 - number of splits:3
2020-10-29 19:42:12 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604000417029_0002
2020-10-29 19:42:12 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-29 19:42:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:13 INFO  Configuration:2752 - resource-types.xml not found
2020-10-29 19:42:13 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-29 19:42:13 INFO  YarnClientImpl:324 - Submitted application application_1604000417029_0002
2020-10-29 19:42:13 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604000417029_0002/
2020-10-29 19:42:13 INFO  Job:1619 - Running job: job_1604000417029_0002
2020-10-29 19:42:21 INFO  Job:1640 - Job job_1604000417029_0002 running in uber mode : false
2020-10-29 19:42:21 INFO  Job:1647 -  map 0% reduce 0%
2020-10-29 19:42:28 INFO  Job:1647 -  map 33% reduce 0%
2020-10-29 19:42:33 INFO  Job:1647 -  map 67% reduce 0%
2020-10-29 19:42:38 INFO  Job:1647 -  map 100% reduce 0%
2020-10-29 19:42:43 INFO  Job:1647 -  map 100% reduce 100%
2020-10-29 19:42:46 INFO  Job:1658 - Job job_1604000417029_0002 completed successfully
2020-10-29 19:42:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:46 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39680
		Total time spent by all reduces in occupied slots (ms)=14808
		Total time spent by all map tasks (ms)=9920
		Total time spent by all reduce tasks (ms)=3702
		Total vcore-milliseconds taken by all map tasks=9920
		Total vcore-milliseconds taken by all reduce tasks=3702
		Total megabyte-milliseconds taken by all map tasks=40632320
		Total megabyte-milliseconds taken by all reduce tasks=15163392
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=559
		CPU time spent (ms)=7220
		Physical memory (bytes) snapshot=1183068160
		Virtual memory (bytes) snapshot=16081674240
		Total committed heap usage (bytes)=1066926080
		Peak Map Physical memory (bytes)=296906752
		Peak Map Virtual memory (bytes)=4015861760
		Peak Reduce Physical memory (bytes)=298459136
		Peak Reduce Virtual memory (bytes)=4039311360
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-29 19:42:46 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201029 19:42:47.170" starttime="20201029 19:42:47.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:42:47.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:42:47.171" starttime="20201029 19:42:47.171"></status>
</kw>
<status status="PASS" endtime="20201029 19:42:47.171" starttime="20201029 19:42:06.302"></status>
</kw>
<msg timestamp="20201029 19:42:47.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:42:47.171" starttime="20201029 19:42:06.302"></status>
</kw>
<msg timestamp="20201029 19:42:47.172" level="INFO">${output} = 2020-10-29 19:42:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-29 19:42:07 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201029 19:42:47.172" starttime="20201029 19:42:06.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201029 19:42:47.173" starttime="20201029 19:42:47.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201029 19:42:47.173" starttime="20201029 19:42:47.173"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201029 19:42:47.173" critical="yes" starttime="20201029 19:42:06.273"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201029 19:42:47.174" starttime="20201029 19:41:21.979"></status>
</suite>
<status status="PASS" elapsedtime="204117" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:45:27.310" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:45:31.288" level="INFO">${rc} = 255</msg>
<msg timestamp="20201029 19:45:31.289" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201029 19:45:31.289" starttime="20201029 19:45:27.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:45:31.290" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201029 19:45:31.290" starttime="20201029 19:45:31.290"></status>
</kw>
<msg timestamp="20201029 19:45:31.291" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201029 19:45:31.291" starttime="20201029 19:45:27.299"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:45:31.296" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:45:34.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:45:34.497" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:45:34.497" starttime="20201029 19:45:31.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:45:34.498" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:45:34.498" starttime="20201029 19:45:34.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:45:34.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:45:34.499" starttime="20201029 19:45:34.498"></status>
</kw>
<status status="PASS" endtime="20201029 19:45:34.499" starttime="20201029 19:45:31.293"></status>
</kw>
<msg timestamp="20201029 19:45:34.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:45:34.499" starttime="20201029 19:45:31.292"></status>
</kw>
<msg timestamp="20201029 19:45:34.499" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201029 19:45:34.499" starttime="20201029 19:45:31.292"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201029 19:45:34.500" starttime="20201029 19:45:34.500"></status>
</kw>
<status status="PASS" endtime="20201029 19:45:34.500" starttime="20201029 19:45:31.291"></status>
</kw>
<status status="PASS" endtime="20201029 19:45:34.500" starttime="20201029 19:45:31.291"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:45:34.508" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:45:37.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:45:37.695" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:45:37.695" starttime="20201029 19:45:34.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:45:37.696" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:45:37.696" starttime="20201029 19:45:37.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:45:37.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:45:37.697" starttime="20201029 19:45:37.697"></status>
</kw>
<status status="PASS" endtime="20201029 19:45:37.698" starttime="20201029 19:45:34.502"></status>
</kw>
<msg timestamp="20201029 19:45:37.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:45:37.698" starttime="20201029 19:45:34.502"></status>
</kw>
<status status="PASS" endtime="20201029 19:45:37.698" starttime="20201029 19:45:34.501"></status>
</kw>
<status status="PASS" endtime="20201029 19:45:37.699" starttime="20201029 19:45:34.501"></status>
</kw>
<status status="PASS" endtime="20201029 19:45:37.699" starttime="20201029 19:45:34.500"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201029 19:45:37.699" starttime="20201029 19:45:37.699"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:45:37.703" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:45:40.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:45:40.901" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T19:45:37.297Z",
  "modificat...</msg>
<status status="PASS" endtime="20201029 19:45:40.902" starttime="20201029 19:45:37.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:45:40.903" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T19:45:37.297Z",
  "modificationTime" : "2020-10-29T19:45:37.297Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201029 19:45:40.903" starttime="20201029 19:45:40.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:45:40.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:45:40.903" starttime="20201029 19:45:40.903"></status>
</kw>
<status status="PASS" endtime="20201029 19:45:40.904" starttime="20201029 19:45:37.700"></status>
</kw>
<msg timestamp="20201029 19:45:40.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:45:40.904" starttime="20201029 19:45:37.700"></status>
</kw>
<msg timestamp="20201029 19:45:40.904" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-29T19:45:37.297Z",
  "modificat...</msg>
<status status="PASS" endtime="20201029 19:45:40.904" starttime="20201029 19:45:37.699"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201029 19:45:40.905" starttime="20201029 19:45:40.904"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:45:40.909" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:45:40.909" starttime="20201029 19:45:40.909"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:45:40.911" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:45:40.911" starttime="20201029 19:45:40.909"></status>
</kw>
<status status="PASS" endtime="20201029 19:45:40.911" starttime="20201029 19:45:40.908"></status>
</kw>
<msg timestamp="20201029 19:45:40.911" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:45:40.911" starttime="20201029 19:45:40.907"></status>
</kw>
<status status="PASS" endtime="20201029 19:45:40.911" starttime="20201029 19:45:40.907"></status>
</kw>
<msg timestamp="20201029 19:45:40.912" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201029 19:45:40.912" starttime="20201029 19:45:40.906"></status>
</kw>
<msg timestamp="20201029 19:45:40.912" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201029 19:45:40.912" starttime="20201029 19:45:40.905"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:45:40.916" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:45:44.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:45:44.248" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:45:44.248" starttime="20201029 19:45:40.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:45:44.249" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:45:44.249" starttime="20201029 19:45:44.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:45:44.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:45:44.250" starttime="20201029 19:45:44.249"></status>
</kw>
<status status="PASS" endtime="20201029 19:45:44.250" starttime="20201029 19:45:40.913"></status>
</kw>
<msg timestamp="20201029 19:45:44.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:45:44.250" starttime="20201029 19:45:40.913"></status>
</kw>
<status status="PASS" endtime="20201029 19:45:44.251" starttime="20201029 19:45:40.912"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:45:44.255" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:45:51.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:45:51.457" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:45:51.457" starttime="20201029 19:45:44.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:45:51.458" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:45:51.458" starttime="20201029 19:45:51.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:45:51.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:45:51.459" starttime="20201029 19:45:51.458"></status>
</kw>
<status status="PASS" endtime="20201029 19:45:51.459" starttime="20201029 19:45:44.252"></status>
</kw>
<msg timestamp="20201029 19:45:51.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:45:51.460" starttime="20201029 19:45:44.252"></status>
</kw>
<status status="PASS" endtime="20201029 19:45:51.460" starttime="20201029 19:45:44.251"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:45:51.464" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:45:57.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:45:57.007" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:45:57.007" starttime="20201029 19:45:51.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:45:57.008" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:45:57.009" starttime="20201029 19:45:57.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:45:57.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:45:57.009" starttime="20201029 19:45:57.009"></status>
</kw>
<status status="PASS" endtime="20201029 19:45:57.010" starttime="20201029 19:45:51.461"></status>
</kw>
<msg timestamp="20201029 19:45:57.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:45:57.010" starttime="20201029 19:45:51.461"></status>
</kw>
<status status="PASS" endtime="20201029 19:45:57.010" starttime="20201029 19:45:51.460"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:45:57.014" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:46:02.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:46:02.202" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:46:02.202" starttime="20201029 19:45:57.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:46:02.203" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:46:02.203" starttime="20201029 19:46:02.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:46:02.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:46:02.204" starttime="20201029 19:46:02.203"></status>
</kw>
<status status="PASS" endtime="20201029 19:46:02.204" starttime="20201029 19:45:57.011"></status>
</kw>
<msg timestamp="20201029 19:46:02.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:46:02.204" starttime="20201029 19:45:57.011"></status>
</kw>
<status status="PASS" endtime="20201029 19:46:02.205" starttime="20201029 19:45:57.010"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 19:46:02.205" critical="yes" starttime="20201029 19:45:27.298"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:46:02.210" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:46:02.210" starttime="20201029 19:46:02.209"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:46:02.211" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:46:02.211" starttime="20201029 19:46:02.210"></status>
</kw>
<status status="PASS" endtime="20201029 19:46:02.211" starttime="20201029 19:46:02.209"></status>
</kw>
<msg timestamp="20201029 19:46:02.211" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:46:02.211" starttime="20201029 19:46:02.208"></status>
</kw>
<status status="PASS" endtime="20201029 19:46:02.213" starttime="20201029 19:46:02.208"></status>
</kw>
<msg timestamp="20201029 19:46:02.213" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201029 19:46:02.213" starttime="20201029 19:46:02.207"></status>
</kw>
<msg timestamp="20201029 19:46:02.213" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201029 19:46:02.213" starttime="20201029 19:46:02.206"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:46:02.217" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:46:05.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:46:05.425" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:46:05.425" starttime="20201029 19:46:02.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:46:05.426" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:46:05.426" starttime="20201029 19:46:05.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:46:05.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:46:05.427" starttime="20201029 19:46:05.426"></status>
</kw>
<status status="PASS" endtime="20201029 19:46:05.427" starttime="20201029 19:46:02.214"></status>
</kw>
<msg timestamp="20201029 19:46:05.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:46:05.427" starttime="20201029 19:46:02.214"></status>
</kw>
<status status="PASS" endtime="20201029 19:46:05.428" starttime="20201029 19:46:02.213"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:46:05.432" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:46:08.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:46:08.422" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:46:08.422" starttime="20201029 19:46:05.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:46:08.423" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:46:08.423" starttime="20201029 19:46:08.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:46:08.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:46:08.424" starttime="20201029 19:46:08.423"></status>
</kw>
<status status="PASS" endtime="20201029 19:46:08.424" starttime="20201029 19:46:05.429"></status>
</kw>
<msg timestamp="20201029 19:46:08.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:46:08.425" starttime="20201029 19:46:05.428"></status>
</kw>
<status status="PASS" endtime="20201029 19:46:08.425" starttime="20201029 19:46:05.428"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201029 19:46:08.425" critical="yes" starttime="20201029 19:46:02.205"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201029 19:46:08.427" starttime="20201029 19:45:27.217"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201029 19:47:41.297" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201029 19:47:41.297" starttime="20201029 19:47:41.297"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:47:41.298" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201029 19:47:41.298" starttime="20201029 19:47:41.298"></status>
</kw>
<status status="PASS" endtime="20201029 19:47:41.298" starttime="20201029 19:47:41.297"></status>
</kw>
<msg timestamp="20201029 19:47:41.298" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201029 19:47:41.298" starttime="20201029 19:47:41.296"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201029 19:47:41.299" starttime="20201029 19:47:41.299"></status>
</kw>
<msg timestamp="20201029 19:47:41.299" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201029 19:47:41.299" starttime="20201029 19:47:41.298"></status>
</kw>
<status status="PASS" endtime="20201029 19:47:41.300" starttime="20201029 19:47:41.296"></status>
</kw>
<msg timestamp="20201029 19:47:41.300" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201029 19:47:41.300" starttime="20201029 19:47:41.295"></status>
</kw>
<msg timestamp="20201029 19:47:41.300" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201029 19:47:41.300" starttime="20201029 19:47:41.294"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201029 19:47:41.300" level="INFO">${random} = 64200</msg>
<status status="PASS" endtime="20201029 19:47:41.300" starttime="20201029 19:47:41.300"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:47:41.305" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-64200 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:47:44.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:47:44.882" level="INFO">${output} = 2020-10-29 19:47:43 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-29 19:47:43 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201029 19:47:44.882" starttime="20201029 19:47:41.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:47:44.883" level="INFO">2020-10-29 19:47:43 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-29 19:47:43 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-29 19:47:43 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-29 19:47:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:47:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C574259B0AA0-&gt;6c263d47-e2d5-480b-88bb-c4cbb34f4273
2020-10-29 19:47:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201029 19:47:44.883" starttime="20201029 19:47:44.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:47:44.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:47:44.884" starttime="20201029 19:47:44.883"></status>
</kw>
<status status="PASS" endtime="20201029 19:47:44.884" starttime="20201029 19:47:41.301"></status>
</kw>
<msg timestamp="20201029 19:47:44.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:47:44.884" starttime="20201029 19:47:41.301"></status>
</kw>
<msg timestamp="20201029 19:47:44.884" level="INFO">${result} = 2020-10-29 19:47:43 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-29 19:47:43 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201029 19:47:44.884" starttime="20201029 19:47:41.301"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:47:44.888" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:47:46.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:47:46.801" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:45 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-29 19:46 ofs://om/volume1/bucket1/ozone-39722
-rw-...</msg>
<status status="PASS" endtime="20201029 19:47:46.801" starttime="20201029 19:47:44.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:47:46.802" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:45 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-29 19:46 ofs://om/volume1/bucket1/ozone-39722
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-29 19:47 ofs://om/volume1/bucket1/ozone-64200
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:46 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:47 ofs://om/volume1/bucket1/wordcount-48.txt</msg>
<status status="PASS" endtime="20201029 19:47:46.802" starttime="20201029 19:47:46.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:47:46.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:47:46.803" starttime="20201029 19:47:46.802"></status>
</kw>
<status status="PASS" endtime="20201029 19:47:46.803" starttime="20201029 19:47:44.885"></status>
</kw>
<msg timestamp="20201029 19:47:46.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:47:46.803" starttime="20201029 19:47:44.885"></status>
</kw>
<msg timestamp="20201029 19:47:46.804" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:45 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-29 19:46 ofs://om/volume1/bucket1/ozone-39722
-rw-...</msg>
<status status="PASS" endtime="20201029 19:47:46.804" starttime="20201029 19:47:44.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201029 19:47:46.804" starttime="20201029 19:47:46.804"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201029 19:47:46.804" critical="yes" starttime="20201029 19:47:41.293"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201029 19:47:46.806" starttime="20201029 19:47:41.241"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:46:12.988" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:46:12.988" starttime="20201029 19:46:12.987"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:46:12.988" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:46:12.988" starttime="20201029 19:46:12.988"></status>
</kw>
<status status="PASS" endtime="20201029 19:46:12.989" starttime="20201029 19:46:12.987"></status>
</kw>
<msg timestamp="20201029 19:46:12.989" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:46:12.989" starttime="20201029 19:46:12.987"></status>
</kw>
<status status="PASS" endtime="20201029 19:46:12.989" starttime="20201029 19:46:12.986"></status>
</kw>
<msg timestamp="20201029 19:46:12.989" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201029 19:46:12.989" starttime="20201029 19:46:12.986"></status>
</kw>
<msg timestamp="20201029 19:46:12.989" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201029 19:46:12.989" starttime="20201029 19:46:12.985"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201029 19:46:12.990" level="INFO">${random} = 39722</msg>
<status status="PASS" endtime="20201029 19:46:12.990" starttime="20201029 19:46:12.989"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:46:12.994" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-39722 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:46:16.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:46:16.692" level="INFO">${output} = 2020-10-29 19:46:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-29 19:46:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201029 19:46:16.692" starttime="20201029 19:46:12.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:46:16.693" level="INFO">2020-10-29 19:46:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-29 19:46:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-29 19:46:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-29 19:46:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:46:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9726A5E76556-&gt;6c263d47-e2d5-480b-88bb-c4cbb34f4273
2020-10-29 19:46:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201029 19:46:16.693" starttime="20201029 19:46:16.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:46:16.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:46:16.694" starttime="20201029 19:46:16.693"></status>
</kw>
<status status="PASS" endtime="20201029 19:46:16.694" starttime="20201029 19:46:12.991"></status>
</kw>
<msg timestamp="20201029 19:46:16.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:46:16.694" starttime="20201029 19:46:12.990"></status>
</kw>
<msg timestamp="20201029 19:46:16.695" level="INFO">${result} = 2020-10-29 19:46:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-29 19:46:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201029 19:46:16.695" starttime="20201029 19:46:12.990"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:46:16.698" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:46:18.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:46:18.500" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:45 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-29 19:46 o3fs://bucket1.volume1.om/ozone-39722
dr...</msg>
<status status="PASS" endtime="20201029 19:46:18.500" starttime="20201029 19:46:16.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:46:18.501" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:45 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-29 19:46 o3fs://bucket1.volume1.om/ozone-39722
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:46 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201029 19:46:18.501" starttime="20201029 19:46:18.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:46:18.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:46:18.502" starttime="20201029 19:46:18.501"></status>
</kw>
<status status="PASS" endtime="20201029 19:46:18.502" starttime="20201029 19:46:16.696"></status>
</kw>
<msg timestamp="20201029 19:46:18.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:46:18.502" starttime="20201029 19:46:16.695"></status>
</kw>
<msg timestamp="20201029 19:46:18.502" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-29 19:45 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-29 19:46 o3fs://bucket1.volume1.om/ozone-39722
dr...</msg>
<status status="PASS" endtime="20201029 19:46:18.502" starttime="20201029 19:46:16.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201029 19:46:18.503" starttime="20201029 19:46:18.502"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201029 19:46:18.503" critical="yes" starttime="20201029 19:46:12.984"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201029 19:46:18.504" starttime="20201029 19:46:12.933"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:47:51.374" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:47:51.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:47:51.379" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201029 19:47:51.379" starttime="20201029 19:47:51.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:47:51.380" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201029 19:47:51.380" starttime="20201029 19:47:51.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:47:51.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:47:51.381" starttime="20201029 19:47:51.380"></status>
</kw>
<status status="PASS" endtime="20201029 19:47:51.381" starttime="20201029 19:47:51.370"></status>
</kw>
<msg timestamp="20201029 19:47:51.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:47:51.381" starttime="20201029 19:47:51.369"></status>
</kw>
<msg timestamp="20201029 19:47:51.381" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201029 19:47:51.381" starttime="20201029 19:47:51.369"></status>
</kw>
<msg timestamp="20201029 19:47:51.382" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201029 19:47:51.382" starttime="20201029 19:47:51.369"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201029 19:47:51.385" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201029 19:47:51.385" starttime="20201029 19:47:51.385"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:47:51.386" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201029 19:47:51.386" starttime="20201029 19:47:51.385"></status>
</kw>
<status status="PASS" endtime="20201029 19:47:51.386" starttime="20201029 19:47:51.384"></status>
</kw>
<msg timestamp="20201029 19:47:51.386" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201029 19:47:51.386" starttime="20201029 19:47:51.384"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201029 19:47:51.387" starttime="20201029 19:47:51.387"></status>
</kw>
<msg timestamp="20201029 19:47:51.387" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201029 19:47:51.388" starttime="20201029 19:47:51.386"></status>
</kw>
<status status="PASS" endtime="20201029 19:47:51.388" starttime="20201029 19:47:51.383"></status>
</kw>
<msg timestamp="20201029 19:47:51.388" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201029 19:47:51.388" starttime="20201029 19:47:51.382"></status>
</kw>
<msg timestamp="20201029 19:47:51.388" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201029 19:47:51.388" starttime="20201029 19:47:51.382"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:47:51.392" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:48:29.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:48:29.427" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-29 19:47:53 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-29 19:47:53 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201029 19:48:29.427" starttime="20201029 19:47:51.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:48:29.428" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-29 19:47:53 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-29 19:47:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-29 19:47:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-29 19:47:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:47:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A65387929215-&gt;6c263d47-e2d5-480b-88bb-c4cbb34f4273
2020-10-29 19:47:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-29 19:47:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-10-29 19:47:54 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-29 19:47:55 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-29 19:47:55 INFO  JobSubmitter:202 - number of splits:3
2020-10-29 19:47:58 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604000707250_0003
2020-10-29 19:47:58 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-29 19:47:58 INFO  Configuration:2795 - resource-types.xml not found
2020-10-29 19:47:58 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-29 19:47:58 INFO  YarnClientImpl:329 - Submitted application application_1604000707250_0003
2020-10-29 19:47:58 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604000707250_0003/
2020-10-29 19:47:58 INFO  Job:1619 - Running job: job_1604000707250_0003
2020-10-29 19:48:05 INFO  Job:1640 - Job job_1604000707250_0003 running in uber mode : false
2020-10-29 19:48:05 INFO  Job:1647 -  map 0% reduce 0%
2020-10-29 19:48:12 INFO  Job:1647 -  map 33% reduce 0%
2020-10-29 19:48:18 INFO  Job:1647 -  map 67% reduce 0%
2020-10-29 19:48:23 INFO  Job:1647 -  map 100% reduce 0%
2020-10-29 19:48:27 INFO  Job:1647 -  map 100% reduce 100%
2020-10-29 19:48:28 INFO  Job:1658 - Job job_1604000707250_0003 completed successfully
2020-10-29 19:48:28 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061445
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39772
		Total time spent by all reduces in occupied slots (ms)=14656
		Total time spent by all map tasks (ms)=9943
		Total time spent by all reduce tasks (ms)=3664
		Total vcore-milliseconds taken by all map tasks=9943
		Total vcore-milliseconds taken by all reduce tasks=3664
		Total megabyte-milliseconds taken by all map tasks=40726528
		Total megabyte-milliseconds taken by all reduce tasks=15007744
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=563
		CPU time spent (ms)=7130
		Physical memory (bytes) snapshot=1457872896
		Virtual memory (bytes) snapshot=16065740800
		Total committed heap usage (bytes)=1700790272
		Peak Map Physical memory (bytes)=375296000
		Peak Map Virtual memory (bytes)=4019564544
		Peak Reduce Physical memory (bytes)=376090624
		Peak Reduce Virtual memory (bytes)=4035567616
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.261 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201029 19:48:29.429" starttime="20201029 19:48:29.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:48:29.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:48:29.429" starttime="20201029 19:48:29.429"></status>
</kw>
<status status="PASS" endtime="20201029 19:48:29.429" starttime="20201029 19:47:51.389"></status>
</kw>
<msg timestamp="20201029 19:48:29.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:48:29.430" starttime="20201029 19:47:51.389"></status>
</kw>
<msg timestamp="20201029 19:48:29.430" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-29 19:47:53 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-29 19:47:53 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201029 19:48:29.430" starttime="20201029 19:47:51.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201029 19:48:29.431" starttime="20201029 19:48:29.430"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201029 19:48:29.431" critical="yes" starttime="20201029 19:47:51.368"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:48:29.436" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:48:29.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:48:29.442" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201029 19:48:29.442" starttime="20201029 19:48:29.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:48:29.443" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201029 19:48:29.443" starttime="20201029 19:48:29.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:48:29.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:48:29.444" starttime="20201029 19:48:29.443"></status>
</kw>
<status status="PASS" endtime="20201029 19:48:29.444" starttime="20201029 19:48:29.433"></status>
</kw>
<msg timestamp="20201029 19:48:29.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:48:29.444" starttime="20201029 19:48:29.433"></status>
</kw>
<msg timestamp="20201029 19:48:29.444" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201029 19:48:29.444" starttime="20201029 19:48:29.432"></status>
</kw>
<msg timestamp="20201029 19:48:29.444" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201029 19:48:29.445" starttime="20201029 19:48:29.432"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201029 19:48:29.445" level="INFO">${random} = 11</msg>
<status status="PASS" endtime="20201029 19:48:29.445" starttime="20201029 19:48:29.445"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201029 19:48:29.449" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201029 19:48:29.449" starttime="20201029 19:48:29.448"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:48:29.449" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201029 19:48:29.449" starttime="20201029 19:48:29.449"></status>
</kw>
<status status="PASS" endtime="20201029 19:48:29.449" starttime="20201029 19:48:29.448"></status>
</kw>
<msg timestamp="20201029 19:48:29.450" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201029 19:48:29.450" starttime="20201029 19:48:29.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201029 19:48:29.450" starttime="20201029 19:48:29.450"></status>
</kw>
<msg timestamp="20201029 19:48:29.451" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201029 19:48:29.451" starttime="20201029 19:48:29.450"></status>
</kw>
<status status="PASS" endtime="20201029 19:48:29.451" starttime="20201029 19:48:29.447"></status>
</kw>
<msg timestamp="20201029 19:48:29.451" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201029 19:48:29.451" starttime="20201029 19:48:29.446"></status>
</kw>
<msg timestamp="20201029 19:48:29.451" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201029 19:48:29.451" starttime="20201029 19:48:29.445"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201029 19:48:29.454" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201029 19:48:29.454" starttime="20201029 19:48:29.454"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:48:29.455" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201029 19:48:29.455" starttime="20201029 19:48:29.454"></status>
</kw>
<status status="PASS" endtime="20201029 19:48:29.455" starttime="20201029 19:48:29.453"></status>
</kw>
<msg timestamp="20201029 19:48:29.455" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201029 19:48:29.455" starttime="20201029 19:48:29.453"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:48:29.456" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201029 19:48:29.456" starttime="20201029 19:48:29.456"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:48:29.457" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201029 19:48:29.457" starttime="20201029 19:48:29.457"></status>
</kw>
<status status="PASS" endtime="20201029 19:48:29.457" starttime="20201029 19:48:29.455"></status>
</kw>
<msg timestamp="20201029 19:48:29.457" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201029 19:48:29.457" starttime="20201029 19:48:29.455"></status>
</kw>
<status status="PASS" endtime="20201029 19:48:29.458" starttime="20201029 19:48:29.452"></status>
</kw>
<msg timestamp="20201029 19:48:29.458" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201029 19:48:29.458" starttime="20201029 19:48:29.452"></status>
</kw>
<msg timestamp="20201029 19:48:29.458" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201029 19:48:29.458" starttime="20201029 19:48:29.451"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201029 19:48:29.461" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201029 19:48:29.461" starttime="20201029 19:48:29.460"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:48:29.461" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201029 19:48:29.461" starttime="20201029 19:48:29.461"></status>
</kw>
<status status="PASS" endtime="20201029 19:48:29.461" starttime="20201029 19:48:29.460"></status>
</kw>
<msg timestamp="20201029 19:48:29.462" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201029 19:48:29.462" starttime="20201029 19:48:29.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:48:29.463" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201029 19:48:29.463" starttime="20201029 19:48:29.463"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:48:29.464" level="INFO">${result} = /wordcount-11.txt</msg>
<status status="PASS" endtime="20201029 19:48:29.464" starttime="20201029 19:48:29.463"></status>
</kw>
<status status="PASS" endtime="20201029 19:48:29.464" starttime="20201029 19:48:29.462"></status>
</kw>
<msg timestamp="20201029 19:48:29.464" level="INFO">${path_with_leading} = /wordcount-11.txt</msg>
<status status="PASS" endtime="20201029 19:48:29.464" starttime="20201029 19:48:29.462"></status>
</kw>
<status status="PASS" endtime="20201029 19:48:29.464" starttime="20201029 19:48:29.459"></status>
</kw>
<msg timestamp="20201029 19:48:29.464" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-11.txt</msg>
<status status="PASS" endtime="20201029 19:48:29.464" starttime="20201029 19:48:29.458"></status>
</kw>
<msg timestamp="20201029 19:48:29.464" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-11.txt</msg>
<status status="PASS" endtime="20201029 19:48:29.465" starttime="20201029 19:48:29.458"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:48:29.469" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-11.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:49:14.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:49:14.596" level="INFO">${output} = 2020-10-29 19:48:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-10-29 19:48:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201029 19:49:14.596" starttime="20201029 19:48:29.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:49:14.597" level="INFO">2020-10-29 19:48:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-10-29 19:48:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-29 19:48:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-29 19:48:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-29 19:48:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-29 19:48:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:48:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0FCAEBECCB74-&gt;6c263d47-e2d5-480b-88bb-c4cbb34f4273
2020-10-29 19:48:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-29 19:48:35 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-29 19:48:38 INFO  JobSubmitter:202 - number of splits:3
2020-10-29 19:48:38 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604000707250_0004
2020-10-29 19:48:38 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-29 19:48:38 INFO  Configuration:2795 - resource-types.xml not found
2020-10-29 19:48:38 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-29 19:48:38 INFO  YarnClientImpl:329 - Submitted application application_1604000707250_0004
2020-10-29 19:48:38 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604000707250_0004/
2020-10-29 19:48:38 INFO  Job:1619 - Running job: job_1604000707250_0004
2020-10-29 19:48:46 INFO  Job:1640 - Job job_1604000707250_0004 running in uber mode : false
2020-10-29 19:48:46 INFO  Job:1647 -  map 0% reduce 0%
2020-10-29 19:48:52 INFO  Job:1647 -  map 33% reduce 0%
2020-10-29 19:48:59 INFO  Job:1647 -  map 67% reduce 0%
2020-10-29 19:49:04 INFO  Job:1647 -  map 100% reduce 0%
2020-10-29 19:49:08 INFO  Job:1647 -  map 100% reduce 100%
2020-10-29 19:49:14 INFO  Job:1658 - Job job_1604000707250_0004 completed successfully
2020-10-29 19:49:14 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40576
		Total time spent by all reduces in occupied slots (ms)=15048
		Total time spent by all map tasks (ms)=10144
		Total time spent by all reduce tasks (ms)=3762
		Total vcore-milliseconds taken by all map tasks=10144
		Total vcore-milliseconds taken by all reduce tasks=3762
		Total megabyte-milliseconds taken by all map tasks=41549824
		Total megabyte-milliseconds taken by all reduce tasks=15409152
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=614
		CPU time spent (ms)=7800
		Physical memory (bytes) snapshot=1391800320
		Virtual memory (bytes) snapshot=16085233664
		Total committed heap usage (bytes)=1516765184
		Peak Map Physical memory (bytes)=369037312
		Peak Map Virtual memory (bytes)=4018802688
		Peak Reduce Physical memory (bytes)=374501376
		Peak Reduce Virtual memory (bytes)=4037312512
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201029 19:49:14.597" starttime="20201029 19:49:14.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:49:14.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:49:14.598" starttime="20201029 19:49:14.597"></status>
</kw>
<status status="PASS" endtime="20201029 19:49:14.598" starttime="20201029 19:48:29.466"></status>
</kw>
<msg timestamp="20201029 19:49:14.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:49:14.598" starttime="20201029 19:48:29.466"></status>
</kw>
<msg timestamp="20201029 19:49:14.599" level="INFO">${output} = 2020-10-29 19:48:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-10-29 19:48:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201029 19:49:14.599" starttime="20201029 19:48:29.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201029 19:49:14.599" starttime="20201029 19:49:14.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201029 19:49:14.600" starttime="20201029 19:49:14.599"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201029 19:49:14.600" critical="yes" starttime="20201029 19:48:29.431"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201029 19:49:14.601" starttime="20201029 19:47:51.315"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:46:23.201" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:46:23.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:46:23.207" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201029 19:46:23.207" starttime="20201029 19:46:23.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:46:23.208" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201029 19:46:23.208" starttime="20201029 19:46:23.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:46:23.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:46:23.209" starttime="20201029 19:46:23.208"></status>
</kw>
<status status="PASS" endtime="20201029 19:46:23.209" starttime="20201029 19:46:23.197"></status>
</kw>
<msg timestamp="20201029 19:46:23.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:46:23.209" starttime="20201029 19:46:23.197"></status>
</kw>
<msg timestamp="20201029 19:46:23.209" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201029 19:46:23.209" starttime="20201029 19:46:23.197"></status>
</kw>
<msg timestamp="20201029 19:46:23.210" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201029 19:46:23.210" starttime="20201029 19:46:23.196"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:46:23.214" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:46:23.214" starttime="20201029 19:46:23.213"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:46:23.215" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:46:23.215" starttime="20201029 19:46:23.214"></status>
</kw>
<status status="PASS" endtime="20201029 19:46:23.215" starttime="20201029 19:46:23.213"></status>
</kw>
<msg timestamp="20201029 19:46:23.215" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:46:23.215" starttime="20201029 19:46:23.211"></status>
</kw>
<status status="PASS" endtime="20201029 19:46:23.215" starttime="20201029 19:46:23.211"></status>
</kw>
<msg timestamp="20201029 19:46:23.216" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201029 19:46:23.216" starttime="20201029 19:46:23.210"></status>
</kw>
<msg timestamp="20201029 19:46:23.216" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201029 19:46:23.216" starttime="20201029 19:46:23.210"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:46:23.219" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:47:02.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:47:02.348" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-29 19:46:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-29 19:46:25 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201029 19:47:02.348" starttime="20201029 19:46:23.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:47:02.349" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-29 19:46:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-29 19:46:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-29 19:46:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-29 19:46:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:46:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-97AE16B4C2F2-&gt;6c263d47-e2d5-480b-88bb-c4cbb34f4273
2020-10-29 19:46:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-29 19:46:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-10-29 19:46:27 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-29 19:46:27 INFO  JobSubmitter:202 - number of splits:3
2020-10-29 19:46:27 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604000707250_0001
2020-10-29 19:46:27 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-29 19:46:27 INFO  Configuration:2795 - resource-types.xml not found
2020-10-29 19:46:27 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-29 19:46:28 INFO  YarnClientImpl:329 - Submitted application application_1604000707250_0001
2020-10-29 19:46:28 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604000707250_0001/
2020-10-29 19:46:28 INFO  Job:1619 - Running job: job_1604000707250_0001
2020-10-29 19:46:38 INFO  Job:1640 - Job job_1604000707250_0001 running in uber mode : false
2020-10-29 19:46:38 INFO  Job:1647 -  map 0% reduce 0%
2020-10-29 19:46:45 INFO  Job:1647 -  map 33% reduce 0%
2020-10-29 19:46:51 INFO  Job:1647 -  map 67% reduce 0%
2020-10-29 19:46:56 INFO  Job:1647 -  map 100% reduce 0%
2020-10-29 19:47:00 INFO  Job:1647 -  map 100% reduce 100%
2020-10-29 19:47:01 INFO  Job:1658 - Job job_1604000707250_0001 completed successfully
2020-10-29 19:47:01 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41036
		Total time spent by all reduces in occupied slots (ms)=15304
		Total time spent by all map tasks (ms)=10259
		Total time spent by all reduce tasks (ms)=3826
		Total vcore-milliseconds taken by all map tasks=10259
		Total vcore-milliseconds taken by all reduce tasks=3826
		Total megabyte-milliseconds taken by all map tasks=42020864
		Total megabyte-milliseconds taken by all reduce tasks=15671296
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=604
		CPU time spent (ms)=6880
		Physical memory (bytes) snapshot=1467396096
		Virtual memory (bytes) snapshot=16081506304
		Total committed heap usage (bytes)=1709178880
		Peak Map Physical memory (bytes)=373886976
		Peak Map Virtual memory (bytes)=4024696832
		Peak Reduce Physical memory (bytes)=370507776
		Peak Reduce Virtual memory (bytes)=4033011712
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.248 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201029 19:47:02.350" starttime="20201029 19:47:02.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:47:02.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:47:02.350" starttime="20201029 19:47:02.350"></status>
</kw>
<status status="PASS" endtime="20201029 19:47:02.350" starttime="20201029 19:46:23.217"></status>
</kw>
<msg timestamp="20201029 19:47:02.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:47:02.351" starttime="20201029 19:46:23.216"></status>
</kw>
<msg timestamp="20201029 19:47:02.351" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-29 19:46:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-29 19:46:25 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201029 19:47:02.351" starttime="20201029 19:46:23.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201029 19:47:02.352" starttime="20201029 19:47:02.351"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201029 19:47:02.352" critical="yes" starttime="20201029 19:46:23.195"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:47:02.356" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:47:02.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:47:02.362" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201029 19:47:02.362" starttime="20201029 19:47:02.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:47:02.363" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201029 19:47:02.363" starttime="20201029 19:47:02.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:47:02.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:47:02.364" starttime="20201029 19:47:02.363"></status>
</kw>
<status status="PASS" endtime="20201029 19:47:02.364" starttime="20201029 19:47:02.354"></status>
</kw>
<msg timestamp="20201029 19:47:02.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:47:02.364" starttime="20201029 19:47:02.354"></status>
</kw>
<msg timestamp="20201029 19:47:02.364" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201029 19:47:02.364" starttime="20201029 19:47:02.354"></status>
</kw>
<msg timestamp="20201029 19:47:02.364" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201029 19:47:02.364" starttime="20201029 19:47:02.353"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201029 19:47:02.365" level="INFO">${random} = 48</msg>
<status status="PASS" endtime="20201029 19:47:02.365" starttime="20201029 19:47:02.365"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:47:02.368" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:47:02.369" starttime="20201029 19:47:02.368"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:47:02.370" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:47:02.370" starttime="20201029 19:47:02.369"></status>
</kw>
<status status="PASS" endtime="20201029 19:47:02.370" starttime="20201029 19:47:02.368"></status>
</kw>
<msg timestamp="20201029 19:47:02.370" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:47:02.370" starttime="20201029 19:47:02.367"></status>
</kw>
<status status="PASS" endtime="20201029 19:47:02.370" starttime="20201029 19:47:02.366"></status>
</kw>
<msg timestamp="20201029 19:47:02.370" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201029 19:47:02.370" starttime="20201029 19:47:02.366"></status>
</kw>
<msg timestamp="20201029 19:47:02.371" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201029 19:47:02.371" starttime="20201029 19:47:02.365"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:47:02.374" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:47:02.374" starttime="20201029 19:47:02.373"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:47:02.374" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:47:02.374" starttime="20201029 19:47:02.374"></status>
</kw>
<status status="PASS" endtime="20201029 19:47:02.375" starttime="20201029 19:47:02.373"></status>
</kw>
<msg timestamp="20201029 19:47:02.375" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:47:02.375" starttime="20201029 19:47:02.373"></status>
</kw>
<status status="PASS" endtime="20201029 19:47:02.375" starttime="20201029 19:47:02.372"></status>
</kw>
<msg timestamp="20201029 19:47:02.375" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201029 19:47:02.375" starttime="20201029 19:47:02.371"></status>
</kw>
<msg timestamp="20201029 19:47:02.375" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201029 19:47:02.375" starttime="20201029 19:47:02.371"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201029 19:47:02.378" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201029 19:47:02.378" starttime="20201029 19:47:02.378"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201029 19:47:02.379" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201029 19:47:02.379" starttime="20201029 19:47:02.378"></status>
</kw>
<status status="PASS" endtime="20201029 19:47:02.379" starttime="20201029 19:47:02.377"></status>
</kw>
<msg timestamp="20201029 19:47:02.379" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201029 19:47:02.379" starttime="20201029 19:47:02.377"></status>
</kw>
<status status="PASS" endtime="20201029 19:47:02.379" starttime="20201029 19:47:02.376"></status>
</kw>
<msg timestamp="20201029 19:47:02.379" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-48.txt</msg>
<status status="PASS" endtime="20201029 19:47:02.379" starttime="20201029 19:47:02.376"></status>
</kw>
<msg timestamp="20201029 19:47:02.380" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-48.txt</msg>
<status status="PASS" endtime="20201029 19:47:02.380" starttime="20201029 19:47:02.375"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:47:02.384" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-48.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:47:36.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:47:36.671" level="INFO">${output} = 2020-10-29 19:47:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-10-29 19:47:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201029 19:47:36.671" starttime="20201029 19:47:02.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:47:36.672" level="INFO">2020-10-29 19:47:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-10-29 19:47:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-29 19:47:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-29 19:47:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-29 19:47:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-29 19:47:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:47:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-23ECC5F9B327-&gt;6c263d47-e2d5-480b-88bb-c4cbb34f4273
2020-10-29 19:47:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-29 19:47:06 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-29 19:47:06 INFO  JobSubmitter:202 - number of splits:3
2020-10-29 19:47:06 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604000707250_0002
2020-10-29 19:47:06 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-29 19:47:06 INFO  Configuration:2795 - resource-types.xml not found
2020-10-29 19:47:06 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-29 19:47:06 INFO  YarnClientImpl:329 - Submitted application application_1604000707250_0002
2020-10-29 19:47:06 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604000707250_0002/
2020-10-29 19:47:06 INFO  Job:1619 - Running job: job_1604000707250_0002
2020-10-29 19:47:15 INFO  Job:1640 - Job job_1604000707250_0002 running in uber mode : false
2020-10-29 19:47:15 INFO  Job:1647 -  map 0% reduce 0%
2020-10-29 19:47:21 INFO  Job:1647 -  map 33% reduce 0%
2020-10-29 19:47:26 INFO  Job:1647 -  map 67% reduce 0%
2020-10-29 19:47:31 INFO  Job:1647 -  map 100% reduce 0%
2020-10-29 19:47:36 INFO  Job:1647 -  map 100% reduce 100%
2020-10-29 19:47:36 INFO  Job:1658 - Job job_1604000707250_0002 completed successfully
2020-10-29 19:47:36 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124185
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40540
		Total time spent by all reduces in occupied slots (ms)=15148
		Total time spent by all map tasks (ms)=10135
		Total time spent by all reduce tasks (ms)=3787
		Total vcore-milliseconds taken by all map tasks=10135
		Total vcore-milliseconds taken by all reduce tasks=3787
		Total megabyte-milliseconds taken by all map tasks=41512960
		Total megabyte-milliseconds taken by all reduce tasks=15511552
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=612
		CPU time spent (ms)=7300
		Physical memory (bytes) snapshot=1470066688
		Virtual memory (bytes) snapshot=16077541376
		Total committed heap usage (bytes)=1689780224
		Peak Map Physical memory (bytes)=371572736
		Peak Map Virtual memory (bytes)=4017913856
		Peak Reduce Physical memory (bytes)=375889920
		Peak Reduce Virtual memory (bytes)=4038680576
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201029 19:47:36.672" starttime="20201029 19:47:36.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:47:36.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:47:36.673" starttime="20201029 19:47:36.672"></status>
</kw>
<status status="PASS" endtime="20201029 19:47:36.673" starttime="20201029 19:47:02.380"></status>
</kw>
<msg timestamp="20201029 19:47:36.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:47:36.673" starttime="20201029 19:47:02.380"></status>
</kw>
<msg timestamp="20201029 19:47:36.674" level="INFO">${output} = 2020-10-29 19:47:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-10-29 19:47:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201029 19:47:36.674" starttime="20201029 19:47:02.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201029 19:47:36.674" starttime="20201029 19:47:36.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201029 19:47:36.675" starttime="20201029 19:47:36.675"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201029 19:47:36.675" critical="yes" starttime="20201029 19:47:02.352"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201029 19:47:36.676" starttime="20201029 19:46:23.140"></status>
</suite>
<status status="PASS" elapsedtime="209168" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="597339" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
