<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201029 19:59:45.427" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20201029 19:56:38.882" starttime="20201029 19:56:38.881"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:56:38.889" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:56:38.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:56:38.987" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 29 Oct 2020 19:56:38 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 29 Oct 2020 19:21:24 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201029 19:56:38.987" starttime="20201029 19:56:38.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:56:38.988" level="INFO">HTTP/1.1 200 OK
Date: Thu, 29 Oct 2020 19:56:38 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 29 Oct 2020 19:21:24 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20201029 19:56:38.988" starttime="20201029 19:56:38.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:56:38.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:56:38.989" starttime="20201029 19:56:38.988"></status>
</kw>
<status status="PASS" endtime="20201029 19:56:38.989" starttime="20201029 19:56:38.883"></status>
</kw>
<msg timestamp="20201029 19:56:38.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:56:38.990" starttime="20201029 19:56:38.883"></status>
</kw>
<msg timestamp="20201029 19:56:38.990" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 29 Oct 2020 19:56:38 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 29 Oct 2020 19:21:24 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201029 19:56:38.990" starttime="20201029 19:56:38.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20201029 19:56:38.990" starttime="20201029 19:56:38.990"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201029 19:56:38.991" critical="yes" starttime="20201029 19:56:38.881"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201029 19:56:38.994" starttime="20201029 19:56:38.994"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:56:39.013" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:57:55.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:57:55.660" level="INFO">${output} = 2020-10-29 19:56:40,800 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-29 19:56:40,953 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201029 19:57:55.660" starttime="20201029 19:56:39.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:57:55.661" level="INFO">2020-10-29 19:56:40,800 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-29 19:56:40,953 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-29 19:56:40,953 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-29 19:56:43,409 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-29 19:56:43,411 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-10-29 19:56:43,411 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-10-29 19:56:43,411 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-10-29 19:56:43,411 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-29 19:56:43,411 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-29 19:56:43,411 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-10-29 19:56:43,421 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-10-29 19:56:43,423 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-29 19:56:43,432 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-10-29 19:56:43,490 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-24327, with hadoop as owner.
2020-10-29 19:56:43,861 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-89218, with hadoop as owner.
2020-10-29 19:56:43,874 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-60163, with hadoop as owner.
2020-10-29 19:56:43,883 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-12156, with hadoop as owner.
2020-10-29 19:56:43,890 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-56370, with hadoop as owner.
2020-10-29 19:56:43,911 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-24327/bucket-0-31448, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:43,979 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-89218/bucket-0-97075, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:43,986 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-60163/bucket-0-08986, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:43,994 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-12156/bucket-0-66759, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,000 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-56370/bucket-0-17462, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,006 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-24327/bucket-1-57459, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,014 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-89218/bucket-1-72481, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,021 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-60163/bucket-1-70348, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,029 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-12156/bucket-1-24943, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,034 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-56370/bucket-1-78417, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,038 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-24327/bucket-2-65591, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,043 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-89218/bucket-2-56843, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,046 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-60163/bucket-2-56998, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,055 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-12156/bucket-2-87379, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,063 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-56370/bucket-2-00120, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,068 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-24327/bucket-3-45475, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,072 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-89218/bucket-3-85567, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,076 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-60163/bucket-3-36757, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,081 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-12156/bucket-3-75261, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,085 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-56370/bucket-3-37205, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,091 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-24327/bucket-4-78774, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,098 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-89218/bucket-4-07812, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,104 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-60163/bucket-4-19853, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,108 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-12156/bucket-4-39966, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,111 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-56370/bucket-4-67610, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-29 19:56:44,433 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-10-29 19:56:45,377 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-29 19:56:45,433 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-10-29 19:56:45,824 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-29 19:56:45,824 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-37115B63F790-&gt;90fe8ec1-a78e-43c6-aa15-eb0af93b7689
2020-10-29 19:56:45,826 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-29 19:56:46,435 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-10-29 19:56:47,437 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-10-29 19:56:48,438 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-10-29 19:56:48,566 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-96B2449EAF7F-&gt;fe4b2234-dd6b-434c-bba8-3c65edc31d3c
2020-10-29 19:56:48,566 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-29 19:56:49,438 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-10-29 19:56:50,439 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-10-29 19:56:51,439 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-10-29 19:56:52,440 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-10-29 19:56:53,446 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-10-29 19:56:54,454 [Thread-7] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-10-29 19:56:55,455 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-10-29 19:56:56,455 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-10-29 19:56:57,456 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-10-29 19:56:58,456 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-10-29 19:56:59,457 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-10-29 19:57:00,457 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-10-29 19:57:01,458 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-10-29 19:57:02,459 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-10-29 19:57:03,460 [Thread-7] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-10-29 19:57:04,460 [Thread-7] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-10-29 19:57:05,461 [Thread-7] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-10-29 19:57:06,465 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-10-29 19:57:07,465 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-10-29 19:57:08,466 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-10-29 19:57:09,467 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-10-29 19:57:10,467 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-10-29 19:57:11,468 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-10-29 19:57:12,468 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-10-29 19:57:13,469 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-10-29 19:57:14,469 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-10-29 19:57:15,470 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-10-29 19:57:16,470 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-10-29 19:57:17,471 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-10-29 19:57:18,471 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-10-29 19:57:19,472 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-10-29 19:57:20,473 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-10-29 19:57:21,473 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-10-29 19:57:22,474 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-10-29 19:57:23,478 [Thread-7] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-10-29 19:57:24,479 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-10-29 19:57:25,479 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-10-29 19:57:26,479 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-10-29 19:57:27,480 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-10-29 19:57:28,481 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-10-29 19:57:29,481 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-10-29 19:57:30,483 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-10-29 19:57:31,484 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-10-29 19:57:32,484 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-10-29 19:57:33,485 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-10-29 19:57:34,485 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-10-29 19:57:35,486 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-10-29 19:57:36,486 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-10-29 19:57:37,487 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-10-29 19:57:38,487 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-10-29 19:57:39,488 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-10-29 19:57:40,489 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-10-29 19:57:41,489 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-10-29 19:57:42,490 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-10-29 19:57:43,490 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-10-29 19:57:44,491 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-10-29 19:57:45,492 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-10-29 19:57:46,493 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-10-29 19:57:47,493 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-10-29 19:57:48,493 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-10-29 19:57:49,494 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-10-29 19:57:50,495 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,409
Average Time spent in bucket creation: 00:00:00,152
Average Time spent in key creation: 00:00:02,159
Average Time spent in key write: 00:00:01,100
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:14,152
***************************************************</msg>
<status status="PASS" endtime="20201029 19:57:55.662" starttime="20201029 19:57:55.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:57:55.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:57:55.663" starttime="20201029 19:57:55.662"></status>
</kw>
<status status="PASS" endtime="20201029 19:57:55.663" starttime="20201029 19:56:38.995"></status>
</kw>
<msg timestamp="20201029 19:57:55.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:57:55.663" starttime="20201029 19:56:38.995"></status>
</kw>
<msg timestamp="20201029 19:57:55.664" level="INFO">${result} = 2020-10-29 19:56:40,800 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-29 19:56:40,953 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201029 19:57:55.664" starttime="20201029 19:56:38.994"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20201029 19:57:55.665" starttime="20201029 19:57:55.664"></status>
</kw>
<status status="PASS" endtime="20201029 19:57:55.665" starttime="20201029 19:57:55.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20201029 19:57:55.666" starttime="20201029 19:57:55.665"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201029 19:57:55.666" critical="yes" starttime="20201029 19:56:38.993"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201029 19:57:55.668" starttime="20201029 19:56:38.824"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:57:59.984" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:58:02.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:58:02.574" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201029 19:58:02.574" starttime="20201029 19:57:59.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:58:02.575" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2</msg>
<status status="PASS" endtime="20201029 19:58:02.576" starttime="20201029 19:58:02.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:58:02.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:58:02.576" starttime="20201029 19:58:02.576"></status>
</kw>
<status status="PASS" endtime="20201029 19:58:02.577" starttime="20201029 19:57:59.980"></status>
</kw>
<msg timestamp="20201029 19:58:02.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:58:02.577" starttime="20201029 19:57:59.979"></status>
</kw>
<msg timestamp="20201029 19:58:02.577" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201029 19:58:02.577" starttime="20201029 19:57:59.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20201029 19:58:02.578" starttime="20201029 19:58:02.578"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201029 19:58:02.578" critical="yes" starttime="20201029 19:57:59.977"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:58:02.585" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:58:05.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:58:05.045" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201029 19:58:05.045" starttime="20201029 19:58:02.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:58:05.046" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20201029 19:58:05.046" starttime="20201029 19:58:05.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:58:05.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:58:05.047" starttime="20201029 19:58:05.046"></status>
</kw>
<status status="PASS" endtime="20201029 19:58:05.047" starttime="20201029 19:58:02.581"></status>
</kw>
<msg timestamp="20201029 19:58:05.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:58:05.047" starttime="20201029 19:58:02.581"></status>
</kw>
<msg timestamp="20201029 19:58:05.048" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201029 19:58:05.048" starttime="20201029 19:58:02.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20201029 19:58:05.048" starttime="20201029 19:58:05.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20201029 19:58:05.049" starttime="20201029 19:58:05.048"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201029 19:58:05.049" critical="yes" starttime="20201029 19:58:02.579"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201029 19:58:05.050" starttime="20201029 19:57:59.922"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:58:09.447" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:58:12.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:58:12.240" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:58:12.240" starttime="20201029 19:58:09.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:58:12.241" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:58:12.242" starttime="20201029 19:58:12.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:58:12.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:58:12.242" starttime="20201029 19:58:12.242"></status>
</kw>
<status status="PASS" endtime="20201029 19:58:12.243" starttime="20201029 19:58:09.442"></status>
</kw>
<msg timestamp="20201029 19:58:12.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:58:12.243" starttime="20201029 19:58:09.441"></status>
</kw>
<msg timestamp="20201029 19:58:12.243" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:58:12.243" starttime="20201029 19:58:09.441"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201029 19:58:12.244" starttime="20201029 19:58:12.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:58:12.249" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:58:15.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:58:15.443" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:58:15.443" starttime="20201029 19:58:12.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:58:15.444" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:58:15.445" starttime="20201029 19:58:15.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:58:15.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:58:15.445" starttime="20201029 19:58:15.445"></status>
</kw>
<status status="PASS" endtime="20201029 19:58:15.445" starttime="20201029 19:58:12.245"></status>
</kw>
<msg timestamp="20201029 19:58:15.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:58:15.446" starttime="20201029 19:58:12.245"></status>
</kw>
<msg timestamp="20201029 19:58:15.446" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:58:15.446" starttime="20201029 19:58:12.244"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201029 19:58:15.447" starttime="20201029 19:58:15.446"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:58:15.451" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:58:21.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:58:21.201" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:58:21.201" starttime="20201029 19:58:15.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:58:21.202" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:58:21.202" starttime="20201029 19:58:21.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:58:21.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:58:21.203" starttime="20201029 19:58:21.202"></status>
</kw>
<status status="PASS" endtime="20201029 19:58:21.203" starttime="20201029 19:58:15.448"></status>
</kw>
<msg timestamp="20201029 19:58:21.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:58:21.203" starttime="20201029 19:58:15.447"></status>
</kw>
<msg timestamp="20201029 19:58:21.204" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:58:21.204" starttime="20201029 19:58:15.447"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201029 19:58:21.204" starttime="20201029 19:58:21.204"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201029 19:58:21.204" critical="yes" starttime="20201029 19:58:09.440"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201029 19:58:21.206" starttime="20201029 19:58:09.385"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201029 19:59:03.758" level="INFO">${random} = 46787</msg>
<status status="PASS" endtime="20201029 19:59:03.758" starttime="20201029 19:59:03.757"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:59:03.765" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-46787 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:59:38.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:59:38.891" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:59:38.891" starttime="20201029 19:59:03.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:59:38.892" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:59:38.892" starttime="20201029 19:59:38.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:59:38.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:59:38.893" starttime="20201029 19:59:38.892"></status>
</kw>
<status status="PASS" endtime="20201029 19:59:38.893" starttime="20201029 19:59:03.759"></status>
</kw>
<msg timestamp="20201029 19:59:38.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:59:38.894" starttime="20201029 19:59:03.759"></status>
</kw>
<msg timestamp="20201029 19:59:38.894" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:59:38.894" starttime="20201029 19:59:03.758"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201029 19:59:38.895" starttime="20201029 19:59:38.894"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201029 19:59:38.895" critical="yes" starttime="20201029 19:59:03.756"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201029 19:59:38.896" starttime="20201029 19:59:03.702"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201029 19:58:27.499" level="INFO">${random} = 00889</msg>
<status status="PASS" endtime="20201029 19:58:27.499" starttime="20201029 19:58:27.498"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201029 19:58:27.505" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-00889 2&gt;&amp;1'.</msg>
<msg timestamp="20201029 19:58:32.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20201029 19:58:32.198" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:58:32.198" starttime="20201029 19:58:27.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201029 19:58:32.199" level="INFO"></msg>
<status status="PASS" endtime="20201029 19:58:32.199" starttime="20201029 19:58:32.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201029 19:58:32.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201029 19:58:32.200" starttime="20201029 19:58:32.199"></status>
</kw>
<status status="PASS" endtime="20201029 19:58:32.200" starttime="20201029 19:58:27.500"></status>
</kw>
<msg timestamp="20201029 19:58:32.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201029 19:58:32.200" starttime="20201029 19:58:27.499"></status>
</kw>
<msg timestamp="20201029 19:58:32.201" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201029 19:58:32.201" starttime="20201029 19:58:27.499"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201029 19:58:32.201" starttime="20201029 19:58:32.201"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201029 19:58:32.202" critical="yes" starttime="20201029 19:58:27.497"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201029 19:58:32.204" starttime="20201029 19:58:27.441"></status>
</suite>
<status status="PASS" elapsedtime="133750" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
