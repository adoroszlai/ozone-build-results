<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201007 16:49:30.959" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:35:38.064" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:35:40.637" level="INFO">${rc} = 255</msg>
<msg timestamp="20201007 16:35:40.637" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201007 16:35:40.638" starttime="20201007 16:35:38.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:35:40.639" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201007 16:35:40.639" starttime="20201007 16:35:40.638"></status>
</kw>
<msg timestamp="20201007 16:35:40.639" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201007 16:35:40.639" starttime="20201007 16:35:38.058"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:35:40.645" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:35:43.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:35:43.139" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:35:43.139" starttime="20201007 16:35:40.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:35:43.140" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:35:43.141" starttime="20201007 16:35:43.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:35:43.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:35:43.141" starttime="20201007 16:35:43.141"></status>
</kw>
<status status="PASS" endtime="20201007 16:35:43.142" starttime="20201007 16:35:40.642"></status>
</kw>
<msg timestamp="20201007 16:35:43.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:35:43.142" starttime="20201007 16:35:40.641"></status>
</kw>
<msg timestamp="20201007 16:35:43.142" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201007 16:35:43.142" starttime="20201007 16:35:40.641"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201007 16:35:43.143" starttime="20201007 16:35:43.142"></status>
</kw>
<status status="PASS" endtime="20201007 16:35:43.143" starttime="20201007 16:35:40.640"></status>
</kw>
<status status="PASS" endtime="20201007 16:35:43.143" starttime="20201007 16:35:40.640"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:35:43.149" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:35:45.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:35:45.383" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:35:45.383" starttime="20201007 16:35:43.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:35:45.384" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:35:45.385" starttime="20201007 16:35:45.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:35:45.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:35:45.385" starttime="20201007 16:35:45.385"></status>
</kw>
<status status="PASS" endtime="20201007 16:35:45.386" starttime="20201007 16:35:43.145"></status>
</kw>
<msg timestamp="20201007 16:35:45.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:35:45.386" starttime="20201007 16:35:43.145"></status>
</kw>
<status status="PASS" endtime="20201007 16:35:45.386" starttime="20201007 16:35:43.144"></status>
</kw>
<status status="PASS" endtime="20201007 16:35:45.386" starttime="20201007 16:35:43.144"></status>
</kw>
<status status="PASS" endtime="20201007 16:35:45.386" starttime="20201007 16:35:43.143"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201007 16:35:45.387" starttime="20201007 16:35:45.386"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:35:45.391" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:35:47.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:35:47.864" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T16:35:45.260Z",
  "modificat...</msg>
<status status="PASS" endtime="20201007 16:35:47.864" starttime="20201007 16:35:45.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:35:47.865" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T16:35:45.260Z",
  "modificationTime" : "2020-10-07T16:35:45.260Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201007 16:35:47.865" starttime="20201007 16:35:47.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:35:47.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:35:47.866" starttime="20201007 16:35:47.865"></status>
</kw>
<status status="PASS" endtime="20201007 16:35:47.866" starttime="20201007 16:35:45.388"></status>
</kw>
<msg timestamp="20201007 16:35:47.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:35:47.867" starttime="20201007 16:35:45.388"></status>
</kw>
<msg timestamp="20201007 16:35:47.867" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T16:35:45.260Z",
  "modificat...</msg>
<status status="PASS" endtime="20201007 16:35:47.867" starttime="20201007 16:35:45.387"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201007 16:35:47.868" starttime="20201007 16:35:47.867"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:35:47.872" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:35:47.872" starttime="20201007 16:35:47.871"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:35:47.873" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:35:47.873" starttime="20201007 16:35:47.872"></status>
</kw>
<status status="PASS" endtime="20201007 16:35:47.873" starttime="20201007 16:35:47.871"></status>
</kw>
<msg timestamp="20201007 16:35:47.873" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:35:47.873" starttime="20201007 16:35:47.870"></status>
</kw>
<status status="PASS" endtime="20201007 16:35:47.873" starttime="20201007 16:35:47.870"></status>
</kw>
<msg timestamp="20201007 16:35:47.874" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201007 16:35:47.874" starttime="20201007 16:35:47.869"></status>
</kw>
<msg timestamp="20201007 16:35:47.874" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201007 16:35:47.874" starttime="20201007 16:35:47.868"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:35:47.879" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:35:50.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:35:50.240" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:35:50.240" starttime="20201007 16:35:47.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:35:50.241" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:35:50.241" starttime="20201007 16:35:50.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:35:50.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:35:50.242" starttime="20201007 16:35:50.241"></status>
</kw>
<status status="PASS" endtime="20201007 16:35:50.242" starttime="20201007 16:35:47.875"></status>
</kw>
<msg timestamp="20201007 16:35:50.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:35:50.243" starttime="20201007 16:35:47.875"></status>
</kw>
<status status="PASS" endtime="20201007 16:35:50.243" starttime="20201007 16:35:47.874"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:35:50.247" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:35:56.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:35:56.513" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:35:56.513" starttime="20201007 16:35:50.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:35:56.514" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:35:56.514" starttime="20201007 16:35:56.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:35:56.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:35:56.515" starttime="20201007 16:35:56.514"></status>
</kw>
<status status="PASS" endtime="20201007 16:35:56.515" starttime="20201007 16:35:50.244"></status>
</kw>
<msg timestamp="20201007 16:35:56.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:35:56.515" starttime="20201007 16:35:50.244"></status>
</kw>
<status status="PASS" endtime="20201007 16:35:56.516" starttime="20201007 16:35:50.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:35:56.520" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:36:00.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:36:00.787" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:36:00.787" starttime="20201007 16:35:56.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:36:00.788" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:36:00.789" starttime="20201007 16:36:00.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:36:00.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:36:00.789" starttime="20201007 16:36:00.789"></status>
</kw>
<status status="PASS" endtime="20201007 16:36:00.790" starttime="20201007 16:35:56.517"></status>
</kw>
<msg timestamp="20201007 16:36:00.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:36:00.790" starttime="20201007 16:35:56.517"></status>
</kw>
<status status="PASS" endtime="20201007 16:36:00.790" starttime="20201007 16:35:56.516"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:36:00.795" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:36:05.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:36:05.170" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:36:05.170" starttime="20201007 16:36:00.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:36:05.171" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:36:05.171" starttime="20201007 16:36:05.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:36:05.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:36:05.172" starttime="20201007 16:36:05.171"></status>
</kw>
<status status="PASS" endtime="20201007 16:36:05.172" starttime="20201007 16:36:00.792"></status>
</kw>
<msg timestamp="20201007 16:36:05.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:36:05.173" starttime="20201007 16:36:00.791"></status>
</kw>
<status status="PASS" endtime="20201007 16:36:05.173" starttime="20201007 16:36:00.790"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 16:36:05.173" critical="yes" starttime="20201007 16:35:38.057"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:36:05.180" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:36:05.180" starttime="20201007 16:36:05.179"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:36:05.181" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:36:05.181" starttime="20201007 16:36:05.180"></status>
</kw>
<status status="PASS" endtime="20201007 16:36:05.181" starttime="20201007 16:36:05.178"></status>
</kw>
<msg timestamp="20201007 16:36:05.181" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:36:05.181" starttime="20201007 16:36:05.178"></status>
</kw>
<status status="PASS" endtime="20201007 16:36:05.181" starttime="20201007 16:36:05.177"></status>
</kw>
<msg timestamp="20201007 16:36:05.181" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201007 16:36:05.182" starttime="20201007 16:36:05.176"></status>
</kw>
<msg timestamp="20201007 16:36:05.182" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201007 16:36:05.182" starttime="20201007 16:36:05.175"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:36:05.186" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:36:07.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:36:07.536" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:36:07.536" starttime="20201007 16:36:05.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:36:07.537" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:36:07.537" starttime="20201007 16:36:07.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:36:07.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:36:07.538" starttime="20201007 16:36:07.538"></status>
</kw>
<status status="PASS" endtime="20201007 16:36:07.539" starttime="20201007 16:36:05.183"></status>
</kw>
<msg timestamp="20201007 16:36:07.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:36:07.539" starttime="20201007 16:36:05.183"></status>
</kw>
<status status="PASS" endtime="20201007 16:36:07.539" starttime="20201007 16:36:05.182"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:36:07.544" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:36:09.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:36:09.954" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:36:09.954" starttime="20201007 16:36:07.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:36:09.955" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:36:09.955" starttime="20201007 16:36:09.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:36:09.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:36:09.956" starttime="20201007 16:36:09.955"></status>
</kw>
<status status="PASS" endtime="20201007 16:36:09.956" starttime="20201007 16:36:07.541"></status>
</kw>
<msg timestamp="20201007 16:36:09.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:36:09.956" starttime="20201007 16:36:07.540"></status>
</kw>
<status status="PASS" endtime="20201007 16:36:09.957" starttime="20201007 16:36:07.540"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 16:36:09.957" critical="yes" starttime="20201007 16:36:05.175"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201007 16:36:09.958" starttime="20201007 16:35:37.989"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 16:37:49.659" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 16:37:49.659" starttime="20201007 16:37:49.658"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:37:49.660" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 16:37:49.660" starttime="20201007 16:37:49.659"></status>
</kw>
<status status="PASS" endtime="20201007 16:37:49.660" starttime="20201007 16:37:49.658"></status>
</kw>
<msg timestamp="20201007 16:37:49.660" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 16:37:49.660" starttime="20201007 16:37:49.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201007 16:37:49.661" starttime="20201007 16:37:49.661"></status>
</kw>
<msg timestamp="20201007 16:37:49.661" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201007 16:37:49.661" starttime="20201007 16:37:49.660"></status>
</kw>
<status status="PASS" endtime="20201007 16:37:49.662" starttime="20201007 16:37:49.657"></status>
</kw>
<msg timestamp="20201007 16:37:49.662" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 16:37:49.662" starttime="20201007 16:37:49.656"></status>
</kw>
<msg timestamp="20201007 16:37:49.662" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 16:37:49.662" starttime="20201007 16:37:49.655"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201007 16:37:49.662" level="INFO">${random} = 76940</msg>
<status status="PASS" endtime="20201007 16:37:49.663" starttime="20201007 16:37:49.662"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:37:49.670" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-76940 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:37:53.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:37:53.258" level="INFO">${output} = 2020-10-07 16:37:51 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:37:51 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-07 ...</msg>
<status status="PASS" endtime="20201007 16:37:53.258" starttime="20201007 16:37:49.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:37:53.259" level="INFO">2020-10-07 16:37:51 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:37:51 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-07 16:37:51 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-07 16:37:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 16:37:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-70839D3A32EC-&gt;8c8b6d10-57eb-4516-a933-31f0716dfd78
2020-10-07 16:37:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201007 16:37:53.259" starttime="20201007 16:37:53.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:37:53.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:37:53.260" starttime="20201007 16:37:53.259"></status>
</kw>
<status status="PASS" endtime="20201007 16:37:53.260" starttime="20201007 16:37:49.663"></status>
</kw>
<msg timestamp="20201007 16:37:53.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:37:53.261" starttime="20201007 16:37:49.663"></status>
</kw>
<msg timestamp="20201007 16:37:53.261" level="INFO">${result} = 2020-10-07 16:37:51 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:37:51 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-07 ...</msg>
<status status="PASS" endtime="20201007 16:37:53.261" starttime="20201007 16:37:49.663"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:37:53.266" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:37:55.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:37:55.159" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:35 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-07 16:36 ofs://om/volume1/bucket1/ozone-12564
-rw-...</msg>
<status status="PASS" endtime="20201007 16:37:55.159" starttime="20201007 16:37:53.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:37:55.160" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:35 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-07 16:36 ofs://om/volume1/bucket1/ozone-12564
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-07 16:37 ofs://om/volume1/bucket1/ozone-76940
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:36 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:37 ofs://om/volume1/bucket1/wordcount-32.txt</msg>
<status status="PASS" endtime="20201007 16:37:55.160" starttime="20201007 16:37:55.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:37:55.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:37:55.161" starttime="20201007 16:37:55.160"></status>
</kw>
<status status="PASS" endtime="20201007 16:37:55.161" starttime="20201007 16:37:53.262"></status>
</kw>
<msg timestamp="20201007 16:37:55.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:37:55.161" starttime="20201007 16:37:53.262"></status>
</kw>
<msg timestamp="20201007 16:37:55.162" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:35 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-07 16:36 ofs://om/volume1/bucket1/ozone-12564
-rw-...</msg>
<status status="PASS" endtime="20201007 16:37:55.162" starttime="20201007 16:37:53.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201007 16:37:55.162" starttime="20201007 16:37:55.162"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201007 16:37:55.162" critical="yes" starttime="20201007 16:37:49.654"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201007 16:37:55.163" starttime="20201007 16:37:49.592"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:36:15.162" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:36:15.162" starttime="20201007 16:36:15.161"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:36:15.162" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:36:15.162" starttime="20201007 16:36:15.162"></status>
</kw>
<status status="PASS" endtime="20201007 16:36:15.162" starttime="20201007 16:36:15.161"></status>
</kw>
<msg timestamp="20201007 16:36:15.163" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:36:15.163" starttime="20201007 16:36:15.160"></status>
</kw>
<status status="PASS" endtime="20201007 16:36:15.163" starttime="20201007 16:36:15.160"></status>
</kw>
<msg timestamp="20201007 16:36:15.163" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 16:36:15.163" starttime="20201007 16:36:15.159"></status>
</kw>
<msg timestamp="20201007 16:36:15.163" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 16:36:15.163" starttime="20201007 16:36:15.158"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201007 16:36:15.164" level="INFO">${random} = 12564</msg>
<status status="PASS" endtime="20201007 16:36:15.164" starttime="20201007 16:36:15.163"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:36:15.171" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-12564 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:36:18.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:36:18.893" level="INFO">${output} = 2020-10-07 16:36:17 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:36:17 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-07 ...</msg>
<status status="PASS" endtime="20201007 16:36:18.893" starttime="20201007 16:36:15.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:36:18.895" level="INFO">2020-10-07 16:36:17 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:36:17 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-07 16:36:17 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-07 16:36:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 16:36:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A219005CF49F-&gt;8c8b6d10-57eb-4516-a933-31f0716dfd78
2020-10-07 16:36:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201007 16:36:18.895" starttime="20201007 16:36:18.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:36:18.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:36:18.896" starttime="20201007 16:36:18.896"></status>
</kw>
<status status="PASS" endtime="20201007 16:36:18.896" starttime="20201007 16:36:15.165"></status>
</kw>
<msg timestamp="20201007 16:36:18.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:36:18.897" starttime="20201007 16:36:15.165"></status>
</kw>
<msg timestamp="20201007 16:36:18.897" level="INFO">${result} = 2020-10-07 16:36:17 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:36:17 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-07 ...</msg>
<status status="PASS" endtime="20201007 16:36:18.897" starttime="20201007 16:36:15.164"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:36:18.901" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:36:20.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:36:20.923" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:35 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-07 16:36 o3fs://bucket1.volume1.om/ozone-12564
dr...</msg>
<status status="PASS" endtime="20201007 16:36:20.923" starttime="20201007 16:36:18.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:36:20.924" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:35 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-07 16:36 o3fs://bucket1.volume1.om/ozone-12564
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:36 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201007 16:36:20.925" starttime="20201007 16:36:20.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:36:20.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:36:20.926" starttime="20201007 16:36:20.925"></status>
</kw>
<status status="PASS" endtime="20201007 16:36:20.926" starttime="20201007 16:36:18.898"></status>
</kw>
<msg timestamp="20201007 16:36:20.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:36:20.926" starttime="20201007 16:36:18.898"></status>
</kw>
<msg timestamp="20201007 16:36:20.926" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:35 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-07 16:36 o3fs://bucket1.volume1.om/ozone-12564
dr...</msg>
<status status="PASS" endtime="20201007 16:36:20.926" starttime="20201007 16:36:18.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201007 16:36:20.927" starttime="20201007 16:36:20.926"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201007 16:36:20.927" critical="yes" starttime="20201007 16:36:15.157"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201007 16:36:20.928" starttime="20201007 16:36:15.097"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:37:59.966" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:37:59.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:37:59.969" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201007 16:37:59.969" starttime="20201007 16:37:59.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:37:59.970" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201007 16:37:59.970" starttime="20201007 16:37:59.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:37:59.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:37:59.971" starttime="20201007 16:37:59.971"></status>
</kw>
<status status="PASS" endtime="20201007 16:37:59.971" starttime="20201007 16:37:59.959"></status>
</kw>
<msg timestamp="20201007 16:37:59.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:37:59.972" starttime="20201007 16:37:59.958"></status>
</kw>
<msg timestamp="20201007 16:37:59.972" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201007 16:37:59.972" starttime="20201007 16:37:59.958"></status>
</kw>
<msg timestamp="20201007 16:37:59.972" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201007 16:37:59.972" starttime="20201007 16:37:59.958"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 16:37:59.976" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 16:37:59.976" starttime="20201007 16:37:59.975"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:37:59.977" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 16:37:59.977" starttime="20201007 16:37:59.976"></status>
</kw>
<status status="PASS" endtime="20201007 16:37:59.977" starttime="20201007 16:37:59.975"></status>
</kw>
<msg timestamp="20201007 16:37:59.977" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 16:37:59.977" starttime="20201007 16:37:59.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201007 16:37:59.978" starttime="20201007 16:37:59.978"></status>
</kw>
<msg timestamp="20201007 16:37:59.978" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201007 16:37:59.978" starttime="20201007 16:37:59.977"></status>
</kw>
<status status="PASS" endtime="20201007 16:37:59.979" starttime="20201007 16:37:59.974"></status>
</kw>
<msg timestamp="20201007 16:37:59.979" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 16:37:59.979" starttime="20201007 16:37:59.973"></status>
</kw>
<msg timestamp="20201007 16:37:59.979" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 16:37:59.979" starttime="20201007 16:37:59.972"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:37:59.982" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:38:33.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:38:33.558" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-07 16:38:02 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:38:02 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201007 16:38:33.558" starttime="20201007 16:37:59.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:38:33.559" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-07 16:38:02 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:38:02 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-07 16:38:02 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-07 16:38:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 16:38:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-59AF8DC84962-&gt;8c8b6d10-57eb-4516-a933-31f0716dfd78
2020-10-07 16:38:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-07 16:38:03 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-07 16:38:03 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-07 16:38:03 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-07 16:38:04 INFO  JobSubmitter:198 - number of splits:3
2020-10-07 16:38:04 INFO  JobSubmitter:287 - Submitting tokens for job: job_1602088499152_0003
2020-10-07 16:38:04 INFO  YarnClientImpl:273 - Submitted application application_1602088499152_0003
2020-10-07 16:38:04 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1602088499152_0003/
2020-10-07 16:38:04 INFO  Job:1339 - Running job: job_1602088499152_0003
2020-10-07 16:38:11 INFO  Job:1360 - Job job_1602088499152_0003 running in uber mode : false
2020-10-07 16:38:11 INFO  Job:1367 -  map 0% reduce 0%
2020-10-07 16:38:18 INFO  Job:1367 -  map 33% reduce 0%
2020-10-07 16:38:23 INFO  Job:1367 -  map 67% reduce 0%
2020-10-07 16:38:27 INFO  Job:1367 -  map 100% reduce 0%
2020-10-07 16:38:32 INFO  Job:1367 -  map 100% reduce 100%
2020-10-07 16:38:32 INFO  Job:1378 - Job job_1602088499152_0003 completed successfully
2020-10-07 16:38:32 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=614249
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43896
		Total time spent by all reduces in occupied slots (ms)=15648
		Total time spent by all map tasks (ms)=10974
		Total time spent by all reduce tasks (ms)=3912
		Total vcore-milliseconds taken by all map tasks=10974
		Total vcore-milliseconds taken by all reduce tasks=3912
		Total megabyte-milliseconds taken by all map tasks=44949504
		Total megabyte-milliseconds taken by all reduce tasks=16023552
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=624
		CPU time spent (ms)=7110
		Physical memory (bytes) snapshot=1104056320
		Virtual memory (bytes) snapshot=16039530496
		Total committed heap usage (bytes)=1045430272
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.567 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201007 16:38:33.560" starttime="20201007 16:38:33.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:38:33.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:38:33.561" starttime="20201007 16:38:33.560"></status>
</kw>
<status status="PASS" endtime="20201007 16:38:33.561" starttime="20201007 16:37:59.980"></status>
</kw>
<msg timestamp="20201007 16:38:33.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:38:33.562" starttime="20201007 16:37:59.980"></status>
</kw>
<msg timestamp="20201007 16:38:33.563" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-07 16:38:02 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:38:02 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201007 16:38:33.563" starttime="20201007 16:37:59.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201007 16:38:33.563" starttime="20201007 16:38:33.563"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201007 16:38:33.564" critical="yes" starttime="20201007 16:37:59.957"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:38:33.569" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:38:33.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:38:33.576" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201007 16:38:33.576" starttime="20201007 16:38:33.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:38:33.577" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201007 16:38:33.577" starttime="20201007 16:38:33.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:38:33.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:38:33.577" starttime="20201007 16:38:33.577"></status>
</kw>
<status status="PASS" endtime="20201007 16:38:33.578" starttime="20201007 16:38:33.566"></status>
</kw>
<msg timestamp="20201007 16:38:33.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:38:33.578" starttime="20201007 16:38:33.566"></status>
</kw>
<msg timestamp="20201007 16:38:33.578" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201007 16:38:33.578" starttime="20201007 16:38:33.565"></status>
</kw>
<msg timestamp="20201007 16:38:33.578" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201007 16:38:33.578" starttime="20201007 16:38:33.565"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201007 16:38:33.579" level="INFO">${random} = 79</msg>
<status status="PASS" endtime="20201007 16:38:33.579" starttime="20201007 16:38:33.579"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 16:38:33.583" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 16:38:33.583" starttime="20201007 16:38:33.582"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:38:33.584" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 16:38:33.584" starttime="20201007 16:38:33.583"></status>
</kw>
<status status="PASS" endtime="20201007 16:38:33.584" starttime="20201007 16:38:33.582"></status>
</kw>
<msg timestamp="20201007 16:38:33.584" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 16:38:33.584" starttime="20201007 16:38:33.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201007 16:38:33.585" starttime="20201007 16:38:33.585"></status>
</kw>
<msg timestamp="20201007 16:38:33.585" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201007 16:38:33.585" starttime="20201007 16:38:33.584"></status>
</kw>
<status status="PASS" endtime="20201007 16:38:33.585" starttime="20201007 16:38:33.581"></status>
</kw>
<msg timestamp="20201007 16:38:33.585" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 16:38:33.586" starttime="20201007 16:38:33.580"></status>
</kw>
<msg timestamp="20201007 16:38:33.586" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 16:38:33.586" starttime="20201007 16:38:33.579"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 16:38:33.589" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 16:38:33.589" starttime="20201007 16:38:33.589"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:38:33.590" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 16:38:33.590" starttime="20201007 16:38:33.589"></status>
</kw>
<status status="PASS" endtime="20201007 16:38:33.590" starttime="20201007 16:38:33.588"></status>
</kw>
<msg timestamp="20201007 16:38:33.590" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 16:38:33.590" starttime="20201007 16:38:33.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:38:33.592" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201007 16:38:33.592" starttime="20201007 16:38:33.592"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:38:33.593" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201007 16:38:33.593" starttime="20201007 16:38:33.592"></status>
</kw>
<status status="PASS" endtime="20201007 16:38:33.593" starttime="20201007 16:38:33.591"></status>
</kw>
<msg timestamp="20201007 16:38:33.593" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201007 16:38:33.593" starttime="20201007 16:38:33.590"></status>
</kw>
<status status="PASS" endtime="20201007 16:38:33.593" starttime="20201007 16:38:33.587"></status>
</kw>
<msg timestamp="20201007 16:38:33.593" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201007 16:38:33.593" starttime="20201007 16:38:33.586"></status>
</kw>
<msg timestamp="20201007 16:38:33.594" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201007 16:38:33.594" starttime="20201007 16:38:33.586"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 16:38:33.597" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 16:38:33.597" starttime="20201007 16:38:33.596"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:38:33.598" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 16:38:33.598" starttime="20201007 16:38:33.597"></status>
</kw>
<status status="PASS" endtime="20201007 16:38:33.598" starttime="20201007 16:38:33.596"></status>
</kw>
<msg timestamp="20201007 16:38:33.598" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 16:38:33.598" starttime="20201007 16:38:33.596"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:38:33.600" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201007 16:38:33.600" starttime="20201007 16:38:33.599"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:38:33.600" level="INFO">${result} = /wordcount-79.txt</msg>
<status status="PASS" endtime="20201007 16:38:33.600" starttime="20201007 16:38:33.600"></status>
</kw>
<status status="PASS" endtime="20201007 16:38:33.600" starttime="20201007 16:38:33.599"></status>
</kw>
<msg timestamp="20201007 16:38:33.601" level="INFO">${path_with_leading} = /wordcount-79.txt</msg>
<status status="PASS" endtime="20201007 16:38:33.601" starttime="20201007 16:38:33.598"></status>
</kw>
<status status="PASS" endtime="20201007 16:38:33.601" starttime="20201007 16:38:33.595"></status>
</kw>
<msg timestamp="20201007 16:38:33.601" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-79.txt</msg>
<status status="PASS" endtime="20201007 16:38:33.601" starttime="20201007 16:38:33.594"></status>
</kw>
<msg timestamp="20201007 16:38:33.601" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-79.txt</msg>
<status status="PASS" endtime="20201007 16:38:33.601" starttime="20201007 16:38:33.594"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:38:33.606" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-79.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:39:10.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:39:10.224" level="INFO">${output} = 2020-10-07 16:38:35 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-07 16:38:35 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201007 16:39:10.224" starttime="20201007 16:38:33.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:39:10.225" level="INFO">2020-10-07 16:38:35 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-07 16:38:35 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-07 16:38:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:38:36 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-07 16:38:36 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-07 16:38:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 16:38:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-608B70D80A96-&gt;8c8b6d10-57eb-4516-a933-31f0716dfd78
2020-10-07 16:38:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-07 16:38:39 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-07 16:38:39 INFO  JobSubmitter:198 - number of splits:3
2020-10-07 16:38:40 INFO  JobSubmitter:287 - Submitting tokens for job: job_1602088499152_0004
2020-10-07 16:38:40 INFO  YarnClientImpl:273 - Submitted application application_1602088499152_0004
2020-10-07 16:38:40 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1602088499152_0004/
2020-10-07 16:38:40 INFO  Job:1339 - Running job: job_1602088499152_0004
2020-10-07 16:38:48 INFO  Job:1360 - Job job_1602088499152_0004 running in uber mode : false
2020-10-07 16:38:48 INFO  Job:1367 -  map 0% reduce 0%
2020-10-07 16:38:54 INFO  Job:1367 -  map 33% reduce 0%
2020-10-07 16:38:59 INFO  Job:1367 -  map 67% reduce 0%
2020-10-07 16:39:05 INFO  Job:1367 -  map 100% reduce 0%
2020-10-07 16:39:08 INFO  Job:1367 -  map 100% reduce 100%
2020-10-07 16:39:09 INFO  Job:1378 - Job job_1602088499152_0004 completed successfully
2020-10-07 16:39:09 INFO  Job:1385 - Counters: 50
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=677009
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42856
		Total time spent by all reduces in occupied slots (ms)=15012
		Total time spent by all map tasks (ms)=10714
		Total time spent by all reduce tasks (ms)=3753
		Total vcore-milliseconds taken by all map tasks=10714
		Total vcore-milliseconds taken by all reduce tasks=3753
		Total megabyte-milliseconds taken by all map tasks=43884544
		Total megabyte-milliseconds taken by all reduce tasks=15372288
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=578
		CPU time spent (ms)=7170
		Physical memory (bytes) snapshot=1094062080
		Virtual memory (bytes) snapshot=16038473728
		Total committed heap usage (bytes)=1051197440
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201007 16:39:10.226" starttime="20201007 16:39:10.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:39:10.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:39:10.226" starttime="20201007 16:39:10.226"></status>
</kw>
<status status="PASS" endtime="20201007 16:39:10.227" starttime="20201007 16:38:33.602"></status>
</kw>
<msg timestamp="20201007 16:39:10.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:39:10.227" starttime="20201007 16:38:33.602"></status>
</kw>
<msg timestamp="20201007 16:39:10.227" level="INFO">${output} = 2020-10-07 16:38:35 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-07 16:38:35 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201007 16:39:10.227" starttime="20201007 16:38:33.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201007 16:39:10.228" starttime="20201007 16:39:10.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201007 16:39:10.229" starttime="20201007 16:39:10.228"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201007 16:39:10.229" critical="yes" starttime="20201007 16:38:33.564"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201007 16:39:10.230" starttime="20201007 16:37:59.897"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:36:26.085" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:36:26.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:36:26.090" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201007 16:36:26.091" starttime="20201007 16:36:26.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:36:26.091" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201007 16:36:26.092" starttime="20201007 16:36:26.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:36:26.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:36:26.092" starttime="20201007 16:36:26.092"></status>
</kw>
<status status="PASS" endtime="20201007 16:36:26.093" starttime="20201007 16:36:26.081"></status>
</kw>
<msg timestamp="20201007 16:36:26.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:36:26.093" starttime="20201007 16:36:26.080"></status>
</kw>
<msg timestamp="20201007 16:36:26.093" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201007 16:36:26.093" starttime="20201007 16:36:26.080"></status>
</kw>
<msg timestamp="20201007 16:36:26.093" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201007 16:36:26.093" starttime="20201007 16:36:26.079"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:36:26.097" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:36:26.097" starttime="20201007 16:36:26.097"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:36:26.098" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:36:26.098" starttime="20201007 16:36:26.097"></status>
</kw>
<status status="PASS" endtime="20201007 16:36:26.098" starttime="20201007 16:36:26.096"></status>
</kw>
<msg timestamp="20201007 16:36:26.098" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:36:26.098" starttime="20201007 16:36:26.095"></status>
</kw>
<status status="PASS" endtime="20201007 16:36:26.099" starttime="20201007 16:36:26.095"></status>
</kw>
<msg timestamp="20201007 16:36:26.099" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 16:36:26.099" starttime="20201007 16:36:26.094"></status>
</kw>
<msg timestamp="20201007 16:36:26.099" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 16:36:26.099" starttime="20201007 16:36:26.093"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:36:26.104" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:37:05.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:37:05.233" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-07 16:36:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:36:28 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201007 16:37:05.233" starttime="20201007 16:36:26.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:37:05.234" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-07 16:36:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:36:28 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-07 16:36:28 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-07 16:36:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 16:36:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-64AD1EACD3A8-&gt;8c8b6d10-57eb-4516-a933-31f0716dfd78
2020-10-07 16:36:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-07 16:36:29 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-07 16:36:30 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-07 16:36:30 INFO  JobSubmitter:198 - number of splits:3
2020-10-07 16:36:30 INFO  JobSubmitter:287 - Submitting tokens for job: job_1602088499152_0001
2020-10-07 16:36:31 INFO  YarnClientImpl:273 - Submitted application application_1602088499152_0001
2020-10-07 16:36:31 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1602088499152_0001/
2020-10-07 16:36:31 INFO  Job:1339 - Running job: job_1602088499152_0001
2020-10-07 16:36:42 INFO  Job:1360 - Job job_1602088499152_0001 running in uber mode : false
2020-10-07 16:36:42 INFO  Job:1367 -  map 0% reduce 0%
2020-10-07 16:36:49 INFO  Job:1367 -  map 33% reduce 0%
2020-10-07 16:36:53 INFO  Job:1367 -  map 67% reduce 0%
2020-10-07 16:36:58 INFO  Job:1367 -  map 100% reduce 0%
2020-10-07 16:37:03 INFO  Job:1367 -  map 100% reduce 100%
2020-10-07 16:37:04 INFO  Job:1378 - Job job_1602088499152_0001 completed successfully
2020-10-07 16:37:04 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=614461
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42736
		Total time spent by all reduces in occupied slots (ms)=16432
		Total time spent by all map tasks (ms)=10684
		Total time spent by all reduce tasks (ms)=4108
		Total vcore-milliseconds taken by all map tasks=10684
		Total vcore-milliseconds taken by all reduce tasks=4108
		Total megabyte-milliseconds taken by all map tasks=43761664
		Total megabyte-milliseconds taken by all reduce tasks=16826368
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=638
		CPU time spent (ms)=7010
		Physical memory (bytes) snapshot=1108430848
		Virtual memory (bytes) snapshot=16040534016
		Total committed heap usage (bytes)=1049624576
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.98 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201007 16:37:05.234" starttime="20201007 16:37:05.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:37:05.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:37:05.235" starttime="20201007 16:37:05.234"></status>
</kw>
<status status="PASS" endtime="20201007 16:37:05.235" starttime="20201007 16:36:26.100"></status>
</kw>
<msg timestamp="20201007 16:37:05.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:37:05.236" starttime="20201007 16:36:26.100"></status>
</kw>
<msg timestamp="20201007 16:37:05.236" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-07 16:36:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:36:28 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201007 16:37:05.236" starttime="20201007 16:36:26.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201007 16:37:05.237" starttime="20201007 16:37:05.237"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201007 16:37:05.237" critical="yes" starttime="20201007 16:36:26.078"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:37:05.243" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:37:05.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:37:05.250" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201007 16:37:05.250" starttime="20201007 16:37:05.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:37:05.252" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201007 16:37:05.252" starttime="20201007 16:37:05.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:37:05.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:37:05.253" starttime="20201007 16:37:05.252"></status>
</kw>
<status status="PASS" endtime="20201007 16:37:05.253" starttime="20201007 16:37:05.240"></status>
</kw>
<msg timestamp="20201007 16:37:05.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:37:05.253" starttime="20201007 16:37:05.240"></status>
</kw>
<msg timestamp="20201007 16:37:05.253" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201007 16:37:05.253" starttime="20201007 16:37:05.240"></status>
</kw>
<msg timestamp="20201007 16:37:05.253" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201007 16:37:05.254" starttime="20201007 16:37:05.239"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201007 16:37:05.254" level="INFO">${random} = 32</msg>
<status status="PASS" endtime="20201007 16:37:05.254" starttime="20201007 16:37:05.254"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:37:05.258" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:37:05.258" starttime="20201007 16:37:05.258"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:37:05.259" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:37:05.259" starttime="20201007 16:37:05.258"></status>
</kw>
<status status="PASS" endtime="20201007 16:37:05.259" starttime="20201007 16:37:05.257"></status>
</kw>
<msg timestamp="20201007 16:37:05.259" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:37:05.259" starttime="20201007 16:37:05.257"></status>
</kw>
<status status="PASS" endtime="20201007 16:37:05.260" starttime="20201007 16:37:05.256"></status>
</kw>
<msg timestamp="20201007 16:37:05.260" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 16:37:05.260" starttime="20201007 16:37:05.255"></status>
</kw>
<msg timestamp="20201007 16:37:05.260" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 16:37:05.260" starttime="20201007 16:37:05.254"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:37:05.263" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:37:05.263" starttime="20201007 16:37:05.263"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:37:05.264" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:37:05.264" starttime="20201007 16:37:05.263"></status>
</kw>
<status status="PASS" endtime="20201007 16:37:05.264" starttime="20201007 16:37:05.262"></status>
</kw>
<msg timestamp="20201007 16:37:05.264" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:37:05.264" starttime="20201007 16:37:05.262"></status>
</kw>
<status status="PASS" endtime="20201007 16:37:05.265" starttime="20201007 16:37:05.261"></status>
</kw>
<msg timestamp="20201007 16:37:05.265" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201007 16:37:05.265" starttime="20201007 16:37:05.261"></status>
</kw>
<msg timestamp="20201007 16:37:05.265" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201007 16:37:05.265" starttime="20201007 16:37:05.260"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:37:05.268" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:37:05.268" starttime="20201007 16:37:05.268"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:37:05.269" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:37:05.269" starttime="20201007 16:37:05.268"></status>
</kw>
<status status="PASS" endtime="20201007 16:37:05.269" starttime="20201007 16:37:05.267"></status>
</kw>
<msg timestamp="20201007 16:37:05.269" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:37:05.269" starttime="20201007 16:37:05.267"></status>
</kw>
<status status="PASS" endtime="20201007 16:37:05.270" starttime="20201007 16:37:05.266"></status>
</kw>
<msg timestamp="20201007 16:37:05.270" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-32.txt</msg>
<status status="PASS" endtime="20201007 16:37:05.270" starttime="20201007 16:37:05.266"></status>
</kw>
<msg timestamp="20201007 16:37:05.270" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-32.txt</msg>
<status status="PASS" endtime="20201007 16:37:05.270" starttime="20201007 16:37:05.265"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:37:05.274" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-32.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:37:44.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:37:44.583" level="INFO">${output} = 2020-10-07 16:37:07 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-07 16:37:07 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201007 16:37:44.583" starttime="20201007 16:37:05.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:37:44.585" level="INFO">2020-10-07 16:37:07 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-07 16:37:07 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-07 16:37:07 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:37:07 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-07 16:37:07 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-07 16:37:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 16:37:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B848B0F4E21C-&gt;8c8b6d10-57eb-4516-a933-31f0716dfd78
2020-10-07 16:37:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-07 16:37:08 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-07 16:37:09 INFO  JobSubmitter:198 - number of splits:3
2020-10-07 16:37:09 INFO  JobSubmitter:287 - Submitting tokens for job: job_1602088499152_0002
2020-10-07 16:37:09 INFO  YarnClientImpl:273 - Submitted application application_1602088499152_0002
2020-10-07 16:37:09 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1602088499152_0002/
2020-10-07 16:37:09 INFO  Job:1339 - Running job: job_1602088499152_0002
2020-10-07 16:37:17 INFO  Job:1360 - Job job_1602088499152_0002 running in uber mode : false
2020-10-07 16:37:17 INFO  Job:1367 -  map 0% reduce 0%
2020-10-07 16:37:24 INFO  Job:1367 -  map 33% reduce 0%
2020-10-07 16:37:29 INFO  Job:1367 -  map 67% reduce 0%
2020-10-07 16:37:35 INFO  Job:1367 -  map 100% reduce 0%
2020-10-07 16:37:41 INFO  Job:1367 -  map 100% reduce 100%
2020-10-07 16:37:44 INFO  Job:1378 - Job job_1602088499152_0002 completed successfully
2020-10-07 16:37:44 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=677093
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43444
		Total time spent by all reduces in occupied slots (ms)=24984
		Total time spent by all map tasks (ms)=10861
		Total time spent by all reduce tasks (ms)=6246
		Total vcore-milliseconds taken by all map tasks=10861
		Total vcore-milliseconds taken by all reduce tasks=6246
		Total megabyte-milliseconds taken by all map tasks=44486656
		Total megabyte-milliseconds taken by all reduce tasks=25583616
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=587
		CPU time spent (ms)=7530
		Physical memory (bytes) snapshot=1137954816
		Virtual memory (bytes) snapshot=16065081344
		Total committed heap usage (bytes)=1052246016
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201007 16:37:44.585" starttime="20201007 16:37:44.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:37:44.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:37:44.586" starttime="20201007 16:37:44.585"></status>
</kw>
<status status="PASS" endtime="20201007 16:37:44.586" starttime="20201007 16:37:05.271"></status>
</kw>
<msg timestamp="20201007 16:37:44.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:37:44.586" starttime="20201007 16:37:05.271"></status>
</kw>
<msg timestamp="20201007 16:37:44.587" level="INFO">${output} = 2020-10-07 16:37:07 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-10-07 16:37:07 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201007 16:37:44.587" starttime="20201007 16:37:05.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201007 16:37:44.588" starttime="20201007 16:37:44.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201007 16:37:44.588" starttime="20201007 16:37:44.588"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201007 16:37:44.588" critical="yes" starttime="20201007 16:37:05.238"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201007 16:37:44.590" starttime="20201007 16:36:26.016"></status>
</suite>
<status status="PASS" elapsedtime="192278" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:40:19.246" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:40:21.674" level="INFO">${rc} = 255</msg>
<msg timestamp="20201007 16:40:21.674" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201007 16:40:21.674" starttime="20201007 16:40:19.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:40:21.675" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201007 16:40:21.675" starttime="20201007 16:40:21.675"></status>
</kw>
<msg timestamp="20201007 16:40:21.676" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201007 16:40:21.676" starttime="20201007 16:40:19.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:40:21.682" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:40:24.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:40:24.095" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:40:24.095" starttime="20201007 16:40:21.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:40:24.096" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:40:24.096" starttime="20201007 16:40:24.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:40:24.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:40:24.097" starttime="20201007 16:40:24.096"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:24.097" starttime="20201007 16:40:21.678"></status>
</kw>
<msg timestamp="20201007 16:40:24.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:40:24.097" starttime="20201007 16:40:21.678"></status>
</kw>
<msg timestamp="20201007 16:40:24.098" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201007 16:40:24.098" starttime="20201007 16:40:21.677"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201007 16:40:24.098" starttime="20201007 16:40:24.098"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:24.098" starttime="20201007 16:40:21.677"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:24.098" starttime="20201007 16:40:21.676"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:40:24.104" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:40:26.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:40:26.412" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:40:26.412" starttime="20201007 16:40:24.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:40:26.413" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:40:26.413" starttime="20201007 16:40:26.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:40:26.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:40:26.414" starttime="20201007 16:40:26.413"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:26.414" starttime="20201007 16:40:24.100"></status>
</kw>
<msg timestamp="20201007 16:40:26.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:40:26.414" starttime="20201007 16:40:24.100"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:26.414" starttime="20201007 16:40:24.100"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:26.414" starttime="20201007 16:40:24.099"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:26.415" starttime="20201007 16:40:24.099"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201007 16:40:26.415" starttime="20201007 16:40:26.415"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:40:26.421" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:40:28.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:40:28.717" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T16:40:26.284Z",
  "modificat...</msg>
<status status="PASS" endtime="20201007 16:40:28.717" starttime="20201007 16:40:26.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:40:28.718" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T16:40:26.284Z",
  "modificationTime" : "2020-10-07T16:40:26.284Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201007 16:40:28.718" starttime="20201007 16:40:28.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:40:28.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:40:28.719" starttime="20201007 16:40:28.718"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:28.719" starttime="20201007 16:40:26.416"></status>
</kw>
<msg timestamp="20201007 16:40:28.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:40:28.719" starttime="20201007 16:40:26.416"></status>
</kw>
<msg timestamp="20201007 16:40:28.720" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T16:40:26.284Z",
  "modificat...</msg>
<status status="PASS" endtime="20201007 16:40:28.720" starttime="20201007 16:40:26.415"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201007 16:40:28.720" starttime="20201007 16:40:28.720"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:40:28.724" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:40:28.725" starttime="20201007 16:40:28.724"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:40:28.725" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:40:28.725" starttime="20201007 16:40:28.725"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:28.725" starttime="20201007 16:40:28.723"></status>
</kw>
<msg timestamp="20201007 16:40:28.726" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:40:28.726" starttime="20201007 16:40:28.723"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:28.726" starttime="20201007 16:40:28.722"></status>
</kw>
<msg timestamp="20201007 16:40:28.726" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201007 16:40:28.726" starttime="20201007 16:40:28.721"></status>
</kw>
<msg timestamp="20201007 16:40:28.726" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201007 16:40:28.726" starttime="20201007 16:40:28.720"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:40:28.731" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:40:31.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:40:31.081" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:40:31.081" starttime="20201007 16:40:28.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:40:31.083" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:40:31.083" starttime="20201007 16:40:31.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:40:31.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:40:31.084" starttime="20201007 16:40:31.083"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:31.084" starttime="20201007 16:40:28.727"></status>
</kw>
<msg timestamp="20201007 16:40:31.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:40:31.084" starttime="20201007 16:40:28.727"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:31.084" starttime="20201007 16:40:28.727"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:40:31.094" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:40:37.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:40:37.197" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:40:37.197" starttime="20201007 16:40:31.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:40:37.198" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:40:37.198" starttime="20201007 16:40:37.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:40:37.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:40:37.202" starttime="20201007 16:40:37.202"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:37.202" starttime="20201007 16:40:31.091"></status>
</kw>
<msg timestamp="20201007 16:40:37.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:40:37.203" starttime="20201007 16:40:31.091"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:37.209" starttime="20201007 16:40:31.085"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:40:37.219" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:40:42.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:40:42.538" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:40:42.538" starttime="20201007 16:40:37.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:40:42.539" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:40:42.539" starttime="20201007 16:40:42.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:40:42.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:40:42.540" starttime="20201007 16:40:42.540"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:42.540" starttime="20201007 16:40:37.210"></status>
</kw>
<msg timestamp="20201007 16:40:42.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:40:42.541" starttime="20201007 16:40:37.209"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:42.541" starttime="20201007 16:40:37.209"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:40:42.546" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:40:46.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:40:46.982" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:40:46.982" starttime="20201007 16:40:42.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:40:46.983" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:40:46.983" starttime="20201007 16:40:46.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:40:46.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:40:46.984" starttime="20201007 16:40:46.983"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:46.984" starttime="20201007 16:40:42.543"></status>
</kw>
<msg timestamp="20201007 16:40:46.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:40:46.985" starttime="20201007 16:40:42.542"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:46.985" starttime="20201007 16:40:42.541"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 16:40:46.985" critical="yes" starttime="20201007 16:40:19.239"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:40:46.991" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:40:46.991" starttime="20201007 16:40:46.991"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:40:46.992" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:40:46.992" starttime="20201007 16:40:46.991"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:46.992" starttime="20201007 16:40:46.990"></status>
</kw>
<msg timestamp="20201007 16:40:46.992" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:40:46.993" starttime="20201007 16:40:46.989"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:46.993" starttime="20201007 16:40:46.989"></status>
</kw>
<msg timestamp="20201007 16:40:46.993" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201007 16:40:46.993" starttime="20201007 16:40:46.988"></status>
</kw>
<msg timestamp="20201007 16:40:46.993" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201007 16:40:46.993" starttime="20201007 16:40:46.987"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:40:46.997" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:40:49.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:40:49.429" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:40:49.430" starttime="20201007 16:40:46.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:40:49.431" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:40:49.431" starttime="20201007 16:40:49.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:40:49.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:40:49.431" starttime="20201007 16:40:49.431"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:49.432" starttime="20201007 16:40:46.994"></status>
</kw>
<msg timestamp="20201007 16:40:49.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:40:49.432" starttime="20201007 16:40:46.994"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:49.432" starttime="20201007 16:40:46.993"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:40:49.436" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:40:51.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:40:51.770" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:40:51.770" starttime="20201007 16:40:49.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:40:51.772" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:40:51.772" starttime="20201007 16:40:51.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:40:51.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:40:51.773" starttime="20201007 16:40:51.772"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:51.773" starttime="20201007 16:40:49.433"></status>
</kw>
<msg timestamp="20201007 16:40:51.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:40:51.773" starttime="20201007 16:40:49.433"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:51.773" starttime="20201007 16:40:49.432"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 16:40:51.774" critical="yes" starttime="20201007 16:40:46.986"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201007 16:40:51.775" starttime="20201007 16:40:19.178"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 16:42:35.401" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 16:42:35.401" starttime="20201007 16:42:35.401"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:42:35.402" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 16:42:35.402" starttime="20201007 16:42:35.401"></status>
</kw>
<status status="PASS" endtime="20201007 16:42:35.402" starttime="20201007 16:42:35.400"></status>
</kw>
<msg timestamp="20201007 16:42:35.402" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 16:42:35.402" starttime="20201007 16:42:35.400"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201007 16:42:35.404" starttime="20201007 16:42:35.403"></status>
</kw>
<msg timestamp="20201007 16:42:35.404" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201007 16:42:35.404" starttime="20201007 16:42:35.403"></status>
</kw>
<status status="PASS" endtime="20201007 16:42:35.404" starttime="20201007 16:42:35.399"></status>
</kw>
<msg timestamp="20201007 16:42:35.404" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 16:42:35.404" starttime="20201007 16:42:35.399"></status>
</kw>
<msg timestamp="20201007 16:42:35.404" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 16:42:35.404" starttime="20201007 16:42:35.397"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201007 16:42:35.405" level="INFO">${random} = 45447</msg>
<status status="PASS" endtime="20201007 16:42:35.405" starttime="20201007 16:42:35.404"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:42:35.410" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-45447 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:42:38.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:42:38.976" level="INFO">${output} = 2020-10-07 16:42:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201007 16:42:38.976" starttime="20201007 16:42:35.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:42:38.978" level="INFO">2020-10-07 16:42:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:37 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-07 16:42:37 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:42:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-07 16:42:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-07 16:42:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 16:42:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-47327254E664-&gt;ad349a3d-771e-4fea-a0a4-c74e8254be28
2020-10-07 16:42:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-07 16:42:38 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201007 16:42:38.978" starttime="20201007 16:42:38.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:42:38.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:42:38.979" starttime="20201007 16:42:38.978"></status>
</kw>
<status status="PASS" endtime="20201007 16:42:38.979" starttime="20201007 16:42:35.406"></status>
</kw>
<msg timestamp="20201007 16:42:38.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:42:38.979" starttime="20201007 16:42:35.405"></status>
</kw>
<msg timestamp="20201007 16:42:38.979" level="INFO">${result} = 2020-10-07 16:42:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201007 16:42:38.980" starttime="20201007 16:42:35.405"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:42:38.983" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:42:40.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:42:40.928" level="INFO">${output} = 2020-10-07 16:42:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:40 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201007 16:42:40.928" starttime="20201007 16:42:38.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:42:40.929" level="INFO">2020-10-07 16:42:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:40 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:40 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-07 16:42 ofs://om/volume1/bucket1/ozone-45447
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-07 16:41 ofs://om/volume1/bucket1/ozone-61083
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:40 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:42 ofs://om/volume1/bucket1/wordcount-08.txt
2020-10-07 16:42:40 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201007 16:42:40.929" starttime="20201007 16:42:40.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:42:40.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:42:40.930" starttime="20201007 16:42:40.930"></status>
</kw>
<status status="PASS" endtime="20201007 16:42:40.930" starttime="20201007 16:42:38.981"></status>
</kw>
<msg timestamp="20201007 16:42:40.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:42:40.931" starttime="20201007 16:42:38.980"></status>
</kw>
<msg timestamp="20201007 16:42:40.931" level="INFO">${result} = 2020-10-07 16:42:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:40 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201007 16:42:40.931" starttime="20201007 16:42:38.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201007 16:42:40.932" starttime="20201007 16:42:40.931"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201007 16:42:40.932" critical="yes" starttime="20201007 16:42:35.396"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201007 16:42:40.933" starttime="20201007 16:42:35.338"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:40:56.761" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:40:56.761" starttime="20201007 16:40:56.760"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:40:56.762" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:40:56.762" starttime="20201007 16:40:56.761"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:56.762" starttime="20201007 16:40:56.760"></status>
</kw>
<msg timestamp="20201007 16:40:56.762" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:40:56.762" starttime="20201007 16:40:56.760"></status>
</kw>
<status status="PASS" endtime="20201007 16:40:56.762" starttime="20201007 16:40:56.759"></status>
</kw>
<msg timestamp="20201007 16:40:56.762" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 16:40:56.762" starttime="20201007 16:40:56.758"></status>
</kw>
<msg timestamp="20201007 16:40:56.763" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 16:40:56.763" starttime="20201007 16:40:56.757"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201007 16:40:56.763" level="INFO">${random} = 61083</msg>
<status status="PASS" endtime="20201007 16:40:56.763" starttime="20201007 16:40:56.763"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:40:56.769" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-61083 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:41:00.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:41:00.577" level="INFO">${output} = 2020-10-07 16:40:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:40:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:40:58 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201007 16:41:00.577" starttime="20201007 16:40:56.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:41:00.578" level="INFO">2020-10-07 16:40:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:40:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:40:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:40:58 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-07 16:40:58 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:40:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-07 16:40:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-07 16:40:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 16:40:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8D743C6F2E95-&gt;ad349a3d-771e-4fea-a0a4-c74e8254be28
2020-10-07 16:40:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-07 16:41:00 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201007 16:41:00.578" starttime="20201007 16:41:00.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:41:00.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:41:00.579" starttime="20201007 16:41:00.579"></status>
</kw>
<status status="PASS" endtime="20201007 16:41:00.579" starttime="20201007 16:40:56.764"></status>
</kw>
<msg timestamp="20201007 16:41:00.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:41:00.580" starttime="20201007 16:40:56.764"></status>
</kw>
<msg timestamp="20201007 16:41:00.580" level="INFO">${result} = 2020-10-07 16:40:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:40:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:40:58 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201007 16:41:00.580" starttime="20201007 16:40:56.763"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:41:00.583" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:41:02.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:41:02.543" level="INFO">${output} = 2020-10-07 16:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201007 16:41:02.543" starttime="20201007 16:41:00.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:41:02.544" level="INFO">2020-10-07 16:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:02 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:40 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-07 16:41 o3fs://bucket1.volume1.om/ozone-61083
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:40 o3fs://bucket1.volume1.om/user
2020-10-07 16:41:02 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201007 16:41:02.544" starttime="20201007 16:41:02.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:41:02.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:41:02.545" starttime="20201007 16:41:02.544"></status>
</kw>
<status status="PASS" endtime="20201007 16:41:02.545" starttime="20201007 16:41:00.581"></status>
</kw>
<msg timestamp="20201007 16:41:02.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:41:02.545" starttime="20201007 16:41:00.581"></status>
</kw>
<msg timestamp="20201007 16:41:02.546" level="INFO">${result} = 2020-10-07 16:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201007 16:41:02.546" starttime="20201007 16:41:00.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201007 16:41:02.546" starttime="20201007 16:41:02.546"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201007 16:41:02.546" critical="yes" starttime="20201007 16:40:56.756"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201007 16:41:02.547" starttime="20201007 16:40:56.696"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:42:45.962" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:42:45.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:42:45.965" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201007 16:42:45.965" starttime="20201007 16:42:45.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:42:45.966" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201007 16:42:45.966" starttime="20201007 16:42:45.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:42:45.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:42:45.967" starttime="20201007 16:42:45.966"></status>
</kw>
<status status="PASS" endtime="20201007 16:42:45.967" starttime="20201007 16:42:45.956"></status>
</kw>
<msg timestamp="20201007 16:42:45.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:42:45.967" starttime="20201007 16:42:45.955"></status>
</kw>
<msg timestamp="20201007 16:42:45.968" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201007 16:42:45.968" starttime="20201007 16:42:45.955"></status>
</kw>
<msg timestamp="20201007 16:42:45.968" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201007 16:42:45.968" starttime="20201007 16:42:45.954"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 16:42:45.971" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 16:42:45.971" starttime="20201007 16:42:45.971"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:42:45.972" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 16:42:45.972" starttime="20201007 16:42:45.972"></status>
</kw>
<status status="PASS" endtime="20201007 16:42:45.972" starttime="20201007 16:42:45.970"></status>
</kw>
<msg timestamp="20201007 16:42:45.973" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 16:42:45.973" starttime="20201007 16:42:45.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201007 16:42:45.974" starttime="20201007 16:42:45.973"></status>
</kw>
<msg timestamp="20201007 16:42:45.974" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201007 16:42:45.974" starttime="20201007 16:42:45.973"></status>
</kw>
<status status="PASS" endtime="20201007 16:42:45.974" starttime="20201007 16:42:45.969"></status>
</kw>
<msg timestamp="20201007 16:42:45.974" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 16:42:45.974" starttime="20201007 16:42:45.969"></status>
</kw>
<msg timestamp="20201007 16:42:45.975" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 16:42:45.975" starttime="20201007 16:42:45.968"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:42:45.978" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:43:26.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:43:26.995" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-07 16:42:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42...</msg>
<status status="PASS" endtime="20201007 16:43:26.995" starttime="20201007 16:42:45.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:43:26.996" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-07 16:42:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:48 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-07 16:42:48 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:42:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-07 16:42:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-07 16:42:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 16:42:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-990C0A037CC5-&gt;ad349a3d-771e-4fea-a0a4-c74e8254be28
2020-10-07 16:42:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-07 16:42:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:49 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-10-07 16:42:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:49 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-07 16:42:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:50 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-07 16:42:50 INFO  JobSubmitter:202 - number of splits:3
2020-10-07 16:42:50 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602088796482_0003
2020-10-07 16:42:50 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-07 16:42:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:50 INFO  Configuration:2752 - resource-types.xml not found
2020-10-07 16:42:50 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-07 16:42:50 INFO  YarnClientImpl:324 - Submitted application application_1602088796482_0003
2020-10-07 16:42:50 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602088796482_0003/
2020-10-07 16:42:50 INFO  Job:1619 - Running job: job_1602088796482_0003
2020-10-07 16:42:58 INFO  Job:1640 - Job job_1602088796482_0003 running in uber mode : false
2020-10-07 16:42:58 INFO  Job:1647 -  map 0% reduce 0%
2020-10-07 16:43:05 INFO  Job:1647 -  map 33% reduce 0%
2020-10-07 16:43:11 INFO  Job:1647 -  map 67% reduce 0%
2020-10-07 16:43:17 INFO  Job:1647 -  map 100% reduce 0%
2020-10-07 16:43:25 INFO  Job:1647 -  map 100% reduce 100%
2020-10-07 16:43:26 INFO  Job:1658 - Job job_1602088796482_0003 completed successfully
2020-10-07 16:43:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:43:26 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1020257
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43620
		Total time spent by all reduces in occupied slots (ms)=25528
		Total time spent by all map tasks (ms)=10905
		Total time spent by all reduce tasks (ms)=6382
		Total vcore-milliseconds taken by all map tasks=10905
		Total vcore-milliseconds taken by all reduce tasks=6382
		Total megabyte-milliseconds taken by all map tasks=44666880
		Total megabyte-milliseconds taken by all reduce tasks=26140672
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=591
		CPU time spent (ms)=6670
		Physical memory (bytes) snapshot=1107795968
		Virtual memory (bytes) snapshot=16028274688
		Total committed heap usage (bytes)=1111490560
		Peak Map Physical memory (bytes)=293879808
		Peak Map Virtual memory (bytes)=4014358528
		Peak Reduce Physical memory (bytes)=282361856
		Peak Reduce Virtual memory (bytes)=4024344576
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.979 seconds
2020-10-07 16:43:26 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-07 16:43:26 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201007 16:43:26.996" starttime="20201007 16:43:26.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:43:26.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:43:26.997" starttime="20201007 16:43:26.996"></status>
</kw>
<status status="PASS" endtime="20201007 16:43:26.997" starttime="20201007 16:42:45.976"></status>
</kw>
<msg timestamp="20201007 16:43:26.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:43:26.997" starttime="20201007 16:42:45.975"></status>
</kw>
<msg timestamp="20201007 16:43:26.998" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-07 16:42:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42...</msg>
<status status="PASS" endtime="20201007 16:43:26.998" starttime="20201007 16:42:45.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201007 16:43:26.999" starttime="20201007 16:43:26.998"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201007 16:43:26.999" critical="yes" starttime="20201007 16:42:45.949"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:43:27.004" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:43:27.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:43:27.010" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201007 16:43:27.010" starttime="20201007 16:43:27.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:43:27.011" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201007 16:43:27.011" starttime="20201007 16:43:27.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:43:27.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:43:27.011" starttime="20201007 16:43:27.011"></status>
</kw>
<status status="PASS" endtime="20201007 16:43:27.012" starttime="20201007 16:43:27.002"></status>
</kw>
<msg timestamp="20201007 16:43:27.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:43:27.012" starttime="20201007 16:43:27.001"></status>
</kw>
<msg timestamp="20201007 16:43:27.012" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201007 16:43:27.012" starttime="20201007 16:43:27.001"></status>
</kw>
<msg timestamp="20201007 16:43:27.012" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201007 16:43:27.012" starttime="20201007 16:43:27.001"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201007 16:43:27.013" level="INFO">${random} = 74</msg>
<status status="PASS" endtime="20201007 16:43:27.013" starttime="20201007 16:43:27.013"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 16:43:27.019" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 16:43:27.019" starttime="20201007 16:43:27.017"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:43:27.020" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 16:43:27.020" starttime="20201007 16:43:27.019"></status>
</kw>
<status status="PASS" endtime="20201007 16:43:27.020" starttime="20201007 16:43:27.017"></status>
</kw>
<msg timestamp="20201007 16:43:27.020" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 16:43:27.020" starttime="20201007 16:43:27.016"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201007 16:43:27.021" starttime="20201007 16:43:27.021"></status>
</kw>
<msg timestamp="20201007 16:43:27.021" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201007 16:43:27.021" starttime="20201007 16:43:27.020"></status>
</kw>
<status status="PASS" endtime="20201007 16:43:27.022" starttime="20201007 16:43:27.015"></status>
</kw>
<msg timestamp="20201007 16:43:27.022" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 16:43:27.022" starttime="20201007 16:43:27.014"></status>
</kw>
<msg timestamp="20201007 16:43:27.022" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 16:43:27.022" starttime="20201007 16:43:27.013"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 16:43:27.026" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 16:43:27.026" starttime="20201007 16:43:27.025"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:43:27.026" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 16:43:27.026" starttime="20201007 16:43:27.026"></status>
</kw>
<status status="PASS" endtime="20201007 16:43:27.026" starttime="20201007 16:43:27.025"></status>
</kw>
<msg timestamp="20201007 16:43:27.026" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 16:43:27.026" starttime="20201007 16:43:27.024"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:43:27.029" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201007 16:43:27.029" starttime="20201007 16:43:27.028"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:43:27.029" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201007 16:43:27.029" starttime="20201007 16:43:27.029"></status>
</kw>
<status status="PASS" endtime="20201007 16:43:27.029" starttime="20201007 16:43:27.027"></status>
</kw>
<msg timestamp="20201007 16:43:27.030" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201007 16:43:27.030" starttime="20201007 16:43:27.027"></status>
</kw>
<status status="PASS" endtime="20201007 16:43:27.030" starttime="20201007 16:43:27.024"></status>
</kw>
<msg timestamp="20201007 16:43:27.030" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201007 16:43:27.030" starttime="20201007 16:43:27.023"></status>
</kw>
<msg timestamp="20201007 16:43:27.030" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201007 16:43:27.030" starttime="20201007 16:43:27.022"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 16:43:27.034" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 16:43:27.034" starttime="20201007 16:43:27.033"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:43:27.034" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 16:43:27.034" starttime="20201007 16:43:27.034"></status>
</kw>
<status status="PASS" endtime="20201007 16:43:27.035" starttime="20201007 16:43:27.033"></status>
</kw>
<msg timestamp="20201007 16:43:27.035" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 16:43:27.035" starttime="20201007 16:43:27.032"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:43:27.036" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201007 16:43:27.036" starttime="20201007 16:43:27.036"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:43:27.037" level="INFO">${result} = /wordcount-74.txt</msg>
<status status="PASS" endtime="20201007 16:43:27.037" starttime="20201007 16:43:27.036"></status>
</kw>
<status status="PASS" endtime="20201007 16:43:27.037" starttime="20201007 16:43:27.035"></status>
</kw>
<msg timestamp="20201007 16:43:27.037" level="INFO">${path_with_leading} = /wordcount-74.txt</msg>
<status status="PASS" endtime="20201007 16:43:27.037" starttime="20201007 16:43:27.035"></status>
</kw>
<status status="PASS" endtime="20201007 16:43:27.037" starttime="20201007 16:43:27.031"></status>
</kw>
<msg timestamp="20201007 16:43:27.038" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-74.txt</msg>
<status status="PASS" endtime="20201007 16:43:27.038" starttime="20201007 16:43:27.031"></status>
</kw>
<msg timestamp="20201007 16:43:27.038" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-74.txt</msg>
<status status="PASS" endtime="20201007 16:43:27.038" starttime="20201007 16:43:27.030"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:43:27.041" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-74.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:44:10.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:44:10.023" level="INFO">${output} = 2020-10-07 16:43:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:43:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:43:28 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201007 16:44:10.023" starttime="20201007 16:43:27.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:44:10.024" level="INFO">2020-10-07 16:43:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:43:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:43:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:43:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:43:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:43:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:43:28 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-10-07 16:43:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:43:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:43:29 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-07 16:43:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:43:29 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-07 16:43:29 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:43:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-07 16:43:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-07 16:43:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 16:43:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-81C03F9E7295-&gt;ad349a3d-771e-4fea-a0a4-c74e8254be28
2020-10-07 16:43:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-07 16:43:30 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-07 16:43:31 INFO  JobSubmitter:202 - number of splits:3
2020-10-07 16:43:33 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602088796482_0004
2020-10-07 16:43:33 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-07 16:43:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:43:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:43:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:43:34 INFO  Configuration:2752 - resource-types.xml not found
2020-10-07 16:43:34 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-07 16:43:34 INFO  YarnClientImpl:324 - Submitted application application_1602088796482_0004
2020-10-07 16:43:34 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602088796482_0004/
2020-10-07 16:43:34 INFO  Job:1619 - Running job: job_1602088796482_0004
2020-10-07 16:43:42 INFO  Job:1640 - Job job_1602088796482_0004 running in uber mode : false
2020-10-07 16:43:42 INFO  Job:1647 -  map 0% reduce 0%
2020-10-07 16:43:48 INFO  Job:1647 -  map 33% reduce 0%
2020-10-07 16:43:54 INFO  Job:1647 -  map 67% reduce 0%
2020-10-07 16:43:59 INFO  Job:1647 -  map 100% reduce 0%
2020-10-07 16:44:06 INFO  Job:1647 -  map 100% reduce 100%
2020-10-07 16:44:09 INFO  Job:1658 - Job job_1602088796482_0004 completed successfully
2020-10-07 16:44:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:44:09 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1082921
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42208
		Total time spent by all reduces in occupied slots (ms)=26116
		Total time spent by all map tasks (ms)=10552
		Total time spent by all reduce tasks (ms)=6529
		Total vcore-milliseconds taken by all map tasks=10552
		Total vcore-milliseconds taken by all reduce tasks=6529
		Total megabyte-milliseconds taken by all map tasks=43220992
		Total megabyte-milliseconds taken by all reduce tasks=26742784
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=608
		CPU time spent (ms)=7330
		Physical memory (bytes) snapshot=1249210368
		Virtual memory (bytes) snapshot=16058839040
		Total committed heap usage (bytes)=1171783680
		Peak Map Physical memory (bytes)=293658624
		Peak Map Virtual memory (bytes)=4010491904
		Peak Reduce Physical memory (bytes)=378294272
		Peak Reduce Virtual memory (bytes)=4030394368
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-07 16:44:09 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201007 16:44:10.024" starttime="20201007 16:44:10.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:44:10.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:44:10.025" starttime="20201007 16:44:10.024"></status>
</kw>
<status status="PASS" endtime="20201007 16:44:10.025" starttime="20201007 16:43:27.039"></status>
</kw>
<msg timestamp="20201007 16:44:10.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:44:10.025" starttime="20201007 16:43:27.038"></status>
</kw>
<msg timestamp="20201007 16:44:10.026" level="INFO">${output} = 2020-10-07 16:43:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:43:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:43:28 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201007 16:44:10.026" starttime="20201007 16:43:27.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201007 16:44:10.027" starttime="20201007 16:44:10.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201007 16:44:10.027" starttime="20201007 16:44:10.027"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201007 16:44:10.028" critical="yes" starttime="20201007 16:43:27.000"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201007 16:44:10.029" starttime="20201007 16:42:45.892"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:41:07.580" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:41:07.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:41:07.585" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201007 16:41:07.585" starttime="20201007 16:41:07.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:41:07.586" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201007 16:41:07.586" starttime="20201007 16:41:07.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:41:07.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:41:07.587" starttime="20201007 16:41:07.586"></status>
</kw>
<status status="PASS" endtime="20201007 16:41:07.587" starttime="20201007 16:41:07.574"></status>
</kw>
<msg timestamp="20201007 16:41:07.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:41:07.587" starttime="20201007 16:41:07.574"></status>
</kw>
<msg timestamp="20201007 16:41:07.588" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201007 16:41:07.588" starttime="20201007 16:41:07.573"></status>
</kw>
<msg timestamp="20201007 16:41:07.588" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201007 16:41:07.588" starttime="20201007 16:41:07.573"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:41:07.592" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:41:07.592" starttime="20201007 16:41:07.591"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:41:07.593" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:41:07.593" starttime="20201007 16:41:07.592"></status>
</kw>
<status status="PASS" endtime="20201007 16:41:07.593" starttime="20201007 16:41:07.591"></status>
</kw>
<msg timestamp="20201007 16:41:07.593" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:41:07.593" starttime="20201007 16:41:07.590"></status>
</kw>
<status status="PASS" endtime="20201007 16:41:07.593" starttime="20201007 16:41:07.589"></status>
</kw>
<msg timestamp="20201007 16:41:07.593" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 16:41:07.593" starttime="20201007 16:41:07.589"></status>
</kw>
<msg timestamp="20201007 16:41:07.594" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 16:41:07.594" starttime="20201007 16:41:07.588"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:41:07.597" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:41:53.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:41:53.396" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-07 16:41:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41...</msg>
<status status="PASS" endtime="20201007 16:41:53.396" starttime="20201007 16:41:07.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:41:53.397" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-07 16:41:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:09 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-07 16:41:09 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:41:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-07 16:41:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-07 16:41:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 16:41:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-820F099A0744-&gt;ad349a3d-771e-4fea-a0a4-c74e8254be28
2020-10-07 16:41:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-07 16:41:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-10-07 16:41:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:14 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-07 16:41:14 INFO  JobSubmitter:202 - number of splits:3
2020-10-07 16:41:14 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602088796482_0001
2020-10-07 16:41:14 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-07 16:41:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:14 INFO  Configuration:2752 - resource-types.xml not found
2020-10-07 16:41:14 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-07 16:41:15 INFO  YarnClientImpl:324 - Submitted application application_1602088796482_0001
2020-10-07 16:41:15 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602088796482_0001/
2020-10-07 16:41:15 INFO  Job:1619 - Running job: job_1602088796482_0001
2020-10-07 16:41:25 INFO  Job:1640 - Job job_1602088796482_0001 running in uber mode : false
2020-10-07 16:41:25 INFO  Job:1647 -  map 0% reduce 0%
2020-10-07 16:41:31 INFO  Job:1647 -  map 33% reduce 0%
2020-10-07 16:41:37 INFO  Job:1647 -  map 67% reduce 0%
2020-10-07 16:41:43 INFO  Job:1647 -  map 100% reduce 0%
2020-10-07 16:41:51 INFO  Job:1647 -  map 100% reduce 100%
2020-10-07 16:41:52 INFO  Job:1658 - Job job_1602088796482_0001 completed successfully
2020-10-07 16:41:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:52 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1020469
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43160
		Total time spent by all reduces in occupied slots (ms)=26044
		Total time spent by all map tasks (ms)=10790
		Total time spent by all reduce tasks (ms)=6511
		Total vcore-milliseconds taken by all map tasks=10790
		Total vcore-milliseconds taken by all reduce tasks=6511
		Total megabyte-milliseconds taken by all map tasks=44195840
		Total megabyte-milliseconds taken by all reduce tasks=26669056
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=619
		CPU time spent (ms)=6800
		Physical memory (bytes) snapshot=1141116928
		Virtual memory (bytes) snapshot=16046665728
		Total committed heap usage (bytes)=1063256064
		Peak Map Physical memory (bytes)=291528704
		Peak Map Virtual memory (bytes)=4012134400
		Peak Reduce Physical memory (bytes)=286146560
		Peak Reduce Virtual memory (bytes)=4024172544
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.275 seconds
2020-10-07 16:41:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:52 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-07 16:41:53 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201007 16:41:53.397" starttime="20201007 16:41:53.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:41:53.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:41:53.398" starttime="20201007 16:41:53.397"></status>
</kw>
<status status="PASS" endtime="20201007 16:41:53.398" starttime="20201007 16:41:07.595"></status>
</kw>
<msg timestamp="20201007 16:41:53.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:41:53.398" starttime="20201007 16:41:07.594"></status>
</kw>
<msg timestamp="20201007 16:41:53.399" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-07 16:41:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41...</msg>
<status status="PASS" endtime="20201007 16:41:53.399" starttime="20201007 16:41:07.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201007 16:41:53.400" starttime="20201007 16:41:53.399"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201007 16:41:53.400" critical="yes" starttime="20201007 16:41:07.572"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:41:53.405" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:41:53.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:41:53.412" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201007 16:41:53.412" starttime="20201007 16:41:53.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:41:53.413" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201007 16:41:53.413" starttime="20201007 16:41:53.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:41:53.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:41:53.414" starttime="20201007 16:41:53.413"></status>
</kw>
<status status="PASS" endtime="20201007 16:41:53.414" starttime="20201007 16:41:53.403"></status>
</kw>
<msg timestamp="20201007 16:41:53.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:41:53.414" starttime="20201007 16:41:53.402"></status>
</kw>
<msg timestamp="20201007 16:41:53.414" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201007 16:41:53.414" starttime="20201007 16:41:53.402"></status>
</kw>
<msg timestamp="20201007 16:41:53.414" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201007 16:41:53.414" starttime="20201007 16:41:53.401"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201007 16:41:53.415" level="INFO">${random} = 08</msg>
<status status="PASS" endtime="20201007 16:41:53.415" starttime="20201007 16:41:53.415"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:41:53.426" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:41:53.426" starttime="20201007 16:41:53.426"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:41:53.427" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:41:53.427" starttime="20201007 16:41:53.426"></status>
</kw>
<status status="PASS" endtime="20201007 16:41:53.427" starttime="20201007 16:41:53.425"></status>
</kw>
<msg timestamp="20201007 16:41:53.427" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:41:53.427" starttime="20201007 16:41:53.425"></status>
</kw>
<status status="PASS" endtime="20201007 16:41:53.427" starttime="20201007 16:41:53.417"></status>
</kw>
<msg timestamp="20201007 16:41:53.427" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 16:41:53.427" starttime="20201007 16:41:53.416"></status>
</kw>
<msg timestamp="20201007 16:41:53.428" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 16:41:53.428" starttime="20201007 16:41:53.415"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:41:53.432" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:41:53.432" starttime="20201007 16:41:53.431"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:41:53.433" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:41:53.433" starttime="20201007 16:41:53.432"></status>
</kw>
<status status="PASS" endtime="20201007 16:41:53.433" starttime="20201007 16:41:53.430"></status>
</kw>
<msg timestamp="20201007 16:41:53.433" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:41:53.433" starttime="20201007 16:41:53.430"></status>
</kw>
<status status="PASS" endtime="20201007 16:41:53.434" starttime="20201007 16:41:53.429"></status>
</kw>
<msg timestamp="20201007 16:41:53.434" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201007 16:41:53.434" starttime="20201007 16:41:53.428"></status>
</kw>
<msg timestamp="20201007 16:41:53.434" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201007 16:41:53.434" starttime="20201007 16:41:53.428"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:41:53.438" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:41:53.438" starttime="20201007 16:41:53.437"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:41:53.438" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:41:53.438" starttime="20201007 16:41:53.438"></status>
</kw>
<status status="PASS" endtime="20201007 16:41:53.439" starttime="20201007 16:41:53.437"></status>
</kw>
<msg timestamp="20201007 16:41:53.439" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:41:53.439" starttime="20201007 16:41:53.436"></status>
</kw>
<status status="PASS" endtime="20201007 16:41:53.439" starttime="20201007 16:41:53.436"></status>
</kw>
<msg timestamp="20201007 16:41:53.439" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-08.txt</msg>
<status status="PASS" endtime="20201007 16:41:53.439" starttime="20201007 16:41:53.435"></status>
</kw>
<msg timestamp="20201007 16:41:53.440" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-08.txt</msg>
<status status="PASS" endtime="20201007 16:41:53.440" starttime="20201007 16:41:53.434"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:41:53.444" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-08.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:42:30.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:42:30.350" level="INFO">${output} = 2020-10-07 16:41:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:55 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201007 16:42:30.350" starttime="20201007 16:41:53.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:42:30.351" level="INFO">2020-10-07 16:41:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:55 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-10-07 16:41:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-07 16:41:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:56 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-07 16:41:56 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-07 16:41:56 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-07 16:41:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-07 16:41:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 16:41:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8F45F2531676-&gt;ad349a3d-771e-4fea-a0a4-c74e8254be28
2020-10-07 16:41:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-07 16:41:57 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-07 16:41:57 INFO  JobSubmitter:202 - number of splits:3
2020-10-07 16:41:57 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602088796482_0002
2020-10-07 16:41:57 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-07 16:41:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:58 INFO  Configuration:2752 - resource-types.xml not found
2020-10-07 16:41:58 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-07 16:41:58 INFO  YarnClientImpl:324 - Submitted application application_1602088796482_0002
2020-10-07 16:41:58 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602088796482_0002/
2020-10-07 16:41:58 INFO  Job:1619 - Running job: job_1602088796482_0002
2020-10-07 16:42:06 INFO  Job:1640 - Job job_1602088796482_0002 running in uber mode : false
2020-10-07 16:42:06 INFO  Job:1647 -  map 0% reduce 0%
2020-10-07 16:42:13 INFO  Job:1647 -  map 33% reduce 0%
2020-10-07 16:42:18 INFO  Job:1647 -  map 67% reduce 0%
2020-10-07 16:42:24 INFO  Job:1647 -  map 100% reduce 0%
2020-10-07 16:42:28 INFO  Job:1647 -  map 100% reduce 100%
2020-10-07 16:42:29 INFO  Job:1658 - Job job_1602088796482_0002 completed successfully
2020-10-07 16:42:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:42:29 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43928
		Total time spent by all reduces in occupied slots (ms)=15332
		Total time spent by all map tasks (ms)=10982
		Total time spent by all reduce tasks (ms)=3833
		Total vcore-milliseconds taken by all map tasks=10982
		Total vcore-milliseconds taken by all reduce tasks=3833
		Total megabyte-milliseconds taken by all map tasks=44982272
		Total megabyte-milliseconds taken by all reduce tasks=15699968
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=644
		CPU time spent (ms)=7820
		Physical memory (bytes) snapshot=1165615104
		Virtual memory (bytes) snapshot=16069881856
		Total committed heap usage (bytes)=1015545856
		Peak Map Physical memory (bytes)=294293504
		Peak Map Virtual memory (bytes)=4012380160
		Peak Reduce Physical memory (bytes)=286924800
		Peak Reduce Virtual memory (bytes)=4035407872
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-07 16:42:30 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201007 16:42:30.352" starttime="20201007 16:42:30.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:42:30.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:42:30.352" starttime="20201007 16:42:30.352"></status>
</kw>
<status status="PASS" endtime="20201007 16:42:30.353" starttime="20201007 16:41:53.441"></status>
</kw>
<msg timestamp="20201007 16:42:30.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:42:30.353" starttime="20201007 16:41:53.440"></status>
</kw>
<msg timestamp="20201007 16:42:30.353" level="INFO">${output} = 2020-10-07 16:41:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-07 16:41:55 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201007 16:42:30.353" starttime="20201007 16:41:53.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201007 16:42:30.354" starttime="20201007 16:42:30.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201007 16:42:30.354" starttime="20201007 16:42:30.354"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201007 16:42:30.355" critical="yes" starttime="20201007 16:41:53.400"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201007 16:42:30.357" starttime="20201007 16:41:07.512"></status>
</suite>
<status status="PASS" elapsedtime="211025" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:45:27.681" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:45:32.138" level="INFO">${rc} = 255</msg>
<msg timestamp="20201007 16:45:32.139" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201007 16:45:32.139" starttime="20201007 16:45:27.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:45:32.140" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201007 16:45:32.140" starttime="20201007 16:45:32.139"></status>
</kw>
<msg timestamp="20201007 16:45:32.140" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201007 16:45:32.140" starttime="20201007 16:45:27.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:45:32.148" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:45:35.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:45:35.935" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:45:35.935" starttime="20201007 16:45:32.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:45:35.936" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:45:35.936" starttime="20201007 16:45:35.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:45:35.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:45:35.937" starttime="20201007 16:45:35.936"></status>
</kw>
<status status="PASS" endtime="20201007 16:45:35.937" starttime="20201007 16:45:32.143"></status>
</kw>
<msg timestamp="20201007 16:45:35.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:45:35.938" starttime="20201007 16:45:32.142"></status>
</kw>
<msg timestamp="20201007 16:45:35.938" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201007 16:45:35.938" starttime="20201007 16:45:32.142"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201007 16:45:35.938" starttime="20201007 16:45:35.938"></status>
</kw>
<status status="PASS" endtime="20201007 16:45:35.939" starttime="20201007 16:45:32.141"></status>
</kw>
<status status="PASS" endtime="20201007 16:45:35.939" starttime="20201007 16:45:32.141"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:45:35.944" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:45:39.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:45:39.275" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:45:39.275" starttime="20201007 16:45:35.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:45:39.276" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:45:39.276" starttime="20201007 16:45:39.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:45:39.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:45:39.277" starttime="20201007 16:45:39.277"></status>
</kw>
<status status="PASS" endtime="20201007 16:45:39.277" starttime="20201007 16:45:35.941"></status>
</kw>
<msg timestamp="20201007 16:45:39.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:45:39.278" starttime="20201007 16:45:35.940"></status>
</kw>
<status status="PASS" endtime="20201007 16:45:39.278" starttime="20201007 16:45:35.940"></status>
</kw>
<status status="PASS" endtime="20201007 16:45:39.278" starttime="20201007 16:45:35.939"></status>
</kw>
<status status="PASS" endtime="20201007 16:45:39.278" starttime="20201007 16:45:35.939"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201007 16:45:39.279" starttime="20201007 16:45:39.278"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:45:39.286" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:45:42.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:45:42.762" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T16:45:39.040Z",
  "modificat...</msg>
<status status="PASS" endtime="20201007 16:45:42.762" starttime="20201007 16:45:39.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:45:42.763" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T16:45:39.040Z",
  "modificationTime" : "2020-10-07T16:45:39.040Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201007 16:45:42.763" starttime="20201007 16:45:42.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:45:42.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:45:42.764" starttime="20201007 16:45:42.763"></status>
</kw>
<status status="PASS" endtime="20201007 16:45:42.765" starttime="20201007 16:45:39.281"></status>
</kw>
<msg timestamp="20201007 16:45:42.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:45:42.765" starttime="20201007 16:45:39.281"></status>
</kw>
<msg timestamp="20201007 16:45:42.765" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T16:45:39.040Z",
  "modificat...</msg>
<status status="PASS" endtime="20201007 16:45:42.765" starttime="20201007 16:45:39.279"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201007 16:45:42.766" starttime="20201007 16:45:42.765"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:45:42.770" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:45:42.770" starttime="20201007 16:45:42.770"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:45:42.771" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:45:42.771" starttime="20201007 16:45:42.770"></status>
</kw>
<status status="PASS" endtime="20201007 16:45:42.771" starttime="20201007 16:45:42.769"></status>
</kw>
<msg timestamp="20201007 16:45:42.771" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:45:42.771" starttime="20201007 16:45:42.769"></status>
</kw>
<status status="PASS" endtime="20201007 16:45:42.772" starttime="20201007 16:45:42.768"></status>
</kw>
<msg timestamp="20201007 16:45:42.772" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201007 16:45:42.772" starttime="20201007 16:45:42.767"></status>
</kw>
<msg timestamp="20201007 16:45:42.772" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201007 16:45:42.772" starttime="20201007 16:45:42.766"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:45:42.776" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:45:46.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:45:46.208" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:45:46.208" starttime="20201007 16:45:42.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:45:46.209" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:45:46.209" starttime="20201007 16:45:46.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:45:46.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:45:46.210" starttime="20201007 16:45:46.209"></status>
</kw>
<status status="PASS" endtime="20201007 16:45:46.210" starttime="20201007 16:45:42.774"></status>
</kw>
<msg timestamp="20201007 16:45:46.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:45:46.211" starttime="20201007 16:45:42.773"></status>
</kw>
<status status="PASS" endtime="20201007 16:45:46.211" starttime="20201007 16:45:42.773"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:45:46.215" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:45:54.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:45:54.279" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:45:54.279" starttime="20201007 16:45:46.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:45:54.281" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:45:54.281" starttime="20201007 16:45:54.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:45:54.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:45:54.282" starttime="20201007 16:45:54.281"></status>
</kw>
<status status="PASS" endtime="20201007 16:45:54.282" starttime="20201007 16:45:46.212"></status>
</kw>
<msg timestamp="20201007 16:45:54.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:45:54.282" starttime="20201007 16:45:46.212"></status>
</kw>
<status status="PASS" endtime="20201007 16:45:54.283" starttime="20201007 16:45:46.211"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:45:54.286" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:45:59.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:45:59.778" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:45:59.778" starttime="20201007 16:45:54.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:45:59.779" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:45:59.779" starttime="20201007 16:45:59.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:45:59.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:45:59.780" starttime="20201007 16:45:59.779"></status>
</kw>
<status status="PASS" endtime="20201007 16:45:59.780" starttime="20201007 16:45:54.284"></status>
</kw>
<msg timestamp="20201007 16:45:59.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:45:59.780" starttime="20201007 16:45:54.283"></status>
</kw>
<status status="PASS" endtime="20201007 16:45:59.781" starttime="20201007 16:45:54.283"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:45:59.785" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:46:05.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:46:05.144" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:46:05.144" starttime="20201007 16:45:59.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:46:05.145" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:46:05.145" starttime="20201007 16:46:05.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:46:05.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:46:05.146" starttime="20201007 16:46:05.146"></status>
</kw>
<status status="PASS" endtime="20201007 16:46:05.147" starttime="20201007 16:45:59.782"></status>
</kw>
<msg timestamp="20201007 16:46:05.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:46:05.147" starttime="20201007 16:45:59.781"></status>
</kw>
<status status="PASS" endtime="20201007 16:46:05.147" starttime="20201007 16:45:59.781"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 16:46:05.147" critical="yes" starttime="20201007 16:45:27.668"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:46:05.153" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:46:05.153" starttime="20201007 16:46:05.152"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:46:05.154" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:46:05.154" starttime="20201007 16:46:05.153"></status>
</kw>
<status status="PASS" endtime="20201007 16:46:05.154" starttime="20201007 16:46:05.152"></status>
</kw>
<msg timestamp="20201007 16:46:05.154" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:46:05.154" starttime="20201007 16:46:05.151"></status>
</kw>
<status status="PASS" endtime="20201007 16:46:05.155" starttime="20201007 16:46:05.150"></status>
</kw>
<msg timestamp="20201007 16:46:05.155" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201007 16:46:05.155" starttime="20201007 16:46:05.150"></status>
</kw>
<msg timestamp="20201007 16:46:05.155" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201007 16:46:05.155" starttime="20201007 16:46:05.149"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:46:05.159" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:46:08.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:46:08.274" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:46:08.274" starttime="20201007 16:46:05.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:46:08.275" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:46:08.275" starttime="20201007 16:46:08.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:46:08.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:46:08.276" starttime="20201007 16:46:08.276"></status>
</kw>
<status status="PASS" endtime="20201007 16:46:08.277" starttime="20201007 16:46:05.156"></status>
</kw>
<msg timestamp="20201007 16:46:08.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:46:08.277" starttime="20201007 16:46:05.156"></status>
</kw>
<status status="PASS" endtime="20201007 16:46:08.277" starttime="20201007 16:46:05.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:46:08.281" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:46:11.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:46:11.592" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 16:46:11.593" starttime="20201007 16:46:08.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:46:11.594" level="INFO"></msg>
<status status="PASS" endtime="20201007 16:46:11.594" starttime="20201007 16:46:11.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:46:11.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:46:11.595" starttime="20201007 16:46:11.594"></status>
</kw>
<status status="PASS" endtime="20201007 16:46:11.595" starttime="20201007 16:46:08.278"></status>
</kw>
<msg timestamp="20201007 16:46:11.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:46:11.595" starttime="20201007 16:46:08.278"></status>
</kw>
<status status="PASS" endtime="20201007 16:46:11.596" starttime="20201007 16:46:08.277"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 16:46:11.596" critical="yes" starttime="20201007 16:46:05.148"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201007 16:46:11.597" starttime="20201007 16:45:27.574"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 16:47:53.419" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 16:47:53.419" starttime="20201007 16:47:53.419"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:47:53.420" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 16:47:53.420" starttime="20201007 16:47:53.419"></status>
</kw>
<status status="PASS" endtime="20201007 16:47:53.420" starttime="20201007 16:47:53.417"></status>
</kw>
<msg timestamp="20201007 16:47:53.420" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 16:47:53.420" starttime="20201007 16:47:53.417"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201007 16:47:53.421" starttime="20201007 16:47:53.421"></status>
</kw>
<msg timestamp="20201007 16:47:53.421" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201007 16:47:53.421" starttime="20201007 16:47:53.420"></status>
</kw>
<status status="PASS" endtime="20201007 16:47:53.422" starttime="20201007 16:47:53.416"></status>
</kw>
<msg timestamp="20201007 16:47:53.422" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 16:47:53.422" starttime="20201007 16:47:53.415"></status>
</kw>
<msg timestamp="20201007 16:47:53.422" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 16:47:53.422" starttime="20201007 16:47:53.414"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201007 16:47:53.423" level="INFO">${random} = 28507</msg>
<status status="PASS" endtime="20201007 16:47:53.423" starttime="20201007 16:47:53.422"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:47:53.426" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-28507 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:47:56.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:47:56.982" level="INFO">${output} = 2020-10-07 16:47:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 16:47:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201007 16:47:56.982" starttime="20201007 16:47:53.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:47:56.983" level="INFO">2020-10-07 16:47:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 16:47:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-07 16:47:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-07 16:47:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 16:47:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F313F316DF36-&gt;ee886acd-b7f9-400b-8bda-1be4f172240a
2020-10-07 16:47:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201007 16:47:56.983" starttime="20201007 16:47:56.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:47:56.984" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:47:56.984" starttime="20201007 16:47:56.984"></status>
</kw>
<status status="PASS" endtime="20201007 16:47:56.985" starttime="20201007 16:47:53.424"></status>
</kw>
<msg timestamp="20201007 16:47:56.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:47:56.985" starttime="20201007 16:47:53.424"></status>
</kw>
<msg timestamp="20201007 16:47:56.985" level="INFO">${result} = 2020-10-07 16:47:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 16:47:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201007 16:47:56.985" starttime="20201007 16:47:53.423"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:47:56.988" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:47:58.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:47:58.925" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:45 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-07 16:47 ofs://om/volume1/bucket1/ozone-28507
-rw-...</msg>
<status status="PASS" endtime="20201007 16:47:58.925" starttime="20201007 16:47:56.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:47:58.926" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:45 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-07 16:47 ofs://om/volume1/bucket1/ozone-28507
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-07 16:46 ofs://om/volume1/bucket1/ozone-31348
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:46 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:47 ofs://om/volume1/bucket1/wordcount-95.txt</msg>
<status status="PASS" endtime="20201007 16:47:58.926" starttime="20201007 16:47:58.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:47:58.926" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:47:58.927" starttime="20201007 16:47:58.926"></status>
</kw>
<status status="PASS" endtime="20201007 16:47:58.927" starttime="20201007 16:47:56.986"></status>
</kw>
<msg timestamp="20201007 16:47:58.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:47:58.927" starttime="20201007 16:47:56.986"></status>
</kw>
<msg timestamp="20201007 16:47:58.927" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:45 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-07 16:47 ofs://om/volume1/bucket1/ozone-28507
-rw-...</msg>
<status status="PASS" endtime="20201007 16:47:58.927" starttime="20201007 16:47:56.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201007 16:47:58.928" starttime="20201007 16:47:58.928"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201007 16:47:58.928" critical="yes" starttime="20201007 16:47:53.413"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201007 16:47:58.930" starttime="20201007 16:47:53.363"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:46:16.485" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:46:16.485" starttime="20201007 16:46:16.483"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:46:16.486" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:46:16.486" starttime="20201007 16:46:16.485"></status>
</kw>
<status status="PASS" endtime="20201007 16:46:16.486" starttime="20201007 16:46:16.482"></status>
</kw>
<msg timestamp="20201007 16:46:16.486" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:46:16.486" starttime="20201007 16:46:16.482"></status>
</kw>
<status status="PASS" endtime="20201007 16:46:16.486" starttime="20201007 16:46:16.481"></status>
</kw>
<msg timestamp="20201007 16:46:16.486" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 16:46:16.486" starttime="20201007 16:46:16.481"></status>
</kw>
<msg timestamp="20201007 16:46:16.487" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 16:46:16.487" starttime="20201007 16:46:16.480"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201007 16:46:16.487" level="INFO">${random} = 31348</msg>
<status status="PASS" endtime="20201007 16:46:16.487" starttime="20201007 16:46:16.487"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:46:16.490" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-31348 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:46:20.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:46:20.403" level="INFO">${output} = 2020-10-07 16:46:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 16:46:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201007 16:46:20.403" starttime="20201007 16:46:16.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:46:20.404" level="INFO">2020-10-07 16:46:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 16:46:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-07 16:46:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-07 16:46:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 16:46:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DC4FB4FDF6FE-&gt;ee886acd-b7f9-400b-8bda-1be4f172240a
2020-10-07 16:46:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201007 16:46:20.404" starttime="20201007 16:46:20.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:46:20.405" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:46:20.405" starttime="20201007 16:46:20.404"></status>
</kw>
<status status="PASS" endtime="20201007 16:46:20.405" starttime="20201007 16:46:16.488"></status>
</kw>
<msg timestamp="20201007 16:46:20.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:46:20.406" starttime="20201007 16:46:16.488"></status>
</kw>
<msg timestamp="20201007 16:46:20.406" level="INFO">${result} = 2020-10-07 16:46:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 16:46:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201007 16:46:20.406" starttime="20201007 16:46:16.487"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:46:20.409" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:46:22.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:46:22.489" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:45 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-07 16:46 o3fs://bucket1.volume1.om/ozone-31348
dr...</msg>
<status status="PASS" endtime="20201007 16:46:22.490" starttime="20201007 16:46:20.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:46:22.491" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:45 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-07 16:46 o3fs://bucket1.volume1.om/ozone-31348
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:46 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201007 16:46:22.491" starttime="20201007 16:46:22.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:46:22.491" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:46:22.491" starttime="20201007 16:46:22.491"></status>
</kw>
<status status="PASS" endtime="20201007 16:46:22.492" starttime="20201007 16:46:20.407"></status>
</kw>
<msg timestamp="20201007 16:46:22.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:46:22.492" starttime="20201007 16:46:20.407"></status>
</kw>
<msg timestamp="20201007 16:46:22.492" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 16:45 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-07 16:46 o3fs://bucket1.volume1.om/ozone-31348
dr...</msg>
<status status="PASS" endtime="20201007 16:46:22.492" starttime="20201007 16:46:20.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201007 16:46:22.493" starttime="20201007 16:46:22.492"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201007 16:46:22.493" critical="yes" starttime="20201007 16:46:16.479"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201007 16:46:22.495" starttime="20201007 16:46:16.424"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:48:03.654" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:48:03.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:48:03.663" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 16:48:03.663" starttime="20201007 16:48:03.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:48:03.664" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 16:48:03.664" starttime="20201007 16:48:03.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:48:03.664" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:48:03.664" starttime="20201007 16:48:03.664"></status>
</kw>
<status status="PASS" endtime="20201007 16:48:03.665" starttime="20201007 16:48:03.652"></status>
</kw>
<msg timestamp="20201007 16:48:03.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:48:03.665" starttime="20201007 16:48:03.652"></status>
</kw>
<msg timestamp="20201007 16:48:03.665" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 16:48:03.665" starttime="20201007 16:48:03.651"></status>
</kw>
<msg timestamp="20201007 16:48:03.665" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 16:48:03.665" starttime="20201007 16:48:03.651"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 16:48:03.669" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 16:48:03.670" starttime="20201007 16:48:03.669"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:48:03.670" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 16:48:03.670" starttime="20201007 16:48:03.670"></status>
</kw>
<status status="PASS" endtime="20201007 16:48:03.670" starttime="20201007 16:48:03.668"></status>
</kw>
<msg timestamp="20201007 16:48:03.671" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 16:48:03.671" starttime="20201007 16:48:03.668"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201007 16:48:03.672" starttime="20201007 16:48:03.672"></status>
</kw>
<msg timestamp="20201007 16:48:03.672" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201007 16:48:03.672" starttime="20201007 16:48:03.671"></status>
</kw>
<status status="PASS" endtime="20201007 16:48:03.673" starttime="20201007 16:48:03.667"></status>
</kw>
<msg timestamp="20201007 16:48:03.673" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 16:48:03.673" starttime="20201007 16:48:03.666"></status>
</kw>
<msg timestamp="20201007 16:48:03.673" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 16:48:03.673" starttime="20201007 16:48:03.665"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:48:03.676" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:48:44.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:48:44.899" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-07 16:48:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 16:48:05 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201007 16:48:44.899" starttime="20201007 16:48:03.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:48:44.900" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-07 16:48:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 16:48:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-07 16:48:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-07 16:48:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 16:48:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D2AB1F226AC2-&gt;ee886acd-b7f9-400b-8bda-1be4f172240a
2020-10-07 16:48:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-07 16:48:07 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-10-07 16:48:07 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-07 16:48:08 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-07 16:48:08 INFO  JobSubmitter:202 - number of splits:3
2020-10-07 16:48:08 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-07 16:48:08 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602089101348_0003
2020-10-07 16:48:08 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-07 16:48:08 INFO  Configuration:2752 - resource-types.xml not found
2020-10-07 16:48:08 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-07 16:48:08 INFO  YarnClientImpl:311 - Submitted application application_1602089101348_0003
2020-10-07 16:48:08 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602089101348_0003/
2020-10-07 16:48:08 INFO  Job:1619 - Running job: job_1602089101348_0003
2020-10-07 16:48:17 INFO  Job:1640 - Job job_1602089101348_0003 running in uber mode : false
2020-10-07 16:48:17 INFO  Job:1647 -  map 0% reduce 0%
2020-10-07 16:48:24 INFO  Job:1647 -  map 33% reduce 0%
2020-10-07 16:48:29 INFO  Job:1647 -  map 67% reduce 0%
2020-10-07 16:48:36 INFO  Job:1647 -  map 100% reduce 0%
2020-10-07 16:48:41 INFO  Job:1647 -  map 100% reduce 100%
2020-10-07 16:48:44 INFO  Job:1658 - Job job_1602089101348_0003 completed successfully
2020-10-07 16:48:44 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1043281
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43804
		Total time spent by all reduces in occupied slots (ms)=16796
		Total time spent by all map tasks (ms)=10951
		Total time spent by all reduce tasks (ms)=4199
		Total vcore-milliseconds taken by all map tasks=10951
		Total vcore-milliseconds taken by all reduce tasks=4199
		Total megabyte-milliseconds taken by all map tasks=44855296
		Total megabyte-milliseconds taken by all reduce tasks=17199104
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=614
		CPU time spent (ms)=7890
		Physical memory (bytes) snapshot=1372082176
		Virtual memory (bytes) snapshot=16023195648
		Total committed heap usage (bytes)=1460142080
		Peak Map Physical memory (bytes)=366776320
		Peak Map Virtual memory (bytes)=4014751744
		Peak Reduce Physical memory (bytes)=369184768
		Peak Reduce Virtual memory (bytes)=3992817664
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.08 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201007 16:48:44.900" starttime="20201007 16:48:44.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:48:44.901" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:48:44.901" starttime="20201007 16:48:44.901"></status>
</kw>
<status status="PASS" endtime="20201007 16:48:44.902" starttime="20201007 16:48:03.674"></status>
</kw>
<msg timestamp="20201007 16:48:44.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:48:44.902" starttime="20201007 16:48:03.674"></status>
</kw>
<msg timestamp="20201007 16:48:44.903" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-07 16:48:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 16:48:05 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201007 16:48:44.903" starttime="20201007 16:48:03.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201007 16:48:44.904" starttime="20201007 16:48:44.903"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201007 16:48:44.904" critical="yes" starttime="20201007 16:48:03.650"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:48:44.908" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:48:44.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:48:44.913" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 16:48:44.913" starttime="20201007 16:48:44.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:48:44.914" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 16:48:44.914" starttime="20201007 16:48:44.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:48:44.915" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:48:44.915" starttime="20201007 16:48:44.914"></status>
</kw>
<status status="PASS" endtime="20201007 16:48:44.915" starttime="20201007 16:48:44.906"></status>
</kw>
<msg timestamp="20201007 16:48:44.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:48:44.915" starttime="20201007 16:48:44.906"></status>
</kw>
<msg timestamp="20201007 16:48:44.916" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 16:48:44.916" starttime="20201007 16:48:44.905"></status>
</kw>
<msg timestamp="20201007 16:48:44.916" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 16:48:44.916" starttime="20201007 16:48:44.905"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201007 16:48:44.917" level="INFO">${random} = 98</msg>
<status status="PASS" endtime="20201007 16:48:44.917" starttime="20201007 16:48:44.916"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 16:48:44.920" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 16:48:44.920" starttime="20201007 16:48:44.920"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:48:44.921" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 16:48:44.921" starttime="20201007 16:48:44.920"></status>
</kw>
<status status="PASS" endtime="20201007 16:48:44.921" starttime="20201007 16:48:44.919"></status>
</kw>
<msg timestamp="20201007 16:48:44.921" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 16:48:44.921" starttime="20201007 16:48:44.919"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201007 16:48:44.923" starttime="20201007 16:48:44.922"></status>
</kw>
<msg timestamp="20201007 16:48:44.923" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201007 16:48:44.923" starttime="20201007 16:48:44.921"></status>
</kw>
<status status="PASS" endtime="20201007 16:48:44.923" starttime="20201007 16:48:44.918"></status>
</kw>
<msg timestamp="20201007 16:48:44.923" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 16:48:44.923" starttime="20201007 16:48:44.917"></status>
</kw>
<msg timestamp="20201007 16:48:44.923" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 16:48:44.924" starttime="20201007 16:48:44.917"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 16:48:44.927" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 16:48:44.927" starttime="20201007 16:48:44.927"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:48:44.928" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 16:48:44.928" starttime="20201007 16:48:44.928"></status>
</kw>
<status status="PASS" endtime="20201007 16:48:44.928" starttime="20201007 16:48:44.926"></status>
</kw>
<msg timestamp="20201007 16:48:44.928" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 16:48:44.928" starttime="20201007 16:48:44.926"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:48:44.930" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201007 16:48:44.930" starttime="20201007 16:48:44.930"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:48:44.931" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201007 16:48:44.931" starttime="20201007 16:48:44.930"></status>
</kw>
<status status="PASS" endtime="20201007 16:48:44.931" starttime="20201007 16:48:44.929"></status>
</kw>
<msg timestamp="20201007 16:48:44.931" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201007 16:48:44.931" starttime="20201007 16:48:44.929"></status>
</kw>
<status status="PASS" endtime="20201007 16:48:44.932" starttime="20201007 16:48:44.925"></status>
</kw>
<msg timestamp="20201007 16:48:44.932" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201007 16:48:44.932" starttime="20201007 16:48:44.924"></status>
</kw>
<msg timestamp="20201007 16:48:44.932" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201007 16:48:44.932" starttime="20201007 16:48:44.924"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 16:48:44.935" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 16:48:44.935" starttime="20201007 16:48:44.935"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:48:44.936" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 16:48:44.936" starttime="20201007 16:48:44.936"></status>
</kw>
<status status="PASS" endtime="20201007 16:48:44.936" starttime="20201007 16:48:44.935"></status>
</kw>
<msg timestamp="20201007 16:48:44.936" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 16:48:44.936" starttime="20201007 16:48:44.934"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:48:44.938" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201007 16:48:44.938" starttime="20201007 16:48:44.938"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:48:44.939" level="INFO">${result} = /wordcount-98.txt</msg>
<status status="PASS" endtime="20201007 16:48:44.939" starttime="20201007 16:48:44.938"></status>
</kw>
<status status="PASS" endtime="20201007 16:48:44.939" starttime="20201007 16:48:44.937"></status>
</kw>
<msg timestamp="20201007 16:48:44.939" level="INFO">${path_with_leading} = /wordcount-98.txt</msg>
<status status="PASS" endtime="20201007 16:48:44.940" starttime="20201007 16:48:44.937"></status>
</kw>
<status status="PASS" endtime="20201007 16:48:44.940" starttime="20201007 16:48:44.933"></status>
</kw>
<msg timestamp="20201007 16:48:44.940" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-98.txt</msg>
<status status="PASS" endtime="20201007 16:48:44.940" starttime="20201007 16:48:44.933"></status>
</kw>
<msg timestamp="20201007 16:48:44.940" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-98.txt</msg>
<status status="PASS" endtime="20201007 16:48:44.940" starttime="20201007 16:48:44.932"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:48:44.943" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-98.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:49:23.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:49:23.528" level="INFO">${output} = 2020-10-07 16:48:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-10-07 16:48:47 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201007 16:49:23.528" starttime="20201007 16:48:44.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:49:23.529" level="INFO">2020-10-07 16:48:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-10-07 16:48:47 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-07 16:48:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 16:48:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-07 16:48:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-07 16:48:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 16:48:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B7F9E031C920-&gt;ee886acd-b7f9-400b-8bda-1be4f172240a
2020-10-07 16:48:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-07 16:48:48 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-07 16:48:48 INFO  JobSubmitter:202 - number of splits:3
2020-10-07 16:48:48 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-07 16:48:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602089101348_0004
2020-10-07 16:48:49 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-07 16:48:49 INFO  Configuration:2752 - resource-types.xml not found
2020-10-07 16:48:49 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-07 16:48:49 INFO  YarnClientImpl:311 - Submitted application application_1602089101348_0004
2020-10-07 16:48:49 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602089101348_0004/
2020-10-07 16:48:49 INFO  Job:1619 - Running job: job_1602089101348_0004
2020-10-07 16:48:57 INFO  Job:1640 - Job job_1602089101348_0004 running in uber mode : false
2020-10-07 16:48:57 INFO  Job:1647 -  map 0% reduce 0%
2020-10-07 16:49:04 INFO  Job:1647 -  map 33% reduce 0%
2020-10-07 16:49:10 INFO  Job:1647 -  map 67% reduce 0%
2020-10-07 16:49:17 INFO  Job:1647 -  map 100% reduce 0%
2020-10-07 16:49:22 INFO  Job:1647 -  map 100% reduce 100%
2020-10-07 16:49:23 INFO  Job:1658 - Job job_1602089101348_0004 completed successfully
2020-10-07 16:49:23 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1105937
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44232
		Total time spent by all reduces in occupied slots (ms)=16392
		Total time spent by all map tasks (ms)=11058
		Total time spent by all reduce tasks (ms)=4098
		Total vcore-milliseconds taken by all map tasks=11058
		Total vcore-milliseconds taken by all reduce tasks=4098
		Total megabyte-milliseconds taken by all map tasks=45293568
		Total megabyte-milliseconds taken by all reduce tasks=16785408
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=611
		CPU time spent (ms)=7660
		Physical memory (bytes) snapshot=1393459200
		Virtual memory (bytes) snapshot=16026361856
		Total committed heap usage (bytes)=1600651264
		Peak Map Physical memory (bytes)=359432192
		Peak Map Virtual memory (bytes)=4011339776
		Peak Reduce Physical memory (bytes)=343343104
		Peak Reduce Virtual memory (bytes)=4010098688
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201007 16:49:23.529" starttime="20201007 16:49:23.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:49:23.530" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:49:23.530" starttime="20201007 16:49:23.530"></status>
</kw>
<status status="PASS" endtime="20201007 16:49:23.531" starttime="20201007 16:48:44.941"></status>
</kw>
<msg timestamp="20201007 16:49:23.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:49:23.531" starttime="20201007 16:48:44.941"></status>
</kw>
<msg timestamp="20201007 16:49:23.532" level="INFO">${output} = 2020-10-07 16:48:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-10-07 16:48:47 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201007 16:49:23.532" starttime="20201007 16:48:44.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201007 16:49:23.533" starttime="20201007 16:49:23.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201007 16:49:23.533" starttime="20201007 16:49:23.533"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201007 16:49:23.533" critical="yes" starttime="20201007 16:48:44.904"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201007 16:49:23.534" starttime="20201007 16:48:03.599"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:46:27.256" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:46:27.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:46:27.263" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 16:46:27.263" starttime="20201007 16:46:27.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:46:27.263" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 16:46:27.264" starttime="20201007 16:46:27.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:46:27.264" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:46:27.264" starttime="20201007 16:46:27.264"></status>
</kw>
<status status="PASS" endtime="20201007 16:46:27.265" starttime="20201007 16:46:27.254"></status>
</kw>
<msg timestamp="20201007 16:46:27.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:46:27.269" starttime="20201007 16:46:27.254"></status>
</kw>
<msg timestamp="20201007 16:46:27.269" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 16:46:27.269" starttime="20201007 16:46:27.253"></status>
</kw>
<msg timestamp="20201007 16:46:27.269" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 16:46:27.269" starttime="20201007 16:46:27.253"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:46:27.273" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:46:27.273" starttime="20201007 16:46:27.273"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:46:27.274" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:46:27.274" starttime="20201007 16:46:27.273"></status>
</kw>
<status status="PASS" endtime="20201007 16:46:27.274" starttime="20201007 16:46:27.272"></status>
</kw>
<msg timestamp="20201007 16:46:27.274" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:46:27.274" starttime="20201007 16:46:27.271"></status>
</kw>
<status status="PASS" endtime="20201007 16:46:27.275" starttime="20201007 16:46:27.271"></status>
</kw>
<msg timestamp="20201007 16:46:27.275" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 16:46:27.275" starttime="20201007 16:46:27.270"></status>
</kw>
<msg timestamp="20201007 16:46:27.275" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 16:46:27.275" starttime="20201007 16:46:27.269"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:46:27.277" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:47:10.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:47:10.896" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-07 16:46:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 16:46:29 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201007 16:47:10.896" starttime="20201007 16:46:27.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:47:10.897" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-07 16:46:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 16:46:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-07 16:46:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-07 16:46:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 16:46:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8F7D941DB1C8-&gt;ee886acd-b7f9-400b-8bda-1be4f172240a
2020-10-07 16:46:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-07 16:46:30 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-10-07 16:46:31 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-07 16:46:31 INFO  JobSubmitter:202 - number of splits:3
2020-10-07 16:46:31 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-07 16:46:31 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602089101348_0001
2020-10-07 16:46:31 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-07 16:46:32 INFO  Configuration:2752 - resource-types.xml not found
2020-10-07 16:46:32 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-07 16:46:32 INFO  YarnClientImpl:311 - Submitted application application_1602089101348_0001
2020-10-07 16:46:32 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602089101348_0001/
2020-10-07 16:46:32 INFO  Job:1619 - Running job: job_1602089101348_0001
2020-10-07 16:46:43 INFO  Job:1640 - Job job_1602089101348_0001 running in uber mode : false
2020-10-07 16:46:43 INFO  Job:1647 -  map 0% reduce 0%
2020-10-07 16:46:51 INFO  Job:1647 -  map 33% reduce 0%
2020-10-07 16:46:57 INFO  Job:1647 -  map 67% reduce 0%
2020-10-07 16:47:02 INFO  Job:1647 -  map 100% reduce 0%
2020-10-07 16:47:09 INFO  Job:1647 -  map 100% reduce 100%
2020-10-07 16:47:10 INFO  Job:1658 - Job job_1602089101348_0001 completed successfully
2020-10-07 16:47:10 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1043485
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43496
		Total time spent by all reduces in occupied slots (ms)=26172
		Total time spent by all map tasks (ms)=10874
		Total time spent by all reduce tasks (ms)=6543
		Total vcore-milliseconds taken by all map tasks=10874
		Total vcore-milliseconds taken by all reduce tasks=6543
		Total megabyte-milliseconds taken by all map tasks=44539904
		Total megabyte-milliseconds taken by all reduce tasks=26800128
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=591
		CPU time spent (ms)=7110
		Physical memory (bytes) snapshot=1337081856
		Virtual memory (bytes) snapshot=16042713088
		Total committed heap usage (bytes)=1576009728
		Peak Map Physical memory (bytes)=362278912
		Peak Map Virtual memory (bytes)=4020256768
		Peak Reduce Physical memory (bytes)=266059776
		Peak Reduce Virtual memory (bytes)=4006027264
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.496 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201007 16:47:10.898" starttime="20201007 16:47:10.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:47:10.898" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:47:10.898" starttime="20201007 16:47:10.898"></status>
</kw>
<status status="PASS" endtime="20201007 16:47:10.899" starttime="20201007 16:46:27.276"></status>
</kw>
<msg timestamp="20201007 16:47:10.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:47:10.899" starttime="20201007 16:46:27.276"></status>
</kw>
<msg timestamp="20201007 16:47:10.900" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-07 16:46:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 16:46:29 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201007 16:47:10.900" starttime="20201007 16:46:27.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201007 16:47:10.900" starttime="20201007 16:47:10.900"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201007 16:47:10.901" critical="yes" starttime="20201007 16:46:27.252"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:47:10.906" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:47:10.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:47:10.914" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 16:47:10.914" starttime="20201007 16:47:10.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:47:10.914" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 16:47:10.915" starttime="20201007 16:47:10.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:47:10.915" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:47:10.915" starttime="20201007 16:47:10.915"></status>
</kw>
<status status="PASS" endtime="20201007 16:47:10.916" starttime="20201007 16:47:10.903"></status>
</kw>
<msg timestamp="20201007 16:47:10.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:47:10.916" starttime="20201007 16:47:10.903"></status>
</kw>
<msg timestamp="20201007 16:47:10.916" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 16:47:10.916" starttime="20201007 16:47:10.903"></status>
</kw>
<msg timestamp="20201007 16:47:10.916" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 16:47:10.916" starttime="20201007 16:47:10.902"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201007 16:47:10.917" level="INFO">${random} = 95</msg>
<status status="PASS" endtime="20201007 16:47:10.917" starttime="20201007 16:47:10.916"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:47:10.921" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:47:10.921" starttime="20201007 16:47:10.920"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:47:10.922" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:47:10.922" starttime="20201007 16:47:10.921"></status>
</kw>
<status status="PASS" endtime="20201007 16:47:10.922" starttime="20201007 16:47:10.920"></status>
</kw>
<msg timestamp="20201007 16:47:10.922" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:47:10.922" starttime="20201007 16:47:10.919"></status>
</kw>
<status status="PASS" endtime="20201007 16:47:10.922" starttime="20201007 16:47:10.919"></status>
</kw>
<msg timestamp="20201007 16:47:10.923" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 16:47:10.923" starttime="20201007 16:47:10.918"></status>
</kw>
<msg timestamp="20201007 16:47:10.923" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 16:47:10.923" starttime="20201007 16:47:10.917"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:47:10.926" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:47:10.926" starttime="20201007 16:47:10.926"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:47:10.927" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:47:10.927" starttime="20201007 16:47:10.926"></status>
</kw>
<status status="PASS" endtime="20201007 16:47:10.927" starttime="20201007 16:47:10.925"></status>
</kw>
<msg timestamp="20201007 16:47:10.927" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:47:10.927" starttime="20201007 16:47:10.925"></status>
</kw>
<status status="PASS" endtime="20201007 16:47:10.928" starttime="20201007 16:47:10.924"></status>
</kw>
<msg timestamp="20201007 16:47:10.928" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201007 16:47:10.928" starttime="20201007 16:47:10.924"></status>
</kw>
<msg timestamp="20201007 16:47:10.928" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201007 16:47:10.928" starttime="20201007 16:47:10.923"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 16:47:10.931" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 16:47:10.932" starttime="20201007 16:47:10.931"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 16:47:10.932" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 16:47:10.932" starttime="20201007 16:47:10.932"></status>
</kw>
<status status="PASS" endtime="20201007 16:47:10.933" starttime="20201007 16:47:10.930"></status>
</kw>
<msg timestamp="20201007 16:47:10.933" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 16:47:10.933" starttime="20201007 16:47:10.930"></status>
</kw>
<status status="PASS" endtime="20201007 16:47:10.933" starttime="20201007 16:47:10.929"></status>
</kw>
<msg timestamp="20201007 16:47:10.933" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-95.txt</msg>
<status status="PASS" endtime="20201007 16:47:10.933" starttime="20201007 16:47:10.929"></status>
</kw>
<msg timestamp="20201007 16:47:10.933" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-95.txt</msg>
<status status="PASS" endtime="20201007 16:47:10.933" starttime="20201007 16:47:10.928"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 16:47:10.936" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-95.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 16:47:48.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 16:47:48.735" level="INFO">${output} = 2020-10-07 16:47:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-10-07 16:47:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201007 16:47:48.735" starttime="20201007 16:47:10.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 16:47:48.736" level="INFO">2020-10-07 16:47:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-10-07 16:47:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-07 16:47:13 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 16:47:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-07 16:47:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-07 16:47:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 16:47:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-60CADCC3CE82-&gt;ee886acd-b7f9-400b-8bda-1be4f172240a
2020-10-07 16:47:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-07 16:47:15 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-07 16:47:15 INFO  JobSubmitter:202 - number of splits:3
2020-10-07 16:47:15 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-07 16:47:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602089101348_0002
2020-10-07 16:47:15 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-07 16:47:15 INFO  Configuration:2752 - resource-types.xml not found
2020-10-07 16:47:15 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-07 16:47:15 INFO  YarnClientImpl:311 - Submitted application application_1602089101348_0002
2020-10-07 16:47:15 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602089101348_0002/
2020-10-07 16:47:15 INFO  Job:1619 - Running job: job_1602089101348_0002
2020-10-07 16:47:24 INFO  Job:1640 - Job job_1602089101348_0002 running in uber mode : false
2020-10-07 16:47:24 INFO  Job:1647 -  map 0% reduce 0%
2020-10-07 16:47:31 INFO  Job:1647 -  map 33% reduce 0%
2020-10-07 16:47:37 INFO  Job:1647 -  map 67% reduce 0%
2020-10-07 16:47:43 INFO  Job:1647 -  map 100% reduce 0%
2020-10-07 16:47:47 INFO  Job:1647 -  map 100% reduce 100%
2020-10-07 16:47:48 INFO  Job:1658 - Job job_1602089101348_0002 completed successfully
2020-10-07 16:47:48 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1106021
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43276
		Total time spent by all reduces in occupied slots (ms)=15348
		Total time spent by all map tasks (ms)=10819
		Total time spent by all reduce tasks (ms)=3837
		Total vcore-milliseconds taken by all map tasks=10819
		Total vcore-milliseconds taken by all reduce tasks=3837
		Total megabyte-milliseconds taken by all map tasks=44314624
		Total megabyte-milliseconds taken by all reduce tasks=15716352
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=602
		CPU time spent (ms)=7860
		Physical memory (bytes) snapshot=1443348480
		Virtual memory (bytes) snapshot=16052080640
		Total committed heap usage (bytes)=1719664640
		Peak Map Physical memory (bytes)=364843008
		Peak Map Virtual memory (bytes)=4024000512
		Peak Reduce Physical memory (bytes)=374272000
		Peak Reduce Virtual memory (bytes)=4019666944
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201007 16:47:48.736" starttime="20201007 16:47:48.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 16:47:48.737" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 16:47:48.737" starttime="20201007 16:47:48.736"></status>
</kw>
<status status="PASS" endtime="20201007 16:47:48.737" starttime="20201007 16:47:10.935"></status>
</kw>
<msg timestamp="20201007 16:47:48.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 16:47:48.738" starttime="20201007 16:47:10.934"></status>
</kw>
<msg timestamp="20201007 16:47:48.738" level="INFO">${output} = 2020-10-07 16:47:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-10-07 16:47:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201007 16:47:48.738" starttime="20201007 16:47:10.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201007 16:47:48.739" starttime="20201007 16:47:48.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201007 16:47:48.739" starttime="20201007 16:47:48.739"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201007 16:47:48.740" critical="yes" starttime="20201007 16:47:10.901"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201007 16:47:48.741" starttime="20201007 16:46:27.201"></status>
</suite>
<status status="PASS" elapsedtime="217136" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="620439" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
