<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201007 17:17:03.898" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:12:32.877" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:12:45.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:12:45.227" level="INFO">${output} = 2020-10-07 17:12:34,809 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-07 17:12:34,997 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201007 17:12:45.227" starttime="20201007 17:12:32.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:12:45.228" level="INFO">2020-10-07 17:12:34,809 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-07 17:12:34,997 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-07 17:12:34,997 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-07 17:12:37,905 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-07 17:12:39,434 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-07 17:12:39,436 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-10-07 17:12:39,436 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-10-07 17:12:39,436 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-10-07 17:12:39,437 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-07 17:12:39,437 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-07 17:12:39,437 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-10-07 17:12:39,440 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-07 17:12:39,464 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-07 17:12:39,507 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-60350, with testuser/scm@EXAMPLE.COM as owner.
2020-10-07 17:12:40,253 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-60350/bucket-0-64132, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-07 17:12:40,468 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-07 17:12:41,469 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-07 17:12:42,469 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-07 17:12:42,631 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-07 17:12:43,470 [Thread-9] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,703
Average Time spent in bucket creation: 00:00:00,201
Average Time spent in key creation: 00:00:01,328
Average Time spent in key write: 00:00:01,055
Total bytes written: 10240
Total Execution time: 00:00:09,735
***************************************************</msg>
<status status="PASS" endtime="20201007 17:12:45.228" starttime="20201007 17:12:45.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:12:45.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:12:45.229" starttime="20201007 17:12:45.228"></status>
</kw>
<status status="PASS" endtime="20201007 17:12:45.229" starttime="20201007 17:12:32.872"></status>
</kw>
<msg timestamp="20201007 17:12:45.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:12:45.229" starttime="20201007 17:12:32.872"></status>
</kw>
<msg timestamp="20201007 17:12:45.230" level="INFO">${result} = 2020-10-07 17:12:34,809 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-07 17:12:34,997 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201007 17:12:45.230" starttime="20201007 17:12:32.871"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201007 17:12:45.231" starttime="20201007 17:12:45.231"></status>
</kw>
<status status="PASS" endtime="20201007 17:12:45.231" starttime="20201007 17:12:45.230"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201007 17:12:45.231" critical="yes" starttime="20201007 17:12:32.870"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:12:45.245" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:12:54.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:12:54.127" level="INFO">${output} = 2020-10-07 17:12:47,066 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-07 17:12:47,269 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201007 17:12:54.127" starttime="20201007 17:12:45.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:12:54.130" level="INFO">2020-10-07 17:12:47,066 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-07 17:12:47,269 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-07 17:12:47,269 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-07 17:12:47,465 [main] INFO freon.BaseFreonGenerator: Executing test with prefix gfknqt1n4v
2020-10-07 17:12:47,475 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-07 17:12:48,500 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-07 17:12:48,666 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-07 17:12:49,226 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-10-07 17:12:49,284 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-07 17:12:49,501 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-07 17:12:49,982 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-07 17:12:50,389 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 17:12:50,390 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-57AF5F633F9B-&gt;ff88c072-2d59-4f27-a2bf-a6fed56981ea
2020-10-07 17:12:50,392 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-07 17:12:50,503 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-07 17:12:51,504 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-07 17:12:52,504 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-07 17:12:53,505 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-07 17:12:53,653 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3458.162073, max=3458.162073, mean=3458.162073, stddev=0.0, median=3458.162073, p75=3458.162073, p95=3458.162073, p98=3458.162073, p99=3458.162073, p999=3458.162073, mean_rate=0.23205754343714188, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-07 17:12:53,657 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-10-07 17:12:53,657 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-07 17:12:53,657 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201007 17:12:54.130" starttime="20201007 17:12:54.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:12:54.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:12:54.131" starttime="20201007 17:12:54.130"></status>
</kw>
<status status="PASS" endtime="20201007 17:12:54.131" starttime="20201007 17:12:45.234"></status>
</kw>
<msg timestamp="20201007 17:12:54.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:12:54.131" starttime="20201007 17:12:45.234"></status>
</kw>
<msg timestamp="20201007 17:12:54.132" level="INFO">${result} = 2020-10-07 17:12:47,066 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-07 17:12:47,269 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201007 17:12:54.132" starttime="20201007 17:12:45.233"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201007 17:12:54.133" starttime="20201007 17:12:54.133"></status>
</kw>
<status status="PASS" endtime="20201007 17:12:54.133" starttime="20201007 17:12:54.132"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201007 17:12:54.133" critical="yes" starttime="20201007 17:12:45.232"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:12:54.139" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:12:59.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:12:59.572" level="INFO">${output} = 2020-10-07 17:12:56,014 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-07 17:12:56,201 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201007 17:12:59.572" starttime="20201007 17:12:54.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:12:59.573" level="INFO">2020-10-07 17:12:56,014 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-07 17:12:56,201 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-07 17:12:56,201 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-07 17:12:56,384 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xyxacmgyxi
2020-10-07 17:12:56,403 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-07 17:12:57,405 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-07 17:12:57,560 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-07 17:12:58,231 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-07 17:12:58,405 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-07 17:12:59,407 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-07 17:12:59,552 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=395.778229, max=395.778229, mean=395.778229, stddev=0.0, median=395.778229, p75=395.778229, p95=395.778229, p98=395.778229, p99=395.778229, p999=395.778229, mean_rate=0.6788477417376011, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-07 17:12:59,555 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-07 17:12:59,556 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-07 17:12:59,556 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201007 17:12:59.573" starttime="20201007 17:12:59.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:12:59.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:12:59.574" starttime="20201007 17:12:59.573"></status>
</kw>
<status status="PASS" endtime="20201007 17:12:59.574" starttime="20201007 17:12:54.136"></status>
</kw>
<msg timestamp="20201007 17:12:59.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:12:59.574" starttime="20201007 17:12:54.136"></status>
</kw>
<msg timestamp="20201007 17:12:59.575" level="INFO">${result} = 2020-10-07 17:12:56,014 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-07 17:12:56,201 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201007 17:12:59.575" starttime="20201007 17:12:54.135"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201007 17:12:59.576" starttime="20201007 17:12:59.575"></status>
</kw>
<status status="PASS" endtime="20201007 17:12:59.576" starttime="20201007 17:12:59.575"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201007 17:12:59.576" critical="yes" starttime="20201007 17:12:54.134"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:12:59.582" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:13:04.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:13:04.478" level="INFO">${output} = 2020-10-07 17:13:01,403 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-07 17:13:01,656 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201007 17:13:04.478" starttime="20201007 17:12:59.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:13:04.479" level="INFO">2020-10-07 17:13:01,403 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-07 17:13:01,656 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-07 17:13:01,657 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-07 17:13:01,833 [main] INFO freon.BaseFreonGenerator: Executing test with prefix hoyxxvxrbg
2020-10-07 17:13:01,853 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-07 17:13:02,872 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-07 17:13:02,911 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-07 17:13:03,501 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over {om1=nodeId=om1,nodeAddress=om1:9862, om3=nodeId=om3,nodeAddress=om3:9862, om2=nodeId=om2,nodeAddress=om2:9862} after 1 failover attempts. Trying to failover immediately.
2020-10-07 17:13:03,873 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-07 17:13:04,434 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=243.17736, max=243.17736, mean=243.17736, stddev=0.0, median=243.17736, p75=243.17736, p95=243.17736, p98=243.17736, p99=243.17736, p999=243.17736, mean_rate=0.8934242582636799, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-07 17:13:04,440 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-07 17:13:04,443 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-07 17:13:04,443 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201007 17:13:04.479" starttime="20201007 17:13:04.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:13:04.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:13:04.480" starttime="20201007 17:13:04.480"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:04.480" starttime="20201007 17:12:59.579"></status>
</kw>
<msg timestamp="20201007 17:13:04.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:13:04.481" starttime="20201007 17:12:59.579"></status>
</kw>
<msg timestamp="20201007 17:13:04.481" level="INFO">${result} = 2020-10-07 17:13:01,403 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-07 17:13:01,656 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201007 17:13:04.481" starttime="20201007 17:12:59.578"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201007 17:13:04.482" starttime="20201007 17:13:04.482"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:04.483" starttime="20201007 17:13:04.481"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201007 17:13:04.483" critical="yes" starttime="20201007 17:12:59.577"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201007 17:13:04.484" starttime="20201007 17:12:32.839"></status>
</suite>
<status status="PASS" endtime="20201007 17:13:04.488" starttime="20201007 17:12:32.793"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:12:24.812" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:12:24.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:12:24.824" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:12:24.824" starttime="20201007 17:12:24.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:12:24.825" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:12:24.825" starttime="20201007 17:12:24.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:12:24.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:12:24.826" starttime="20201007 17:12:24.825"></status>
</kw>
<status status="PASS" endtime="20201007 17:12:24.826" starttime="20201007 17:12:24.800"></status>
</kw>
<msg timestamp="20201007 17:12:24.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:12:24.827" starttime="20201007 17:12:24.800"></status>
</kw>
<msg timestamp="20201007 17:12:24.827" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:12:24.827" starttime="20201007 17:12:24.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:12:24.828" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:12:24.828" starttime="20201007 17:12:24.827"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:12:24.838" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:12:24.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:12:24.858" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:12:24.858" starttime="20201007 17:12:24.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:12:24.863" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:12:24.863" starttime="20201007 17:12:24.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:12:24.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:12:24.864" starttime="20201007 17:12:24.863"></status>
</kw>
<status status="PASS" endtime="20201007 17:12:24.864" starttime="20201007 17:12:24.829"></status>
</kw>
<msg timestamp="20201007 17:12:24.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:12:24.864" starttime="20201007 17:12:24.829"></status>
</kw>
<status status="PASS" endtime="20201007 17:12:24.864" starttime="20201007 17:12:24.828"></status>
</kw>
<status status="PASS" endtime="20201007 17:12:24.864" starttime="20201007 17:12:24.828"></status>
</kw>
<status status="PASS" endtime="20201007 17:12:24.865" starttime="20201007 17:12:24.795"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:12:24.865" critical="yes" starttime="20201007 17:12:24.794"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201007 17:12:24.870" starttime="20201007 17:12:24.602"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201007 17:13:10.109" level="INFO">${random} = 82752</msg>
<status status="PASS" endtime="20201007 17:13:10.109" starttime="20201007 17:13:10.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201007 17:13:10.110" level="INFO">${source} = 82752-source</msg>
<status status="PASS" endtime="20201007 17:13:10.110" starttime="20201007 17:13:10.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201007 17:13:10.111" level="INFO">${target} = 82752-target</msg>
<status status="PASS" endtime="20201007 17:13:10.111" starttime="20201007 17:13:10.110"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:13:10.118" level="INFO">Running command 'ozone sh volume create 82752-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:13:14.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:13:14.775" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:13:14.775" starttime="20201007 17:13:10.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:13:14.776" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:13:14.777" starttime="20201007 17:13:14.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:13:14.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:13:14.777" starttime="20201007 17:13:14.777"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:14.777" starttime="20201007 17:13:10.112"></status>
</kw>
<msg timestamp="20201007 17:13:14.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:13:14.778" starttime="20201007 17:13:10.112"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:14.778" starttime="20201007 17:13:10.111"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:13:14.782" level="INFO">Running command 'ozone sh volume create 82752-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:13:18.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:13:18.780" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:13:18.780" starttime="20201007 17:13:14.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:13:18.782" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:13:18.782" starttime="20201007 17:13:18.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:13:18.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:13:18.782" starttime="20201007 17:13:18.782"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:18.783" starttime="20201007 17:13:14.779"></status>
</kw>
<msg timestamp="20201007 17:13:18.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:13:18.783" starttime="20201007 17:13:14.779"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:18.783" starttime="20201007 17:13:14.778"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:13:18.788" level="INFO">Running command 'ozone sh bucket create 82752-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:13:22.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:13:22.914" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:13:22.915" starttime="20201007 17:13:18.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:13:22.917" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:13:22.917" starttime="20201007 17:13:22.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:13:22.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:13:22.918" starttime="20201007 17:13:22.917"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:22.918" starttime="20201007 17:13:18.785"></status>
</kw>
<msg timestamp="20201007 17:13:22.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:13:22.919" starttime="20201007 17:13:18.785"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:22.919" starttime="20201007 17:13:18.784"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:13:22.922" level="INFO">Running command 'ozone sh key put 82752-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:13:29.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:13:29.182" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:13:29.182" starttime="20201007 17:13:22.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:13:29.183" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:13:29.183" starttime="20201007 17:13:29.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:13:29.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:13:29.183" starttime="20201007 17:13:29.183"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:29.184" starttime="20201007 17:13:22.920"></status>
</kw>
<msg timestamp="20201007 17:13:29.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:13:29.184" starttime="20201007 17:13:22.920"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:29.184" starttime="20201007 17:13:22.919"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:13:29.188" level="INFO">Running command 'ozone sh bucket create 82752-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:13:32.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:13:32.988" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:13:32.988" starttime="20201007 17:13:29.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:13:32.989" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:13:32.990" starttime="20201007 17:13:32.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:13:32.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:13:32.991" starttime="20201007 17:13:32.990"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:32.991" starttime="20201007 17:13:29.185"></status>
</kw>
<msg timestamp="20201007 17:13:32.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:13:32.992" starttime="20201007 17:13:29.185"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:32.992" starttime="20201007 17:13:29.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:13:32.996" level="INFO">Running command 'ozone sh bucket link 82752-source/readable-bucket 82752-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:13:36.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:13:36.963" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:13:36.963" starttime="20201007 17:13:32.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:13:36.965" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:13:36.965" starttime="20201007 17:13:36.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:13:36.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:13:36.965" starttime="20201007 17:13:36.965"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:36.966" starttime="20201007 17:13:32.993"></status>
</kw>
<msg timestamp="20201007 17:13:36.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:13:36.966" starttime="20201007 17:13:32.993"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:36.966" starttime="20201007 17:13:32.992"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:13:36.969" level="INFO">Running command 'ozone sh bucket link 82752-source/readable-bucket 82752-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:13:40.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:13:40.796" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:13:40.796" starttime="20201007 17:13:36.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:13:40.797" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:13:40.797" starttime="20201007 17:13:40.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:13:40.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:13:40.798" starttime="20201007 17:13:40.797"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:40.798" starttime="20201007 17:13:36.967"></status>
</kw>
<msg timestamp="20201007 17:13:40.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:13:40.798" starttime="20201007 17:13:36.967"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:40.798" starttime="20201007 17:13:36.966"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:13:40.803" level="INFO">Running command 'ozone sh bucket link 82752-source/unreadable-bucket 82752-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:13:44.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:13:44.798" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:13:44.798" starttime="20201007 17:13:40.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:13:44.799" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:13:44.799" starttime="20201007 17:13:44.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:13:44.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:13:44.800" starttime="20201007 17:13:44.799"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:44.800" starttime="20201007 17:13:40.799"></status>
</kw>
<msg timestamp="20201007 17:13:44.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:13:44.800" starttime="20201007 17:13:40.799"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:44.800" starttime="20201007 17:13:40.798"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:13:44.805" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 82752-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:13:48.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:13:48.681" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:13:48.681" starttime="20201007 17:13:44.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:13:48.682" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201007 17:13:48.682" starttime="20201007 17:13:48.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:13:48.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:13:48.683" starttime="20201007 17:13:48.682"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:48.683" starttime="20201007 17:13:44.801"></status>
</kw>
<msg timestamp="20201007 17:13:48.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:13:48.683" starttime="20201007 17:13:44.801"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:48.683" starttime="20201007 17:13:44.800"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:13:48.687" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 82752-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:13:52.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:13:52.637" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:13:52.637" starttime="20201007 17:13:48.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:13:52.638" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201007 17:13:52.638" starttime="20201007 17:13:52.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:13:52.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:13:52.639" starttime="20201007 17:13:52.638"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:52.639" starttime="20201007 17:13:48.684"></status>
</kw>
<msg timestamp="20201007 17:13:52.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:13:52.640" starttime="20201007 17:13:48.684"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:52.640" starttime="20201007 17:13:48.684"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:13:52.644" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 82752-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:13:56.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:13:56.698" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:13:56.699" starttime="20201007 17:13:52.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:13:56.700" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201007 17:13:56.700" starttime="20201007 17:13:56.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:13:56.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:13:56.700" starttime="20201007 17:13:56.700"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:56.701" starttime="20201007 17:13:52.641"></status>
</kw>
<msg timestamp="20201007 17:13:56.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:13:56.701" starttime="20201007 17:13:52.641"></status>
</kw>
<status status="PASS" endtime="20201007 17:13:56.701" starttime="20201007 17:13:52.640"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:13:56.706" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 82752-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:00.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:00.926" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:14:00.927" starttime="20201007 17:13:56.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:00.928" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201007 17:14:00.928" starttime="20201007 17:14:00.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:00.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:00.928" starttime="20201007 17:14:00.928"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:00.929" starttime="20201007 17:13:56.702"></status>
</kw>
<msg timestamp="20201007 17:14:00.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:00.929" starttime="20201007 17:13:56.702"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:00.929" starttime="20201007 17:13:56.702"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:00.934" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 82752-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:05.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:05.156" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:14:05.156" starttime="20201007 17:14:00.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:05.157" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201007 17:14:05.157" starttime="20201007 17:14:05.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:05.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:05.158" starttime="20201007 17:14:05.157"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:05.158" starttime="20201007 17:14:00.931"></status>
</kw>
<msg timestamp="20201007 17:14:05.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:05.158" starttime="20201007 17:14:00.930"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:05.159" starttime="20201007 17:14:00.930"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:05.159" starttime="20201007 17:13:18.784"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:05.159" starttime="20201007 17:13:18.783"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:05.159" starttime="20201007 17:13:10.108"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:05.165" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:05.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:05.169" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:14:05.169" starttime="20201007 17:14:05.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:05.170" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:14:05.170" starttime="20201007 17:14:05.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:05.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:05.171" starttime="20201007 17:14:05.170"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:05.172" starttime="20201007 17:14:05.163"></status>
</kw>
<msg timestamp="20201007 17:14:05.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:05.172" starttime="20201007 17:14:05.162"></status>
</kw>
<msg timestamp="20201007 17:14:05.172" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:14:05.172" starttime="20201007 17:14:05.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:14:05.173" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:14:05.174" starttime="20201007 17:14:05.172"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:05.179" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:05.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:05.195" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:14:05.196" starttime="20201007 17:14:05.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:05.197" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:14:05.197" starttime="20201007 17:14:05.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:05.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:05.198" starttime="20201007 17:14:05.197"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:05.198" starttime="20201007 17:14:05.175"></status>
</kw>
<msg timestamp="20201007 17:14:05.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:05.198" starttime="20201007 17:14:05.175"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:05.198" starttime="20201007 17:14:05.174"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:05.199" starttime="20201007 17:14:05.174"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:05.199" starttime="20201007 17:14:05.161"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:05.199" starttime="20201007 17:14:05.160"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:05.203" level="INFO">Running command 'ozone sh bucket link 82752-source/no-such-bucket 82752-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:09.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:09.167" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:14:09.167" starttime="20201007 17:14:05.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:09.168" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:14:09.168" starttime="20201007 17:14:09.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:09.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:09.169" starttime="20201007 17:14:09.169"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:09.170" starttime="20201007 17:14:05.200"></status>
</kw>
<msg timestamp="20201007 17:14:09.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:09.170" starttime="20201007 17:14:05.200"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:09.170" starttime="20201007 17:14:05.199"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:09.173" level="INFO">Running command 'ozone sh key list 82752-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:13.039" level="INFO">${rc} = 255</msg>
<msg timestamp="20201007 17:14:13.040" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:14:13.040" starttime="20201007 17:14:09.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:13.041" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201007 17:14:13.041" starttime="20201007 17:14:13.040"></status>
</kw>
<msg timestamp="20201007 17:14:13.041" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:14:13.041" starttime="20201007 17:14:09.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201007 17:14:13.042" starttime="20201007 17:14:13.041"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:14:13.042" critical="yes" starttime="20201007 17:14:05.159"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:13.051" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:13.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:13.052" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:14:13.053" starttime="20201007 17:14:13.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:13.054" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:14:13.054" starttime="20201007 17:14:13.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:13.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:13.055" starttime="20201007 17:14:13.054"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:13.055" starttime="20201007 17:14:13.047"></status>
</kw>
<msg timestamp="20201007 17:14:13.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:13.055" starttime="20201007 17:14:13.046"></status>
</kw>
<msg timestamp="20201007 17:14:13.055" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:14:13.055" starttime="20201007 17:14:13.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:14:13.056" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:14:13.056" starttime="20201007 17:14:13.056"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:13.062" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:13.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:13.076" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:14:13.076" starttime="20201007 17:14:13.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:13.077" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:14:13.077" starttime="20201007 17:14:13.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:13.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:13.078" starttime="20201007 17:14:13.077"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:13.078" starttime="20201007 17:14:13.058"></status>
</kw>
<msg timestamp="20201007 17:14:13.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:13.078" starttime="20201007 17:14:13.057"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:13.079" starttime="20201007 17:14:13.057"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:13.079" starttime="20201007 17:14:13.056"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:13.079" starttime="20201007 17:14:13.045"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:13.079" starttime="20201007 17:14:13.044"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:13.083" level="INFO">Running command 'ozone sh bucket link 82752-source/bucket1 82752-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:17.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:17.537" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:14:17.537" starttime="20201007 17:14:13.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:17.540" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:14:17.540" starttime="20201007 17:14:17.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:17.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:17.541" starttime="20201007 17:14:17.540"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:17.542" starttime="20201007 17:14:13.080"></status>
</kw>
<msg timestamp="20201007 17:14:17.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:17.542" starttime="20201007 17:14:13.080"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:17.543" starttime="20201007 17:14:13.079"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:17.550" level="INFO">Running command 'ozone sh bucket create 82752-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:21.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:21.853" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:14:21.853" starttime="20201007 17:14:17.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:21.854" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:14:21.854" starttime="20201007 17:14:21.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:21.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:21.855" starttime="20201007 17:14:21.854"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:21.855" starttime="20201007 17:14:17.545"></status>
</kw>
<msg timestamp="20201007 17:14:21.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:21.856" starttime="20201007 17:14:17.544"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:21.856" starttime="20201007 17:14:17.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:21.860" level="INFO">Running command 'ozone sh key put 82752-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:28.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:28.693" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:14:28.693" starttime="20201007 17:14:21.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:28.694" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:14:28.694" starttime="20201007 17:14:28.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:28.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:28.695" starttime="20201007 17:14:28.695"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:28.696" starttime="20201007 17:14:21.858"></status>
</kw>
<msg timestamp="20201007 17:14:28.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:28.696" starttime="20201007 17:14:21.857"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:28.696" starttime="20201007 17:14:21.856"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201007 17:14:28.698" level="INFO">${postfix} = 09684</msg>
<status status="PASS" endtime="20201007 17:14:28.698" starttime="20201007 17:14:28.698"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201007 17:14:28.699" level="INFO">${tmpfile} = /tmp/tempkey-09684</msg>
<status status="PASS" endtime="20201007 17:14:28.699" starttime="20201007 17:14:28.699"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:28.704" level="INFO">Running command 'ozone sh key get -f 82752-target/link1/key1 /tmp/tempkey-09684 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:34.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:34.888" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:14:34.888" starttime="20201007 17:14:28.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:34.889" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:14:34.889" starttime="20201007 17:14:34.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:34.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:34.890" starttime="20201007 17:14:34.889"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:34.890" starttime="20201007 17:14:28.700"></status>
</kw>
<msg timestamp="20201007 17:14:34.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:34.890" starttime="20201007 17:14:28.700"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:34.891" starttime="20201007 17:14:28.699"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201007 17:14:34.894" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-09684 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:34.895" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201007 17:14:34.895" starttime="20201007 17:14:34.891"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:34.901" level="INFO">Running command 'rm -f /tmp/tempkey-09684 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:34.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:34.902" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:14:34.902" starttime="20201007 17:14:34.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:34.903" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:14:34.903" starttime="20201007 17:14:34.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:34.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:34.904" starttime="20201007 17:14:34.903"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:34.904" starttime="20201007 17:14:34.897"></status>
</kw>
<msg timestamp="20201007 17:14:34.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:34.904" starttime="20201007 17:14:34.896"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:34.905" starttime="20201007 17:14:34.896"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 17:14:34.905" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201007 17:14:34.905" starttime="20201007 17:14:34.905"></status>
</kw>
<msg timestamp="20201007 17:14:34.906" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201007 17:14:34.906" starttime="20201007 17:14:28.697"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201007 17:14:34.906" starttime="20201007 17:14:34.906"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:34.906" starttime="20201007 17:14:28.696"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:14:34.907" critical="yes" starttime="20201007 17:14:13.043"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:34.914" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:34.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:34.916" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:14:34.916" starttime="20201007 17:14:34.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:34.917" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:14:34.917" starttime="20201007 17:14:34.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:34.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:34.918" starttime="20201007 17:14:34.917"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:34.918" starttime="20201007 17:14:34.910"></status>
</kw>
<msg timestamp="20201007 17:14:34.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:34.918" starttime="20201007 17:14:34.910"></status>
</kw>
<msg timestamp="20201007 17:14:34.918" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:14:34.918" starttime="20201007 17:14:34.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:14:34.919" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:14:34.919" starttime="20201007 17:14:34.918"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:34.924" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:34.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:34.942" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:14:34.942" starttime="20201007 17:14:34.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:34.944" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:14:34.944" starttime="20201007 17:14:34.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:34.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:34.945" starttime="20201007 17:14:34.944"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:34.946" starttime="20201007 17:14:34.921"></status>
</kw>
<msg timestamp="20201007 17:14:34.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:34.947" starttime="20201007 17:14:34.920"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:34.948" starttime="20201007 17:14:34.920"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:34.948" starttime="20201007 17:14:34.919"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:34.949" starttime="20201007 17:14:34.909"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:34.949" starttime="20201007 17:14:34.909"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:34.955" level="INFO">Running command 'ozone sh key put 82752-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:41.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:41.275" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:14:41.275" starttime="20201007 17:14:34.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:41.276" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:14:41.276" starttime="20201007 17:14:41.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:41.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:41.277" starttime="20201007 17:14:41.277"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:41.277" starttime="20201007 17:14:34.951"></status>
</kw>
<msg timestamp="20201007 17:14:41.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:41.278" starttime="20201007 17:14:34.951"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:41.278" starttime="20201007 17:14:34.949"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201007 17:14:41.282" level="INFO">${postfix} = 72843</msg>
<status status="PASS" endtime="20201007 17:14:41.283" starttime="20201007 17:14:41.281"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201007 17:14:41.285" level="INFO">${tmpfile} = /tmp/tempkey-72843</msg>
<status status="PASS" endtime="20201007 17:14:41.285" starttime="20201007 17:14:41.283"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:41.295" level="INFO">Running command 'ozone sh key get -f 82752-source/bucket1/key2 /tmp/tempkey-72843 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:47.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:47.203" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:14:47.203" starttime="20201007 17:14:41.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:47.204" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:14:47.205" starttime="20201007 17:14:47.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:47.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:47.205" starttime="20201007 17:14:47.205"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:47.206" starttime="20201007 17:14:41.290"></status>
</kw>
<msg timestamp="20201007 17:14:47.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:47.206" starttime="20201007 17:14:41.289"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:47.206" starttime="20201007 17:14:41.286"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201007 17:14:47.209" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-72843 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:47.212" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201007 17:14:47.212" starttime="20201007 17:14:47.206"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:47.218" level="INFO">Running command 'rm -f /tmp/tempkey-72843 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:47.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:47.220" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:14:47.220" starttime="20201007 17:14:47.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:47.221" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:14:47.221" starttime="20201007 17:14:47.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:47.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:47.222" starttime="20201007 17:14:47.221"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:47.222" starttime="20201007 17:14:47.213"></status>
</kw>
<msg timestamp="20201007 17:14:47.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:47.222" starttime="20201007 17:14:47.213"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:47.223" starttime="20201007 17:14:47.212"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 17:14:47.223" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201007 17:14:47.223" starttime="20201007 17:14:47.223"></status>
</kw>
<msg timestamp="20201007 17:14:47.224" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201007 17:14:47.224" starttime="20201007 17:14:41.281"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201007 17:14:47.224" starttime="20201007 17:14:47.224"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:47.224" starttime="20201007 17:14:41.278"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:14:47.225" critical="yes" starttime="20201007 17:14:34.908"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:47.232" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:47.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:47.235" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:14:47.235" starttime="20201007 17:14:47.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:47.237" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:14:47.237" starttime="20201007 17:14:47.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:47.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:47.238" starttime="20201007 17:14:47.237"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:47.238" starttime="20201007 17:14:47.229"></status>
</kw>
<msg timestamp="20201007 17:14:47.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:47.238" starttime="20201007 17:14:47.228"></status>
</kw>
<msg timestamp="20201007 17:14:47.238" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:14:47.238" starttime="20201007 17:14:47.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:14:47.239" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:14:47.239" starttime="20201007 17:14:47.239"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:47.245" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:47.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:47.279" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:14:47.279" starttime="20201007 17:14:47.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:47.282" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:14:47.283" starttime="20201007 17:14:47.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:47.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:47.283" starttime="20201007 17:14:47.283"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:47.284" starttime="20201007 17:14:47.241"></status>
</kw>
<msg timestamp="20201007 17:14:47.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:47.284" starttime="20201007 17:14:47.241"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:47.284" starttime="20201007 17:14:47.240"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:47.284" starttime="20201007 17:14:47.240"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:47.285" starttime="20201007 17:14:47.227"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:47.285" starttime="20201007 17:14:47.226"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:47.291" level="INFO">Running command 'ozone sh key list 82752-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:51.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:51.372" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201007 17:14:51.372" starttime="20201007 17:14:47.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:51.373" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201007 17:14:51.373" starttime="20201007 17:14:51.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:51.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:51.374" starttime="20201007 17:14:51.373"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:51.374" starttime="20201007 17:14:47.286"></status>
</kw>
<msg timestamp="20201007 17:14:51.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:51.375" starttime="20201007 17:14:47.286"></status>
</kw>
<msg timestamp="20201007 17:14:51.375" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201007 17:14:51.375" starttime="20201007 17:14:47.285"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:51.380" level="INFO">Running command 'ozone sh key list 82752-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:55.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:55.637" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201007 17:14:55.637" starttime="20201007 17:14:51.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:55.639" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201007 17:14:55.639" starttime="20201007 17:14:55.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:55.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:55.640" starttime="20201007 17:14:55.639"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:55.640" starttime="20201007 17:14:51.376"></status>
</kw>
<msg timestamp="20201007 17:14:55.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:55.640" starttime="20201007 17:14:51.376"></status>
</kw>
<msg timestamp="20201007 17:14:55.641" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201007 17:14:55.641" starttime="20201007 17:14:51.375"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201007 17:14:55.642" starttime="20201007 17:14:55.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201007 17:14:55.642" starttime="20201007 17:14:55.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201007 17:14:55.643" starttime="20201007 17:14:55.642"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:14:55.643" critical="yes" starttime="20201007 17:14:47.226"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:55.651" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:55.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:55.654" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:14:55.654" starttime="20201007 17:14:55.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:55.656" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:14:55.656" starttime="20201007 17:14:55.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:55.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:55.657" starttime="20201007 17:14:55.656"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:55.657" starttime="20201007 17:14:55.647"></status>
</kw>
<msg timestamp="20201007 17:14:55.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:55.657" starttime="20201007 17:14:55.647"></status>
</kw>
<msg timestamp="20201007 17:14:55.658" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:14:55.658" starttime="20201007 17:14:55.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:14:55.658" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:14:55.659" starttime="20201007 17:14:55.658"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:55.664" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:55.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:55.678" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:14:55.678" starttime="20201007 17:14:55.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:55.679" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:14:55.679" starttime="20201007 17:14:55.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:55.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:55.680" starttime="20201007 17:14:55.679"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:55.680" starttime="20201007 17:14:55.660"></status>
</kw>
<msg timestamp="20201007 17:14:55.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:55.681" starttime="20201007 17:14:55.660"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:55.681" starttime="20201007 17:14:55.659"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:55.681" starttime="20201007 17:14:55.659"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:55.681" starttime="20201007 17:14:55.646"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:55.681" starttime="20201007 17:14:55.645"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:55.688" level="INFO">Running command 'ozone sh key delete 82752-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:14:59.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:14:59.775" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:14:59.775" starttime="20201007 17:14:55.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:14:59.779" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:14:59.779" starttime="20201007 17:14:59.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:14:59.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:14:59.780" starttime="20201007 17:14:59.779"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:59.780" starttime="20201007 17:14:55.682"></status>
</kw>
<msg timestamp="20201007 17:14:59.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:14:59.780" starttime="20201007 17:14:55.682"></status>
</kw>
<status status="PASS" endtime="20201007 17:14:59.781" starttime="20201007 17:14:55.681"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:14:59.796" level="INFO">Running command 'ozone sh key list 82752-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:04.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:04.464" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201007 17:15:04.464" starttime="20201007 17:14:59.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:04.465" level="INFO">key1</msg>
<status status="PASS" endtime="20201007 17:15:04.465" starttime="20201007 17:15:04.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:04.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:04.466" starttime="20201007 17:15:04.465"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:04.466" starttime="20201007 17:14:59.782"></status>
</kw>
<msg timestamp="20201007 17:15:04.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:04.467" starttime="20201007 17:14:59.782"></status>
</kw>
<msg timestamp="20201007 17:15:04.467" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201007 17:15:04.467" starttime="20201007 17:14:59.781"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201007 17:15:04.468" starttime="20201007 17:15:04.467"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:15:04.468" critical="yes" starttime="20201007 17:14:55.644"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:04.475" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:04.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:04.477" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:15:04.477" starttime="20201007 17:15:04.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:04.478" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:15:04.478" starttime="20201007 17:15:04.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:04.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:04.479" starttime="20201007 17:15:04.478"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:04.479" starttime="20201007 17:15:04.471"></status>
</kw>
<msg timestamp="20201007 17:15:04.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:04.480" starttime="20201007 17:15:04.471"></status>
</kw>
<msg timestamp="20201007 17:15:04.480" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:15:04.480" starttime="20201007 17:15:04.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:15:04.481" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:15:04.481" starttime="20201007 17:15:04.480"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:04.487" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:04.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:04.504" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:15:04.504" starttime="20201007 17:15:04.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:04.506" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:15:04.506" starttime="20201007 17:15:04.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:04.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:04.506" starttime="20201007 17:15:04.506"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:04.507" starttime="20201007 17:15:04.482"></status>
</kw>
<msg timestamp="20201007 17:15:04.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:04.507" starttime="20201007 17:15:04.482"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:04.507" starttime="20201007 17:15:04.481"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:04.507" starttime="20201007 17:15:04.481"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:04.508" starttime="20201007 17:15:04.470"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:04.508" starttime="20201007 17:15:04.469"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:04.514" level="INFO">Running command 'ozone sh bucket list 82752-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:08.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:08.813" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:15:08.813" starttime="20201007 17:15:04.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:08.815" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "82752-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T17:14:08.930Z",
  "modificationTime" : "2020-10-07T17:14:08.930Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "82752-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "82752-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T17:13:44.494Z",
  "modificationTime" : "2020-10-07T17:13:44.494Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "82752-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "82752-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T17:14:17.352Z",
  "modificationTime" : "2020-10-07T17:14:17.352Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "82752-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "82752-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T17:13:36.767Z",
  "modificationTime" : "2020-10-07T17:13:36.767Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "82752-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "82752-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T17:13:40.668Z",
  "modificationTime" : "2020-10-07T17:13:40.668Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "82752-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201007 17:15:08.815" starttime="20201007 17:15:08.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:08.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:08.820" starttime="20201007 17:15:08.819"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:08.820" starttime="20201007 17:15:04.509"></status>
</kw>
<msg timestamp="20201007 17:15:08.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:08.821" starttime="20201007 17:15:04.509"></status>
</kw>
<msg timestamp="20201007 17:15:08.821" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:15:08.821" starttime="20201007 17:15:04.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201007 17:15:08.822" starttime="20201007 17:15:08.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201007 17:15:08.822" starttime="20201007 17:15:08.822"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:15:08.822" critical="yes" starttime="20201007 17:15:04.468"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:08.829" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:08.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:08.832" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:15:08.832" starttime="20201007 17:15:08.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:08.833" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:15:08.833" starttime="20201007 17:15:08.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:08.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:08.833" starttime="20201007 17:15:08.833"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:08.834" starttime="20201007 17:15:08.826"></status>
</kw>
<msg timestamp="20201007 17:15:08.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:08.834" starttime="20201007 17:15:08.825"></status>
</kw>
<msg timestamp="20201007 17:15:08.834" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:15:08.834" starttime="20201007 17:15:08.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:15:08.835" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:15:08.835" starttime="20201007 17:15:08.834"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:08.840" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:08.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:08.858" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:15:08.858" starttime="20201007 17:15:08.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:08.859" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:15:08.859" starttime="20201007 17:15:08.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:08.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:08.860" starttime="20201007 17:15:08.859"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:08.860" starttime="20201007 17:15:08.837"></status>
</kw>
<msg timestamp="20201007 17:15:08.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:08.861" starttime="20201007 17:15:08.836"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:08.861" starttime="20201007 17:15:08.836"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:08.861" starttime="20201007 17:15:08.835"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:08.861" starttime="20201007 17:15:08.825"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:08.861" starttime="20201007 17:15:08.824"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:08.866" level="INFO">Running command 'ozone sh bucket info 82752-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:12.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:12.964" level="INFO">${output} = 82752-source bucket1</msg>
<status status="PASS" endtime="20201007 17:15:12.964" starttime="20201007 17:15:08.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:12.966" level="INFO">82752-source bucket1</msg>
<status status="PASS" endtime="20201007 17:15:12.966" starttime="20201007 17:15:12.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:12.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:12.967" starttime="20201007 17:15:12.966"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:12.968" starttime="20201007 17:15:08.862"></status>
</kw>
<msg timestamp="20201007 17:15:12.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:12.968" starttime="20201007 17:15:08.862"></status>
</kw>
<msg timestamp="20201007 17:15:12.968" level="INFO">${result} = 82752-source bucket1</msg>
<status status="PASS" endtime="20201007 17:15:12.968" starttime="20201007 17:15:08.861"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201007 17:15:12.969" starttime="20201007 17:15:12.968"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:15:12.969" critical="yes" starttime="20201007 17:15:08.823"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:12.982" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:12.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:12.984" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:15:12.984" starttime="20201007 17:15:12.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:12.985" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:15:12.985" starttime="20201007 17:15:12.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:12.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:12.986" starttime="20201007 17:15:12.986"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:12.987" starttime="20201007 17:15:12.973"></status>
</kw>
<msg timestamp="20201007 17:15:12.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:12.987" starttime="20201007 17:15:12.973"></status>
</kw>
<msg timestamp="20201007 17:15:12.987" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:15:12.987" starttime="20201007 17:15:12.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:15:12.988" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:15:12.988" starttime="20201007 17:15:12.988"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:12.993" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:13.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:13.007" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:15:13.007" starttime="20201007 17:15:12.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:13.009" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:15:13.009" starttime="20201007 17:15:13.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:13.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:13.010" starttime="20201007 17:15:13.009"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:13.010" starttime="20201007 17:15:12.990"></status>
</kw>
<msg timestamp="20201007 17:15:13.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:13.011" starttime="20201007 17:15:12.990"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:13.011" starttime="20201007 17:15:12.989"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:13.011" starttime="20201007 17:15:12.988"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:13.011" starttime="20201007 17:15:12.972"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:13.011" starttime="20201007 17:15:12.971"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:13.015" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 82752-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:17.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:17.174" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:15:17.174" starttime="20201007 17:15:13.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:17.176" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201007 17:15:17.176" starttime="20201007 17:15:17.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:17.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:17.177" starttime="20201007 17:15:17.176"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:17.177" starttime="20201007 17:15:13.012"></status>
</kw>
<msg timestamp="20201007 17:15:17.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:17.177" starttime="20201007 17:15:13.012"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:17.177" starttime="20201007 17:15:13.011"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:17.182" level="INFO">Running command 'ozone sh bucket getacl 82752-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:21.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:21.529" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201007 17:15:21.529" starttime="20201007 17:15:17.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:21.530" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201007 17:15:21.530" starttime="20201007 17:15:21.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:21.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:21.531" starttime="20201007 17:15:21.530"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:21.532" starttime="20201007 17:15:17.180"></status>
</kw>
<msg timestamp="20201007 17:15:21.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:21.532" starttime="20201007 17:15:17.179"></status>
</kw>
<msg timestamp="20201007 17:15:21.532" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201007 17:15:21.532" starttime="20201007 17:15:17.178"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201007 17:15:21.533" starttime="20201007 17:15:21.532"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:21.533" starttime="20201007 17:15:17.178"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:21.539" level="INFO">Running command 'ozone sh bucket getacl 82752-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:26.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:26.352" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:15:26.352" starttime="20201007 17:15:21.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:26.353" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:15:26.353" starttime="20201007 17:15:26.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:26.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:26.354" starttime="20201007 17:15:26.353"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:26.354" starttime="20201007 17:15:21.535"></status>
</kw>
<msg timestamp="20201007 17:15:26.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:26.355" starttime="20201007 17:15:21.535"></status>
</kw>
<msg timestamp="20201007 17:15:26.355" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201007 17:15:26.355" starttime="20201007 17:15:21.534"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201007 17:15:26.356" starttime="20201007 17:15:26.355"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:26.356" starttime="20201007 17:15:21.533"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:26.362" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 82752-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:30.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:30.097" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:15:30.097" starttime="20201007 17:15:26.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:30.099" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201007 17:15:30.099" starttime="20201007 17:15:30.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:30.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:30.099" starttime="20201007 17:15:30.099"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:30.100" starttime="20201007 17:15:26.357"></status>
</kw>
<msg timestamp="20201007 17:15:30.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:30.100" starttime="20201007 17:15:26.357"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:30.100" starttime="20201007 17:15:26.356"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:30.107" level="INFO">Running command 'ozone sh bucket getacl 82752-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:34.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:34.595" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:15:34.595" starttime="20201007 17:15:30.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:34.597" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:15:34.597" starttime="20201007 17:15:34.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:34.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:34.598" starttime="20201007 17:15:34.597"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:34.598" starttime="20201007 17:15:30.103"></status>
</kw>
<msg timestamp="20201007 17:15:34.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:34.598" starttime="20201007 17:15:30.102"></status>
</kw>
<msg timestamp="20201007 17:15:34.599" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201007 17:15:34.599" starttime="20201007 17:15:30.101"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201007 17:15:34.599" starttime="20201007 17:15:34.599"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:34.600" starttime="20201007 17:15:30.101"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:34.604" level="INFO">Running command 'ozone sh bucket getacl 82752-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:39.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:39.535" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201007 17:15:39.535" starttime="20201007 17:15:34.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:39.536" level="INFO">READ</msg>
<status status="PASS" endtime="20201007 17:15:39.536" starttime="20201007 17:15:39.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:39.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:39.537" starttime="20201007 17:15:39.536"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:39.537" starttime="20201007 17:15:34.602"></status>
</kw>
<msg timestamp="20201007 17:15:39.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:39.538" starttime="20201007 17:15:34.601"></status>
</kw>
<msg timestamp="20201007 17:15:39.538" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201007 17:15:39.538" starttime="20201007 17:15:34.601"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201007 17:15:39.539" starttime="20201007 17:15:39.538"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:39.539" starttime="20201007 17:15:34.600"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:15:39.539" critical="yes" starttime="20201007 17:15:12.970"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:39.548" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:39.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:39.550" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:15:39.550" starttime="20201007 17:15:39.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:39.551" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:15:39.551" starttime="20201007 17:15:39.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:39.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:39.552" starttime="20201007 17:15:39.551"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:39.552" starttime="20201007 17:15:39.544"></status>
</kw>
<msg timestamp="20201007 17:15:39.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:39.552" starttime="20201007 17:15:39.543"></status>
</kw>
<msg timestamp="20201007 17:15:39.553" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:15:39.553" starttime="20201007 17:15:39.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:15:39.554" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:15:39.554" starttime="20201007 17:15:39.553"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:39.560" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:39.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:39.576" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:15:39.576" starttime="20201007 17:15:39.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:39.578" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:15:39.578" starttime="20201007 17:15:39.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:39.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:39.579" starttime="20201007 17:15:39.578"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:39.579" starttime="20201007 17:15:39.555"></status>
</kw>
<msg timestamp="20201007 17:15:39.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:39.580" starttime="20201007 17:15:39.555"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:39.580" starttime="20201007 17:15:39.554"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:39.580" starttime="20201007 17:15:39.554"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:39.580" starttime="20201007 17:15:39.542"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:39.580" starttime="20201007 17:15:39.542"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:39.587" level="INFO">Running command 'ozone sh bucket link 82752-source/bucket2 82752-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:43.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:43.584" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:15:43.585" starttime="20201007 17:15:39.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:43.586" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:15:43.586" starttime="20201007 17:15:43.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:43.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:43.587" starttime="20201007 17:15:43.586"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:43.587" starttime="20201007 17:15:39.582"></status>
</kw>
<msg timestamp="20201007 17:15:43.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:43.587" starttime="20201007 17:15:39.581"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:43.588" starttime="20201007 17:15:39.580"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:43.591" level="INFO">Running command 'ozone sh bucket create 82752-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:47.703" level="INFO">${rc} = 255</msg>
<msg timestamp="20201007 17:15:47.703" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:15:47.703" starttime="20201007 17:15:43.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:47.704" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201007 17:15:47.704" starttime="20201007 17:15:47.703"></status>
</kw>
<msg timestamp="20201007 17:15:47.705" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:15:47.705" starttime="20201007 17:15:43.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201007 17:15:47.705" starttime="20201007 17:15:47.705"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:47.710" level="INFO">Running command 'ozone sh bucket create 82752-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:51.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:51.922" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:15:51.922" starttime="20201007 17:15:47.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:51.923" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:15:51.923" starttime="20201007 17:15:51.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:51.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:51.924" starttime="20201007 17:15:51.924"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:51.925" starttime="20201007 17:15:47.707"></status>
</kw>
<msg timestamp="20201007 17:15:51.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:51.925" starttime="20201007 17:15:47.706"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:51.925" starttime="20201007 17:15:47.706"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:51.929" level="INFO">Running command 'ozone sh bucket link 82752-source/bucket1 82752-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:55.998" level="INFO">${rc} = 255</msg>
<msg timestamp="20201007 17:15:55.998" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:15:55.998" starttime="20201007 17:15:51.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:55.999" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201007 17:15:56.000" starttime="20201007 17:15:55.998"></status>
</kw>
<msg timestamp="20201007 17:15:56.000" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:15:56.000" starttime="20201007 17:15:51.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201007 17:15:56.001" starttime="20201007 17:15:56.000"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:15:56.001" critical="yes" starttime="20201007 17:15:39.541"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:56.007" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:56.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:56.010" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:15:56.010" starttime="20201007 17:15:56.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:56.011" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:15:56.011" starttime="20201007 17:15:56.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:56.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:56.012" starttime="20201007 17:15:56.011"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:56.012" starttime="20201007 17:15:56.005"></status>
</kw>
<msg timestamp="20201007 17:15:56.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:56.012" starttime="20201007 17:15:56.004"></status>
</kw>
<msg timestamp="20201007 17:15:56.012" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:15:56.013" starttime="20201007 17:15:56.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:15:56.013" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:15:56.013" starttime="20201007 17:15:56.013"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:56.019" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:56.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:56.040" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:15:56.040" starttime="20201007 17:15:56.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:56.041" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:15:56.041" starttime="20201007 17:15:56.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:56.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:56.042" starttime="20201007 17:15:56.041"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:56.043" starttime="20201007 17:15:56.015"></status>
</kw>
<msg timestamp="20201007 17:15:56.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:56.043" starttime="20201007 17:15:56.015"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:56.043" starttime="20201007 17:15:56.014"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:56.043" starttime="20201007 17:15:56.013"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:56.043" starttime="20201007 17:15:56.003"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:56.043" starttime="20201007 17:15:56.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:56.049" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:56.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:56.052" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:15:56.052" starttime="20201007 17:15:56.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:56.053" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:15:56.053" starttime="20201007 17:15:56.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:56.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:56.054" starttime="20201007 17:15:56.053"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:56.054" starttime="20201007 17:15:56.046"></status>
</kw>
<msg timestamp="20201007 17:15:56.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:56.054" starttime="20201007 17:15:56.045"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:56.055" starttime="20201007 17:15:56.045"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:56.060" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:56.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:56.061" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:15:56.062" starttime="20201007 17:15:56.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:56.062" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:15:56.063" starttime="20201007 17:15:56.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:56.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:56.063" starttime="20201007 17:15:56.063"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:56.064" starttime="20201007 17:15:56.056"></status>
</kw>
<msg timestamp="20201007 17:15:56.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:56.064" starttime="20201007 17:15:56.056"></status>
</kw>
<msg timestamp="20201007 17:15:56.064" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:15:56.064" starttime="20201007 17:15:56.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:15:56.065" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:15:56.065" starttime="20201007 17:15:56.064"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:56.069" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:56.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:56.079" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:15:56.079" starttime="20201007 17:15:56.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:56.080" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:15:56.080" starttime="20201007 17:15:56.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:56.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:56.081" starttime="20201007 17:15:56.081"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:56.082" starttime="20201007 17:15:56.066"></status>
</kw>
<msg timestamp="20201007 17:15:56.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:56.082" starttime="20201007 17:15:56.066"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:56.082" starttime="20201007 17:15:56.065"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:56.082" starttime="20201007 17:15:56.065"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:56.082" starttime="20201007 17:15:56.055"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:56.082" starttime="20201007 17:15:56.055"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:56.086" level="INFO">Running command 'ozone sh key list 82752-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:59.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:59.920" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:15:59.920" starttime="20201007 17:15:56.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:59.921" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "82752-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-10-07T17:13:26.756Z",
  "modificationTime" : "2020-10-07T17:13:28.716Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201007 17:15:59.922" starttime="20201007 17:15:59.920"></status>
</kw>
<msg timestamp="20201007 17:15:59.922" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:15:59.922" starttime="20201007 17:15:56.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201007 17:15:59.923" starttime="20201007 17:15:59.922"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:59.923" starttime="20201007 17:15:56.044"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:59.923" starttime="20201007 17:15:56.044"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:15:59.923" critical="yes" starttime="20201007 17:15:56.002"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:59.930" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:59.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:59.932" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:15:59.932" starttime="20201007 17:15:59.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:59.933" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:15:59.934" starttime="20201007 17:15:59.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:59.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:59.934" starttime="20201007 17:15:59.934"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:59.935" starttime="20201007 17:15:59.927"></status>
</kw>
<msg timestamp="20201007 17:15:59.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:59.935" starttime="20201007 17:15:59.927"></status>
</kw>
<msg timestamp="20201007 17:15:59.935" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:15:59.935" starttime="20201007 17:15:59.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:15:59.936" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:15:59.936" starttime="20201007 17:15:59.935"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:59.941" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:59.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:59.964" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:15:59.964" starttime="20201007 17:15:59.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:59.965" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:15:59.965" starttime="20201007 17:15:59.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:59.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:59.966" starttime="20201007 17:15:59.965"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:59.967" starttime="20201007 17:15:59.938"></status>
</kw>
<msg timestamp="20201007 17:15:59.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:59.967" starttime="20201007 17:15:59.938"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:59.967" starttime="20201007 17:15:59.937"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:59.967" starttime="20201007 17:15:59.936"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:59.967" starttime="20201007 17:15:59.926"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:59.967" starttime="20201007 17:15:59.925"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:59.973" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:59.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:59.976" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:15:59.976" starttime="20201007 17:15:59.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:59.977" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:15:59.978" starttime="20201007 17:15:59.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:59.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:59.978" starttime="20201007 17:15:59.978"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:59.979" starttime="20201007 17:15:59.970"></status>
</kw>
<msg timestamp="20201007 17:15:59.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:59.979" starttime="20201007 17:15:59.970"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:59.979" starttime="20201007 17:15:59.969"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:59.984" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:15:59.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:15:59.986" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:15:59.986" starttime="20201007 17:15:59.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:15:59.988" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:15:59.988" starttime="20201007 17:15:59.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:15:59.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:15:59.989" starttime="20201007 17:15:59.988"></status>
</kw>
<status status="PASS" endtime="20201007 17:15:59.989" starttime="20201007 17:15:59.981"></status>
</kw>
<msg timestamp="20201007 17:15:59.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:15:59.989" starttime="20201007 17:15:59.981"></status>
</kw>
<msg timestamp="20201007 17:15:59.989" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:15:59.989" starttime="20201007 17:15:59.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:15:59.990" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:15:59.990" starttime="20201007 17:15:59.989"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:15:59.995" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:00.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:00.017" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:16:00.017" starttime="20201007 17:15:59.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:00.018" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:16:00.018" starttime="20201007 17:16:00.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:00.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:00.019" starttime="20201007 17:16:00.019"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:00.020" starttime="20201007 17:15:59.992"></status>
</kw>
<msg timestamp="20201007 17:16:00.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:00.020" starttime="20201007 17:15:59.991"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:00.020" starttime="20201007 17:15:59.991"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:00.020" starttime="20201007 17:15:59.990"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:00.021" starttime="20201007 17:15:59.980"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:00.021" starttime="20201007 17:15:59.979"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:00.025" level="INFO">Running command 'ozone sh key list 82752-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:03.862" level="INFO">${rc} = 255</msg>
<msg timestamp="20201007 17:16:03.862" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:16:03.862" starttime="20201007 17:16:00.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:03.863" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201007 17:16:03.863" starttime="20201007 17:16:03.862"></status>
</kw>
<msg timestamp="20201007 17:16:03.864" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:16:03.864" starttime="20201007 17:16:00.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201007 17:16:03.864" starttime="20201007 17:16:03.864"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:03.864" starttime="20201007 17:15:59.968"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:03.864" starttime="20201007 17:15:59.968"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:16:03.865" critical="yes" starttime="20201007 17:15:59.924"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:03.870" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:03.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:03.872" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:16:03.873" starttime="20201007 17:16:03.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:03.873" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:16:03.873" starttime="20201007 17:16:03.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:03.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:03.874" starttime="20201007 17:16:03.873"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:03.874" starttime="20201007 17:16:03.868"></status>
</kw>
<msg timestamp="20201007 17:16:03.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:03.875" starttime="20201007 17:16:03.868"></status>
</kw>
<msg timestamp="20201007 17:16:03.875" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:16:03.875" starttime="20201007 17:16:03.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:16:03.876" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:16:03.876" starttime="20201007 17:16:03.875"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:03.879" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:03.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:03.911" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:16:03.911" starttime="20201007 17:16:03.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:03.912" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:16:03.912" starttime="20201007 17:16:03.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:03.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:03.912" starttime="20201007 17:16:03.912"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:03.913" starttime="20201007 17:16:03.877"></status>
</kw>
<msg timestamp="20201007 17:16:03.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:03.913" starttime="20201007 17:16:03.877"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:03.913" starttime="20201007 17:16:03.876"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:03.913" starttime="20201007 17:16:03.876"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:03.913" starttime="20201007 17:16:03.867"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:03.913" starttime="20201007 17:16:03.866"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:03.919" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:03.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:03.922" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:16:03.922" starttime="20201007 17:16:03.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:03.923" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:16:03.923" starttime="20201007 17:16:03.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:03.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:03.924" starttime="20201007 17:16:03.923"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:03.924" starttime="20201007 17:16:03.915"></status>
</kw>
<msg timestamp="20201007 17:16:03.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:03.924" starttime="20201007 17:16:03.915"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:03.924" starttime="20201007 17:16:03.914"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:03.929" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:03.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:03.930" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:16:03.930" starttime="20201007 17:16:03.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:03.931" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:16:03.931" starttime="20201007 17:16:03.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:03.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:03.932" starttime="20201007 17:16:03.932"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:03.933" starttime="20201007 17:16:03.926"></status>
</kw>
<msg timestamp="20201007 17:16:03.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:03.933" starttime="20201007 17:16:03.926"></status>
</kw>
<msg timestamp="20201007 17:16:03.933" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:16:03.933" starttime="20201007 17:16:03.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:16:03.934" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:16:03.934" starttime="20201007 17:16:03.933"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:03.937" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:03.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:03.964" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:16:03.964" starttime="20201007 17:16:03.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:03.965" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:16:03.965" starttime="20201007 17:16:03.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:03.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:03.966" starttime="20201007 17:16:03.965"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:03.966" starttime="20201007 17:16:03.935"></status>
</kw>
<msg timestamp="20201007 17:16:03.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:03.966" starttime="20201007 17:16:03.935"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:03.966" starttime="20201007 17:16:03.934"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:03.967" starttime="20201007 17:16:03.934"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:03.967" starttime="20201007 17:16:03.925"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:03.967" starttime="20201007 17:16:03.924"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:03.973" level="INFO">Running command 'ozone sh bucket info 82752-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:07.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:07.886" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:16:07.886" starttime="20201007 17:16:03.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:07.887" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "82752-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T17:13:44.494Z",
  "modificationTime" : "2020-10-07T17:13:44.494Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "82752-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201007 17:16:07.887" starttime="20201007 17:16:07.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:07.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:07.888" starttime="20201007 17:16:07.887"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:07.888" starttime="20201007 17:16:03.968"></status>
</kw>
<msg timestamp="20201007 17:16:07.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:07.888" starttime="20201007 17:16:03.968"></status>
</kw>
<msg timestamp="20201007 17:16:07.889" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:16:07.889" starttime="20201007 17:16:03.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201007 17:16:07.889" starttime="20201007 17:16:07.889"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201007 17:16:07.890" starttime="20201007 17:16:07.889"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:07.894" level="INFO">Running command 'ozone sh key list 82752-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:11.667" level="INFO">${rc} = 255</msg>
<msg timestamp="20201007 17:16:11.667" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:16:11.667" starttime="20201007 17:16:07.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:11.668" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201007 17:16:11.668" starttime="20201007 17:16:11.667"></status>
</kw>
<msg timestamp="20201007 17:16:11.670" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:16:11.670" starttime="20201007 17:16:07.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201007 17:16:11.670" starttime="20201007 17:16:11.670"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:11.671" starttime="20201007 17:16:03.914"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:11.671" starttime="20201007 17:16:03.914"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:16:11.671" critical="yes" starttime="20201007 17:16:03.866"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:11.679" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:11.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:11.681" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:16:11.681" starttime="20201007 17:16:11.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:11.682" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:16:11.682" starttime="20201007 17:16:11.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:11.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:11.683" starttime="20201007 17:16:11.683"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:11.684" starttime="20201007 17:16:11.675"></status>
</kw>
<msg timestamp="20201007 17:16:11.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:11.684" starttime="20201007 17:16:11.675"></status>
</kw>
<msg timestamp="20201007 17:16:11.685" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:16:11.687" starttime="20201007 17:16:11.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:16:11.688" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:16:11.688" starttime="20201007 17:16:11.687"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:11.693" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:11.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:11.705" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:16:11.705" starttime="20201007 17:16:11.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:11.706" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:16:11.706" starttime="20201007 17:16:11.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:11.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:11.707" starttime="20201007 17:16:11.706"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:11.707" starttime="20201007 17:16:11.690"></status>
</kw>
<msg timestamp="20201007 17:16:11.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:11.708" starttime="20201007 17:16:11.689"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:11.708" starttime="20201007 17:16:11.689"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:11.708" starttime="20201007 17:16:11.688"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:11.708" starttime="20201007 17:16:11.674"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:11.708" starttime="20201007 17:16:11.673"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:11.713" level="INFO">Running command 'ozone sh bucket link 82752-target/loop1 82752-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:15.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:15.613" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:16:15.613" starttime="20201007 17:16:11.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:15.614" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:16:15.615" starttime="20201007 17:16:15.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:15.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:15.616" starttime="20201007 17:16:15.615"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:15.620" starttime="20201007 17:16:11.709"></status>
</kw>
<msg timestamp="20201007 17:16:15.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:15.620" starttime="20201007 17:16:11.709"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:15.621" starttime="20201007 17:16:11.708"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:15.629" level="INFO">Running command 'ozone sh bucket link 82752-target/loop2 82752-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:19.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:19.487" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:16:19.487" starttime="20201007 17:16:15.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:19.488" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:16:19.488" starttime="20201007 17:16:19.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:19.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:19.489" starttime="20201007 17:16:19.489"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:19.489" starttime="20201007 17:16:15.623"></status>
</kw>
<msg timestamp="20201007 17:16:19.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:19.490" starttime="20201007 17:16:15.623"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:19.490" starttime="20201007 17:16:15.621"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:19.495" level="INFO">Running command 'ozone sh bucket link 82752-target/loop3 82752-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:23.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:23.271" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:16:23.271" starttime="20201007 17:16:19.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:23.272" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:16:23.272" starttime="20201007 17:16:23.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:23.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:23.273" starttime="20201007 17:16:23.272"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:23.273" starttime="20201007 17:16:19.491"></status>
</kw>
<msg timestamp="20201007 17:16:23.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:23.273" starttime="20201007 17:16:19.491"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:23.274" starttime="20201007 17:16:19.490"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:23.277" level="INFO">Running command 'ozone sh key list 82752-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:26.673" level="INFO">${rc} = 255</msg>
<msg timestamp="20201007 17:16:26.673" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:16:26.673" starttime="20201007 17:16:23.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:26.674" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201007 17:16:26.674" starttime="20201007 17:16:26.673"></status>
</kw>
<msg timestamp="20201007 17:16:26.674" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:16:26.674" starttime="20201007 17:16:23.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201007 17:16:26.675" starttime="20201007 17:16:26.675"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:16:26.675" critical="yes" starttime="20201007 17:16:11.672"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:26.683" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:26.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:26.685" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:16:26.685" starttime="20201007 17:16:26.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:26.686" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:16:26.686" starttime="20201007 17:16:26.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:26.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:26.687" starttime="20201007 17:16:26.686"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:26.688" starttime="20201007 17:16:26.679"></status>
</kw>
<msg timestamp="20201007 17:16:26.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:26.688" starttime="20201007 17:16:26.679"></status>
</kw>
<msg timestamp="20201007 17:16:26.688" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:16:26.688" starttime="20201007 17:16:26.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:16:26.689" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:16:26.689" starttime="20201007 17:16:26.688"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:26.694" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:26.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:26.709" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:16:26.709" starttime="20201007 17:16:26.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:26.710" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:16:26.711" starttime="20201007 17:16:26.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:26.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:26.711" starttime="20201007 17:16:26.711"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:26.712" starttime="20201007 17:16:26.690"></status>
</kw>
<msg timestamp="20201007 17:16:26.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:26.712" starttime="20201007 17:16:26.690"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:26.712" starttime="20201007 17:16:26.690"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:26.712" starttime="20201007 17:16:26.689"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:26.712" starttime="20201007 17:16:26.678"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:26.712" starttime="20201007 17:16:26.677"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:26.720" level="INFO">Running command 'ozone sh bucket link 82752-source/bucket1 82752-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:30.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:30.276" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:16:30.277" starttime="20201007 17:16:26.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:30.278" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:16:30.278" starttime="20201007 17:16:30.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:30.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:30.279" starttime="20201007 17:16:30.278"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:30.279" starttime="20201007 17:16:26.713"></status>
</kw>
<msg timestamp="20201007 17:16:30.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:30.279" starttime="20201007 17:16:26.713"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:30.280" starttime="20201007 17:16:26.712"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:30.284" level="INFO">Running command 'ozone sh key put 82752-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:36.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:36.055" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:16:36.055" starttime="20201007 17:16:30.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:36.056" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:16:36.056" starttime="20201007 17:16:36.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:36.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:36.057" starttime="20201007 17:16:36.056"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:36.057" starttime="20201007 17:16:30.281"></status>
</kw>
<msg timestamp="20201007 17:16:36.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:36.058" starttime="20201007 17:16:30.281"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:36.058" starttime="20201007 17:16:30.280"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201007 17:16:36.060" level="INFO">${postfix} = 26376</msg>
<status status="PASS" endtime="20201007 17:16:36.060" starttime="20201007 17:16:36.059"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201007 17:16:36.061" level="INFO">${tmpfile} = /tmp/tempkey-26376</msg>
<status status="PASS" endtime="20201007 17:16:36.061" starttime="20201007 17:16:36.060"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:36.066" level="INFO">Running command 'ozone sh key get -f 82752-target/link1/key3 /tmp/tempkey-26376 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:41.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:41.766" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:16:41.766" starttime="20201007 17:16:36.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:41.767" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:16:41.767" starttime="20201007 17:16:41.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:41.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:41.768" starttime="20201007 17:16:41.767"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:41.768" starttime="20201007 17:16:36.062"></status>
</kw>
<msg timestamp="20201007 17:16:41.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:41.769" starttime="20201007 17:16:36.062"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:41.769" starttime="20201007 17:16:36.061"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201007 17:16:41.771" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-26376 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:41.774" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201007 17:16:41.774" starttime="20201007 17:16:41.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:41.779" level="INFO">Running command 'rm -f /tmp/tempkey-26376 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:41.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:41.782" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:16:41.782" starttime="20201007 17:16:41.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:41.783" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:16:41.783" starttime="20201007 17:16:41.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:41.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:41.784" starttime="20201007 17:16:41.783"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:41.784" starttime="20201007 17:16:41.776"></status>
</kw>
<msg timestamp="20201007 17:16:41.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:41.784" starttime="20201007 17:16:41.775"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:41.785" starttime="20201007 17:16:41.775"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 17:16:41.785" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201007 17:16:41.785" starttime="20201007 17:16:41.785"></status>
</kw>
<msg timestamp="20201007 17:16:41.786" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201007 17:16:41.786" starttime="20201007 17:16:36.059"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201007 17:16:41.786" starttime="20201007 17:16:41.786"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:41.786" starttime="20201007 17:16:36.058"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:16:41.787" critical="yes" starttime="20201007 17:16:26.676"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:41.794" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:41.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:41.798" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201007 17:16:41.798" starttime="20201007 17:16:41.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:41.799" level="INFO">scm</msg>
<status status="PASS" endtime="20201007 17:16:41.799" starttime="20201007 17:16:41.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:41.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:41.800" starttime="20201007 17:16:41.799"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:41.801" starttime="20201007 17:16:41.791"></status>
</kw>
<msg timestamp="20201007 17:16:41.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:41.801" starttime="20201007 17:16:41.791"></status>
</kw>
<msg timestamp="20201007 17:16:41.801" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201007 17:16:41.801" starttime="20201007 17:16:41.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:16:41.802" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:16:41.802" starttime="20201007 17:16:41.802"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:41.807" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:41.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:41.825" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:16:41.825" starttime="20201007 17:16:41.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:41.826" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:16:41.826" starttime="20201007 17:16:41.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:41.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:41.827" starttime="20201007 17:16:41.826"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:41.828" starttime="20201007 17:16:41.804"></status>
</kw>
<msg timestamp="20201007 17:16:41.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:41.828" starttime="20201007 17:16:41.804"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:41.828" starttime="20201007 17:16:41.803"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:41.828" starttime="20201007 17:16:41.802"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:41.829" starttime="20201007 17:16:41.789"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:41.829" starttime="20201007 17:16:41.789"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:41.833" level="INFO">Running command 'ozone sh bucket delete 82752-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:45.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:45.641" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:16:45.641" starttime="20201007 17:16:41.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:45.642" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:16:45.642" starttime="20201007 17:16:45.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:45.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:45.643" starttime="20201007 17:16:45.642"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:45.643" starttime="20201007 17:16:41.830"></status>
</kw>
<msg timestamp="20201007 17:16:45.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:45.643" starttime="20201007 17:16:41.830"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:45.643" starttime="20201007 17:16:41.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:45.649" level="INFO">Running command 'ozone sh bucket list 82752-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:49.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:49.592" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:16:49.592" starttime="20201007 17:16:45.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:49.593" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "82752-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T17:15:51.663Z",
  "modificationTime" : "2020-10-07T17:15:51.663Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "82752-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T17:14:08.930Z",
  "modificationTime" : "2020-10-07T17:14:08.930Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "82752-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "82752-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T17:13:44.494Z",
  "modificationTime" : "2020-10-07T17:13:44.494Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "82752-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "82752-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T17:15:43.338Z",
  "modificationTime" : "2020-10-07T17:15:43.338Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "82752-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "82752-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T17:16:30.068Z",
  "modificationTime" : "2020-10-07T17:16:30.068Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "82752-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "82752-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T17:16:23.121Z",
  "modificationTime" : "2020-10-07T17:16:23.121Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "82752-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "82752-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T17:16:15.530Z",
  "modificationTime" : "2020-10-07T17:16:15.530Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "82752-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "82752-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T17:16:19.302Z",
  "modificationTime" : "2020-10-07T17:16:19.302Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "82752-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "82752-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T17:13:36.767Z",
  "modificationTime" : "2020-10-07T17:13:36.767Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "82752-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "82752-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T17:13:40.668Z",
  "modificationTime" : "2020-10-07T17:13:40.668Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "82752-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201007 17:16:49.593" starttime="20201007 17:16:49.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:49.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:49.594" starttime="20201007 17:16:49.594"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:49.595" starttime="20201007 17:16:45.645"></status>
</kw>
<msg timestamp="20201007 17:16:49.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:49.595" starttime="20201007 17:16:45.644"></status>
</kw>
<msg timestamp="20201007 17:16:49.595" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:16:49.595" starttime="20201007 17:16:45.644"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201007 17:16:49.596" starttime="20201007 17:16:49.596"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:16:49.600" level="INFO">Running command 'ozone sh key list 82752-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:16:53.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:16:53.925" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201007 17:16:53.925" starttime="20201007 17:16:49.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:16:53.926" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201007 17:16:53.926" starttime="20201007 17:16:53.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:16:53.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:16:53.927" starttime="20201007 17:16:53.926"></status>
</kw>
<status status="PASS" endtime="20201007 17:16:53.927" starttime="20201007 17:16:49.597"></status>
</kw>
<msg timestamp="20201007 17:16:53.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:16:53.928" starttime="20201007 17:16:49.597"></status>
</kw>
<msg timestamp="20201007 17:16:53.928" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201007 17:16:53.928" starttime="20201007 17:16:49.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201007 17:16:53.929" starttime="20201007 17:16:53.928"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:16:53.929" critical="yes" starttime="20201007 17:16:41.788"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201007 17:16:53.932" starttime="20201007 17:13:10.041"></status>
</suite>
<status status="PASS" elapsedtime="255854" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
