<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201007 17:10:45.039" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:06:31.073" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:06:35.989" level="INFO">${rc} = 255</msg>
<msg timestamp="20201007 17:06:35.990" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:06:35.990" starttime="20201007 17:06:31.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:06:35.991" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201007 17:06:35.991" starttime="20201007 17:06:35.990"></status>
</kw>
<msg timestamp="20201007 17:06:35.991" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:06:35.991" starttime="20201007 17:06:31.068"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:06:35.999" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:06:39.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:06:39.915" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:06:39.915" starttime="20201007 17:06:35.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:06:39.917" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:06:39.917" starttime="20201007 17:06:39.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:06:39.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:06:39.918" starttime="20201007 17:06:39.917"></status>
</kw>
<status status="PASS" endtime="20201007 17:06:39.918" starttime="20201007 17:06:35.994"></status>
</kw>
<msg timestamp="20201007 17:06:39.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:06:39.919" starttime="20201007 17:06:35.993"></status>
</kw>
<msg timestamp="20201007 17:06:39.919" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:06:39.919" starttime="20201007 17:06:35.993"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201007 17:06:39.920" starttime="20201007 17:06:39.919"></status>
</kw>
<status status="PASS" endtime="20201007 17:06:39.920" starttime="20201007 17:06:35.992"></status>
</kw>
<status status="PASS" endtime="20201007 17:06:39.920" starttime="20201007 17:06:35.992"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:06:39.926" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:06:43.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:06:43.683" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:06:43.683" starttime="20201007 17:06:39.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:06:43.685" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:06:43.685" starttime="20201007 17:06:43.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:06:43.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:06:43.686" starttime="20201007 17:06:43.685"></status>
</kw>
<status status="PASS" endtime="20201007 17:06:43.686" starttime="20201007 17:06:39.922"></status>
</kw>
<msg timestamp="20201007 17:06:43.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:06:43.686" starttime="20201007 17:06:39.922"></status>
</kw>
<status status="PASS" endtime="20201007 17:06:43.686" starttime="20201007 17:06:39.921"></status>
</kw>
<status status="PASS" endtime="20201007 17:06:43.686" starttime="20201007 17:06:39.921"></status>
</kw>
<status status="PASS" endtime="20201007 17:06:43.686" starttime="20201007 17:06:39.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201007 17:06:43.687" starttime="20201007 17:06:43.687"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:06:43.692" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:06:47.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:06:47.706" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:06:47.706" starttime="20201007 17:06:43.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:06:47.707" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-07T17:06:43.483Z",
  "modificationTime" : "2020-10-07T17:06:43.483Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201007 17:06:47.708" starttime="20201007 17:06:47.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:06:47.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:06:47.708" starttime="20201007 17:06:47.708"></status>
</kw>
<status status="PASS" endtime="20201007 17:06:47.709" starttime="20201007 17:06:43.688"></status>
</kw>
<msg timestamp="20201007 17:06:47.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:06:47.709" starttime="20201007 17:06:43.688"></status>
</kw>
<msg timestamp="20201007 17:06:47.709" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:06:47.709" starttime="20201007 17:06:43.687"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201007 17:06:47.710" starttime="20201007 17:06:47.709"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 17:06:47.715" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 17:06:47.715" starttime="20201007 17:06:47.714"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 17:06:47.715" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 17:06:47.716" starttime="20201007 17:06:47.715"></status>
</kw>
<status status="PASS" endtime="20201007 17:06:47.716" starttime="20201007 17:06:47.713"></status>
</kw>
<msg timestamp="20201007 17:06:47.716" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 17:06:47.716" starttime="20201007 17:06:47.712"></status>
</kw>
<status status="PASS" endtime="20201007 17:06:47.716" starttime="20201007 17:06:47.712"></status>
</kw>
<msg timestamp="20201007 17:06:47.716" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201007 17:06:47.716" starttime="20201007 17:06:47.711"></status>
</kw>
<msg timestamp="20201007 17:06:47.717" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201007 17:06:47.717" starttime="20201007 17:06:47.710"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:06:47.721" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:06:51.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:06:51.485" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:06:51.485" starttime="20201007 17:06:47.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:06:51.486" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:06:51.486" starttime="20201007 17:06:51.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:06:51.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:06:51.487" starttime="20201007 17:06:51.486"></status>
</kw>
<status status="PASS" endtime="20201007 17:06:51.487" starttime="20201007 17:06:47.718"></status>
</kw>
<msg timestamp="20201007 17:06:51.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:06:51.488" starttime="20201007 17:06:47.718"></status>
</kw>
<status status="PASS" endtime="20201007 17:06:51.488" starttime="20201007 17:06:47.717"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:06:51.492" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:07:00.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:07:00.260" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:07:00.260" starttime="20201007 17:06:51.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:07:00.261" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:07:00.261" starttime="20201007 17:07:00.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:07:00.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:07:00.262" starttime="20201007 17:07:00.262"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:00.262" starttime="20201007 17:06:51.489"></status>
</kw>
<msg timestamp="20201007 17:07:00.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:07:00.263" starttime="20201007 17:06:51.489"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:00.263" starttime="20201007 17:06:51.488"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:07:00.267" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:07:06.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:07:06.410" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:07:06.410" starttime="20201007 17:07:00.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:07:06.411" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:07:06.411" starttime="20201007 17:07:06.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:07:06.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:07:06.412" starttime="20201007 17:07:06.411"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:06.412" starttime="20201007 17:07:00.264"></status>
</kw>
<msg timestamp="20201007 17:07:06.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:07:06.413" starttime="20201007 17:07:00.264"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:06.413" starttime="20201007 17:07:00.263"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:07:06.417" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:07:12.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:07:12.416" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:07:12.416" starttime="20201007 17:07:06.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:07:12.418" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:07:12.418" starttime="20201007 17:07:12.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:07:12.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:07:12.419" starttime="20201007 17:07:12.418"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:12.419" starttime="20201007 17:07:06.414"></status>
</kw>
<msg timestamp="20201007 17:07:12.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:07:12.420" starttime="20201007 17:07:06.414"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:12.420" starttime="20201007 17:07:06.413"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:07:12.420" critical="yes" starttime="20201007 17:06:31.067"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 17:07:12.426" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 17:07:12.426" starttime="20201007 17:07:12.426"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 17:07:12.427" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 17:07:12.428" starttime="20201007 17:07:12.427"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:12.428" starttime="20201007 17:07:12.425"></status>
</kw>
<msg timestamp="20201007 17:07:12.428" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 17:07:12.428" starttime="20201007 17:07:12.425"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:12.428" starttime="20201007 17:07:12.424"></status>
</kw>
<msg timestamp="20201007 17:07:12.428" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201007 17:07:12.428" starttime="20201007 17:07:12.423"></status>
</kw>
<msg timestamp="20201007 17:07:12.429" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201007 17:07:12.429" starttime="20201007 17:07:12.422"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:07:12.434" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:07:16.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:07:16.353" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:07:16.353" starttime="20201007 17:07:12.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:07:16.355" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:07:16.355" starttime="20201007 17:07:16.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:07:16.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:07:16.356" starttime="20201007 17:07:16.355"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:16.356" starttime="20201007 17:07:12.430"></status>
</kw>
<msg timestamp="20201007 17:07:16.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:07:16.356" starttime="20201007 17:07:12.430"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:16.357" starttime="20201007 17:07:12.429"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:07:16.361" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:07:20.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:07:20.081" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201007 17:07:20.081" starttime="20201007 17:07:16.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:07:20.082" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201007 17:07:20.082" starttime="20201007 17:07:20.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:07:20.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:07:20.083" starttime="20201007 17:07:20.082"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:20.083" starttime="20201007 17:07:16.358"></status>
</kw>
<msg timestamp="20201007 17:07:20.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:07:20.083" starttime="20201007 17:07:16.357"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:20.084" starttime="20201007 17:07:16.357"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:07:20.084" critical="yes" starttime="20201007 17:07:12.421"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201007 17:07:20.085" starttime="20201007 17:06:31.000"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 17:09:09.741" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 17:09:09.741" starttime="20201007 17:09:09.740"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 17:09:09.741" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 17:09:09.742" starttime="20201007 17:09:09.741"></status>
</kw>
<status status="PASS" endtime="20201007 17:09:09.742" starttime="20201007 17:09:09.738"></status>
</kw>
<msg timestamp="20201007 17:09:09.742" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 17:09:09.742" starttime="20201007 17:09:09.738"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201007 17:09:09.743" starttime="20201007 17:09:09.743"></status>
</kw>
<msg timestamp="20201007 17:09:09.743" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201007 17:09:09.743" starttime="20201007 17:09:09.742"></status>
</kw>
<status status="PASS" endtime="20201007 17:09:09.744" starttime="20201007 17:09:09.737"></status>
</kw>
<msg timestamp="20201007 17:09:09.744" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 17:09:09.744" starttime="20201007 17:09:09.737"></status>
</kw>
<msg timestamp="20201007 17:09:09.744" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 17:09:09.744" starttime="20201007 17:09:09.736"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201007 17:09:09.744" level="INFO">${random} = 18870</msg>
<status status="PASS" endtime="20201007 17:09:09.744" starttime="20201007 17:09:09.744"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:09:09.748" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-18870 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:09:16.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:09:16.275" level="INFO">${output} = 2020-10-07 17:09:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 17:09:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201007 17:09:16.275" starttime="20201007 17:09:09.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:09:16.276" level="INFO">2020-10-07 17:09:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 17:09:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-07 17:09:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-07 17:09:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 17:09:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A8B393124855-&gt;3928a55c-3456-4f39-a01a-1a8de355607a
2020-10-07 17:09:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201007 17:09:16.276" starttime="20201007 17:09:16.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:09:16.277" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:09:16.277" starttime="20201007 17:09:16.277"></status>
</kw>
<status status="PASS" endtime="20201007 17:09:16.278" starttime="20201007 17:09:09.745"></status>
</kw>
<msg timestamp="20201007 17:09:16.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:09:16.278" starttime="20201007 17:09:09.745"></status>
</kw>
<msg timestamp="20201007 17:09:16.278" level="INFO">${result} = 2020-10-07 17:09:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 17:09:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201007 17:09:16.278" starttime="20201007 17:09:09.745"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:09:16.281" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:09:18.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:09:18.534" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 17:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-07 17:09 ofs://om/volume1/bucket1/ozone-18870
-rw-...</msg>
<status status="PASS" endtime="20201007 17:09:18.534" starttime="20201007 17:09:16.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:09:18.535" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 17:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-07 17:09 ofs://om/volume1/bucket1/ozone-18870
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-07 17:07 ofs://om/volume1/bucket1/ozone-26210
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 17:07 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 17:08 ofs://om/volume1/bucket1/wordcount-61.txt</msg>
<status status="PASS" endtime="20201007 17:09:18.535" starttime="20201007 17:09:18.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:09:18.536" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:09:18.536" starttime="20201007 17:09:18.536"></status>
</kw>
<status status="PASS" endtime="20201007 17:09:18.536" starttime="20201007 17:09:16.279"></status>
</kw>
<msg timestamp="20201007 17:09:18.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:09:18.537" starttime="20201007 17:09:16.279"></status>
</kw>
<msg timestamp="20201007 17:09:18.537" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 17:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-07 17:09 ofs://om/volume1/bucket1/ozone-18870
-rw-...</msg>
<status status="PASS" endtime="20201007 17:09:18.537" starttime="20201007 17:09:16.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201007 17:09:18.538" starttime="20201007 17:09:18.537"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201007 17:09:18.538" critical="yes" starttime="20201007 17:09:09.735"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201007 17:09:18.539" starttime="20201007 17:09:09.685"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 17:07:31.108" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 17:07:31.108" starttime="20201007 17:07:31.106"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 17:07:31.108" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 17:07:31.108" starttime="20201007 17:07:31.108"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:31.109" starttime="20201007 17:07:31.106"></status>
</kw>
<msg timestamp="20201007 17:07:31.109" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 17:07:31.109" starttime="20201007 17:07:31.105"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:31.109" starttime="20201007 17:07:31.103"></status>
</kw>
<msg timestamp="20201007 17:07:31.109" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 17:07:31.109" starttime="20201007 17:07:31.103"></status>
</kw>
<msg timestamp="20201007 17:07:31.110" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 17:07:31.110" starttime="20201007 17:07:31.102"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201007 17:07:31.110" level="INFO">${random} = 26210</msg>
<status status="PASS" endtime="20201007 17:07:31.110" starttime="20201007 17:07:31.110"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:07:31.113" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-26210 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:07:35.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:07:35.871" level="INFO">${output} = 2020-10-07 17:07:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 17:07:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201007 17:07:35.871" starttime="20201007 17:07:31.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:07:35.872" level="INFO">2020-10-07 17:07:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 17:07:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-07 17:07:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-07 17:07:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 17:07:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FD480DEA0803-&gt;3928a55c-3456-4f39-a01a-1a8de355607a
2020-10-07 17:07:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201007 17:07:35.872" starttime="20201007 17:07:35.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:07:35.873" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:07:35.874" starttime="20201007 17:07:35.872"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:35.874" starttime="20201007 17:07:31.111"></status>
</kw>
<msg timestamp="20201007 17:07:35.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:07:35.874" starttime="20201007 17:07:31.111"></status>
</kw>
<msg timestamp="20201007 17:07:35.874" level="INFO">${result} = 2020-10-07 17:07:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 17:07:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201007 17:07:35.875" starttime="20201007 17:07:31.110"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:07:35.878" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:07:38.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:07:38.367" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 17:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-07 17:07 o3fs://bucket1.volume1.om/ozone-26210
dr...</msg>
<status status="PASS" endtime="20201007 17:07:38.367" starttime="20201007 17:07:35.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:07:38.368" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 17:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-07 17:07 o3fs://bucket1.volume1.om/ozone-26210
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 17:07 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201007 17:07:38.369" starttime="20201007 17:07:38.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:07:38.369" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:07:38.370" starttime="20201007 17:07:38.369"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:38.370" starttime="20201007 17:07:35.876"></status>
</kw>
<msg timestamp="20201007 17:07:38.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:07:38.370" starttime="20201007 17:07:35.875"></status>
</kw>
<msg timestamp="20201007 17:07:38.371" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-07 17:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-07 17:07 o3fs://bucket1.volume1.om/ozone-26210
dr...</msg>
<status status="PASS" endtime="20201007 17:07:38.371" starttime="20201007 17:07:35.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201007 17:07:38.372" starttime="20201007 17:07:38.372"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201007 17:07:38.372" critical="yes" starttime="20201007 17:07:31.101"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201007 17:07:38.375" starttime="20201007 17:07:31.050"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:07:25.545" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:07:25.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:07:25.549" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201007 17:07:25.549" starttime="20201007 17:07:25.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:07:25.550" level="INFO">rm</msg>
<status status="PASS" endtime="20201007 17:07:25.550" starttime="20201007 17:07:25.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:07:25.551" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:07:25.551" starttime="20201007 17:07:25.550"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:25.551" starttime="20201007 17:07:25.543"></status>
</kw>
<msg timestamp="20201007 17:07:25.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:07:25.551" starttime="20201007 17:07:25.543"></status>
</kw>
<msg timestamp="20201007 17:07:25.551" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201007 17:07:25.551" starttime="20201007 17:07:25.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:07:25.553" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:07:25.553" starttime="20201007 17:07:25.552"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:07:25.557" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:07:25.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:07:25.572" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:07:25.572" starttime="20201007 17:07:25.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:07:25.573" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:07:25.573" starttime="20201007 17:07:25.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:07:25.574" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:07:25.574" starttime="20201007 17:07:25.573"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:25.574" starttime="20201007 17:07:25.555"></status>
</kw>
<msg timestamp="20201007 17:07:25.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:07:25.574" starttime="20201007 17:07:25.555"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:25.575" starttime="20201007 17:07:25.554"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:25.575" starttime="20201007 17:07:25.553"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:25.575" starttime="20201007 17:07:25.542"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:07:25.575" critical="yes" starttime="20201007 17:07:25.541"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201007 17:07:25.576" starttime="20201007 17:07:25.492"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:06:25.559" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:06:25.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:06:25.561" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201007 17:06:25.561" starttime="20201007 17:06:25.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:06:25.562" level="INFO">om</msg>
<status status="PASS" endtime="20201007 17:06:25.562" starttime="20201007 17:06:25.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:06:25.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:06:25.563" starttime="20201007 17:06:25.562"></status>
</kw>
<status status="PASS" endtime="20201007 17:06:25.563" starttime="20201007 17:06:25.553"></status>
</kw>
<msg timestamp="20201007 17:06:25.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:06:25.563" starttime="20201007 17:06:25.553"></status>
</kw>
<msg timestamp="20201007 17:06:25.564" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201007 17:06:25.564" starttime="20201007 17:06:25.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201007 17:06:25.564" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201007 17:06:25.564" starttime="20201007 17:06:25.564"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:06:25.569" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:06:25.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:06:25.582" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201007 17:06:25.582" starttime="20201007 17:06:25.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:06:25.583" level="INFO"></msg>
<status status="PASS" endtime="20201007 17:06:25.583" starttime="20201007 17:06:25.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:06:25.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:06:25.584" starttime="20201007 17:06:25.584"></status>
</kw>
<status status="PASS" endtime="20201007 17:06:25.584" starttime="20201007 17:06:25.566"></status>
</kw>
<msg timestamp="20201007 17:06:25.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:06:25.585" starttime="20201007 17:06:25.566"></status>
</kw>
<status status="PASS" endtime="20201007 17:06:25.585" starttime="20201007 17:06:25.565"></status>
</kw>
<status status="PASS" endtime="20201007 17:06:25.585" starttime="20201007 17:06:25.565"></status>
</kw>
<status status="PASS" endtime="20201007 17:06:25.585" starttime="20201007 17:06:25.551"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201007 17:06:25.585" critical="yes" starttime="20201007 17:06:25.550"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201007 17:06:25.587" starttime="20201007 17:06:25.487"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:09:23.998" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:09:24.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:09:24.015" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 17:09:24.015" starttime="20201007 17:09:23.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:09:24.016" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 17:09:24.022" starttime="20201007 17:09:24.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:09:24.023" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:09:24.023" starttime="20201007 17:09:24.023"></status>
</kw>
<status status="PASS" endtime="20201007 17:09:24.023" starttime="20201007 17:09:23.995"></status>
</kw>
<msg timestamp="20201007 17:09:24.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:09:24.024" starttime="20201007 17:09:23.995"></status>
</kw>
<msg timestamp="20201007 17:09:24.024" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 17:09:24.024" starttime="20201007 17:09:23.994"></status>
</kw>
<msg timestamp="20201007 17:09:24.024" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 17:09:24.024" starttime="20201007 17:09:23.994"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 17:09:24.032" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 17:09:24.032" starttime="20201007 17:09:24.028"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 17:09:24.036" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 17:09:24.036" starttime="20201007 17:09:24.032"></status>
</kw>
<status status="PASS" endtime="20201007 17:09:24.036" starttime="20201007 17:09:24.028"></status>
</kw>
<msg timestamp="20201007 17:09:24.036" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 17:09:24.036" starttime="20201007 17:09:24.027"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201007 17:09:24.037" starttime="20201007 17:09:24.037"></status>
</kw>
<msg timestamp="20201007 17:09:24.038" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201007 17:09:24.038" starttime="20201007 17:09:24.037"></status>
</kw>
<status status="PASS" endtime="20201007 17:09:24.038" starttime="20201007 17:09:24.026"></status>
</kw>
<msg timestamp="20201007 17:09:24.038" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 17:09:24.038" starttime="20201007 17:09:24.025"></status>
</kw>
<msg timestamp="20201007 17:09:24.038" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 17:09:24.038" starttime="20201007 17:09:24.025"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:09:24.048" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:10:02.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:10:02.134" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-07 17:09:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 17:09:26 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201007 17:10:02.134" starttime="20201007 17:09:24.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:10:02.135" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-07 17:09:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 17:09:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-07 17:09:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-07 17:09:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 17:09:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9BA10A1E3DD8-&gt;3928a55c-3456-4f39-a01a-1a8de355607a
2020-10-07 17:09:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-07 17:09:30 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-10-07 17:09:30 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-10-07 17:09:31 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602090570940, maxDate=1602695370940, sequenceNumber=3, masterKeyId=2))
2020-10-07 17:09:31 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a2 a8 a8 a0 d0 2e 38 a2 b0 da c0 d2 2e 40 03 48 01 5a 0d 32 39 35 34 31 30 38 30 34 32 31 35 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-07 17:09:31 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602090570940, maxDate=1602695370940, sequenceNumber=3, masterKeyId=2)
2020-10-07 17:09:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-07 17:09:31 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-07 17:09:31 INFO  JobSubmitter:202 - number of splits:3
2020-10-07 17:09:31 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-07 17:09:31 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602090350536_0003
2020-10-07 17:09:31 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a2 a8 a8 a0 d0 2e 38 a2 b0 da c0 d2 2e 40 03 48 01 5a 0d 32 39 35 34 31 30 38 30 34 32 31 35 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602090570940, maxDate=1602695370940, sequenceNumber=3, masterKeyId=2)]
2020-10-07 17:09:32 INFO  Configuration:2752 - resource-types.xml not found
2020-10-07 17:09:32 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-07 17:09:32 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-07 17:09:32 INFO  YarnClientImpl:311 - Submitted application application_1602090350536_0003
2020-10-07 17:09:33 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602090350536_0003/
2020-10-07 17:09:33 INFO  Job:1619 - Running job: job_1602090350536_0003
2020-10-07 17:09:40 INFO  Job:1640 - Job job_1602090350536_0003 running in uber mode : false
2020-10-07 17:09:40 INFO  Job:1647 -  map 0% reduce 0%
2020-10-07 17:09:51 INFO  Job:1647 -  map 33% reduce 0%
2020-10-07 17:09:53 INFO  Job:1647 -  map 100% reduce 0%
2020-10-07 17:10:00 INFO  Job:1647 -  map 100% reduce 100%
2020-10-07 17:10:01 INFO  Job:1658 - Job job_1602090350536_0003 completed successfully
2020-10-07 17:10:01 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1052781
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48774
		Total time spent by all reduces in occupied slots (ms)=13604
		Total time spent by all map tasks (ms)=24387
		Total time spent by all reduce tasks (ms)=6802
		Total vcore-milliseconds taken by all map tasks=24387
		Total vcore-milliseconds taken by all reduce tasks=6802
		Total megabyte-milliseconds taken by all map tasks=49944576
		Total megabyte-milliseconds taken by all reduce tasks=13930496
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1406
		CPU time spent (ms)=8250
		Physical memory (bytes) snapshot=1430032384
		Virtual memory (bytes) snapshot=14282444800
		Total committed heap usage (bytes)=1444413440
		Peak Map Physical memory (bytes)=499986432
		Peak Map Virtual memory (bytes)=3572232192
		Peak Reduce Physical memory (bytes)=292110336
		Peak Reduce Virtual memory (bytes)=3575582720
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.209 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201007 17:10:02.135" starttime="20201007 17:10:02.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:10:02.136" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:10:02.136" starttime="20201007 17:10:02.136"></status>
</kw>
<status status="PASS" endtime="20201007 17:10:02.137" starttime="20201007 17:09:24.046"></status>
</kw>
<msg timestamp="20201007 17:10:02.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:10:02.137" starttime="20201007 17:09:24.039"></status>
</kw>
<msg timestamp="20201007 17:10:02.138" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-07 17:09:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 17:09:26 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201007 17:10:02.138" starttime="20201007 17:09:24.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201007 17:10:02.138" starttime="20201007 17:10:02.138"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201007 17:10:02.139" critical="yes" starttime="20201007 17:09:23.993"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:10:02.144" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:10:02.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:10:02.150" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 17:10:02.150" starttime="20201007 17:10:02.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:10:02.151" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 17:10:02.151" starttime="20201007 17:10:02.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:10:02.152" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:10:02.152" starttime="20201007 17:10:02.151"></status>
</kw>
<status status="PASS" endtime="20201007 17:10:02.152" starttime="20201007 17:10:02.142"></status>
</kw>
<msg timestamp="20201007 17:10:02.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:10:02.153" starttime="20201007 17:10:02.141"></status>
</kw>
<msg timestamp="20201007 17:10:02.153" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 17:10:02.153" starttime="20201007 17:10:02.141"></status>
</kw>
<msg timestamp="20201007 17:10:02.153" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 17:10:02.153" starttime="20201007 17:10:02.140"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201007 17:10:02.154" level="INFO">${random} = 95</msg>
<status status="PASS" endtime="20201007 17:10:02.154" starttime="20201007 17:10:02.153"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 17:10:02.158" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 17:10:02.158" starttime="20201007 17:10:02.158"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 17:10:02.159" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 17:10:02.159" starttime="20201007 17:10:02.159"></status>
</kw>
<status status="PASS" endtime="20201007 17:10:02.160" starttime="20201007 17:10:02.157"></status>
</kw>
<msg timestamp="20201007 17:10:02.160" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 17:10:02.160" starttime="20201007 17:10:02.156"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201007 17:10:02.161" starttime="20201007 17:10:02.161"></status>
</kw>
<msg timestamp="20201007 17:10:02.161" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201007 17:10:02.161" starttime="20201007 17:10:02.160"></status>
</kw>
<status status="PASS" endtime="20201007 17:10:02.162" starttime="20201007 17:10:02.156"></status>
</kw>
<msg timestamp="20201007 17:10:02.162" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 17:10:02.162" starttime="20201007 17:10:02.155"></status>
</kw>
<msg timestamp="20201007 17:10:02.162" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201007 17:10:02.162" starttime="20201007 17:10:02.154"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 17:10:02.166" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 17:10:02.166" starttime="20201007 17:10:02.165"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 17:10:02.167" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 17:10:02.167" starttime="20201007 17:10:02.166"></status>
</kw>
<status status="PASS" endtime="20201007 17:10:02.167" starttime="20201007 17:10:02.165"></status>
</kw>
<msg timestamp="20201007 17:10:02.167" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 17:10:02.167" starttime="20201007 17:10:02.164"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 17:10:02.169" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201007 17:10:02.169" starttime="20201007 17:10:02.169"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 17:10:02.170" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201007 17:10:02.170" starttime="20201007 17:10:02.169"></status>
</kw>
<status status="PASS" endtime="20201007 17:10:02.170" starttime="20201007 17:10:02.168"></status>
</kw>
<msg timestamp="20201007 17:10:02.170" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201007 17:10:02.170" starttime="20201007 17:10:02.167"></status>
</kw>
<status status="PASS" endtime="20201007 17:10:02.171" starttime="20201007 17:10:02.164"></status>
</kw>
<msg timestamp="20201007 17:10:02.171" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201007 17:10:02.171" starttime="20201007 17:10:02.163"></status>
</kw>
<msg timestamp="20201007 17:10:02.171" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201007 17:10:02.171" starttime="20201007 17:10:02.162"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201007 17:10:02.175" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201007 17:10:02.175" starttime="20201007 17:10:02.174"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 17:10:02.175" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201007 17:10:02.175" starttime="20201007 17:10:02.175"></status>
</kw>
<status status="PASS" endtime="20201007 17:10:02.176" starttime="20201007 17:10:02.174"></status>
</kw>
<msg timestamp="20201007 17:10:02.176" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201007 17:10:02.176" starttime="20201007 17:10:02.173"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 17:10:02.177" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201007 17:10:02.177" starttime="20201007 17:10:02.177"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 17:10:02.178" level="INFO">${result} = /wordcount-95.txt</msg>
<status status="PASS" endtime="20201007 17:10:02.178" starttime="20201007 17:10:02.178"></status>
</kw>
<status status="PASS" endtime="20201007 17:10:02.178" starttime="20201007 17:10:02.176"></status>
</kw>
<msg timestamp="20201007 17:10:02.178" level="INFO">${path_with_leading} = /wordcount-95.txt</msg>
<status status="PASS" endtime="20201007 17:10:02.178" starttime="20201007 17:10:02.176"></status>
</kw>
<status status="PASS" endtime="20201007 17:10:02.179" starttime="20201007 17:10:02.173"></status>
</kw>
<msg timestamp="20201007 17:10:02.179" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-95.txt</msg>
<status status="PASS" endtime="20201007 17:10:02.179" starttime="20201007 17:10:02.172"></status>
</kw>
<msg timestamp="20201007 17:10:02.179" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-95.txt</msg>
<status status="PASS" endtime="20201007 17:10:02.179" starttime="20201007 17:10:02.171"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:10:02.182" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-95.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:10:36.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:10:36.457" level="INFO">${output} = 2020-10-07 17:10:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-10-07 17:10:04 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
202...</msg>
<status status="PASS" endtime="20201007 17:10:36.457" starttime="20201007 17:10:02.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:10:36.458" level="INFO">2020-10-07 17:10:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-10-07 17:10:04 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-10-07 17:10:04 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602090604791, maxDate=1602695404791, sequenceNumber=4, masterKeyId=2))
2020-10-07 17:10:04 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f6 b0 aa a0 d0 2e 38 f6 b8 dc c0 d2 2e 40 04 48 01 5a 0d 32 39 35 34 31 30 38 30 34 32 31 35 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-07 17:10:04 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602090604791, maxDate=1602695404791, sequenceNumber=4, masterKeyId=2)
2020-10-07 17:10:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-07 17:10:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 17:10:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-07 17:10:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-07 17:10:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 17:10:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FA54A530751B-&gt;3928a55c-3456-4f39-a01a-1a8de355607a
2020-10-07 17:10:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-07 17:10:06 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-07 17:10:06 INFO  JobSubmitter:202 - number of splits:3
2020-10-07 17:10:06 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-07 17:10:07 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602090350536_0004
2020-10-07 17:10:07 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f6 b0 aa a0 d0 2e 38 f6 b8 dc c0 d2 2e 40 04 48 01 5a 0d 32 39 35 34 31 30 38 30 34 32 31 35 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602090604791, maxDate=1602695404791, sequenceNumber=4, masterKeyId=2)]
2020-10-07 17:10:07 INFO  Configuration:2752 - resource-types.xml not found
2020-10-07 17:10:07 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-07 17:10:07 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-07 17:10:08 INFO  YarnClientImpl:311 - Submitted application application_1602090350536_0004
2020-10-07 17:10:08 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602090350536_0004/
2020-10-07 17:10:08 INFO  Job:1619 - Running job: job_1602090350536_0004
2020-10-07 17:10:17 INFO  Job:1640 - Job job_1602090350536_0004 running in uber mode : false
2020-10-07 17:10:17 INFO  Job:1647 -  map 0% reduce 0%
2020-10-07 17:10:27 INFO  Job:1647 -  map 33% reduce 0%
2020-10-07 17:10:29 INFO  Job:1647 -  map 67% reduce 0%
2020-10-07 17:10:30 INFO  Job:1647 -  map 100% reduce 0%
2020-10-07 17:10:34 INFO  Job:1647 -  map 100% reduce 100%
2020-10-07 17:10:35 INFO  Job:1658 - Job job_1602090350536_0004 completed successfully
2020-10-07 17:10:36 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1115453
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47426
		Total time spent by all reduces in occupied slots (ms)=8178
		Total time spent by all map tasks (ms)=23713
		Total time spent by all reduce tasks (ms)=4089
		Total vcore-milliseconds taken by all map tasks=23713
		Total vcore-milliseconds taken by all reduce tasks=4089
		Total megabyte-milliseconds taken by all map tasks=48564224
		Total megabyte-milliseconds taken by all reduce tasks=8374272
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1024
		CPU time spent (ms)=8420
		Physical memory (bytes) snapshot=1298558976
		Virtual memory (bytes) snapshot=14291791872
		Total committed heap usage (bytes)=1363673088
		Peak Map Physical memory (bytes)=366104576
		Peak Map Virtual memory (bytes)=3575623680
		Peak Reduce Physical memory (bytes)=293396480
		Peak Reduce Virtual memory (bytes)=3579748352
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201007 17:10:36.458" starttime="20201007 17:10:36.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:10:36.459" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:10:36.459" starttime="20201007 17:10:36.459"></status>
</kw>
<status status="PASS" endtime="20201007 17:10:36.460" starttime="20201007 17:10:02.181"></status>
</kw>
<msg timestamp="20201007 17:10:36.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:10:36.460" starttime="20201007 17:10:02.180"></status>
</kw>
<msg timestamp="20201007 17:10:36.461" level="INFO">${output} = 2020-10-07 17:10:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-10-07 17:10:04 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
202...</msg>
<status status="PASS" endtime="20201007 17:10:36.461" starttime="20201007 17:10:02.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201007 17:10:36.462" starttime="20201007 17:10:36.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201007 17:10:36.462" starttime="20201007 17:10:36.462"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201007 17:10:36.462" critical="yes" starttime="20201007 17:10:02.139"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201007 17:10:36.463" starttime="20201007 17:09:23.942"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:07:43.702" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:07:43.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:07:43.710" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 17:07:43.710" starttime="20201007 17:07:43.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:07:43.711" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 17:07:43.711" starttime="20201007 17:07:43.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:07:43.711" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:07:43.712" starttime="20201007 17:07:43.711"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:43.712" starttime="20201007 17:07:43.700"></status>
</kw>
<msg timestamp="20201007 17:07:43.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:07:43.712" starttime="20201007 17:07:43.700"></status>
</kw>
<msg timestamp="20201007 17:07:43.712" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 17:07:43.712" starttime="20201007 17:07:43.699"></status>
</kw>
<msg timestamp="20201007 17:07:43.712" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 17:07:43.712" starttime="20201007 17:07:43.699"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 17:07:43.716" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 17:07:43.716" starttime="20201007 17:07:43.716"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 17:07:43.717" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 17:07:43.717" starttime="20201007 17:07:43.717"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:43.717" starttime="20201007 17:07:43.716"></status>
</kw>
<msg timestamp="20201007 17:07:43.717" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 17:07:43.718" starttime="20201007 17:07:43.715"></status>
</kw>
<status status="PASS" endtime="20201007 17:07:43.718" starttime="20201007 17:07:43.714"></status>
</kw>
<msg timestamp="20201007 17:07:43.718" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 17:07:43.718" starttime="20201007 17:07:43.713"></status>
</kw>
<msg timestamp="20201007 17:07:43.718" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 17:07:43.718" starttime="20201007 17:07:43.713"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:07:43.721" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:08:29.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:08:29.164" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-07 17:07:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 17:07:46 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201007 17:08:29.165" starttime="20201007 17:07:43.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:08:29.167" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-07 17:07:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 17:07:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-07 17:07:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-07 17:07:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 17:07:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3DD5D2DC1E06-&gt;3928a55c-3456-4f39-a01a-1a8de355607a
2020-10-07 17:07:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-07 17:07:47 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-10-07 17:07:48 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-10-07 17:07:48 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602090468469, maxDate=1602695268469, sequenceNumber=1, masterKeyId=2))
2020-10-07 17:07:48 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a9 86 a2 a0 d0 2e 38 a9 8e d4 c0 d2 2e 40 01 48 01 5a 0d 32 39 35 34 31 30 38 30 34 32 31 35 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-07 17:07:48 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602090468469, maxDate=1602695268469, sequenceNumber=1, masterKeyId=2)
2020-10-07 17:07:48 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-07 17:07:49 INFO  JobSubmitter:202 - number of splits:3
2020-10-07 17:07:49 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-07 17:07:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602090350536_0001
2020-10-07 17:07:49 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a9 86 a2 a0 d0 2e 38 a9 8e d4 c0 d2 2e 40 01 48 01 5a 0d 32 39 35 34 31 30 38 30 34 32 31 35 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602090468469, maxDate=1602695268469, sequenceNumber=1, masterKeyId=2)]
2020-10-07 17:07:49 INFO  Configuration:2752 - resource-types.xml not found
2020-10-07 17:07:49 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-07 17:07:49 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-07 17:07:51 INFO  YarnClientImpl:311 - Submitted application application_1602090350536_0001
2020-10-07 17:07:51 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602090350536_0001/
2020-10-07 17:07:51 INFO  Job:1619 - Running job: job_1602090350536_0001
2020-10-07 17:08:04 INFO  Job:1640 - Job job_1602090350536_0001 running in uber mode : false
2020-10-07 17:08:04 INFO  Job:1647 -  map 0% reduce 0%
2020-10-07 17:08:15 INFO  Job:1647 -  map 33% reduce 0%
2020-10-07 17:08:17 INFO  Job:1647 -  map 67% reduce 0%
2020-10-07 17:08:18 INFO  Job:1647 -  map 100% reduce 0%
2020-10-07 17:08:22 INFO  Job:1647 -  map 100% reduce 100%
2020-10-07 17:08:28 INFO  Job:1658 - Job job_1602090350536_0001 completed successfully
2020-10-07 17:08:28 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1053005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=54514
		Total time spent by all reduces in occupied slots (ms)=9282
		Total time spent by all map tasks (ms)=27257
		Total time spent by all reduce tasks (ms)=4641
		Total vcore-milliseconds taken by all map tasks=27257
		Total vcore-milliseconds taken by all reduce tasks=4641
		Total megabyte-milliseconds taken by all map tasks=55822336
		Total megabyte-milliseconds taken by all reduce tasks=9504768
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1143
		CPU time spent (ms)=8660
		Physical memory (bytes) snapshot=1377120256
		Virtual memory (bytes) snapshot=14298460160
		Total committed heap usage (bytes)=1523056640
		Peak Map Physical memory (bytes)=358264832
		Peak Map Virtual memory (bytes)=3577692160
		Peak Reduce Physical memory (bytes)=364662784
		Peak Reduce Virtual memory (bytes)=3572862976
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.979 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201007 17:08:29.167" starttime="20201007 17:08:29.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:08:29.168" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:08:29.168" starttime="20201007 17:08:29.168"></status>
</kw>
<status status="PASS" endtime="20201007 17:08:29.169" starttime="20201007 17:07:43.720"></status>
</kw>
<msg timestamp="20201007 17:08:29.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:08:29.169" starttime="20201007 17:07:43.719"></status>
</kw>
<msg timestamp="20201007 17:08:29.170" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-07 17:07:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 17:07:46 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201007 17:08:29.170" starttime="20201007 17:07:43.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201007 17:08:29.170" starttime="20201007 17:08:29.170"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201007 17:08:29.171" critical="yes" starttime="20201007 17:07:43.698"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:08:29.176" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:08:29.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:08:29.182" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 17:08:29.182" starttime="20201007 17:08:29.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:08:29.183" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 17:08:29.183" starttime="20201007 17:08:29.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:08:29.184" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:08:29.184" starttime="20201007 17:08:29.183"></status>
</kw>
<status status="PASS" endtime="20201007 17:08:29.184" starttime="20201007 17:08:29.174"></status>
</kw>
<msg timestamp="20201007 17:08:29.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:08:29.185" starttime="20201007 17:08:29.173"></status>
</kw>
<msg timestamp="20201007 17:08:29.186" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 17:08:29.186" starttime="20201007 17:08:29.173"></status>
</kw>
<msg timestamp="20201007 17:08:29.186" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201007 17:08:29.186" starttime="20201007 17:08:29.173"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201007 17:08:29.189" level="INFO">${random} = 61</msg>
<status status="PASS" endtime="20201007 17:08:29.189" starttime="20201007 17:08:29.187"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 17:08:29.193" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 17:08:29.193" starttime="20201007 17:08:29.193"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 17:08:29.194" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 17:08:29.194" starttime="20201007 17:08:29.193"></status>
</kw>
<status status="PASS" endtime="20201007 17:08:29.194" starttime="20201007 17:08:29.192"></status>
</kw>
<msg timestamp="20201007 17:08:29.194" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 17:08:29.194" starttime="20201007 17:08:29.191"></status>
</kw>
<status status="PASS" endtime="20201007 17:08:29.194" starttime="20201007 17:08:29.191"></status>
</kw>
<msg timestamp="20201007 17:08:29.194" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 17:08:29.194" starttime="20201007 17:08:29.190"></status>
</kw>
<msg timestamp="20201007 17:08:29.195" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201007 17:08:29.195" starttime="20201007 17:08:29.189"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 17:08:29.200" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 17:08:29.200" starttime="20201007 17:08:29.199"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 17:08:29.201" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 17:08:29.201" starttime="20201007 17:08:29.200"></status>
</kw>
<status status="PASS" endtime="20201007 17:08:29.201" starttime="20201007 17:08:29.199"></status>
</kw>
<msg timestamp="20201007 17:08:29.201" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 17:08:29.201" starttime="20201007 17:08:29.197"></status>
</kw>
<status status="PASS" endtime="20201007 17:08:29.202" starttime="20201007 17:08:29.196"></status>
</kw>
<msg timestamp="20201007 17:08:29.202" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201007 17:08:29.202" starttime="20201007 17:08:29.196"></status>
</kw>
<msg timestamp="20201007 17:08:29.202" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201007 17:08:29.202" starttime="20201007 17:08:29.195"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201007 17:08:29.206" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201007 17:08:29.206" starttime="20201007 17:08:29.206"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201007 17:08:29.207" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201007 17:08:29.207" starttime="20201007 17:08:29.207"></status>
</kw>
<status status="PASS" endtime="20201007 17:08:29.207" starttime="20201007 17:08:29.205"></status>
</kw>
<msg timestamp="20201007 17:08:29.208" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201007 17:08:29.208" starttime="20201007 17:08:29.204"></status>
</kw>
<status status="PASS" endtime="20201007 17:08:29.208" starttime="20201007 17:08:29.204"></status>
</kw>
<msg timestamp="20201007 17:08:29.208" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-61.txt</msg>
<status status="PASS" endtime="20201007 17:08:29.208" starttime="20201007 17:08:29.203"></status>
</kw>
<msg timestamp="20201007 17:08:29.208" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-61.txt</msg>
<status status="PASS" endtime="20201007 17:08:29.208" starttime="20201007 17:08:29.202"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201007 17:08:29.211" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-61.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201007 17:09:04.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20201007 17:09:04.103" level="INFO">${output} = 2020-10-07 17:08:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-10-07 17:08:31 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
202...</msg>
<status status="PASS" endtime="20201007 17:09:04.103" starttime="20201007 17:08:29.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201007 17:09:04.104" level="INFO">2020-10-07 17:08:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-10-07 17:08:31 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-10-07 17:08:32 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602090511956, maxDate=1602695311956, sequenceNumber=2, masterKeyId=2))
2020-10-07 17:08:32 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b6 db a4 a0 d0 2e 38 b6 e3 d6 c0 d2 2e 40 02 48 01 5a 0d 32 39 35 34 31 30 38 30 34 32 31 35 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-07 17:08:32 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602090511956, maxDate=1602695311956, sequenceNumber=2, masterKeyId=2)
2020-10-07 17:08:32 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-07 17:08:32 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-07 17:08:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-07 17:08:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-07 17:08:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-07 17:08:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8BC34A9C6CC5-&gt;3928a55c-3456-4f39-a01a-1a8de355607a
2020-10-07 17:08:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-07 17:08:33 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-07 17:08:34 INFO  JobSubmitter:202 - number of splits:3
2020-10-07 17:08:34 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-07 17:08:34 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602090350536_0002
2020-10-07 17:08:34 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b6 db a4 a0 d0 2e 38 b6 e3 d6 c0 d2 2e 40 02 48 01 5a 0d 32 39 35 34 31 30 38 30 34 32 31 35 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602090511956, maxDate=1602695311956, sequenceNumber=2, masterKeyId=2)]
2020-10-07 17:08:34 INFO  Configuration:2752 - resource-types.xml not found
2020-10-07 17:08:34 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-07 17:08:34 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-07 17:08:36 INFO  YarnClientImpl:311 - Submitted application application_1602090350536_0002
2020-10-07 17:08:36 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602090350536_0002/
2020-10-07 17:08:36 INFO  Job:1619 - Running job: job_1602090350536_0002
2020-10-07 17:08:44 INFO  Job:1640 - Job job_1602090350536_0002 running in uber mode : false
2020-10-07 17:08:44 INFO  Job:1647 -  map 0% reduce 0%
2020-10-07 17:08:55 INFO  Job:1647 -  map 33% reduce 0%
2020-10-07 17:08:57 INFO  Job:1647 -  map 67% reduce 0%
2020-10-07 17:08:58 INFO  Job:1647 -  map 100% reduce 0%
2020-10-07 17:09:02 INFO  Job:1647 -  map 100% reduce 100%
2020-10-07 17:09:03 INFO  Job:1658 - Job job_1602090350536_0002 completed successfully
2020-10-07 17:09:03 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1115537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51488
		Total time spent by all reduces in occupied slots (ms)=8380
		Total time spent by all map tasks (ms)=25744
		Total time spent by all reduce tasks (ms)=4190
		Total vcore-milliseconds taken by all map tasks=25744
		Total vcore-milliseconds taken by all reduce tasks=4190
		Total megabyte-milliseconds taken by all map tasks=52723712
		Total megabyte-milliseconds taken by all reduce tasks=8581120
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1121
		CPU time spent (ms)=8830
		Physical memory (bytes) snapshot=1299767296
		Virtual memory (bytes) snapshot=14294261760
		Total committed heap usage (bytes)=1246232576
		Peak Map Physical memory (bytes)=357605376
		Peak Map Virtual memory (bytes)=3578359808
		Peak Reduce Physical memory (bytes)=346697728
		Peak Reduce Virtual memory (bytes)=3567230976
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201007 17:09:04.104" starttime="20201007 17:09:04.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201007 17:09:04.105" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201007 17:09:04.105" starttime="20201007 17:09:04.104"></status>
</kw>
<status status="PASS" endtime="20201007 17:09:04.105" starttime="20201007 17:08:29.209"></status>
</kw>
<msg timestamp="20201007 17:09:04.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201007 17:09:04.106" starttime="20201007 17:08:29.209"></status>
</kw>
<msg timestamp="20201007 17:09:04.106" level="INFO">${output} = 2020-10-07 17:08:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-10-07 17:08:31 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
202...</msg>
<status status="PASS" endtime="20201007 17:09:04.107" starttime="20201007 17:08:29.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201007 17:09:04.107" starttime="20201007 17:09:04.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201007 17:09:04.108" starttime="20201007 17:09:04.107"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201007 17:09:04.108" critical="yes" starttime="20201007 17:08:29.172"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201007 17:09:04.109" starttime="20201007 17:07:43.650"></status>
</suite>
<status status="PASS" elapsedtime="218428" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
