<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201030 23:46:45.254" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:34:40.145" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:34:42.253" level="INFO">${rc} = 255</msg>
<msg timestamp="20201030 23:34:42.253" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 23:34:42.253" starttime="20201030 23:34:40.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:34:42.254" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 23:34:42.254" starttime="20201030 23:34:42.253"></status>
</kw>
<msg timestamp="20201030 23:34:42.254" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 23:34:42.254" starttime="20201030 23:34:40.139"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:34:42.266" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:34:44.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:34:44.384" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:34:44.384" starttime="20201030 23:34:42.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:34:44.385" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:34:44.385" starttime="20201030 23:34:44.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:34:44.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:34:44.385" starttime="20201030 23:34:44.385"></status>
</kw>
<status status="PASS" endtime="20201030 23:34:44.385" starttime="20201030 23:34:42.256"></status>
</kw>
<msg timestamp="20201030 23:34:44.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:34:44.386" starttime="20201030 23:34:42.256"></status>
</kw>
<msg timestamp="20201030 23:34:44.386" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201030 23:34:44.386" starttime="20201030 23:34:42.255"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201030 23:34:44.387" starttime="20201030 23:34:44.386"></status>
</kw>
<status status="PASS" endtime="20201030 23:34:44.387" starttime="20201030 23:34:42.255"></status>
</kw>
<status status="PASS" endtime="20201030 23:34:44.387" starttime="20201030 23:34:42.254"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:34:44.391" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:34:46.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:34:46.254" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:34:46.255" starttime="20201030 23:34:44.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:34:46.256" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:34:46.256" starttime="20201030 23:34:46.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:34:46.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:34:46.256" starttime="20201030 23:34:46.256"></status>
</kw>
<status status="PASS" endtime="20201030 23:34:46.257" starttime="20201030 23:34:44.389"></status>
</kw>
<msg timestamp="20201030 23:34:46.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:34:46.257" starttime="20201030 23:34:44.388"></status>
</kw>
<status status="PASS" endtime="20201030 23:34:46.257" starttime="20201030 23:34:44.388"></status>
</kw>
<status status="PASS" endtime="20201030 23:34:46.257" starttime="20201030 23:34:44.388"></status>
</kw>
<status status="PASS" endtime="20201030 23:34:46.257" starttime="20201030 23:34:44.387"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201030 23:34:46.258" starttime="20201030 23:34:46.257"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:34:46.262" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:34:48.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:34:48.332" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T23:34:46.223Z",
  "modificat...</msg>
<status status="PASS" endtime="20201030 23:34:48.332" starttime="20201030 23:34:46.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:34:48.334" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T23:34:46.223Z",
  "modificationTime" : "2020-10-30T23:34:46.223Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201030 23:34:48.334" starttime="20201030 23:34:48.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:34:48.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:34:48.334" starttime="20201030 23:34:48.334"></status>
</kw>
<status status="PASS" endtime="20201030 23:34:48.335" starttime="20201030 23:34:46.259"></status>
</kw>
<msg timestamp="20201030 23:34:48.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:34:48.335" starttime="20201030 23:34:46.258"></status>
</kw>
<msg timestamp="20201030 23:34:48.335" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T23:34:46.223Z",
  "modificat...</msg>
<status status="PASS" endtime="20201030 23:34:48.335" starttime="20201030 23:34:46.258"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201030 23:34:48.336" starttime="20201030 23:34:48.335"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:34:48.341" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:34:48.341" starttime="20201030 23:34:48.340"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:34:48.342" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:34:48.342" starttime="20201030 23:34:48.341"></status>
</kw>
<status status="PASS" endtime="20201030 23:34:48.342" starttime="20201030 23:34:48.340"></status>
</kw>
<msg timestamp="20201030 23:34:48.342" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:34:48.342" starttime="20201030 23:34:48.338"></status>
</kw>
<status status="PASS" endtime="20201030 23:34:48.342" starttime="20201030 23:34:48.338"></status>
</kw>
<msg timestamp="20201030 23:34:48.343" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201030 23:34:48.343" starttime="20201030 23:34:48.337"></status>
</kw>
<msg timestamp="20201030 23:34:48.343" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201030 23:34:48.343" starttime="20201030 23:34:48.336"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:34:48.347" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:34:50.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:34:50.282" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:34:50.282" starttime="20201030 23:34:48.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:34:50.284" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:34:50.284" starttime="20201030 23:34:50.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:34:50.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:34:50.284" starttime="20201030 23:34:50.284"></status>
</kw>
<status status="PASS" endtime="20201030 23:34:50.285" starttime="20201030 23:34:48.344"></status>
</kw>
<msg timestamp="20201030 23:34:50.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:34:50.285" starttime="20201030 23:34:48.344"></status>
</kw>
<status status="PASS" endtime="20201030 23:34:50.285" starttime="20201030 23:34:48.343"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:34:50.289" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:34:55.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:34:55.876" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:34:55.876" starttime="20201030 23:34:50.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:34:55.877" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:34:55.877" starttime="20201030 23:34:55.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:34:55.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:34:55.878" starttime="20201030 23:34:55.878"></status>
</kw>
<status status="PASS" endtime="20201030 23:34:55.878" starttime="20201030 23:34:50.286"></status>
</kw>
<msg timestamp="20201030 23:34:55.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:34:55.878" starttime="20201030 23:34:50.286"></status>
</kw>
<status status="PASS" endtime="20201030 23:34:55.879" starttime="20201030 23:34:50.285"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:34:55.882" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:34:59.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:34:59.719" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:34:59.719" starttime="20201030 23:34:55.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:34:59.719" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:34:59.720" starttime="20201030 23:34:59.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:34:59.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:34:59.720" starttime="20201030 23:34:59.720"></status>
</kw>
<status status="PASS" endtime="20201030 23:34:59.721" starttime="20201030 23:34:55.880"></status>
</kw>
<msg timestamp="20201030 23:34:59.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:34:59.721" starttime="20201030 23:34:55.879"></status>
</kw>
<status status="PASS" endtime="20201030 23:34:59.721" starttime="20201030 23:34:55.879"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:34:59.725" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:35:03.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:35:03.269" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:35:03.269" starttime="20201030 23:34:59.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:35:03.270" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:35:03.270" starttime="20201030 23:35:03.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:35:03.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:35:03.271" starttime="20201030 23:35:03.271"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:03.271" starttime="20201030 23:34:59.722"></status>
</kw>
<msg timestamp="20201030 23:35:03.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:35:03.271" starttime="20201030 23:34:59.722"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:03.272" starttime="20201030 23:34:59.721"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 23:35:03.272" critical="yes" starttime="20201030 23:34:40.135"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:35:03.277" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:35:03.277" starttime="20201030 23:35:03.277"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:35:03.278" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:35:03.278" starttime="20201030 23:35:03.277"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:03.278" starttime="20201030 23:35:03.276"></status>
</kw>
<msg timestamp="20201030 23:35:03.278" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:35:03.278" starttime="20201030 23:35:03.275"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:03.278" starttime="20201030 23:35:03.275"></status>
</kw>
<msg timestamp="20201030 23:35:03.278" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 23:35:03.278" starttime="20201030 23:35:03.274"></status>
</kw>
<msg timestamp="20201030 23:35:03.279" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 23:35:03.279" starttime="20201030 23:35:03.273"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:35:03.282" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:35:05.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:35:05.280" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:35:05.280" starttime="20201030 23:35:03.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:35:05.281" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:35:05.282" starttime="20201030 23:35:05.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:35:05.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:35:05.282" starttime="20201030 23:35:05.282"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:05.283" starttime="20201030 23:35:03.280"></status>
</kw>
<msg timestamp="20201030 23:35:05.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:35:05.283" starttime="20201030 23:35:03.279"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:05.283" starttime="20201030 23:35:03.279"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:35:05.286" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:35:07.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:35:07.175" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:35:07.175" starttime="20201030 23:35:05.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:35:07.175" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:35:07.176" starttime="20201030 23:35:07.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:35:07.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:35:07.176" starttime="20201030 23:35:07.176"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:07.177" starttime="20201030 23:35:05.284"></status>
</kw>
<msg timestamp="20201030 23:35:07.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:35:07.177" starttime="20201030 23:35:05.284"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:07.177" starttime="20201030 23:35:05.283"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 23:35:07.177" critical="yes" starttime="20201030 23:35:03.273"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201030 23:35:07.178" starttime="20201030 23:34:40.073"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 23:36:31.019" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 23:36:31.020" starttime="20201030 23:36:31.019"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:36:31.020" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 23:36:31.020" starttime="20201030 23:36:31.020"></status>
</kw>
<status status="PASS" endtime="20201030 23:36:31.020" starttime="20201030 23:36:31.019"></status>
</kw>
<msg timestamp="20201030 23:36:31.020" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 23:36:31.020" starttime="20201030 23:36:31.018"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 23:36:31.021" starttime="20201030 23:36:31.021"></status>
</kw>
<msg timestamp="20201030 23:36:31.021" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 23:36:31.021" starttime="20201030 23:36:31.021"></status>
</kw>
<status status="PASS" endtime="20201030 23:36:31.022" starttime="20201030 23:36:31.017"></status>
</kw>
<msg timestamp="20201030 23:36:31.022" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 23:36:31.022" starttime="20201030 23:36:31.015"></status>
</kw>
<msg timestamp="20201030 23:36:31.022" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 23:36:31.022" starttime="20201030 23:36:31.014"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 23:36:31.023" level="INFO">${random} = 75350</msg>
<status status="PASS" endtime="20201030 23:36:31.023" starttime="20201030 23:36:31.022"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:36:31.029" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-75350 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:36:34.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:36:34.276" level="INFO">${output} = 2020-10-30 23:36:32 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:36:32 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 ...</msg>
<status status="PASS" endtime="20201030 23:36:34.276" starttime="20201030 23:36:31.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:36:34.277" level="INFO">2020-10-30 23:36:32 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:36:32 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 23:36:32 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-30 23:36:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 23:36:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6678C4D7E3BF-&gt;656e643c-0b13-49b8-92f5-0c4725d0111f
2020-10-30 23:36:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201030 23:36:34.277" starttime="20201030 23:36:34.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:36:34.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:36:34.278" starttime="20201030 23:36:34.278"></status>
</kw>
<status status="PASS" endtime="20201030 23:36:34.278" starttime="20201030 23:36:31.023"></status>
</kw>
<msg timestamp="20201030 23:36:34.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:36:34.279" starttime="20201030 23:36:31.023"></status>
</kw>
<msg timestamp="20201030 23:36:34.279" level="INFO">${result} = 2020-10-30 23:36:32 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:36:32 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 ...</msg>
<status status="PASS" endtime="20201030 23:36:34.279" starttime="20201030 23:36:31.023"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:36:34.282" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:36:36.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:36:36.004" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:34 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-30 23:35 ofs://om/volume1/bucket1/ozone-07941
-rw-...</msg>
<status status="PASS" endtime="20201030 23:36:36.004" starttime="20201030 23:36:34.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:36:36.005" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:34 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-30 23:35 ofs://om/volume1/bucket1/ozone-07941
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-30 23:36 ofs://om/volume1/bucket1/ozone-75350
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:35 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:36 ofs://om/volume1/bucket1/wordcount-17.txt</msg>
<status status="PASS" endtime="20201030 23:36:36.005" starttime="20201030 23:36:36.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:36:36.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:36:36.006" starttime="20201030 23:36:36.005"></status>
</kw>
<status status="PASS" endtime="20201030 23:36:36.006" starttime="20201030 23:36:34.280"></status>
</kw>
<msg timestamp="20201030 23:36:36.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:36:36.006" starttime="20201030 23:36:34.280"></status>
</kw>
<msg timestamp="20201030 23:36:36.007" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:34 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-30 23:35 ofs://om/volume1/bucket1/ozone-07941
-rw-...</msg>
<status status="PASS" endtime="20201030 23:36:36.007" starttime="20201030 23:36:34.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201030 23:36:36.007" starttime="20201030 23:36:36.007"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201030 23:36:36.007" critical="yes" starttime="20201030 23:36:31.013"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201030 23:36:36.008" starttime="20201030 23:36:30.960"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:35:11.610" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:35:11.610" starttime="20201030 23:35:11.609"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:35:11.610" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:35:11.610" starttime="20201030 23:35:11.610"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:11.610" starttime="20201030 23:35:11.609"></status>
</kw>
<msg timestamp="20201030 23:35:11.610" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:35:11.610" starttime="20201030 23:35:11.608"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:11.611" starttime="20201030 23:35:11.607"></status>
</kw>
<msg timestamp="20201030 23:35:11.611" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 23:35:11.611" starttime="20201030 23:35:11.607"></status>
</kw>
<msg timestamp="20201030 23:35:11.611" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 23:35:11.611" starttime="20201030 23:35:11.605"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 23:35:11.611" level="INFO">${random} = 07941</msg>
<status status="PASS" endtime="20201030 23:35:11.612" starttime="20201030 23:35:11.611"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:35:11.616" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-07941 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:35:14.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:35:14.751" level="INFO">${output} = 2020-10-30 23:35:13 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:35:13 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 ...</msg>
<status status="PASS" endtime="20201030 23:35:14.751" starttime="20201030 23:35:11.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:35:14.752" level="INFO">2020-10-30 23:35:13 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:35:13 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 23:35:13 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-30 23:35:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 23:35:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5491242A409C-&gt;656e643c-0b13-49b8-92f5-0c4725d0111f
2020-10-30 23:35:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201030 23:35:14.752" starttime="20201030 23:35:14.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:35:14.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:35:14.753" starttime="20201030 23:35:14.752"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:14.753" starttime="20201030 23:35:11.612"></status>
</kw>
<msg timestamp="20201030 23:35:14.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:35:14.754" starttime="20201030 23:35:11.612"></status>
</kw>
<msg timestamp="20201030 23:35:14.754" level="INFO">${result} = 2020-10-30 23:35:13 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:35:13 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 ...</msg>
<status status="PASS" endtime="20201030 23:35:14.754" starttime="20201030 23:35:11.612"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:35:14.757" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:35:16.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:35:16.461" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:34 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-30 23:35 o3fs://bucket1.volume1.om/ozone-07941
dr...</msg>
<status status="PASS" endtime="20201030 23:35:16.461" starttime="20201030 23:35:14.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:35:16.462" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:34 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-30 23:35 o3fs://bucket1.volume1.om/ozone-07941
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:35 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 23:35:16.462" starttime="20201030 23:35:16.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:35:16.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:35:16.463" starttime="20201030 23:35:16.462"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:16.463" starttime="20201030 23:35:14.755"></status>
</kw>
<msg timestamp="20201030 23:35:16.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:35:16.463" starttime="20201030 23:35:14.754"></status>
</kw>
<msg timestamp="20201030 23:35:16.463" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:34 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-30 23:35 o3fs://bucket1.volume1.om/ozone-07941
dr...</msg>
<status status="PASS" endtime="20201030 23:35:16.464" starttime="20201030 23:35:14.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201030 23:35:16.464" starttime="20201030 23:35:16.464"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201030 23:35:16.464" critical="yes" starttime="20201030 23:35:11.604"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201030 23:35:16.466" starttime="20201030 23:35:11.552"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:36:40.282" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:36:40.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:36:40.286" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 23:36:40.286" starttime="20201030 23:36:40.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:36:40.287" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 23:36:40.287" starttime="20201030 23:36:40.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:36:40.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:36:40.287" starttime="20201030 23:36:40.287"></status>
</kw>
<status status="PASS" endtime="20201030 23:36:40.288" starttime="20201030 23:36:40.277"></status>
</kw>
<msg timestamp="20201030 23:36:40.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:36:40.288" starttime="20201030 23:36:40.277"></status>
</kw>
<msg timestamp="20201030 23:36:40.288" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 23:36:40.288" starttime="20201030 23:36:40.276"></status>
</kw>
<msg timestamp="20201030 23:36:40.288" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 23:36:40.288" starttime="20201030 23:36:40.276"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 23:36:40.291" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 23:36:40.291" starttime="20201030 23:36:40.290"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:36:40.292" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 23:36:40.292" starttime="20201030 23:36:40.291"></status>
</kw>
<status status="PASS" endtime="20201030 23:36:40.292" starttime="20201030 23:36:40.290"></status>
</kw>
<msg timestamp="20201030 23:36:40.292" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 23:36:40.292" starttime="20201030 23:36:40.290"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 23:36:40.293" starttime="20201030 23:36:40.293"></status>
</kw>
<msg timestamp="20201030 23:36:40.293" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 23:36:40.293" starttime="20201030 23:36:40.292"></status>
</kw>
<status status="PASS" endtime="20201030 23:36:40.293" starttime="20201030 23:36:40.289"></status>
</kw>
<msg timestamp="20201030 23:36:40.294" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 23:36:40.294" starttime="20201030 23:36:40.289"></status>
</kw>
<msg timestamp="20201030 23:36:40.294" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 23:36:40.294" starttime="20201030 23:36:40.288"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:36:40.296" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:37:14.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:37:14.374" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 23:36:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:36:42 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201030 23:37:14.374" starttime="20201030 23:36:40.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:37:14.376" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-30 23:36:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:36:42 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 23:36:42 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-30 23:36:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 23:36:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6979102D2BE7-&gt;656e643c-0b13-49b8-92f5-0c4725d0111f
2020-10-30 23:36:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-30 23:36:43 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-10-30 23:36:43 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 23:36:43 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-30 23:36:43 INFO  JobSubmitter:198 - number of splits:3
2020-10-30 23:36:46 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604100850094_0003
2020-10-30 23:36:46 INFO  YarnClientImpl:273 - Submitted application application_1604100850094_0003
2020-10-30 23:36:46 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604100850094_0003/
2020-10-30 23:36:46 INFO  Job:1339 - Running job: job_1604100850094_0003
2020-10-30 23:36:53 INFO  Job:1360 - Job job_1604100850094_0003 running in uber mode : false
2020-10-30 23:36:53 INFO  Job:1367 -  map 0% reduce 0%
2020-10-30 23:36:59 INFO  Job:1367 -  map 33% reduce 0%
2020-10-30 23:37:04 INFO  Job:1367 -  map 67% reduce 0%
2020-10-30 23:37:09 INFO  Job:1367 -  map 100% reduce 0%
2020-10-30 23:37:12 INFO  Job:1367 -  map 100% reduce 100%
2020-10-30 23:37:13 INFO  Job:1378 - Job job_1604100850094_0003 completed successfully
2020-10-30 23:37:13 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615237
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35848
		Total time spent by all reduces in occupied slots (ms)=13280
		Total time spent by all map tasks (ms)=8962
		Total time spent by all reduce tasks (ms)=3320
		Total vcore-milliseconds taken by all map tasks=8962
		Total vcore-milliseconds taken by all reduce tasks=3320
		Total megabyte-milliseconds taken by all map tasks=36708352
		Total megabyte-milliseconds taken by all reduce tasks=13598720
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=498
		CPU time spent (ms)=6060
		Physical memory (bytes) snapshot=1118601216
		Virtual memory (bytes) snapshot=16038084608
		Total committed heap usage (bytes)=1048051712
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.687 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201030 23:37:14.376" starttime="20201030 23:37:14.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:37:14.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:37:14.377" starttime="20201030 23:37:14.377"></status>
</kw>
<status status="PASS" endtime="20201030 23:37:14.377" starttime="20201030 23:36:40.294"></status>
</kw>
<msg timestamp="20201030 23:37:14.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:37:14.378" starttime="20201030 23:36:40.294"></status>
</kw>
<msg timestamp="20201030 23:37:14.378" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 23:36:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:36:42 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201030 23:37:14.378" starttime="20201030 23:36:40.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 23:37:14.379" starttime="20201030 23:37:14.378"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 23:37:14.379" critical="yes" starttime="20201030 23:36:40.275"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:37:14.384" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:37:14.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:37:14.391" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 23:37:14.391" starttime="20201030 23:37:14.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:37:14.392" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 23:37:14.392" starttime="20201030 23:37:14.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:37:14.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:37:14.393" starttime="20201030 23:37:14.393"></status>
</kw>
<status status="PASS" endtime="20201030 23:37:14.394" starttime="20201030 23:37:14.381"></status>
</kw>
<msg timestamp="20201030 23:37:14.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:37:14.394" starttime="20201030 23:37:14.381"></status>
</kw>
<msg timestamp="20201030 23:37:14.394" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 23:37:14.394" starttime="20201030 23:37:14.380"></status>
</kw>
<msg timestamp="20201030 23:37:14.394" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 23:37:14.394" starttime="20201030 23:37:14.380"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 23:37:14.395" level="INFO">${random} = 13</msg>
<status status="PASS" endtime="20201030 23:37:14.395" starttime="20201030 23:37:14.394"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 23:37:14.398" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 23:37:14.398" starttime="20201030 23:37:14.398"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:37:14.399" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 23:37:14.399" starttime="20201030 23:37:14.399"></status>
</kw>
<status status="PASS" endtime="20201030 23:37:14.399" starttime="20201030 23:37:14.398"></status>
</kw>
<msg timestamp="20201030 23:37:14.399" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 23:37:14.399" starttime="20201030 23:37:14.397"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 23:37:14.400" starttime="20201030 23:37:14.400"></status>
</kw>
<msg timestamp="20201030 23:37:14.401" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 23:37:14.401" starttime="20201030 23:37:14.399"></status>
</kw>
<status status="PASS" endtime="20201030 23:37:14.401" starttime="20201030 23:37:14.396"></status>
</kw>
<msg timestamp="20201030 23:37:14.401" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 23:37:14.401" starttime="20201030 23:37:14.396"></status>
</kw>
<msg timestamp="20201030 23:37:14.401" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 23:37:14.401" starttime="20201030 23:37:14.395"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 23:37:14.404" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 23:37:14.404" starttime="20201030 23:37:14.404"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:37:14.405" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 23:37:14.405" starttime="20201030 23:37:14.404"></status>
</kw>
<status status="PASS" endtime="20201030 23:37:14.405" starttime="20201030 23:37:14.403"></status>
</kw>
<msg timestamp="20201030 23:37:14.405" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 23:37:14.405" starttime="20201030 23:37:14.403"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:37:14.407" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201030 23:37:14.407" starttime="20201030 23:37:14.406"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:37:14.407" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201030 23:37:14.407" starttime="20201030 23:37:14.407"></status>
</kw>
<status status="PASS" endtime="20201030 23:37:14.407" starttime="20201030 23:37:14.406"></status>
</kw>
<msg timestamp="20201030 23:37:14.407" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201030 23:37:14.408" starttime="20201030 23:37:14.405"></status>
</kw>
<status status="PASS" endtime="20201030 23:37:14.408" starttime="20201030 23:37:14.402"></status>
</kw>
<msg timestamp="20201030 23:37:14.408" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201030 23:37:14.408" starttime="20201030 23:37:14.402"></status>
</kw>
<msg timestamp="20201030 23:37:14.408" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201030 23:37:14.408" starttime="20201030 23:37:14.401"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 23:37:14.411" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 23:37:14.411" starttime="20201030 23:37:14.411"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:37:14.412" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 23:37:14.412" starttime="20201030 23:37:14.411"></status>
</kw>
<status status="PASS" endtime="20201030 23:37:14.412" starttime="20201030 23:37:14.410"></status>
</kw>
<msg timestamp="20201030 23:37:14.412" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 23:37:14.412" starttime="20201030 23:37:14.410"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:37:14.418" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201030 23:37:14.418" starttime="20201030 23:37:14.418"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:37:14.419" level="INFO">${result} = /wordcount-13.txt</msg>
<status status="PASS" endtime="20201030 23:37:14.419" starttime="20201030 23:37:14.418"></status>
</kw>
<status status="PASS" endtime="20201030 23:37:14.419" starttime="20201030 23:37:14.417"></status>
</kw>
<msg timestamp="20201030 23:37:14.419" level="INFO">${path_with_leading} = /wordcount-13.txt</msg>
<status status="PASS" endtime="20201030 23:37:14.419" starttime="20201030 23:37:14.412"></status>
</kw>
<status status="PASS" endtime="20201030 23:37:14.419" starttime="20201030 23:37:14.409"></status>
</kw>
<msg timestamp="20201030 23:37:14.419" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-13.txt</msg>
<status status="PASS" endtime="20201030 23:37:14.419" starttime="20201030 23:37:14.409"></status>
</kw>
<msg timestamp="20201030 23:37:14.419" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-13.txt</msg>
<status status="PASS" endtime="20201030 23:37:14.419" starttime="20201030 23:37:14.408"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:37:14.423" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-13.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:37:47.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:37:47.022" level="INFO">${output} = 2020-10-30 23:37:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-10-30 23:37:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201030 23:37:47.022" starttime="20201030 23:37:14.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:37:47.023" level="INFO">2020-10-30 23:37:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-10-30 23:37:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 23:37:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:37:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 23:37:16 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-30 23:37:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 23:37:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6BBB15F453A8-&gt;656e643c-0b13-49b8-92f5-0c4725d0111f
2020-10-30 23:37:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 23:37:17 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-30 23:37:17 INFO  JobSubmitter:198 - number of splits:3
2020-10-30 23:37:18 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604100850094_0004
2020-10-30 23:37:18 INFO  YarnClientImpl:273 - Submitted application application_1604100850094_0004
2020-10-30 23:37:18 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604100850094_0004/
2020-10-30 23:37:18 INFO  Job:1339 - Running job: job_1604100850094_0004
2020-10-30 23:37:26 INFO  Job:1360 - Job job_1604100850094_0004 running in uber mode : false
2020-10-30 23:37:26 INFO  Job:1367 -  map 0% reduce 0%
2020-10-30 23:37:32 INFO  Job:1367 -  map 33% reduce 0%
2020-10-30 23:37:36 INFO  Job:1367 -  map 67% reduce 0%
2020-10-30 23:37:41 INFO  Job:1367 -  map 100% reduce 0%
2020-10-30 23:37:46 INFO  Job:1367 -  map 100% reduce 100%
2020-10-30 23:37:46 INFO  Job:1378 - Job job_1604100850094_0004 completed successfully
2020-10-30 23:37:46 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36080
		Total time spent by all reduces in occupied slots (ms)=13000
		Total time spent by all map tasks (ms)=9020
		Total time spent by all reduce tasks (ms)=3250
		Total vcore-milliseconds taken by all map tasks=9020
		Total vcore-milliseconds taken by all reduce tasks=3250
		Total megabyte-milliseconds taken by all map tasks=36945920
		Total megabyte-milliseconds taken by all reduce tasks=13312000
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=498
		CPU time spent (ms)=6530
		Physical memory (bytes) snapshot=1137164288
		Virtual memory (bytes) snapshot=16067141632
		Total committed heap usage (bytes)=1013972992
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201030 23:37:47.023" starttime="20201030 23:37:47.022"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:37:47.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:37:47.024" starttime="20201030 23:37:47.023"></status>
</kw>
<status status="PASS" endtime="20201030 23:37:47.024" starttime="20201030 23:37:14.420"></status>
</kw>
<msg timestamp="20201030 23:37:47.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:37:47.024" starttime="20201030 23:37:14.420"></status>
</kw>
<msg timestamp="20201030 23:37:47.024" level="INFO">${output} = 2020-10-30 23:37:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-10-30 23:37:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201030 23:37:47.025" starttime="20201030 23:37:14.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201030 23:37:47.025" starttime="20201030 23:37:47.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 23:37:47.026" starttime="20201030 23:37:47.025"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 23:37:47.026" critical="yes" starttime="20201030 23:37:14.379"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201030 23:37:47.027" starttime="20201030 23:36:40.226"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:35:20.651" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:35:20.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:35:20.656" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 23:35:20.656" starttime="20201030 23:35:20.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:35:20.656" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 23:35:20.657" starttime="20201030 23:35:20.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:35:20.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:35:20.657" starttime="20201030 23:35:20.657"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:20.657" starttime="20201030 23:35:20.646"></status>
</kw>
<msg timestamp="20201030 23:35:20.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:35:20.658" starttime="20201030 23:35:20.646"></status>
</kw>
<msg timestamp="20201030 23:35:20.658" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 23:35:20.658" starttime="20201030 23:35:20.645"></status>
</kw>
<msg timestamp="20201030 23:35:20.658" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 23:35:20.658" starttime="20201030 23:35:20.645"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:35:20.661" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:35:20.661" starttime="20201030 23:35:20.661"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:35:20.662" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:35:20.662" starttime="20201030 23:35:20.661"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:20.662" starttime="20201030 23:35:20.660"></status>
</kw>
<msg timestamp="20201030 23:35:20.662" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:35:20.662" starttime="20201030 23:35:20.660"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:20.662" starttime="20201030 23:35:20.659"></status>
</kw>
<msg timestamp="20201030 23:35:20.662" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 23:35:20.662" starttime="20201030 23:35:20.659"></status>
</kw>
<msg timestamp="20201030 23:35:20.662" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 23:35:20.663" starttime="20201030 23:35:20.658"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:35:20.666" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:35:54.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:35:54.571" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 23:35:22 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:35:22 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201030 23:35:54.571" starttime="20201030 23:35:20.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:35:54.572" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-30 23:35:22 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:35:22 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 23:35:22 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-30 23:35:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 23:35:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7D504971E751-&gt;656e643c-0b13-49b8-92f5-0c4725d0111f
2020-10-30 23:35:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-30 23:35:23 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-10-30 23:35:23 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-30 23:35:24 INFO  JobSubmitter:198 - number of splits:3
2020-10-30 23:35:24 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604100850094_0001
2020-10-30 23:35:24 INFO  YarnClientImpl:273 - Submitted application application_1604100850094_0001
2020-10-30 23:35:24 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604100850094_0001/
2020-10-30 23:35:24 INFO  Job:1339 - Running job: job_1604100850094_0001
2020-10-30 23:35:33 INFO  Job:1360 - Job job_1604100850094_0001 running in uber mode : false
2020-10-30 23:35:33 INFO  Job:1367 -  map 0% reduce 0%
2020-10-30 23:35:39 INFO  Job:1367 -  map 33% reduce 0%
2020-10-30 23:35:44 INFO  Job:1367 -  map 67% reduce 0%
2020-10-30 23:35:49 INFO  Job:1367 -  map 100% reduce 0%
2020-10-30 23:35:52 INFO  Job:1367 -  map 100% reduce 100%
2020-10-30 23:35:53 INFO  Job:1378 - Job job_1604100850094_0001 completed successfully
2020-10-30 23:35:53 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615457
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35184
		Total time spent by all reduces in occupied slots (ms)=13148
		Total time spent by all map tasks (ms)=8796
		Total time spent by all reduce tasks (ms)=3287
		Total vcore-milliseconds taken by all map tasks=8796
		Total vcore-milliseconds taken by all reduce tasks=3287
		Total megabyte-milliseconds taken by all map tasks=36028416
		Total megabyte-milliseconds taken by all reduce tasks=13463552
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=476
		CPU time spent (ms)=6070
		Physical memory (bytes) snapshot=1151512576
		Virtual memory (bytes) snapshot=16072376320
		Total committed heap usage (bytes)=1055391744
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.431 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201030 23:35:54.572" starttime="20201030 23:35:54.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:35:54.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:35:54.573" starttime="20201030 23:35:54.573"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:54.573" starttime="20201030 23:35:20.663"></status>
</kw>
<msg timestamp="20201030 23:35:54.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:35:54.574" starttime="20201030 23:35:20.663"></status>
</kw>
<msg timestamp="20201030 23:35:54.574" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 23:35:22 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:35:22 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201030 23:35:54.574" starttime="20201030 23:35:20.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 23:35:54.575" starttime="20201030 23:35:54.574"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 23:35:54.575" critical="yes" starttime="20201030 23:35:20.645"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:35:54.579" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:35:54.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:35:54.585" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 23:35:54.585" starttime="20201030 23:35:54.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:35:54.586" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 23:35:54.586" starttime="20201030 23:35:54.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:35:54.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:35:54.586" starttime="20201030 23:35:54.586"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:54.586" starttime="20201030 23:35:54.577"></status>
</kw>
<msg timestamp="20201030 23:35:54.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:35:54.587" starttime="20201030 23:35:54.577"></status>
</kw>
<msg timestamp="20201030 23:35:54.587" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 23:35:54.587" starttime="20201030 23:35:54.576"></status>
</kw>
<msg timestamp="20201030 23:35:54.587" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 23:35:54.587" starttime="20201030 23:35:54.576"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 23:35:54.588" level="INFO">${random} = 17</msg>
<status status="PASS" endtime="20201030 23:35:54.588" starttime="20201030 23:35:54.587"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:35:54.591" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:35:54.591" starttime="20201030 23:35:54.591"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:35:54.592" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:35:54.592" starttime="20201030 23:35:54.591"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:54.592" starttime="20201030 23:35:54.590"></status>
</kw>
<msg timestamp="20201030 23:35:54.592" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:35:54.592" starttime="20201030 23:35:54.590"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:54.592" starttime="20201030 23:35:54.589"></status>
</kw>
<msg timestamp="20201030 23:35:54.592" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 23:35:54.592" starttime="20201030 23:35:54.588"></status>
</kw>
<msg timestamp="20201030 23:35:54.593" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 23:35:54.593" starttime="20201030 23:35:54.588"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:35:54.596" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:35:54.596" starttime="20201030 23:35:54.595"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:35:54.596" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:35:54.596" starttime="20201030 23:35:54.596"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:54.596" starttime="20201030 23:35:54.595"></status>
</kw>
<msg timestamp="20201030 23:35:54.596" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:35:54.596" starttime="20201030 23:35:54.594"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:54.597" starttime="20201030 23:35:54.594"></status>
</kw>
<msg timestamp="20201030 23:35:54.597" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201030 23:35:54.597" starttime="20201030 23:35:54.593"></status>
</kw>
<msg timestamp="20201030 23:35:54.597" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201030 23:35:54.597" starttime="20201030 23:35:54.593"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:35:54.600" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:35:54.600" starttime="20201030 23:35:54.600"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:35:54.601" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:35:54.601" starttime="20201030 23:35:54.600"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:54.601" starttime="20201030 23:35:54.599"></status>
</kw>
<msg timestamp="20201030 23:35:54.601" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:35:54.601" starttime="20201030 23:35:54.599"></status>
</kw>
<status status="PASS" endtime="20201030 23:35:54.601" starttime="20201030 23:35:54.598"></status>
</kw>
<msg timestamp="20201030 23:35:54.601" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-17.txt</msg>
<status status="PASS" endtime="20201030 23:35:54.601" starttime="20201030 23:35:54.598"></status>
</kw>
<msg timestamp="20201030 23:35:54.602" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-17.txt</msg>
<status status="PASS" endtime="20201030 23:35:54.602" starttime="20201030 23:35:54.597"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:35:54.606" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-17.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:36:26.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:36:26.828" level="INFO">${output} = 2020-10-30 23:35:56 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-10-30 23:35:56 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201030 23:36:26.828" starttime="20201030 23:35:54.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:36:26.830" level="INFO">2020-10-30 23:35:56 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-10-30 23:35:56 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 23:35:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:35:56 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 23:35:56 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-30 23:35:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 23:35:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-04F44EDC6F5E-&gt;656e643c-0b13-49b8-92f5-0c4725d0111f
2020-10-30 23:35:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 23:35:57 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-30 23:35:57 INFO  JobSubmitter:198 - number of splits:3
2020-10-30 23:35:57 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604100850094_0002
2020-10-30 23:35:58 INFO  YarnClientImpl:273 - Submitted application application_1604100850094_0002
2020-10-30 23:35:58 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604100850094_0002/
2020-10-30 23:35:58 INFO  Job:1339 - Running job: job_1604100850094_0002
2020-10-30 23:36:06 INFO  Job:1360 - Job job_1604100850094_0002 running in uber mode : false
2020-10-30 23:36:06 INFO  Job:1367 -  map 0% reduce 0%
2020-10-30 23:36:12 INFO  Job:1367 -  map 33% reduce 0%
2020-10-30 23:36:17 INFO  Job:1367 -  map 67% reduce 0%
2020-10-30 23:36:22 INFO  Job:1367 -  map 100% reduce 0%
2020-10-30 23:36:25 INFO  Job:1367 -  map 100% reduce 100%
2020-10-30 23:36:26 INFO  Job:1378 - Job job_1604100850094_0002 completed successfully
2020-10-30 23:36:26 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35716
		Total time spent by all reduces in occupied slots (ms)=13548
		Total time spent by all map tasks (ms)=8929
		Total time spent by all reduce tasks (ms)=3387
		Total vcore-milliseconds taken by all map tasks=8929
		Total vcore-milliseconds taken by all reduce tasks=3387
		Total megabyte-milliseconds taken by all map tasks=36573184
		Total megabyte-milliseconds taken by all reduce tasks=13873152
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=459
		CPU time spent (ms)=6500
		Physical memory (bytes) snapshot=1139003392
		Virtual memory (bytes) snapshot=16069779456
		Total committed heap usage (bytes)=1030225920
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201030 23:36:26.830" starttime="20201030 23:36:26.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:36:26.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:36:26.830" starttime="20201030 23:36:26.830"></status>
</kw>
<status status="PASS" endtime="20201030 23:36:26.831" starttime="20201030 23:35:54.603"></status>
</kw>
<msg timestamp="20201030 23:36:26.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:36:26.831" starttime="20201030 23:35:54.602"></status>
</kw>
<msg timestamp="20201030 23:36:26.831" level="INFO">${output} = 2020-10-30 23:35:56 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-10-30 23:35:56 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201030 23:36:26.831" starttime="20201030 23:35:54.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201030 23:36:26.832" starttime="20201030 23:36:26.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 23:36:26.832" starttime="20201030 23:36:26.832"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 23:36:26.833" critical="yes" starttime="20201030 23:35:54.575"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201030 23:36:26.834" starttime="20201030 23:35:20.593"></status>
</suite>
<status status="PASS" elapsedtime="170109" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:38:48.314" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:38:50.358" level="INFO">${rc} = 255</msg>
<msg timestamp="20201030 23:38:50.358" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 23:38:50.358" starttime="20201030 23:38:48.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:38:50.359" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 23:38:50.359" starttime="20201030 23:38:50.358"></status>
</kw>
<msg timestamp="20201030 23:38:50.359" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 23:38:50.359" starttime="20201030 23:38:48.309"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:38:50.365" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:38:52.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:38:52.163" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:38:52.164" starttime="20201030 23:38:50.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:38:52.165" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:38:52.165" starttime="20201030 23:38:52.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:38:52.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:38:52.166" starttime="20201030 23:38:52.165"></status>
</kw>
<status status="PASS" endtime="20201030 23:38:52.166" starttime="20201030 23:38:50.361"></status>
</kw>
<msg timestamp="20201030 23:38:52.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:38:52.166" starttime="20201030 23:38:50.361"></status>
</kw>
<msg timestamp="20201030 23:38:52.166" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201030 23:38:52.166" starttime="20201030 23:38:50.360"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201030 23:38:52.167" starttime="20201030 23:38:52.166"></status>
</kw>
<status status="PASS" endtime="20201030 23:38:52.167" starttime="20201030 23:38:50.360"></status>
</kw>
<status status="PASS" endtime="20201030 23:38:52.167" starttime="20201030 23:38:50.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:38:52.172" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:38:54.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:38:54.059" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:38:54.059" starttime="20201030 23:38:52.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:38:54.060" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:38:54.060" starttime="20201030 23:38:54.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:38:54.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:38:54.061" starttime="20201030 23:38:54.060"></status>
</kw>
<status status="PASS" endtime="20201030 23:38:54.061" starttime="20201030 23:38:52.169"></status>
</kw>
<msg timestamp="20201030 23:38:54.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:38:54.061" starttime="20201030 23:38:52.168"></status>
</kw>
<status status="PASS" endtime="20201030 23:38:54.061" starttime="20201030 23:38:52.168"></status>
</kw>
<status status="PASS" endtime="20201030 23:38:54.062" starttime="20201030 23:38:52.168"></status>
</kw>
<status status="PASS" endtime="20201030 23:38:54.062" starttime="20201030 23:38:52.167"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201030 23:38:54.062" starttime="20201030 23:38:54.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:38:54.067" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:38:56.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:38:56.047" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T23:38:54.034Z",
  "modificat...</msg>
<status status="PASS" endtime="20201030 23:38:56.047" starttime="20201030 23:38:54.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:38:56.048" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T23:38:54.034Z",
  "modificationTime" : "2020-10-30T23:38:54.034Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201030 23:38:56.048" starttime="20201030 23:38:56.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:38:56.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:38:56.048" starttime="20201030 23:38:56.048"></status>
</kw>
<status status="PASS" endtime="20201030 23:38:56.049" starttime="20201030 23:38:54.063"></status>
</kw>
<msg timestamp="20201030 23:38:56.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:38:56.049" starttime="20201030 23:38:54.063"></status>
</kw>
<msg timestamp="20201030 23:38:56.049" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T23:38:54.034Z",
  "modificat...</msg>
<status status="PASS" endtime="20201030 23:38:56.049" starttime="20201030 23:38:54.063"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201030 23:38:56.050" starttime="20201030 23:38:56.049"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:38:56.053" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:38:56.053" starttime="20201030 23:38:56.053"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:38:56.054" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:38:56.054" starttime="20201030 23:38:56.053"></status>
</kw>
<status status="PASS" endtime="20201030 23:38:56.054" starttime="20201030 23:38:56.052"></status>
</kw>
<msg timestamp="20201030 23:38:56.054" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:38:56.054" starttime="20201030 23:38:56.052"></status>
</kw>
<status status="PASS" endtime="20201030 23:38:56.054" starttime="20201030 23:38:56.051"></status>
</kw>
<msg timestamp="20201030 23:38:56.054" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201030 23:38:56.055" starttime="20201030 23:38:56.050"></status>
</kw>
<msg timestamp="20201030 23:38:56.055" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201030 23:38:56.055" starttime="20201030 23:38:56.050"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:38:56.060" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:38:57.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:38:57.990" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:38:57.990" starttime="20201030 23:38:56.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:38:57.991" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:38:57.991" starttime="20201030 23:38:57.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:38:57.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:38:57.992" starttime="20201030 23:38:57.992"></status>
</kw>
<status status="PASS" endtime="20201030 23:38:57.992" starttime="20201030 23:38:56.056"></status>
</kw>
<msg timestamp="20201030 23:38:57.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:38:57.993" starttime="20201030 23:38:56.056"></status>
</kw>
<status status="PASS" endtime="20201030 23:38:57.993" starttime="20201030 23:38:56.055"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:38:57.996" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:39:05.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:39:05.343" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:39:05.343" starttime="20201030 23:38:57.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:39:05.344" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:39:05.344" starttime="20201030 23:39:05.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:39:05.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:39:05.345" starttime="20201030 23:39:05.344"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:05.345" starttime="20201030 23:38:57.994"></status>
</kw>
<msg timestamp="20201030 23:39:05.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:39:05.345" starttime="20201030 23:38:57.994"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:05.346" starttime="20201030 23:38:57.993"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:39:05.352" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:39:09.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:39:09.523" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:39:09.523" starttime="20201030 23:39:05.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:39:09.524" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:39:09.524" starttime="20201030 23:39:09.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:39:09.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:39:09.525" starttime="20201030 23:39:09.524"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:09.525" starttime="20201030 23:39:05.347"></status>
</kw>
<msg timestamp="20201030 23:39:09.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:39:09.525" starttime="20201030 23:39:05.347"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:09.526" starttime="20201030 23:39:05.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:39:09.529" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:39:13.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:39:13.026" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:39:13.026" starttime="20201030 23:39:09.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:39:13.028" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:39:13.028" starttime="20201030 23:39:13.027"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:39:13.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:39:13.028" starttime="20201030 23:39:13.028"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:13.028" starttime="20201030 23:39:09.527"></status>
</kw>
<msg timestamp="20201030 23:39:13.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:39:13.029" starttime="20201030 23:39:09.526"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:13.029" starttime="20201030 23:39:09.526"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 23:39:13.029" critical="yes" starttime="20201030 23:38:48.308"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:39:13.035" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:39:13.035" starttime="20201030 23:39:13.034"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:39:13.035" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:39:13.035" starttime="20201030 23:39:13.035"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:13.036" starttime="20201030 23:39:13.033"></status>
</kw>
<msg timestamp="20201030 23:39:13.036" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:39:13.036" starttime="20201030 23:39:13.033"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:13.036" starttime="20201030 23:39:13.032"></status>
</kw>
<msg timestamp="20201030 23:39:13.036" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 23:39:13.036" starttime="20201030 23:39:13.032"></status>
</kw>
<msg timestamp="20201030 23:39:13.036" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 23:39:13.036" starttime="20201030 23:39:13.031"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:39:13.040" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:39:14.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:39:14.814" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:39:14.814" starttime="20201030 23:39:13.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:39:14.815" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:39:14.815" starttime="20201030 23:39:14.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:39:14.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:39:14.816" starttime="20201030 23:39:14.815"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:14.816" starttime="20201030 23:39:13.037"></status>
</kw>
<msg timestamp="20201030 23:39:14.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:39:14.816" starttime="20201030 23:39:13.037"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:14.816" starttime="20201030 23:39:13.036"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:39:14.821" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:39:16.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:39:16.748" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:39:16.748" starttime="20201030 23:39:14.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:39:16.749" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:39:16.749" starttime="20201030 23:39:16.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:39:16.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:39:16.749" starttime="20201030 23:39:16.749"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:16.750" starttime="20201030 23:39:14.818"></status>
</kw>
<msg timestamp="20201030 23:39:16.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:39:16.750" starttime="20201030 23:39:14.817"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:16.750" starttime="20201030 23:39:14.817"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 23:39:16.750" critical="yes" starttime="20201030 23:39:13.030"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201030 23:39:16.751" starttime="20201030 23:38:48.256"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 23:40:51.469" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 23:40:51.469" starttime="20201030 23:40:51.468"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:40:51.469" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 23:40:51.469" starttime="20201030 23:40:51.469"></status>
</kw>
<status status="PASS" endtime="20201030 23:40:51.470" starttime="20201030 23:40:51.468"></status>
</kw>
<msg timestamp="20201030 23:40:51.470" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 23:40:51.470" starttime="20201030 23:40:51.468"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 23:40:51.470" starttime="20201030 23:40:51.470"></status>
</kw>
<msg timestamp="20201030 23:40:51.471" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 23:40:51.471" starttime="20201030 23:40:51.470"></status>
</kw>
<status status="PASS" endtime="20201030 23:40:51.471" starttime="20201030 23:40:51.467"></status>
</kw>
<msg timestamp="20201030 23:40:51.471" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 23:40:51.471" starttime="20201030 23:40:51.467"></status>
</kw>
<msg timestamp="20201030 23:40:51.471" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 23:40:51.471" starttime="20201030 23:40:51.466"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 23:40:51.472" level="INFO">${random} = 47013</msg>
<status status="PASS" endtime="20201030 23:40:51.472" starttime="20201030 23:40:51.471"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:40:51.476" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-47013 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:40:54.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:40:54.595" level="INFO">${output} = 2020-10-30 23:40:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:52 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 23:40:54.595" starttime="20201030 23:40:51.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:40:54.596" level="INFO">2020-10-30 23:40:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:53 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-30 23:40:53 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:40:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 23:40:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 23:40:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 23:40:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-41232DBFEA7D-&gt;3aed1cfd-90de-4d16-810b-f949c015b59e
2020-10-30 23:40:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 23:40:54 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201030 23:40:54.596" starttime="20201030 23:40:54.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:40:54.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:40:54.597" starttime="20201030 23:40:54.596"></status>
</kw>
<status status="PASS" endtime="20201030 23:40:54.597" starttime="20201030 23:40:51.472"></status>
</kw>
<msg timestamp="20201030 23:40:54.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:40:54.597" starttime="20201030 23:40:51.472"></status>
</kw>
<msg timestamp="20201030 23:40:54.597" level="INFO">${result} = 2020-10-30 23:40:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:52 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 23:40:54.597" starttime="20201030 23:40:51.472"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:40:54.600" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:40:56.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:40:56.222" level="INFO">${output} = 2020-10-30 23:40:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:55 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 23:40:56.222" starttime="20201030 23:40:54.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:40:56.223" level="INFO">2020-10-30 23:40:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:55 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:38 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-30 23:40 ofs://om/volume1/bucket1/ozone-47013
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-30 23:39 ofs://om/volume1/bucket1/ozone-89584
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:39 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:40 ofs://om/volume1/bucket1/wordcount-85.txt
2020-10-30 23:40:56 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201030 23:40:56.223" starttime="20201030 23:40:56.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:40:56.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:40:56.224" starttime="20201030 23:40:56.223"></status>
</kw>
<status status="PASS" endtime="20201030 23:40:56.224" starttime="20201030 23:40:54.598"></status>
</kw>
<msg timestamp="20201030 23:40:56.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:40:56.224" starttime="20201030 23:40:54.598"></status>
</kw>
<msg timestamp="20201030 23:40:56.224" level="INFO">${result} = 2020-10-30 23:40:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:55 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 23:40:56.224" starttime="20201030 23:40:54.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201030 23:40:56.225" starttime="20201030 23:40:56.225"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201030 23:40:56.225" critical="yes" starttime="20201030 23:40:51.465"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201030 23:40:56.226" starttime="20201030 23:40:51.417"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:39:20.939" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:39:20.939" starttime="20201030 23:39:20.939"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:39:20.940" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:39:20.940" starttime="20201030 23:39:20.939"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:20.940" starttime="20201030 23:39:20.939"></status>
</kw>
<msg timestamp="20201030 23:39:20.940" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:39:20.940" starttime="20201030 23:39:20.938"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:20.940" starttime="20201030 23:39:20.938"></status>
</kw>
<msg timestamp="20201030 23:39:20.941" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 23:39:20.941" starttime="20201030 23:39:20.937"></status>
</kw>
<msg timestamp="20201030 23:39:20.941" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 23:39:20.941" starttime="20201030 23:39:20.936"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 23:39:20.941" level="INFO">${random} = 89584</msg>
<status status="PASS" endtime="20201030 23:39:20.941" starttime="20201030 23:39:20.941"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:39:20.946" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-89584 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:39:24.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:39:24.201" level="INFO">${output} = 2020-10-30 23:39:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:22 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 23:39:24.202" starttime="20201030 23:39:20.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:39:24.202" level="INFO">2020-10-30 23:39:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:22 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-30 23:39:22 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:39:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 23:39:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 23:39:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 23:39:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B63D1009CEB1-&gt;3aed1cfd-90de-4d16-810b-f949c015b59e
2020-10-30 23:39:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 23:39:23 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201030 23:39:24.203" starttime="20201030 23:39:24.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:39:24.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:39:24.203" starttime="20201030 23:39:24.203"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:24.203" starttime="20201030 23:39:20.942"></status>
</kw>
<msg timestamp="20201030 23:39:24.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:39:24.204" starttime="20201030 23:39:20.942"></status>
</kw>
<msg timestamp="20201030 23:39:24.204" level="INFO">${result} = 2020-10-30 23:39:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:22 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 23:39:24.204" starttime="20201030 23:39:20.942"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:39:24.207" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:39:25.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:39:25.758" level="INFO">${output} = 2020-10-30 23:39:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:25 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 23:39:25.758" starttime="20201030 23:39:24.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:39:25.759" level="INFO">2020-10-30 23:39:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:25 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-30 23:39 o3fs://bucket1.volume1.om/ozone-89584
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:39 o3fs://bucket1.volume1.om/user
2020-10-30 23:39:25 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201030 23:39:25.759" starttime="20201030 23:39:25.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:39:25.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:39:25.760" starttime="20201030 23:39:25.759"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:25.760" starttime="20201030 23:39:24.205"></status>
</kw>
<msg timestamp="20201030 23:39:25.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:39:25.760" starttime="20201030 23:39:24.204"></status>
</kw>
<msg timestamp="20201030 23:39:25.760" level="INFO">${result} = 2020-10-30 23:39:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:25 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 23:39:25.760" starttime="20201030 23:39:24.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201030 23:39:25.761" starttime="20201030 23:39:25.761"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201030 23:39:25.761" critical="yes" starttime="20201030 23:39:20.935"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201030 23:39:25.762" starttime="20201030 23:39:20.885"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:41:00.418" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:41:00.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:41:00.423" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 23:41:00.423" starttime="20201030 23:41:00.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:41:00.424" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 23:41:00.424" starttime="20201030 23:41:00.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:41:00.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:41:00.424" starttime="20201030 23:41:00.424"></status>
</kw>
<status status="PASS" endtime="20201030 23:41:00.425" starttime="20201030 23:41:00.414"></status>
</kw>
<msg timestamp="20201030 23:41:00.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:41:00.425" starttime="20201030 23:41:00.413"></status>
</kw>
<msg timestamp="20201030 23:41:00.425" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 23:41:00.425" starttime="20201030 23:41:00.413"></status>
</kw>
<msg timestamp="20201030 23:41:00.425" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 23:41:00.425" starttime="20201030 23:41:00.413"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 23:41:00.428" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 23:41:00.428" starttime="20201030 23:41:00.428"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:41:00.429" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 23:41:00.429" starttime="20201030 23:41:00.428"></status>
</kw>
<status status="PASS" endtime="20201030 23:41:00.429" starttime="20201030 23:41:00.427"></status>
</kw>
<msg timestamp="20201030 23:41:00.429" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 23:41:00.429" starttime="20201030 23:41:00.427"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 23:41:00.430" starttime="20201030 23:41:00.430"></status>
</kw>
<msg timestamp="20201030 23:41:00.430" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 23:41:00.430" starttime="20201030 23:41:00.429"></status>
</kw>
<status status="PASS" endtime="20201030 23:41:00.431" starttime="20201030 23:41:00.426"></status>
</kw>
<msg timestamp="20201030 23:41:00.431" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 23:41:00.431" starttime="20201030 23:41:00.426"></status>
</kw>
<msg timestamp="20201030 23:41:00.431" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 23:41:00.431" starttime="20201030 23:41:00.425"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:41:00.435" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:41:33.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:41:33.772" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 23:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41...</msg>
<status status="PASS" endtime="20201030 23:41:33.773" starttime="20201030 23:41:00.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:41:33.774" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-30 23:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:02 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-30 23:41:02 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:41:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 23:41:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 23:41:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 23:41:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-82020956A69A-&gt;3aed1cfd-90de-4d16-810b-f949c015b59e
2020-10-30 23:41:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-30 23:41:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:03 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-10-30 23:41:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 23:41:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:03 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 23:41:04 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 23:41:04 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604101109153_0003
2020-10-30 23:41:04 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-30 23:41:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:04 INFO  Configuration:2752 - resource-types.xml not found
2020-10-30 23:41:04 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-30 23:41:04 INFO  YarnClientImpl:324 - Submitted application application_1604101109153_0003
2020-10-30 23:41:04 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604101109153_0003/
2020-10-30 23:41:04 INFO  Job:1619 - Running job: job_1604101109153_0003
2020-10-30 23:41:11 INFO  Job:1640 - Job job_1604101109153_0003 running in uber mode : false
2020-10-30 23:41:11 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 23:41:17 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 23:41:22 INFO  Job:1647 -  map 67% reduce 0%
2020-10-30 23:41:27 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 23:41:31 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 23:41:32 INFO  Job:1658 - Job job_1604101109153_0003 completed successfully
2020-10-30 23:41:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:33 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021317
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35964
		Total time spent by all reduces in occupied slots (ms)=12824
		Total time spent by all map tasks (ms)=8991
		Total time spent by all reduce tasks (ms)=3206
		Total vcore-milliseconds taken by all map tasks=8991
		Total vcore-milliseconds taken by all reduce tasks=3206
		Total megabyte-milliseconds taken by all map tasks=36827136
		Total megabyte-milliseconds taken by all reduce tasks=13131776
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=546
		CPU time spent (ms)=6130
		Physical memory (bytes) snapshot=1169387520
		Virtual memory (bytes) snapshot=16077463552
		Total committed heap usage (bytes)=1067450368
		Peak Map Physical memory (bytes)=296800256
		Peak Map Virtual memory (bytes)=4020957184
		Peak Reduce Physical memory (bytes)=299429888
		Peak Reduce Virtual memory (bytes)=4036575232
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.736 seconds
2020-10-30 23:41:33 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-30 23:41:33 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201030 23:41:33.774" starttime="20201030 23:41:33.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:41:33.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:41:33.775" starttime="20201030 23:41:33.774"></status>
</kw>
<status status="PASS" endtime="20201030 23:41:33.775" starttime="20201030 23:41:00.432"></status>
</kw>
<msg timestamp="20201030 23:41:33.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:41:33.775" starttime="20201030 23:41:00.431"></status>
</kw>
<msg timestamp="20201030 23:41:33.776" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 23:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41...</msg>
<status status="PASS" endtime="20201030 23:41:33.776" starttime="20201030 23:41:00.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 23:41:33.776" starttime="20201030 23:41:33.776"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 23:41:33.776" critical="yes" starttime="20201030 23:41:00.412"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:41:33.781" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:41:33.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:41:33.786" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 23:41:33.786" starttime="20201030 23:41:33.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:41:33.787" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 23:41:33.787" starttime="20201030 23:41:33.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:41:33.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:41:33.789" starttime="20201030 23:41:33.787"></status>
</kw>
<status status="PASS" endtime="20201030 23:41:33.789" starttime="20201030 23:41:33.779"></status>
</kw>
<msg timestamp="20201030 23:41:33.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:41:33.789" starttime="20201030 23:41:33.778"></status>
</kw>
<msg timestamp="20201030 23:41:33.789" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 23:41:33.790" starttime="20201030 23:41:33.778"></status>
</kw>
<msg timestamp="20201030 23:41:33.790" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 23:41:33.790" starttime="20201030 23:41:33.778"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 23:41:33.790" level="INFO">${random} = 40</msg>
<status status="PASS" endtime="20201030 23:41:33.790" starttime="20201030 23:41:33.790"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 23:41:33.794" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 23:41:33.794" starttime="20201030 23:41:33.794"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:41:33.795" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 23:41:33.795" starttime="20201030 23:41:33.794"></status>
</kw>
<status status="PASS" endtime="20201030 23:41:33.795" starttime="20201030 23:41:33.793"></status>
</kw>
<msg timestamp="20201030 23:41:33.795" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 23:41:33.795" starttime="20201030 23:41:33.793"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 23:41:33.796" starttime="20201030 23:41:33.796"></status>
</kw>
<msg timestamp="20201030 23:41:33.796" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 23:41:33.796" starttime="20201030 23:41:33.795"></status>
</kw>
<status status="PASS" endtime="20201030 23:41:33.797" starttime="20201030 23:41:33.792"></status>
</kw>
<msg timestamp="20201030 23:41:33.797" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 23:41:33.797" starttime="20201030 23:41:33.791"></status>
</kw>
<msg timestamp="20201030 23:41:33.797" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 23:41:33.797" starttime="20201030 23:41:33.791"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 23:41:33.800" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 23:41:33.800" starttime="20201030 23:41:33.800"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:41:33.801" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 23:41:33.801" starttime="20201030 23:41:33.801"></status>
</kw>
<status status="PASS" endtime="20201030 23:41:33.801" starttime="20201030 23:41:33.799"></status>
</kw>
<msg timestamp="20201030 23:41:33.801" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 23:41:33.802" starttime="20201030 23:41:33.799"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:41:33.803" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201030 23:41:33.803" starttime="20201030 23:41:33.803"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:41:33.804" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201030 23:41:33.804" starttime="20201030 23:41:33.803"></status>
</kw>
<status status="PASS" endtime="20201030 23:41:33.804" starttime="20201030 23:41:33.802"></status>
</kw>
<msg timestamp="20201030 23:41:33.804" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201030 23:41:33.804" starttime="20201030 23:41:33.802"></status>
</kw>
<status status="PASS" endtime="20201030 23:41:33.804" starttime="20201030 23:41:33.798"></status>
</kw>
<msg timestamp="20201030 23:41:33.804" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201030 23:41:33.805" starttime="20201030 23:41:33.798"></status>
</kw>
<msg timestamp="20201030 23:41:33.805" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201030 23:41:33.805" starttime="20201030 23:41:33.797"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 23:41:33.808" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 23:41:33.808" starttime="20201030 23:41:33.807"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:41:33.809" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 23:41:33.809" starttime="20201030 23:41:33.808"></status>
</kw>
<status status="PASS" endtime="20201030 23:41:33.809" starttime="20201030 23:41:33.807"></status>
</kw>
<msg timestamp="20201030 23:41:33.809" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 23:41:33.809" starttime="20201030 23:41:33.807"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:41:33.811" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201030 23:41:33.811" starttime="20201030 23:41:33.810"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:41:33.811" level="INFO">${result} = /wordcount-40.txt</msg>
<status status="PASS" endtime="20201030 23:41:33.811" starttime="20201030 23:41:33.811"></status>
</kw>
<status status="PASS" endtime="20201030 23:41:33.811" starttime="20201030 23:41:33.810"></status>
</kw>
<msg timestamp="20201030 23:41:33.811" level="INFO">${path_with_leading} = /wordcount-40.txt</msg>
<status status="PASS" endtime="20201030 23:41:33.811" starttime="20201030 23:41:33.809"></status>
</kw>
<status status="PASS" endtime="20201030 23:41:33.812" starttime="20201030 23:41:33.806"></status>
</kw>
<msg timestamp="20201030 23:41:33.812" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-40.txt</msg>
<status status="PASS" endtime="20201030 23:41:33.812" starttime="20201030 23:41:33.806"></status>
</kw>
<msg timestamp="20201030 23:41:33.812" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-40.txt</msg>
<status status="PASS" endtime="20201030 23:41:33.812" starttime="20201030 23:41:33.805"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:41:33.816" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-40.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:42:09.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:42:09.815" level="INFO">${output} = 2020-10-30 23:41:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:35 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 23:42:09.815" starttime="20201030 23:41:33.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:42:09.816" level="INFO">2020-10-30 23:41:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-10-30 23:41:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 23:41:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:36 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-30 23:41:36 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:41:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 23:41:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 23:41:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 23:41:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7DABD95EC2A8-&gt;3aed1cfd-90de-4d16-810b-f949c015b59e
2020-10-30 23:41:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 23:41:37 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 23:41:37 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 23:41:37 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604101109153_0004
2020-10-30 23:41:37 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-30 23:41:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:37 INFO  Configuration:2752 - resource-types.xml not found
2020-10-30 23:41:37 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-30 23:41:37 INFO  YarnClientImpl:324 - Submitted application application_1604101109153_0004
2020-10-30 23:41:37 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604101109153_0004/
2020-10-30 23:41:37 INFO  Job:1619 - Running job: job_1604101109153_0004
2020-10-30 23:41:45 INFO  Job:1640 - Job job_1604101109153_0004 running in uber mode : false
2020-10-30 23:41:45 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 23:41:52 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 23:41:56 INFO  Job:1647 -  map 67% reduce 0%
2020-10-30 23:42:01 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 23:42:06 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 23:42:09 INFO  Job:1658 - Job job_1604101109153_0004 completed successfully
2020-10-30 23:42:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:42:09 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37296
		Total time spent by all reduces in occupied slots (ms)=13004
		Total time spent by all map tasks (ms)=9324
		Total time spent by all reduce tasks (ms)=3251
		Total vcore-milliseconds taken by all map tasks=9324
		Total vcore-milliseconds taken by all reduce tasks=3251
		Total megabyte-milliseconds taken by all map tasks=38191104
		Total megabyte-milliseconds taken by all reduce tasks=13316096
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=532
		CPU time spent (ms)=6540
		Physical memory (bytes) snapshot=1179480064
		Virtual memory (bytes) snapshot=16073924608
		Total committed heap usage (bytes)=1061158912
		Peak Map Physical memory (bytes)=296562688
		Peak Map Virtual memory (bytes)=4013412352
		Peak Reduce Physical memory (bytes)=297123840
		Peak Reduce Virtual memory (bytes)=4038115328
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-30 23:42:09 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201030 23:42:09.816" starttime="20201030 23:42:09.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:42:09.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:42:09.817" starttime="20201030 23:42:09.816"></status>
</kw>
<status status="PASS" endtime="20201030 23:42:09.817" starttime="20201030 23:41:33.813"></status>
</kw>
<msg timestamp="20201030 23:42:09.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:42:09.817" starttime="20201030 23:41:33.813"></status>
</kw>
<msg timestamp="20201030 23:42:09.817" level="INFO">${output} = 2020-10-30 23:41:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:41:35 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 23:42:09.818" starttime="20201030 23:41:33.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201030 23:42:09.818" starttime="20201030 23:42:09.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 23:42:09.819" starttime="20201030 23:42:09.818"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 23:42:09.819" critical="yes" starttime="20201030 23:41:33.777"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201030 23:42:09.820" starttime="20201030 23:41:00.357"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:39:29.914" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:39:29.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:39:29.918" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 23:39:29.918" starttime="20201030 23:39:29.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:39:29.919" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 23:39:29.919" starttime="20201030 23:39:29.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:39:29.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:39:29.920" starttime="20201030 23:39:29.919"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:29.920" starttime="20201030 23:39:29.909"></status>
</kw>
<msg timestamp="20201030 23:39:29.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:39:29.920" starttime="20201030 23:39:29.908"></status>
</kw>
<msg timestamp="20201030 23:39:29.920" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 23:39:29.920" starttime="20201030 23:39:29.908"></status>
</kw>
<msg timestamp="20201030 23:39:29.921" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 23:39:29.921" starttime="20201030 23:39:29.908"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:39:29.924" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:39:29.924" starttime="20201030 23:39:29.923"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:39:29.925" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:39:29.925" starttime="20201030 23:39:29.924"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:29.925" starttime="20201030 23:39:29.923"></status>
</kw>
<msg timestamp="20201030 23:39:29.925" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:39:29.925" starttime="20201030 23:39:29.923"></status>
</kw>
<status status="PASS" endtime="20201030 23:39:29.925" starttime="20201030 23:39:29.922"></status>
</kw>
<msg timestamp="20201030 23:39:29.925" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 23:39:29.925" starttime="20201030 23:39:29.921"></status>
</kw>
<msg timestamp="20201030 23:39:29.926" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 23:39:29.926" starttime="20201030 23:39:29.921"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:39:29.928" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:40:10.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:40:10.437" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 23:39:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39...</msg>
<status status="PASS" endtime="20201030 23:40:10.437" starttime="20201030 23:39:29.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:40:10.438" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-30 23:39:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:31 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-30 23:39:31 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:39:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 23:39:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 23:39:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 23:39:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3E24347BC6E6-&gt;3aed1cfd-90de-4d16-810b-f949c015b59e
2020-10-30 23:39:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-30 23:39:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-10-30 23:39:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:36 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 23:39:38 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 23:39:38 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604101109153_0001
2020-10-30 23:39:38 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-30 23:39:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:39 INFO  Configuration:2752 - resource-types.xml not found
2020-10-30 23:39:39 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-30 23:39:39 INFO  YarnClientImpl:324 - Submitted application application_1604101109153_0001
2020-10-30 23:39:39 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604101109153_0001/
2020-10-30 23:39:39 INFO  Job:1619 - Running job: job_1604101109153_0001
2020-10-30 23:39:48 INFO  Job:1640 - Job job_1604101109153_0001 running in uber mode : false
2020-10-30 23:39:48 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 23:39:54 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 23:39:59 INFO  Job:1647 -  map 67% reduce 0%
2020-10-30 23:40:04 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 23:40:09 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 23:40:09 INFO  Job:1658 - Job job_1604101109153_0001 completed successfully
2020-10-30 23:40:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:09 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36336
		Total time spent by all reduces in occupied slots (ms)=13940
		Total time spent by all map tasks (ms)=9084
		Total time spent by all reduce tasks (ms)=3485
		Total vcore-milliseconds taken by all map tasks=9084
		Total vcore-milliseconds taken by all reduce tasks=3485
		Total megabyte-milliseconds taken by all map tasks=37208064
		Total megabyte-milliseconds taken by all reduce tasks=14274560
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=491
		CPU time spent (ms)=5740
		Physical memory (bytes) snapshot=1145004032
		Virtual memory (bytes) snapshot=16057413632
		Total committed heap usage (bytes)=1150287872
		Peak Map Physical memory (bytes)=289853440
		Peak Map Virtual memory (bytes)=4015091712
		Peak Reduce Physical memory (bytes)=279293952
		Peak Reduce Virtual memory (bytes)=4022530048
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.449 seconds
2020-10-30 23:40:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:09 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-30 23:40:10 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201030 23:40:10.438" starttime="20201030 23:40:10.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:40:10.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:40:10.439" starttime="20201030 23:40:10.439"></status>
</kw>
<status status="PASS" endtime="20201030 23:40:10.439" starttime="20201030 23:39:29.927"></status>
</kw>
<msg timestamp="20201030 23:40:10.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:40:10.440" starttime="20201030 23:39:29.926"></status>
</kw>
<msg timestamp="20201030 23:40:10.441" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 23:39:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:39...</msg>
<status status="PASS" endtime="20201030 23:40:10.441" starttime="20201030 23:39:29.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 23:40:10.442" starttime="20201030 23:40:10.441"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 23:40:10.442" critical="yes" starttime="20201030 23:39:29.907"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:40:10.447" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:40:10.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:40:10.453" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 23:40:10.453" starttime="20201030 23:40:10.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:40:10.454" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 23:40:10.454" starttime="20201030 23:40:10.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:40:10.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:40:10.455" starttime="20201030 23:40:10.454"></status>
</kw>
<status status="PASS" endtime="20201030 23:40:10.455" starttime="20201030 23:40:10.445"></status>
</kw>
<msg timestamp="20201030 23:40:10.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:40:10.455" starttime="20201030 23:40:10.444"></status>
</kw>
<msg timestamp="20201030 23:40:10.455" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 23:40:10.455" starttime="20201030 23:40:10.444"></status>
</kw>
<msg timestamp="20201030 23:40:10.455" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 23:40:10.455" starttime="20201030 23:40:10.443"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 23:40:10.456" level="INFO">${random} = 85</msg>
<status status="PASS" endtime="20201030 23:40:10.456" starttime="20201030 23:40:10.455"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:40:10.459" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:40:10.459" starttime="20201030 23:40:10.458"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:40:10.459" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:40:10.459" starttime="20201030 23:40:10.459"></status>
</kw>
<status status="PASS" endtime="20201030 23:40:10.459" starttime="20201030 23:40:10.458"></status>
</kw>
<msg timestamp="20201030 23:40:10.459" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:40:10.460" starttime="20201030 23:40:10.458"></status>
</kw>
<status status="PASS" endtime="20201030 23:40:10.460" starttime="20201030 23:40:10.457"></status>
</kw>
<msg timestamp="20201030 23:40:10.460" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 23:40:10.460" starttime="20201030 23:40:10.456"></status>
</kw>
<msg timestamp="20201030 23:40:10.460" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 23:40:10.460" starttime="20201030 23:40:10.456"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:40:10.463" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:40:10.463" starttime="20201030 23:40:10.462"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:40:10.463" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:40:10.463" starttime="20201030 23:40:10.463"></status>
</kw>
<status status="PASS" endtime="20201030 23:40:10.463" starttime="20201030 23:40:10.462"></status>
</kw>
<msg timestamp="20201030 23:40:10.463" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:40:10.464" starttime="20201030 23:40:10.462"></status>
</kw>
<status status="PASS" endtime="20201030 23:40:10.464" starttime="20201030 23:40:10.461"></status>
</kw>
<msg timestamp="20201030 23:40:10.464" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201030 23:40:10.464" starttime="20201030 23:40:10.461"></status>
</kw>
<msg timestamp="20201030 23:40:10.464" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201030 23:40:10.464" starttime="20201030 23:40:10.460"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:40:10.466" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:40:10.467" starttime="20201030 23:40:10.466"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:40:10.467" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:40:10.467" starttime="20201030 23:40:10.467"></status>
</kw>
<status status="PASS" endtime="20201030 23:40:10.467" starttime="20201030 23:40:10.466"></status>
</kw>
<msg timestamp="20201030 23:40:10.467" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:40:10.467" starttime="20201030 23:40:10.465"></status>
</kw>
<status status="PASS" endtime="20201030 23:40:10.468" starttime="20201030 23:40:10.465"></status>
</kw>
<msg timestamp="20201030 23:40:10.468" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-85.txt</msg>
<status status="PASS" endtime="20201030 23:40:10.468" starttime="20201030 23:40:10.465"></status>
</kw>
<msg timestamp="20201030 23:40:10.468" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-85.txt</msg>
<status status="PASS" endtime="20201030 23:40:10.468" starttime="20201030 23:40:10.464"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:40:10.472" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-85.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:40:47.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:40:47.261" level="INFO">${output} = 2020-10-30 23:40:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:12 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 23:40:47.262" starttime="20201030 23:40:10.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:40:47.262" level="INFO">2020-10-30 23:40:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-10-30 23:40:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:12 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 23:40:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:12 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-30 23:40:12 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-30 23:40:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 23:40:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 23:40:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 23:40:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7569CD4D4C8E-&gt;3aed1cfd-90de-4d16-810b-f949c015b59e
2020-10-30 23:40:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 23:40:13 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 23:40:13 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 23:40:14 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604101109153_0002
2020-10-30 23:40:14 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-30 23:40:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:14 INFO  Configuration:2752 - resource-types.xml not found
2020-10-30 23:40:14 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-30 23:40:14 INFO  YarnClientImpl:324 - Submitted application application_1604101109153_0002
2020-10-30 23:40:14 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604101109153_0002/
2020-10-30 23:40:14 INFO  Job:1619 - Running job: job_1604101109153_0002
2020-10-30 23:40:22 INFO  Job:1640 - Job job_1604101109153_0002 running in uber mode : false
2020-10-30 23:40:22 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 23:40:29 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 23:40:33 INFO  Job:1647 -  map 67% reduce 0%
2020-10-30 23:40:38 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 23:40:43 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 23:40:46 INFO  Job:1658 - Job job_1604101109153_0002 completed successfully
2020-10-30 23:40:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:46 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36980
		Total time spent by all reduces in occupied slots (ms)=13284
		Total time spent by all map tasks (ms)=9245
		Total time spent by all reduce tasks (ms)=3321
		Total vcore-milliseconds taken by all map tasks=9245
		Total vcore-milliseconds taken by all reduce tasks=3321
		Total megabyte-milliseconds taken by all map tasks=37867520
		Total megabyte-milliseconds taken by all reduce tasks=13602816
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=519
		CPU time spent (ms)=6430
		Physical memory (bytes) snapshot=1178312704
		Virtual memory (bytes) snapshot=16068358144
		Total committed heap usage (bytes)=1071120384
		Peak Map Physical memory (bytes)=297213952
		Peak Map Virtual memory (bytes)=4015857664
		Peak Reduce Physical memory (bytes)=291938304
		Peak Reduce Virtual memory (bytes)=4031811584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-30 23:40:46 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201030 23:40:47.263" starttime="20201030 23:40:47.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:40:47.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:40:47.263" starttime="20201030 23:40:47.263"></status>
</kw>
<status status="PASS" endtime="20201030 23:40:47.263" starttime="20201030 23:40:10.469"></status>
</kw>
<msg timestamp="20201030 23:40:47.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:40:47.264" starttime="20201030 23:40:10.468"></status>
</kw>
<msg timestamp="20201030 23:40:47.264" level="INFO">${output} = 2020-10-30 23:40:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 23:40:12 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 23:40:47.264" starttime="20201030 23:40:10.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201030 23:40:47.265" starttime="20201030 23:40:47.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 23:40:47.265" starttime="20201030 23:40:47.265"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 23:40:47.265" critical="yes" starttime="20201030 23:40:10.443"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201030 23:40:47.266" starttime="20201030 23:39:29.861"></status>
</suite>
<status status="PASS" elapsedtime="185049" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:43:09.387" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:43:12.695" level="INFO">${rc} = 255</msg>
<msg timestamp="20201030 23:43:12.695" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 23:43:12.695" starttime="20201030 23:43:09.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:43:12.696" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 23:43:12.696" starttime="20201030 23:43:12.695"></status>
</kw>
<msg timestamp="20201030 23:43:12.696" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 23:43:12.696" starttime="20201030 23:43:09.381"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:43:12.701" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:43:15.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:43:15.455" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:43:15.455" starttime="20201030 23:43:12.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:43:15.456" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:43:15.456" starttime="20201030 23:43:15.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:43:15.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:43:15.457" starttime="20201030 23:43:15.456"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:15.457" starttime="20201030 23:43:12.698"></status>
</kw>
<msg timestamp="20201030 23:43:15.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:43:15.458" starttime="20201030 23:43:12.698"></status>
</kw>
<msg timestamp="20201030 23:43:15.458" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201030 23:43:15.458" starttime="20201030 23:43:12.697"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201030 23:43:15.459" starttime="20201030 23:43:15.458"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:15.459" starttime="20201030 23:43:12.697"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:15.459" starttime="20201030 23:43:12.697"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:43:15.463" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:43:18.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:43:18.431" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:43:18.431" starttime="20201030 23:43:15.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:43:18.432" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:43:18.432" starttime="20201030 23:43:18.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:43:18.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:43:18.433" starttime="20201030 23:43:18.432"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:18.433" starttime="20201030 23:43:15.461"></status>
</kw>
<msg timestamp="20201030 23:43:18.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:43:18.434" starttime="20201030 23:43:15.460"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:18.434" starttime="20201030 23:43:15.460"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:18.434" starttime="20201030 23:43:15.460"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:18.434" starttime="20201030 23:43:15.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201030 23:43:18.435" starttime="20201030 23:43:18.434"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:43:18.440" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:43:21.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:43:21.513" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T23:43:18.220Z",
  "modificat...</msg>
<status status="PASS" endtime="20201030 23:43:21.513" starttime="20201030 23:43:18.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:43:21.514" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T23:43:18.220Z",
  "modificationTime" : "2020-10-30T23:43:18.220Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201030 23:43:21.514" starttime="20201030 23:43:21.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:43:21.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:43:21.514" starttime="20201030 23:43:21.514"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:21.515" starttime="20201030 23:43:18.436"></status>
</kw>
<msg timestamp="20201030 23:43:21.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:43:21.515" starttime="20201030 23:43:18.436"></status>
</kw>
<msg timestamp="20201030 23:43:21.515" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T23:43:18.220Z",
  "modificat...</msg>
<status status="PASS" endtime="20201030 23:43:21.515" starttime="20201030 23:43:18.435"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201030 23:43:21.516" starttime="20201030 23:43:21.515"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:43:21.519" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:43:21.519" starttime="20201030 23:43:21.519"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:43:21.520" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:43:21.520" starttime="20201030 23:43:21.519"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:21.520" starttime="20201030 23:43:21.518"></status>
</kw>
<msg timestamp="20201030 23:43:21.520" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:43:21.520" starttime="20201030 23:43:21.518"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:21.521" starttime="20201030 23:43:21.517"></status>
</kw>
<msg timestamp="20201030 23:43:21.521" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201030 23:43:21.521" starttime="20201030 23:43:21.517"></status>
</kw>
<msg timestamp="20201030 23:43:21.521" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201030 23:43:21.521" starttime="20201030 23:43:21.516"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:43:21.524" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:43:24.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:43:24.586" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:43:24.586" starttime="20201030 23:43:21.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:43:24.587" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:43:24.587" starttime="20201030 23:43:24.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:43:24.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:43:24.588" starttime="20201030 23:43:24.587"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:24.588" starttime="20201030 23:43:21.522"></status>
</kw>
<msg timestamp="20201030 23:43:24.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:43:24.588" starttime="20201030 23:43:21.522"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:24.589" starttime="20201030 23:43:21.521"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:43:24.592" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:43:31.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:43:31.167" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:43:31.167" starttime="20201030 23:43:24.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:43:31.168" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:43:31.168" starttime="20201030 23:43:31.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:43:31.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:43:31.169" starttime="20201030 23:43:31.168"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:31.169" starttime="20201030 23:43:24.590"></status>
</kw>
<msg timestamp="20201030 23:43:31.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:43:31.169" starttime="20201030 23:43:24.589"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:31.169" starttime="20201030 23:43:24.589"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:43:31.173" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:43:36.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:43:36.286" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:43:36.286" starttime="20201030 23:43:31.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:43:36.287" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:43:36.287" starttime="20201030 23:43:36.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:43:36.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:43:36.288" starttime="20201030 23:43:36.287"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:36.288" starttime="20201030 23:43:31.170"></status>
</kw>
<msg timestamp="20201030 23:43:36.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:43:36.288" starttime="20201030 23:43:31.170"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:36.288" starttime="20201030 23:43:31.170"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:43:36.293" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:43:41.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:43:41.316" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:43:41.316" starttime="20201030 23:43:36.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:43:41.317" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:43:41.317" starttime="20201030 23:43:41.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:43:41.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:43:41.318" starttime="20201030 23:43:41.318"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:41.319" starttime="20201030 23:43:36.289"></status>
</kw>
<msg timestamp="20201030 23:43:41.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:43:41.319" starttime="20201030 23:43:36.289"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:41.319" starttime="20201030 23:43:36.288"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 23:43:41.319" critical="yes" starttime="20201030 23:43:09.379"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:43:41.324" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:43:41.324" starttime="20201030 23:43:41.323"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:43:41.324" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:43:41.324" starttime="20201030 23:43:41.324"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:41.325" starttime="20201030 23:43:41.323"></status>
</kw>
<msg timestamp="20201030 23:43:41.325" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:43:41.325" starttime="20201030 23:43:41.322"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:41.325" starttime="20201030 23:43:41.322"></status>
</kw>
<msg timestamp="20201030 23:43:41.325" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 23:43:41.325" starttime="20201030 23:43:41.321"></status>
</kw>
<msg timestamp="20201030 23:43:41.325" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 23:43:41.325" starttime="20201030 23:43:41.321"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:43:41.328" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:43:44.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:43:44.008" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:43:44.008" starttime="20201030 23:43:41.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:43:44.010" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:43:44.010" starttime="20201030 23:43:44.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:43:44.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:43:44.010" starttime="20201030 23:43:44.010"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:44.010" starttime="20201030 23:43:41.326"></status>
</kw>
<msg timestamp="20201030 23:43:44.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:43:44.011" starttime="20201030 23:43:41.326"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:44.011" starttime="20201030 23:43:41.325"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:43:44.015" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:43:46.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:43:46.908" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 23:43:46.908" starttime="20201030 23:43:44.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:43:46.909" level="INFO"></msg>
<status status="PASS" endtime="20201030 23:43:46.909" starttime="20201030 23:43:46.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:43:46.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:43:46.910" starttime="20201030 23:43:46.909"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:46.910" starttime="20201030 23:43:44.012"></status>
</kw>
<msg timestamp="20201030 23:43:46.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:43:46.910" starttime="20201030 23:43:44.012"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:46.910" starttime="20201030 23:43:44.011"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 23:43:46.910" critical="yes" starttime="20201030 23:43:41.320"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201030 23:43:46.912" starttime="20201030 23:43:09.318"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 23:45:17.410" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 23:45:17.410" starttime="20201030 23:45:17.409"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:45:17.410" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 23:45:17.410" starttime="20201030 23:45:17.410"></status>
</kw>
<status status="PASS" endtime="20201030 23:45:17.411" starttime="20201030 23:45:17.409"></status>
</kw>
<msg timestamp="20201030 23:45:17.411" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 23:45:17.411" starttime="20201030 23:45:17.408"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 23:45:17.412" starttime="20201030 23:45:17.412"></status>
</kw>
<msg timestamp="20201030 23:45:17.412" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 23:45:17.412" starttime="20201030 23:45:17.411"></status>
</kw>
<status status="PASS" endtime="20201030 23:45:17.412" starttime="20201030 23:45:17.408"></status>
</kw>
<msg timestamp="20201030 23:45:17.412" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 23:45:17.412" starttime="20201030 23:45:17.407"></status>
</kw>
<msg timestamp="20201030 23:45:17.412" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 23:45:17.412" starttime="20201030 23:45:17.406"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 23:45:17.413" level="INFO">${random} = 67420</msg>
<status status="PASS" endtime="20201030 23:45:17.413" starttime="20201030 23:45:17.413"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:45:17.420" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-67420 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:45:20.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:45:20.612" level="INFO">${output} = 2020-10-30 23:45:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 23:45:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201030 23:45:20.612" starttime="20201030 23:45:17.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:45:20.614" level="INFO">2020-10-30 23:45:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 23:45:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 23:45:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 23:45:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 23:45:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-421344D1A332-&gt;56054a11-06da-466c-8081-41c0c9412eff
2020-10-30 23:45:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201030 23:45:20.614" starttime="20201030 23:45:20.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:45:20.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:45:20.615" starttime="20201030 23:45:20.614"></status>
</kw>
<status status="PASS" endtime="20201030 23:45:20.615" starttime="20201030 23:45:17.414"></status>
</kw>
<msg timestamp="20201030 23:45:20.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:45:20.615" starttime="20201030 23:45:17.414"></status>
</kw>
<msg timestamp="20201030 23:45:20.615" level="INFO">${result} = 2020-10-30 23:45:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 23:45:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201030 23:45:20.615" starttime="20201030 23:45:17.413"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:45:20.618" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:45:22.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:45:22.226" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:43 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 23:43 ofs://om/volume1/bucket1/ozone-39230
-rw-...</msg>
<status status="PASS" endtime="20201030 23:45:22.226" starttime="20201030 23:45:20.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:45:22.227" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:43 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 23:43 ofs://om/volume1/bucket1/ozone-39230
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 23:45 ofs://om/volume1/bucket1/ozone-67420
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:43 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:44 ofs://om/volume1/bucket1/wordcount-86.txt</msg>
<status status="PASS" endtime="20201030 23:45:22.227" starttime="20201030 23:45:22.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:45:22.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:45:22.228" starttime="20201030 23:45:22.227"></status>
</kw>
<status status="PASS" endtime="20201030 23:45:22.228" starttime="20201030 23:45:20.616"></status>
</kw>
<msg timestamp="20201030 23:45:22.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:45:22.228" starttime="20201030 23:45:20.616"></status>
</kw>
<msg timestamp="20201030 23:45:22.228" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:43 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 23:43 ofs://om/volume1/bucket1/ozone-39230
-rw-...</msg>
<status status="PASS" endtime="20201030 23:45:22.228" starttime="20201030 23:45:20.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201030 23:45:22.229" starttime="20201030 23:45:22.229"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201030 23:45:22.229" critical="yes" starttime="20201030 23:45:17.406"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201030 23:45:22.230" starttime="20201030 23:45:17.352"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:43:51.065" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:43:51.065" starttime="20201030 23:43:51.065"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:43:51.066" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:43:51.066" starttime="20201030 23:43:51.066"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:51.066" starttime="20201030 23:43:51.065"></status>
</kw>
<msg timestamp="20201030 23:43:51.066" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:43:51.066" starttime="20201030 23:43:51.064"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:51.067" starttime="20201030 23:43:51.064"></status>
</kw>
<msg timestamp="20201030 23:43:51.067" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 23:43:51.067" starttime="20201030 23:43:51.063"></status>
</kw>
<msg timestamp="20201030 23:43:51.067" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 23:43:51.067" starttime="20201030 23:43:51.062"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 23:43:51.068" level="INFO">${random} = 39230</msg>
<status status="PASS" endtime="20201030 23:43:51.068" starttime="20201030 23:43:51.067"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:43:51.072" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-39230 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:43:54.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:43:54.476" level="INFO">${output} = 2020-10-30 23:43:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 23:43:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201030 23:43:54.476" starttime="20201030 23:43:51.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:43:54.478" level="INFO">2020-10-30 23:43:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 23:43:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 23:43:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 23:43:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 23:43:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0DAFC9216707-&gt;56054a11-06da-466c-8081-41c0c9412eff
2020-10-30 23:43:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201030 23:43:54.478" starttime="20201030 23:43:54.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:43:54.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:43:54.478" starttime="20201030 23:43:54.478"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:54.479" starttime="20201030 23:43:51.068"></status>
</kw>
<msg timestamp="20201030 23:43:54.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:43:54.479" starttime="20201030 23:43:51.068"></status>
</kw>
<msg timestamp="20201030 23:43:54.480" level="INFO">${result} = 2020-10-30 23:43:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 23:43:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201030 23:43:54.480" starttime="20201030 23:43:51.068"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:43:54.483" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:43:56.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:43:56.138" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:43 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 23:43 o3fs://bucket1.volume1.om/ozone-39230
dr...</msg>
<status status="PASS" endtime="20201030 23:43:56.139" starttime="20201030 23:43:54.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:43:56.140" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:43 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 23:43 o3fs://bucket1.volume1.om/ozone-39230
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:43 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 23:43:56.140" starttime="20201030 23:43:56.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:43:56.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:43:56.140" starttime="20201030 23:43:56.140"></status>
</kw>
<status status="PASS" endtime="20201030 23:43:56.141" starttime="20201030 23:43:54.481"></status>
</kw>
<msg timestamp="20201030 23:43:56.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:43:56.141" starttime="20201030 23:43:54.480"></status>
</kw>
<msg timestamp="20201030 23:43:56.141" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 23:43 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 23:43 o3fs://bucket1.volume1.om/ozone-39230
dr...</msg>
<status status="PASS" endtime="20201030 23:43:56.141" starttime="20201030 23:43:54.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201030 23:43:56.142" starttime="20201030 23:43:56.141"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201030 23:43:56.142" critical="yes" starttime="20201030 23:43:51.061"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201030 23:43:56.143" starttime="20201030 23:43:51.011"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:45:26.549" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:45:26.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:45:26.553" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 23:45:26.553" starttime="20201030 23:45:26.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:45:26.553" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 23:45:26.553" starttime="20201030 23:45:26.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:45:26.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:45:26.554" starttime="20201030 23:45:26.554"></status>
</kw>
<status status="PASS" endtime="20201030 23:45:26.554" starttime="20201030 23:45:26.544"></status>
</kw>
<msg timestamp="20201030 23:45:26.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:45:26.555" starttime="20201030 23:45:26.544"></status>
</kw>
<msg timestamp="20201030 23:45:26.555" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 23:45:26.555" starttime="20201030 23:45:26.544"></status>
</kw>
<msg timestamp="20201030 23:45:26.555" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 23:45:26.555" starttime="20201030 23:45:26.543"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 23:45:26.558" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 23:45:26.558" starttime="20201030 23:45:26.558"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:45:26.559" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 23:45:26.559" starttime="20201030 23:45:26.558"></status>
</kw>
<status status="PASS" endtime="20201030 23:45:26.559" starttime="20201030 23:45:26.557"></status>
</kw>
<msg timestamp="20201030 23:45:26.559" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 23:45:26.559" starttime="20201030 23:45:26.557"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 23:45:26.560" starttime="20201030 23:45:26.560"></status>
</kw>
<msg timestamp="20201030 23:45:26.560" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 23:45:26.560" starttime="20201030 23:45:26.559"></status>
</kw>
<status status="PASS" endtime="20201030 23:45:26.560" starttime="20201030 23:45:26.556"></status>
</kw>
<msg timestamp="20201030 23:45:26.561" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 23:45:26.561" starttime="20201030 23:45:26.556"></status>
</kw>
<msg timestamp="20201030 23:45:26.561" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 23:45:26.561" starttime="20201030 23:45:26.555"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:45:26.563" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:46:05.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:46:05.017" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 23:45:28 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 23:45:28 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201030 23:46:05.017" starttime="20201030 23:45:26.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:46:05.019" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-30 23:45:28 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 23:45:28 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 23:45:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 23:45:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 23:45:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FD5366D17967-&gt;56054a11-06da-466c-8081-41c0c9412eff
2020-10-30 23:45:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-30 23:45:29 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-30 23:45:29 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 23:45:29 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 23:45:32 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 23:45:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604101370679_0003
2020-10-30 23:45:32 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-30 23:45:32 INFO  Configuration:2795 - resource-types.xml not found
2020-10-30 23:45:32 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-30 23:45:33 INFO  YarnClientImpl:329 - Submitted application application_1604101370679_0003
2020-10-30 23:45:33 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604101370679_0003/
2020-10-30 23:45:33 INFO  Job:1619 - Running job: job_1604101370679_0003
2020-10-30 23:45:40 INFO  Job:1640 - Job job_1604101370679_0003 running in uber mode : false
2020-10-30 23:45:40 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 23:45:47 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 23:45:51 INFO  Job:1647 -  map 67% reduce 0%
2020-10-30 23:45:56 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 23:46:03 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 23:46:04 INFO  Job:1658 - Job job_1604101370679_0003 completed successfully
2020-10-30 23:46:04 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061445
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36016
		Total time spent by all reduces in occupied slots (ms)=23912
		Total time spent by all map tasks (ms)=9004
		Total time spent by all reduce tasks (ms)=5978
		Total vcore-milliseconds taken by all map tasks=9004
		Total vcore-milliseconds taken by all reduce tasks=5978
		Total megabyte-milliseconds taken by all map tasks=36880384
		Total megabyte-milliseconds taken by all reduce tasks=24485888
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=515
		CPU time spent (ms)=6660
		Physical memory (bytes) snapshot=1412915200
		Virtual memory (bytes) snapshot=16092876800
		Total committed heap usage (bytes)=1583349760
		Peak Map Physical memory (bytes)=375328768
		Peak Map Virtual memory (bytes)=4019818496
		Peak Reduce Physical memory (bytes)=300290048
		Peak Reduce Virtual memory (bytes)=4036874240
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.05 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201030 23:46:05.019" starttime="20201030 23:46:05.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:46:05.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:46:05.020" starttime="20201030 23:46:05.019"></status>
</kw>
<status status="PASS" endtime="20201030 23:46:05.020" starttime="20201030 23:45:26.562"></status>
</kw>
<msg timestamp="20201030 23:46:05.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:46:05.021" starttime="20201030 23:45:26.561"></status>
</kw>
<msg timestamp="20201030 23:46:05.021" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 23:45:28 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 23:45:28 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201030 23:46:05.022" starttime="20201030 23:45:26.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 23:46:05.022" starttime="20201030 23:46:05.022"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 23:46:05.023" critical="yes" starttime="20201030 23:45:26.543"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:46:05.029" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:46:05.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:46:05.034" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 23:46:05.034" starttime="20201030 23:46:05.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:46:05.035" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 23:46:05.035" starttime="20201030 23:46:05.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:46:05.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:46:05.036" starttime="20201030 23:46:05.035"></status>
</kw>
<status status="PASS" endtime="20201030 23:46:05.036" starttime="20201030 23:46:05.026"></status>
</kw>
<msg timestamp="20201030 23:46:05.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:46:05.036" starttime="20201030 23:46:05.026"></status>
</kw>
<msg timestamp="20201030 23:46:05.036" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 23:46:05.036" starttime="20201030 23:46:05.025"></status>
</kw>
<msg timestamp="20201030 23:46:05.036" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 23:46:05.036" starttime="20201030 23:46:05.025"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 23:46:05.037" level="INFO">${random} = 99</msg>
<status status="PASS" endtime="20201030 23:46:05.037" starttime="20201030 23:46:05.037"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 23:46:05.041" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 23:46:05.041" starttime="20201030 23:46:05.040"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:46:05.042" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 23:46:05.042" starttime="20201030 23:46:05.041"></status>
</kw>
<status status="PASS" endtime="20201030 23:46:05.042" starttime="20201030 23:46:05.040"></status>
</kw>
<msg timestamp="20201030 23:46:05.042" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 23:46:05.042" starttime="20201030 23:46:05.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 23:46:05.043" starttime="20201030 23:46:05.043"></status>
</kw>
<msg timestamp="20201030 23:46:05.043" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 23:46:05.043" starttime="20201030 23:46:05.042"></status>
</kw>
<status status="PASS" endtime="20201030 23:46:05.043" starttime="20201030 23:46:05.039"></status>
</kw>
<msg timestamp="20201030 23:46:05.043" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 23:46:05.043" starttime="20201030 23:46:05.038"></status>
</kw>
<msg timestamp="20201030 23:46:05.044" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 23:46:05.044" starttime="20201030 23:46:05.037"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 23:46:05.047" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 23:46:05.047" starttime="20201030 23:46:05.046"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:46:05.047" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 23:46:05.047" starttime="20201030 23:46:05.047"></status>
</kw>
<status status="PASS" endtime="20201030 23:46:05.048" starttime="20201030 23:46:05.046"></status>
</kw>
<msg timestamp="20201030 23:46:05.048" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 23:46:05.048" starttime="20201030 23:46:05.045"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:46:05.049" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201030 23:46:05.049" starttime="20201030 23:46:05.049"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:46:05.050" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201030 23:46:05.050" starttime="20201030 23:46:05.050"></status>
</kw>
<status status="PASS" endtime="20201030 23:46:05.050" starttime="20201030 23:46:05.048"></status>
</kw>
<msg timestamp="20201030 23:46:05.050" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201030 23:46:05.050" starttime="20201030 23:46:05.048"></status>
</kw>
<status status="PASS" endtime="20201030 23:46:05.051" starttime="20201030 23:46:05.045"></status>
</kw>
<msg timestamp="20201030 23:46:05.051" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201030 23:46:05.051" starttime="20201030 23:46:05.044"></status>
</kw>
<msg timestamp="20201030 23:46:05.051" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201030 23:46:05.051" starttime="20201030 23:46:05.044"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 23:46:05.055" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 23:46:05.055" starttime="20201030 23:46:05.054"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:46:05.055" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 23:46:05.055" starttime="20201030 23:46:05.055"></status>
</kw>
<status status="PASS" endtime="20201030 23:46:05.055" starttime="20201030 23:46:05.054"></status>
</kw>
<msg timestamp="20201030 23:46:05.055" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 23:46:05.055" starttime="20201030 23:46:05.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:46:05.057" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201030 23:46:05.057" starttime="20201030 23:46:05.056"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:46:05.057" level="INFO">${result} = /wordcount-99.txt</msg>
<status status="PASS" endtime="20201030 23:46:05.057" starttime="20201030 23:46:05.057"></status>
</kw>
<status status="PASS" endtime="20201030 23:46:05.057" starttime="20201030 23:46:05.056"></status>
</kw>
<msg timestamp="20201030 23:46:05.057" level="INFO">${path_with_leading} = /wordcount-99.txt</msg>
<status status="PASS" endtime="20201030 23:46:05.057" starttime="20201030 23:46:05.056"></status>
</kw>
<status status="PASS" endtime="20201030 23:46:05.058" starttime="20201030 23:46:05.053"></status>
</kw>
<msg timestamp="20201030 23:46:05.058" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-99.txt</msg>
<status status="PASS" endtime="20201030 23:46:05.058" starttime="20201030 23:46:05.052"></status>
</kw>
<msg timestamp="20201030 23:46:05.058" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-99.txt</msg>
<status status="PASS" endtime="20201030 23:46:05.058" starttime="20201030 23:46:05.051"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:46:05.061" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-99.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:46:38.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:46:38.797" level="INFO">${output} = 2020-10-30 23:46:06 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-30 23:46:06 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201030 23:46:38.798" starttime="20201030 23:46:05.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:46:38.798" level="INFO">2020-10-30 23:46:06 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-30 23:46:06 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 23:46:07 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 23:46:07 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 23:46:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 23:46:07 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 23:46:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-432B47D59402-&gt;56054a11-06da-466c-8081-41c0c9412eff
2020-10-30 23:46:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 23:46:08 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 23:46:08 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 23:46:08 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604101370679_0004
2020-10-30 23:46:08 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-30 23:46:08 INFO  Configuration:2795 - resource-types.xml not found
2020-10-30 23:46:08 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-30 23:46:09 INFO  YarnClientImpl:329 - Submitted application application_1604101370679_0004
2020-10-30 23:46:09 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604101370679_0004/
2020-10-30 23:46:09 INFO  Job:1619 - Running job: job_1604101370679_0004
2020-10-30 23:46:17 INFO  Job:1640 - Job job_1604101370679_0004 running in uber mode : false
2020-10-30 23:46:17 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 23:46:23 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 23:46:28 INFO  Job:1647 -  map 67% reduce 0%
2020-10-30 23:46:33 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 23:46:37 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 23:46:38 INFO  Job:1658 - Job job_1604101370679_0004 completed successfully
2020-10-30 23:46:38 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36956
		Total time spent by all reduces in occupied slots (ms)=13700
		Total time spent by all map tasks (ms)=9239
		Total time spent by all reduce tasks (ms)=3425
		Total vcore-milliseconds taken by all map tasks=9239
		Total vcore-milliseconds taken by all reduce tasks=3425
		Total megabyte-milliseconds taken by all map tasks=37842944
		Total megabyte-milliseconds taken by all reduce tasks=14028800
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=555
		CPU time spent (ms)=6880
		Physical memory (bytes) snapshot=1409036288
		Virtual memory (bytes) snapshot=16089759744
		Total committed heap usage (bytes)=1545076736
		Peak Map Physical memory (bytes)=367685632
		Peak Map Virtual memory (bytes)=4018970624
		Peak Reduce Physical memory (bytes)=377819136
		Peak Reduce Virtual memory (bytes)=4040114176
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201030 23:46:38.799" starttime="20201030 23:46:38.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:46:38.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:46:38.799" starttime="20201030 23:46:38.799"></status>
</kw>
<status status="PASS" endtime="20201030 23:46:38.799" starttime="20201030 23:46:05.059"></status>
</kw>
<msg timestamp="20201030 23:46:38.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:46:38.800" starttime="20201030 23:46:05.058"></status>
</kw>
<msg timestamp="20201030 23:46:38.800" level="INFO">${output} = 2020-10-30 23:46:06 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-30 23:46:06 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201030 23:46:38.800" starttime="20201030 23:46:05.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201030 23:46:38.801" starttime="20201030 23:46:38.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 23:46:38.801" starttime="20201030 23:46:38.801"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 23:46:38.801" critical="yes" starttime="20201030 23:46:05.024"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201030 23:46:38.803" starttime="20201030 23:45:26.495"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:44:00.370" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:44:00.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:44:00.379" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 23:44:00.379" starttime="20201030 23:44:00.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:44:00.379" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 23:44:00.379" starttime="20201030 23:44:00.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:44:00.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:44:00.380" starttime="20201030 23:44:00.379"></status>
</kw>
<status status="PASS" endtime="20201030 23:44:00.380" starttime="20201030 23:44:00.367"></status>
</kw>
<msg timestamp="20201030 23:44:00.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:44:00.381" starttime="20201030 23:44:00.366"></status>
</kw>
<msg timestamp="20201030 23:44:00.381" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 23:44:00.381" starttime="20201030 23:44:00.366"></status>
</kw>
<msg timestamp="20201030 23:44:00.381" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 23:44:00.381" starttime="20201030 23:44:00.366"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:44:00.385" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:44:00.385" starttime="20201030 23:44:00.385"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:44:00.386" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:44:00.386" starttime="20201030 23:44:00.385"></status>
</kw>
<status status="PASS" endtime="20201030 23:44:00.386" starttime="20201030 23:44:00.384"></status>
</kw>
<msg timestamp="20201030 23:44:00.386" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:44:00.386" starttime="20201030 23:44:00.384"></status>
</kw>
<status status="PASS" endtime="20201030 23:44:00.387" starttime="20201030 23:44:00.383"></status>
</kw>
<msg timestamp="20201030 23:44:00.387" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 23:44:00.387" starttime="20201030 23:44:00.383"></status>
</kw>
<msg timestamp="20201030 23:44:00.387" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 23:44:00.387" starttime="20201030 23:44:00.381"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:44:00.390" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:44:39.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:44:39.458" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 23:44:02 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 23:44:02 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201030 23:44:39.459" starttime="20201030 23:44:00.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:44:39.460" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-30 23:44:02 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 23:44:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 23:44:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 23:44:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 23:44:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-856F195948FF-&gt;56054a11-06da-466c-8081-41c0c9412eff
2020-10-30 23:44:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-30 23:44:03 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-30 23:44:04 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 23:44:06 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 23:44:06 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604101370679_0001
2020-10-30 23:44:06 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-30 23:44:07 INFO  Configuration:2795 - resource-types.xml not found
2020-10-30 23:44:07 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-30 23:44:07 INFO  YarnClientImpl:329 - Submitted application application_1604101370679_0001
2020-10-30 23:44:07 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604101370679_0001/
2020-10-30 23:44:07 INFO  Job:1619 - Running job: job_1604101370679_0001
2020-10-30 23:44:17 INFO  Job:1640 - Job job_1604101370679_0001 running in uber mode : false
2020-10-30 23:44:17 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 23:44:23 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 23:44:28 INFO  Job:1647 -  map 67% reduce 0%
2020-10-30 23:44:33 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 23:44:37 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 23:44:38 INFO  Job:1658 - Job job_1604101370679_0001 completed successfully
2020-10-30 23:44:38 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35868
		Total time spent by all reduces in occupied slots (ms)=13784
		Total time spent by all map tasks (ms)=8967
		Total time spent by all reduce tasks (ms)=3446
		Total vcore-milliseconds taken by all map tasks=8967
		Total vcore-milliseconds taken by all reduce tasks=3446
		Total megabyte-milliseconds taken by all map tasks=36728832
		Total megabyte-milliseconds taken by all reduce tasks=14114816
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=545
		CPU time spent (ms)=6220
		Physical memory (bytes) snapshot=1484677120
		Virtual memory (bytes) snapshot=16079904768
		Total committed heap usage (bytes)=1721237504
		Peak Map Physical memory (bytes)=381251584
		Peak Map Virtual memory (bytes)=4018610176
		Peak Reduce Physical memory (bytes)=378028032
		Peak Reduce Virtual memory (bytes)=4039688192
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.404 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201030 23:44:39.460" starttime="20201030 23:44:39.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:44:39.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:44:39.460" starttime="20201030 23:44:39.460"></status>
</kw>
<status status="PASS" endtime="20201030 23:44:39.460" starttime="20201030 23:44:00.388"></status>
</kw>
<msg timestamp="20201030 23:44:39.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:44:39.461" starttime="20201030 23:44:00.388"></status>
</kw>
<msg timestamp="20201030 23:44:39.461" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 23:44:02 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 23:44:02 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201030 23:44:39.461" starttime="20201030 23:44:00.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 23:44:39.462" starttime="20201030 23:44:39.462"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 23:44:39.462" critical="yes" starttime="20201030 23:44:00.364"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:44:39.466" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:44:39.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:44:39.471" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 23:44:39.471" starttime="20201030 23:44:39.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:44:39.472" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 23:44:39.472" starttime="20201030 23:44:39.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:44:39.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:44:39.473" starttime="20201030 23:44:39.472"></status>
</kw>
<status status="PASS" endtime="20201030 23:44:39.473" starttime="20201030 23:44:39.464"></status>
</kw>
<msg timestamp="20201030 23:44:39.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:44:39.473" starttime="20201030 23:44:39.464"></status>
</kw>
<msg timestamp="20201030 23:44:39.474" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 23:44:39.474" starttime="20201030 23:44:39.463"></status>
</kw>
<msg timestamp="20201030 23:44:39.474" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 23:44:39.474" starttime="20201030 23:44:39.463"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 23:44:39.474" level="INFO">${random} = 86</msg>
<status status="PASS" endtime="20201030 23:44:39.474" starttime="20201030 23:44:39.474"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:44:39.477" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:44:39.477" starttime="20201030 23:44:39.477"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:44:39.478" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:44:39.478" starttime="20201030 23:44:39.478"></status>
</kw>
<status status="PASS" endtime="20201030 23:44:39.478" starttime="20201030 23:44:39.477"></status>
</kw>
<msg timestamp="20201030 23:44:39.478" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:44:39.478" starttime="20201030 23:44:39.476"></status>
</kw>
<status status="PASS" endtime="20201030 23:44:39.478" starttime="20201030 23:44:39.476"></status>
</kw>
<msg timestamp="20201030 23:44:39.479" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 23:44:39.479" starttime="20201030 23:44:39.475"></status>
</kw>
<msg timestamp="20201030 23:44:39.479" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 23:44:39.479" starttime="20201030 23:44:39.475"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:44:39.482" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:44:39.482" starttime="20201030 23:44:39.481"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:44:39.482" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:44:39.482" starttime="20201030 23:44:39.482"></status>
</kw>
<status status="PASS" endtime="20201030 23:44:39.482" starttime="20201030 23:44:39.481"></status>
</kw>
<msg timestamp="20201030 23:44:39.482" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:44:39.482" starttime="20201030 23:44:39.480"></status>
</kw>
<status status="PASS" endtime="20201030 23:44:39.483" starttime="20201030 23:44:39.480"></status>
</kw>
<msg timestamp="20201030 23:44:39.483" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201030 23:44:39.483" starttime="20201030 23:44:39.479"></status>
</kw>
<msg timestamp="20201030 23:44:39.483" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201030 23:44:39.483" starttime="20201030 23:44:39.479"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 23:44:39.485" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 23:44:39.485" starttime="20201030 23:44:39.485"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 23:44:39.486" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 23:44:39.486" starttime="20201030 23:44:39.486"></status>
</kw>
<status status="PASS" endtime="20201030 23:44:39.486" starttime="20201030 23:44:39.485"></status>
</kw>
<msg timestamp="20201030 23:44:39.486" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 23:44:39.486" starttime="20201030 23:44:39.484"></status>
</kw>
<status status="PASS" endtime="20201030 23:44:39.487" starttime="20201030 23:44:39.484"></status>
</kw>
<msg timestamp="20201030 23:44:39.487" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-86.txt</msg>
<status status="PASS" endtime="20201030 23:44:39.487" starttime="20201030 23:44:39.483"></status>
</kw>
<msg timestamp="20201030 23:44:39.487" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-86.txt</msg>
<status status="PASS" endtime="20201030 23:44:39.487" starttime="20201030 23:44:39.483"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 23:44:39.491" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-86.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 23:45:13.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 23:45:13.186" level="INFO">${output} = 2020-10-30 23:44:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-30 23:44:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201030 23:45:13.186" starttime="20201030 23:44:39.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 23:45:13.187" level="INFO">2020-10-30 23:44:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-30 23:44:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 23:44:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 23:44:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 23:44:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 23:44:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 23:44:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-96BEB0047E3C-&gt;56054a11-06da-466c-8081-41c0c9412eff
2020-10-30 23:44:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 23:44:42 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 23:44:42 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 23:44:43 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604101370679_0002
2020-10-30 23:44:43 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-30 23:44:43 INFO  Configuration:2795 - resource-types.xml not found
2020-10-30 23:44:43 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-30 23:44:43 INFO  YarnClientImpl:329 - Submitted application application_1604101370679_0002
2020-10-30 23:44:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604101370679_0002/
2020-10-30 23:44:43 INFO  Job:1619 - Running job: job_1604101370679_0002
2020-10-30 23:44:51 INFO  Job:1640 - Job job_1604101370679_0002 running in uber mode : false
2020-10-30 23:44:51 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 23:44:57 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 23:45:02 INFO  Job:1647 -  map 67% reduce 0%
2020-10-30 23:45:07 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 23:45:11 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 23:45:12 INFO  Job:1658 - Job job_1604101370679_0002 completed successfully
2020-10-30 23:45:12 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124185
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37500
		Total time spent by all reduces in occupied slots (ms)=13900
		Total time spent by all map tasks (ms)=9375
		Total time spent by all reduce tasks (ms)=3475
		Total vcore-milliseconds taken by all map tasks=9375
		Total vcore-milliseconds taken by all reduce tasks=3475
		Total megabyte-milliseconds taken by all map tasks=38400000
		Total megabyte-milliseconds taken by all reduce tasks=14233600
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=548
		CPU time spent (ms)=7140
		Physical memory (bytes) snapshot=1492635648
		Virtual memory (bytes) snapshot=16087080960
		Total committed heap usage (bytes)=1687683072
		Peak Map Physical memory (bytes)=377212928
		Peak Map Virtual memory (bytes)=4017582080
		Peak Reduce Physical memory (bytes)=370458624
		Peak Reduce Virtual memory (bytes)=4037423104
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201030 23:45:13.188" starttime="20201030 23:45:13.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 23:45:13.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 23:45:13.188" starttime="20201030 23:45:13.188"></status>
</kw>
<status status="PASS" endtime="20201030 23:45:13.188" starttime="20201030 23:44:39.488"></status>
</kw>
<msg timestamp="20201030 23:45:13.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 23:45:13.189" starttime="20201030 23:44:39.487"></status>
</kw>
<msg timestamp="20201030 23:45:13.189" level="INFO">${output} = 2020-10-30 23:44:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-10-30 23:44:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201030 23:45:13.189" starttime="20201030 23:44:39.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201030 23:45:13.190" starttime="20201030 23:45:13.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 23:45:13.190" starttime="20201030 23:45:13.190"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 23:45:13.190" critical="yes" starttime="20201030 23:44:39.462"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201030 23:45:13.191" starttime="20201030 23:44:00.313"></status>
</suite>
<status status="PASS" elapsedtime="192790" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="547948" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
