<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201031 00:15:33.179" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:11:42.278" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:11:52.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:11:52.853" level="INFO">${output} = 2020-10-31 00:11:44,027 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 00:11:44,237 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 00:11:52.853" starttime="20201031 00:11:42.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:11:52.854" level="INFO">2020-10-31 00:11:44,027 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 00:11:44,237 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-31 00:11:44,237 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-31 00:11:46,273 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-10-31 00:11:47,328 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-31 00:11:47,329 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-10-31 00:11:47,329 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-10-31 00:11:47,329 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-10-31 00:11:47,330 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-31 00:11:47,330 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-31 00:11:47,330 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-10-31 00:11:47,333 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-31 00:11:47,344 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 00:11:47,378 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-86499, with testuser/scm@EXAMPLE.COM as owner.
2020-10-31 00:11:47,889 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-86499/bucket-0-03502, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-31 00:11:48,349 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 00:11:49,353 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 00:11:49,918 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-31 00:11:50,358 [Thread-9] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,486
Average Time spent in bucket creation: 00:00:00,179
Average Time spent in key creation: 00:00:01,052
Average Time spent in key write: 00:00:01,068
Total bytes written: 10240
Total Execution time: 00:00:07,995
***************************************************</msg>
<status status="PASS" endtime="20201031 00:11:52.854" starttime="20201031 00:11:52.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:11:52.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:11:52.855" starttime="20201031 00:11:52.854"></status>
</kw>
<status status="PASS" endtime="20201031 00:11:52.855" starttime="20201031 00:11:42.274"></status>
</kw>
<msg timestamp="20201031 00:11:52.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:11:52.855" starttime="20201031 00:11:42.274"></status>
</kw>
<msg timestamp="20201031 00:11:52.856" level="INFO">${result} = 2020-10-31 00:11:44,027 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 00:11:44,237 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 00:11:52.856" starttime="20201031 00:11:42.273"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201031 00:11:52.857" starttime="20201031 00:11:52.856"></status>
</kw>
<status status="PASS" endtime="20201031 00:11:52.857" starttime="20201031 00:11:52.856"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 00:11:52.857" critical="yes" starttime="20201031 00:11:42.272"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:11:52.862" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:12:00.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:12:00.330" level="INFO">${output} = 2020-10-31 00:11:54,412 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 00:11:54,587 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 00:12:00.330" starttime="20201031 00:11:52.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:12:00.332" level="INFO">2020-10-31 00:11:54,412 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 00:11:54,587 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-31 00:11:54,587 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-31 00:11:54,781 [main] INFO freon.BaseFreonGenerator: Executing test with prefix cp7fkmkmos
2020-10-31 00:11:54,800 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-31 00:11:55,807 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 00:11:55,890 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-10-31 00:11:56,304 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-10-31 00:11:56,369 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-31 00:11:56,807 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 00:11:56,894 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-31 00:11:57,216 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-31 00:11:57,216 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-4FB9A88003C8-&gt;b7c0008a-bdb8-4abe-8023-60203cb2526f
2020-10-31 00:11:57,217 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-31 00:11:57,808 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 00:11:58,808 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 00:11:59,809 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-31 00:11:59,956 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=2886.251992, max=2886.251992, mean=2886.251992, stddev=0.0, median=2886.251992, p75=2886.251992, p95=2886.251992, p98=2886.251992, p99=2886.251992, p999=2886.251992, mean_rate=0.2853768308732276, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-31 00:11:59,956 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2020-10-31 00:11:59,961 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-31 00:11:59,961 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201031 00:12:00.332" starttime="20201031 00:12:00.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:12:00.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:12:00.333" starttime="20201031 00:12:00.333"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:00.333" starttime="20201031 00:11:52.859"></status>
</kw>
<msg timestamp="20201031 00:12:00.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:12:00.333" starttime="20201031 00:11:52.859"></status>
</kw>
<msg timestamp="20201031 00:12:00.338" level="INFO">${result} = 2020-10-31 00:11:54,412 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 00:11:54,587 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 00:12:00.339" starttime="20201031 00:11:52.859"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201031 00:12:00.342" starttime="20201031 00:12:00.342"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:00.342" starttime="20201031 00:12:00.339"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 00:12:00.344" critical="yes" starttime="20201031 00:11:52.858"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:12:00.358" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:12:04.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:12:04.867" level="INFO">${output} = 2020-10-31 00:12:01,980 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 00:12:02,162 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 00:12:04.868" starttime="20201031 00:12:00.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:12:04.868" level="INFO">2020-10-31 00:12:01,980 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 00:12:02,162 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-31 00:12:02,163 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-31 00:12:02,298 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 2ie89xwqwz
2020-10-31 00:12:02,312 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-31 00:12:03,269 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-10-31 00:12:03,324 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 00:12:03,843 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-10-31 00:12:04,325 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-31 00:12:04,825 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=300.399573, max=300.399573, mean=300.399573, stddev=0.0, median=300.399573, p75=300.399573, p95=300.399573, p98=300.399573, p99=300.399573, p999=300.399573, mean_rate=0.8888006748293783, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-31 00:12:04,837 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-31 00:12:04,837 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-31 00:12:04,837 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201031 00:12:04.869" starttime="20201031 00:12:04.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:12:04.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:12:04.869" starttime="20201031 00:12:04.869"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:04.870" starttime="20201031 00:12:00.348"></status>
</kw>
<msg timestamp="20201031 00:12:04.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:12:04.870" starttime="20201031 00:12:00.348"></status>
</kw>
<msg timestamp="20201031 00:12:04.871" level="INFO">${result} = 2020-10-31 00:12:01,980 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 00:12:02,162 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 00:12:04.871" starttime="20201031 00:12:00.347"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201031 00:12:04.871" starttime="20201031 00:12:04.871"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:04.872" starttime="20201031 00:12:04.871"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 00:12:04.872" critical="yes" starttime="20201031 00:12:00.345"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:12:04.876" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:12:09.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:12:09.151" level="INFO">${output} = 2020-10-31 00:12:06,378 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 00:12:06,529 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 00:12:09.151" starttime="20201031 00:12:04.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:12:09.152" level="INFO">2020-10-31 00:12:06,378 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 00:12:06,529 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-31 00:12:06,529 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-31 00:12:06,676 [main] INFO freon.BaseFreonGenerator: Executing test with prefix v32uuefiin
2020-10-31 00:12:06,696 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-31 00:12:07,523 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-10-31 00:12:07,697 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-31 00:12:08,001 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-10-31 00:12:08,697 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-31 00:12:09,050 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=120.333208, max=120.333208, mean=120.333208, stddev=0.0, median=120.333208, p75=120.333208, p95=120.333208, p98=120.333208, p99=120.333208, p999=120.333208, mean_rate=0.8937873959808553, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-31 00:12:09,055 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-10-31 00:12:09,056 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-31 00:12:09,056 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201031 00:12:09.152" starttime="20201031 00:12:09.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:12:09.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:12:09.152" starttime="20201031 00:12:09.152"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:09.153" starttime="20201031 00:12:04.874"></status>
</kw>
<msg timestamp="20201031 00:12:09.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:12:09.153" starttime="20201031 00:12:04.874"></status>
</kw>
<msg timestamp="20201031 00:12:09.153" level="INFO">${result} = 2020-10-31 00:12:06,378 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-31 00:12:06,529 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201031 00:12:09.153" starttime="20201031 00:12:04.873"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201031 00:12:09.154" starttime="20201031 00:12:09.154"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:09.154" starttime="20201031 00:12:09.153"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201031 00:12:09.155" critical="yes" starttime="20201031 00:12:04.873"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201031 00:12:09.156" starttime="20201031 00:11:42.240"></status>
</suite>
<status status="PASS" endtime="20201031 00:12:09.159" starttime="20201031 00:11:42.211"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:11:35.155" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:11:35.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:11:35.170" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:11:35.170" starttime="20201031 00:11:35.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:11:35.171" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:11:35.171" starttime="20201031 00:11:35.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:11:35.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:11:35.171" starttime="20201031 00:11:35.171"></status>
</kw>
<status status="PASS" endtime="20201031 00:11:35.172" starttime="20201031 00:11:35.149"></status>
</kw>
<msg timestamp="20201031 00:11:35.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:11:35.172" starttime="20201031 00:11:35.148"></status>
</kw>
<msg timestamp="20201031 00:11:35.172" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:11:35.172" starttime="20201031 00:11:35.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:11:35.173" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:11:35.173" starttime="20201031 00:11:35.172"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:11:35.177" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:11:35.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:11:35.204" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:11:35.204" starttime="20201031 00:11:35.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:11:35.205" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:11:35.205" starttime="20201031 00:11:35.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:11:35.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:11:35.206" starttime="20201031 00:11:35.205"></status>
</kw>
<status status="PASS" endtime="20201031 00:11:35.206" starttime="20201031 00:11:35.175"></status>
</kw>
<msg timestamp="20201031 00:11:35.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:11:35.206" starttime="20201031 00:11:35.174"></status>
</kw>
<status status="PASS" endtime="20201031 00:11:35.206" starttime="20201031 00:11:35.173"></status>
</kw>
<status status="PASS" endtime="20201031 00:11:35.206" starttime="20201031 00:11:35.173"></status>
</kw>
<status status="PASS" endtime="20201031 00:11:35.207" starttime="20201031 00:11:35.145"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 00:11:35.207" critical="yes" starttime="20201031 00:11:35.143"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201031 00:11:35.208" starttime="20201031 00:11:35.035"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201031 00:12:14.430" level="INFO">${random} = 84159</msg>
<status status="PASS" endtime="20201031 00:12:14.430" starttime="20201031 00:12:14.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201031 00:12:14.433" level="INFO">${source} = 84159-source</msg>
<status status="PASS" endtime="20201031 00:12:14.433" starttime="20201031 00:12:14.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201031 00:12:14.434" level="INFO">${target} = 84159-target</msg>
<status status="PASS" endtime="20201031 00:12:14.434" starttime="20201031 00:12:14.433"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:12:14.440" level="INFO">Running command 'ozone sh volume create 84159-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:12:17.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:12:17.762" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:12:17.762" starttime="20201031 00:12:14.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:12:17.763" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:12:17.763" starttime="20201031 00:12:17.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:12:17.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:12:17.764" starttime="20201031 00:12:17.763"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:17.764" starttime="20201031 00:12:14.435"></status>
</kw>
<msg timestamp="20201031 00:12:17.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:12:17.764" starttime="20201031 00:12:14.435"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:17.764" starttime="20201031 00:12:14.435"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:12:17.769" level="INFO">Running command 'ozone sh volume create 84159-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:12:20.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:12:20.907" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:12:20.907" starttime="20201031 00:12:17.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:12:20.908" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:12:20.908" starttime="20201031 00:12:20.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:12:20.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:12:20.908" starttime="20201031 00:12:20.908"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:20.909" starttime="20201031 00:12:17.765"></status>
</kw>
<msg timestamp="20201031 00:12:20.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:12:20.909" starttime="20201031 00:12:17.765"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:20.909" starttime="20201031 00:12:17.765"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:12:20.918" level="INFO">Running command 'ozone sh bucket create 84159-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:12:24.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:12:24.118" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:12:24.118" starttime="20201031 00:12:20.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:12:24.119" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:12:24.119" starttime="20201031 00:12:24.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:12:24.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:12:24.120" starttime="20201031 00:12:24.119"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:24.120" starttime="20201031 00:12:20.911"></status>
</kw>
<msg timestamp="20201031 00:12:24.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:12:24.120" starttime="20201031 00:12:20.911"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:24.120" starttime="20201031 00:12:20.910"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:12:24.124" level="INFO">Running command 'ozone sh key put 84159-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:12:29.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:12:29.829" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:12:29.829" starttime="20201031 00:12:24.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:12:29.830" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:12:29.830" starttime="20201031 00:12:29.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:12:29.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:12:29.830" starttime="20201031 00:12:29.830"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:29.831" starttime="20201031 00:12:24.121"></status>
</kw>
<msg timestamp="20201031 00:12:29.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:12:29.831" starttime="20201031 00:12:24.121"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:29.831" starttime="20201031 00:12:24.121"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:12:29.835" level="INFO">Running command 'ozone sh bucket create 84159-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:12:33.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:12:33.640" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:12:33.640" starttime="20201031 00:12:29.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:12:33.641" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:12:33.641" starttime="20201031 00:12:33.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:12:33.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:12:33.642" starttime="20201031 00:12:33.641"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:33.642" starttime="20201031 00:12:29.832"></status>
</kw>
<msg timestamp="20201031 00:12:33.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:12:33.642" starttime="20201031 00:12:29.832"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:33.642" starttime="20201031 00:12:29.831"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:12:33.645" level="INFO">Running command 'ozone sh bucket link 84159-source/readable-bucket 84159-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:12:36.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:12:36.803" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:12:36.803" starttime="20201031 00:12:33.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:12:36.804" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:12:36.804" starttime="20201031 00:12:36.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:12:36.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:12:36.805" starttime="20201031 00:12:36.805"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:36.805" starttime="20201031 00:12:33.643"></status>
</kw>
<msg timestamp="20201031 00:12:36.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:12:36.805" starttime="20201031 00:12:33.643"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:36.806" starttime="20201031 00:12:33.643"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:12:36.809" level="INFO">Running command 'ozone sh bucket link 84159-source/readable-bucket 84159-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:12:40.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:12:40.178" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:12:40.178" starttime="20201031 00:12:36.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:12:40.179" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:12:40.179" starttime="20201031 00:12:40.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:12:40.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:12:40.180" starttime="20201031 00:12:40.180"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:40.181" starttime="20201031 00:12:36.806"></status>
</kw>
<msg timestamp="20201031 00:12:40.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:12:40.181" starttime="20201031 00:12:36.806"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:40.181" starttime="20201031 00:12:36.806"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:12:40.186" level="INFO">Running command 'ozone sh bucket link 84159-source/unreadable-bucket 84159-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:12:43.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:12:43.625" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:12:43.625" starttime="20201031 00:12:40.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:12:43.626" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:12:43.626" starttime="20201031 00:12:43.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:12:43.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:12:43.626" starttime="20201031 00:12:43.626"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:43.627" starttime="20201031 00:12:40.182"></status>
</kw>
<msg timestamp="20201031 00:12:43.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:12:43.627" starttime="20201031 00:12:40.182"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:43.627" starttime="20201031 00:12:40.181"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:12:43.631" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 84159-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:12:46.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:12:46.983" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:12:46.983" starttime="20201031 00:12:43.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:12:46.984" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 00:12:46.984" starttime="20201031 00:12:46.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:12:46.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:12:46.985" starttime="20201031 00:12:46.985"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:46.985" starttime="20201031 00:12:43.628"></status>
</kw>
<msg timestamp="20201031 00:12:46.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:12:46.985" starttime="20201031 00:12:43.627"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:46.986" starttime="20201031 00:12:43.627"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:12:46.989" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 84159-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:12:50.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:12:50.094" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:12:50.094" starttime="20201031 00:12:46.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:12:50.095" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 00:12:50.095" starttime="20201031 00:12:50.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:12:50.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:12:50.095" starttime="20201031 00:12:50.095"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:50.096" starttime="20201031 00:12:46.987"></status>
</kw>
<msg timestamp="20201031 00:12:50.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:12:50.096" starttime="20201031 00:12:46.986"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:50.096" starttime="20201031 00:12:46.986"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:12:50.099" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 84159-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:12:53.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:12:53.380" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:12:53.380" starttime="20201031 00:12:50.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:12:53.381" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 00:12:53.381" starttime="20201031 00:12:53.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:12:53.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:12:53.382" starttime="20201031 00:12:53.382"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:53.382" starttime="20201031 00:12:50.097"></status>
</kw>
<msg timestamp="20201031 00:12:53.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:12:53.383" starttime="20201031 00:12:50.097"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:53.383" starttime="20201031 00:12:50.096"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:12:53.387" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 84159-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:12:56.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:12:56.734" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:12:56.734" starttime="20201031 00:12:53.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:12:56.735" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 00:12:56.735" starttime="20201031 00:12:56.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:12:56.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:12:56.736" starttime="20201031 00:12:56.735"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:56.736" starttime="20201031 00:12:53.384"></status>
</kw>
<msg timestamp="20201031 00:12:56.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:12:56.736" starttime="20201031 00:12:53.383"></status>
</kw>
<status status="PASS" endtime="20201031 00:12:56.736" starttime="20201031 00:12:53.383"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:12:56.741" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 84159-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:00.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:00.005" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:13:00.005" starttime="20201031 00:12:56.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:00.006" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 00:13:00.007" starttime="20201031 00:13:00.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:00.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:00.007" starttime="20201031 00:13:00.007"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:00.007" starttime="20201031 00:12:56.737"></status>
</kw>
<msg timestamp="20201031 00:13:00.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:00.008" starttime="20201031 00:12:56.737"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:00.008" starttime="20201031 00:12:56.736"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:00.008" starttime="20201031 00:12:20.910"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:00.008" starttime="20201031 00:12:20.909"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:00.008" starttime="20201031 00:12:14.429"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:00.014" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:00.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:00.016" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:13:00.016" starttime="20201031 00:13:00.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:00.017" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:13:00.017" starttime="20201031 00:13:00.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:00.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:00.018" starttime="20201031 00:13:00.017"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:00.018" starttime="20201031 00:13:00.011"></status>
</kw>
<msg timestamp="20201031 00:13:00.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:00.018" starttime="20201031 00:13:00.011"></status>
</kw>
<msg timestamp="20201031 00:13:00.018" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:13:00.018" starttime="20201031 00:13:00.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:13:00.020" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:13:00.020" starttime="20201031 00:13:00.019"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:00.024" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:00.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:00.039" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:13:00.039" starttime="20201031 00:13:00.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:00.040" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:13:00.040" starttime="20201031 00:13:00.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:00.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:00.040" starttime="20201031 00:13:00.040"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:00.041" starttime="20201031 00:13:00.021"></status>
</kw>
<msg timestamp="20201031 00:13:00.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:00.041" starttime="20201031 00:13:00.021"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:00.041" starttime="20201031 00:13:00.020"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:00.041" starttime="20201031 00:13:00.020"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:00.041" starttime="20201031 00:13:00.010"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:00.041" starttime="20201031 00:13:00.010"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:00.045" level="INFO">Running command 'ozone sh bucket link 84159-source/no-such-bucket 84159-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:03.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:03.696" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:13:03.696" starttime="20201031 00:13:00.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:03.697" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:13:03.698" starttime="20201031 00:13:03.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:03.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:03.699" starttime="20201031 00:13:03.698"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:03.699" starttime="20201031 00:13:00.042"></status>
</kw>
<msg timestamp="20201031 00:13:03.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:03.699" starttime="20201031 00:13:00.042"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:03.699" starttime="20201031 00:13:00.041"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:03.702" level="INFO">Running command 'ozone sh key list 84159-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:07.330" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 00:13:07.330" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:13:07.330" starttime="20201031 00:13:03.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:07.332" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201031 00:13:07.332" starttime="20201031 00:13:07.331"></status>
</kw>
<msg timestamp="20201031 00:13:07.333" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:13:07.333" starttime="20201031 00:13:03.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201031 00:13:07.333" starttime="20201031 00:13:07.333"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 00:13:07.334" critical="yes" starttime="20201031 00:13:00.008"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:07.341" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:07.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:07.344" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:13:07.344" starttime="20201031 00:13:07.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:07.345" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:13:07.345" starttime="20201031 00:13:07.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:07.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:07.346" starttime="20201031 00:13:07.345"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:07.346" starttime="20201031 00:13:07.338"></status>
</kw>
<msg timestamp="20201031 00:13:07.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:07.346" starttime="20201031 00:13:07.338"></status>
</kw>
<msg timestamp="20201031 00:13:07.347" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:13:07.347" starttime="20201031 00:13:07.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:13:07.347" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:13:07.347" starttime="20201031 00:13:07.347"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:07.352" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:07.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:07.362" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:13:07.362" starttime="20201031 00:13:07.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:07.363" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:13:07.363" starttime="20201031 00:13:07.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:07.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:07.364" starttime="20201031 00:13:07.363"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:07.364" starttime="20201031 00:13:07.349"></status>
</kw>
<msg timestamp="20201031 00:13:07.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:07.364" starttime="20201031 00:13:07.348"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:07.364" starttime="20201031 00:13:07.348"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:07.364" starttime="20201031 00:13:07.348"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:07.365" starttime="20201031 00:13:07.336"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:07.365" starttime="20201031 00:13:07.335"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:07.369" level="INFO">Running command 'ozone sh bucket link 84159-source/bucket1 84159-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:10.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:10.777" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:13:10.777" starttime="20201031 00:13:07.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:10.778" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:13:10.778" starttime="20201031 00:13:10.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:10.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:10.778" starttime="20201031 00:13:10.778"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:10.779" starttime="20201031 00:13:07.366"></status>
</kw>
<msg timestamp="20201031 00:13:10.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:10.779" starttime="20201031 00:13:07.366"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:10.779" starttime="20201031 00:13:07.365"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:10.782" level="INFO">Running command 'ozone sh bucket create 84159-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:14.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:14.261" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:13:14.261" starttime="20201031 00:13:10.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:14.262" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:13:14.262" starttime="20201031 00:13:14.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:14.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:14.263" starttime="20201031 00:13:14.262"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:14.263" starttime="20201031 00:13:10.780"></status>
</kw>
<msg timestamp="20201031 00:13:14.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:14.263" starttime="20201031 00:13:10.780"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:14.263" starttime="20201031 00:13:10.779"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:14.268" level="INFO">Running command 'ozone sh key put 84159-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:20.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:20.209" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:13:20.209" starttime="20201031 00:13:14.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:20.210" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:13:20.210" starttime="20201031 00:13:20.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:20.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:20.211" starttime="20201031 00:13:20.210"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:20.211" starttime="20201031 00:13:14.264"></status>
</kw>
<msg timestamp="20201031 00:13:20.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:20.211" starttime="20201031 00:13:14.264"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:20.211" starttime="20201031 00:13:14.264"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201031 00:13:20.213" level="INFO">${postfix} = 09286</msg>
<status status="PASS" endtime="20201031 00:13:20.213" starttime="20201031 00:13:20.213"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201031 00:13:20.214" level="INFO">${tmpfile} = /tmp/tempkey-09286</msg>
<status status="PASS" endtime="20201031 00:13:20.214" starttime="20201031 00:13:20.213"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:20.217" level="INFO">Running command 'ozone sh key get -f 84159-target/link1/key1 /tmp/tempkey-09286 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:25.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:25.439" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:13:25.439" starttime="20201031 00:13:20.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:25.440" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:13:25.440" starttime="20201031 00:13:25.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:25.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:25.441" starttime="20201031 00:13:25.440"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:25.441" starttime="20201031 00:13:20.215"></status>
</kw>
<msg timestamp="20201031 00:13:25.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:25.441" starttime="20201031 00:13:20.214"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:25.442" starttime="20201031 00:13:20.214"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201031 00:13:25.445" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-09286 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:25.450" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201031 00:13:25.450" starttime="20201031 00:13:25.442"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:25.454" level="INFO">Running command 'rm -f /tmp/tempkey-09286 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:25.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:25.456" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:13:25.456" starttime="20201031 00:13:25.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:25.457" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:13:25.457" starttime="20201031 00:13:25.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:25.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:25.458" starttime="20201031 00:13:25.457"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:25.458" starttime="20201031 00:13:25.452"></status>
</kw>
<msg timestamp="20201031 00:13:25.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:25.458" starttime="20201031 00:13:25.451"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:25.458" starttime="20201031 00:13:25.450"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 00:13:25.459" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201031 00:13:25.459" starttime="20201031 00:13:25.458"></status>
</kw>
<msg timestamp="20201031 00:13:25.459" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201031 00:13:25.459" starttime="20201031 00:13:20.212"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201031 00:13:25.460" starttime="20201031 00:13:25.460"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:25.460" starttime="20201031 00:13:20.212"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 00:13:25.460" critical="yes" starttime="20201031 00:13:07.334"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:25.467" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:25.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:25.468" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:13:25.468" starttime="20201031 00:13:25.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:25.468" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:13:25.468" starttime="20201031 00:13:25.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:25.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:25.469" starttime="20201031 00:13:25.469"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:25.469" starttime="20201031 00:13:25.464"></status>
</kw>
<msg timestamp="20201031 00:13:25.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:25.470" starttime="20201031 00:13:25.463"></status>
</kw>
<msg timestamp="20201031 00:13:25.470" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:13:25.470" starttime="20201031 00:13:25.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:13:25.470" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:13:25.470" starttime="20201031 00:13:25.470"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:25.475" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:25.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:25.484" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:13:25.484" starttime="20201031 00:13:25.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:25.485" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:13:25.485" starttime="20201031 00:13:25.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:25.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:25.485" starttime="20201031 00:13:25.485"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:25.486" starttime="20201031 00:13:25.472"></status>
</kw>
<msg timestamp="20201031 00:13:25.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:25.486" starttime="20201031 00:13:25.471"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:25.486" starttime="20201031 00:13:25.471"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:25.486" starttime="20201031 00:13:25.471"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:25.486" starttime="20201031 00:13:25.463"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:25.486" starttime="20201031 00:13:25.462"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:25.490" level="INFO">Running command 'ozone sh key put 84159-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:30.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:30.907" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:13:30.907" starttime="20201031 00:13:25.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:30.908" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:13:30.908" starttime="20201031 00:13:30.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:30.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:30.909" starttime="20201031 00:13:30.908"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:30.909" starttime="20201031 00:13:25.487"></status>
</kw>
<msg timestamp="20201031 00:13:30.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:30.909" starttime="20201031 00:13:25.487"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:30.909" starttime="20201031 00:13:25.486"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201031 00:13:30.912" level="INFO">${postfix} = 74893</msg>
<status status="PASS" endtime="20201031 00:13:30.912" starttime="20201031 00:13:30.911"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201031 00:13:30.913" level="INFO">${tmpfile} = /tmp/tempkey-74893</msg>
<status status="PASS" endtime="20201031 00:13:30.913" starttime="20201031 00:13:30.912"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:30.917" level="INFO">Running command 'ozone sh key get -f 84159-source/bucket1/key2 /tmp/tempkey-74893 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:36.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:36.323" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:13:36.323" starttime="20201031 00:13:30.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:36.324" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:13:36.324" starttime="20201031 00:13:36.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:36.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:36.324" starttime="20201031 00:13:36.324"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:36.325" starttime="20201031 00:13:30.915"></status>
</kw>
<msg timestamp="20201031 00:13:36.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:36.325" starttime="20201031 00:13:30.914"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:36.325" starttime="20201031 00:13:30.913"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201031 00:13:36.327" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-74893 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:36.329" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201031 00:13:36.329" starttime="20201031 00:13:36.325"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:36.334" level="INFO">Running command 'rm -f /tmp/tempkey-74893 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:36.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:36.336" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:13:36.337" starttime="20201031 00:13:36.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:36.337" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:13:36.337" starttime="20201031 00:13:36.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:36.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:36.338" starttime="20201031 00:13:36.338"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:36.338" starttime="20201031 00:13:36.331"></status>
</kw>
<msg timestamp="20201031 00:13:36.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:36.339" starttime="20201031 00:13:36.331"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:36.339" starttime="20201031 00:13:36.330"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 00:13:36.339" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201031 00:13:36.339" starttime="20201031 00:13:36.339"></status>
</kw>
<msg timestamp="20201031 00:13:36.340" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201031 00:13:36.340" starttime="20201031 00:13:30.910"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201031 00:13:36.340" starttime="20201031 00:13:36.340"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:36.340" starttime="20201031 00:13:30.910"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 00:13:36.340" critical="yes" starttime="20201031 00:13:25.461"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:36.346" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:36.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:36.347" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:13:36.347" starttime="20201031 00:13:36.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:36.348" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:13:36.348" starttime="20201031 00:13:36.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:36.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:36.348" starttime="20201031 00:13:36.348"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:36.349" starttime="20201031 00:13:36.343"></status>
</kw>
<msg timestamp="20201031 00:13:36.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:36.349" starttime="20201031 00:13:36.343"></status>
</kw>
<msg timestamp="20201031 00:13:36.349" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:13:36.349" starttime="20201031 00:13:36.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:13:36.350" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:13:36.350" starttime="20201031 00:13:36.349"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:36.353" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:36.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:36.364" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:13:36.364" starttime="20201031 00:13:36.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:36.365" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:13:36.365" starttime="20201031 00:13:36.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:36.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:36.366" starttime="20201031 00:13:36.365"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:36.366" starttime="20201031 00:13:36.351"></status>
</kw>
<msg timestamp="20201031 00:13:36.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:36.366" starttime="20201031 00:13:36.351"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:36.367" starttime="20201031 00:13:36.350"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:36.367" starttime="20201031 00:13:36.350"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:36.367" starttime="20201031 00:13:36.342"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:36.367" starttime="20201031 00:13:36.342"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:36.370" level="INFO">Running command 'ozone sh key list 84159-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:40.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:40.086" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201031 00:13:40.087" starttime="20201031 00:13:36.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:40.088" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201031 00:13:40.088" starttime="20201031 00:13:40.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:40.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:40.088" starttime="20201031 00:13:40.088"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:40.089" starttime="20201031 00:13:36.368"></status>
</kw>
<msg timestamp="20201031 00:13:40.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:40.089" starttime="20201031 00:13:36.368"></status>
</kw>
<msg timestamp="20201031 00:13:40.089" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201031 00:13:40.089" starttime="20201031 00:13:36.367"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:40.093" level="INFO">Running command 'ozone sh key list 84159-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:43.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:43.889" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201031 00:13:43.889" starttime="20201031 00:13:40.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:43.890" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201031 00:13:43.890" starttime="20201031 00:13:43.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:43.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:43.890" starttime="20201031 00:13:43.890"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:43.891" starttime="20201031 00:13:40.090"></status>
</kw>
<msg timestamp="20201031 00:13:43.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:43.891" starttime="20201031 00:13:40.090"></status>
</kw>
<msg timestamp="20201031 00:13:43.891" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201031 00:13:43.891" starttime="20201031 00:13:40.089"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201031 00:13:43.892" starttime="20201031 00:13:43.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201031 00:13:43.892" starttime="20201031 00:13:43.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201031 00:13:43.893" starttime="20201031 00:13:43.893"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 00:13:43.893" critical="yes" starttime="20201031 00:13:36.341"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:43.899" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:43.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:43.901" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:13:43.901" starttime="20201031 00:13:43.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:43.901" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:13:43.901" starttime="20201031 00:13:43.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:43.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:43.902" starttime="20201031 00:13:43.902"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:43.902" starttime="20201031 00:13:43.896"></status>
</kw>
<msg timestamp="20201031 00:13:43.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:43.902" starttime="20201031 00:13:43.896"></status>
</kw>
<msg timestamp="20201031 00:13:43.903" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:13:43.903" starttime="20201031 00:13:43.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:13:43.903" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:13:43.903" starttime="20201031 00:13:43.903"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:43.906" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:43.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:43.923" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:13:43.923" starttime="20201031 00:13:43.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:43.924" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:13:43.924" starttime="20201031 00:13:43.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:43.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:43.924" starttime="20201031 00:13:43.924"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:43.925" starttime="20201031 00:13:43.904"></status>
</kw>
<msg timestamp="20201031 00:13:43.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:43.925" starttime="20201031 00:13:43.904"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:43.925" starttime="20201031 00:13:43.904"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:43.925" starttime="20201031 00:13:43.903"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:43.925" starttime="20201031 00:13:43.895"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:43.925" starttime="20201031 00:13:43.895"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:43.931" level="INFO">Running command 'ozone sh key delete 84159-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:47.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:47.508" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:13:47.509" starttime="20201031 00:13:43.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:47.510" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:13:47.510" starttime="20201031 00:13:47.509"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:47.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:47.511" starttime="20201031 00:13:47.510"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:47.511" starttime="20201031 00:13:43.926"></status>
</kw>
<msg timestamp="20201031 00:13:47.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:47.511" starttime="20201031 00:13:43.926"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:47.512" starttime="20201031 00:13:43.925"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:47.522" level="INFO">Running command 'ozone sh key list 84159-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:50.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:50.846" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201031 00:13:50.846" starttime="20201031 00:13:47.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:50.847" level="INFO">key1</msg>
<status status="PASS" endtime="20201031 00:13:50.847" starttime="20201031 00:13:50.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:50.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:50.848" starttime="20201031 00:13:50.847"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:50.848" starttime="20201031 00:13:47.513"></status>
</kw>
<msg timestamp="20201031 00:13:50.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:50.848" starttime="20201031 00:13:47.512"></status>
</kw>
<msg timestamp="20201031 00:13:50.849" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201031 00:13:50.849" starttime="20201031 00:13:47.512"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201031 00:13:50.849" starttime="20201031 00:13:50.849"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 00:13:50.849" critical="yes" starttime="20201031 00:13:43.894"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:50.855" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:50.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:50.857" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:13:50.857" starttime="20201031 00:13:50.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:50.858" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:13:50.858" starttime="20201031 00:13:50.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:50.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:50.859" starttime="20201031 00:13:50.858"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:50.859" starttime="20201031 00:13:50.853"></status>
</kw>
<msg timestamp="20201031 00:13:50.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:50.859" starttime="20201031 00:13:50.852"></status>
</kw>
<msg timestamp="20201031 00:13:50.859" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:13:50.859" starttime="20201031 00:13:50.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:13:50.860" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:13:50.860" starttime="20201031 00:13:50.859"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:50.864" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:50.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:50.883" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:13:50.883" starttime="20201031 00:13:50.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:50.884" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:13:50.884" starttime="20201031 00:13:50.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:50.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:50.884" starttime="20201031 00:13:50.884"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:50.885" starttime="20201031 00:13:50.861"></status>
</kw>
<msg timestamp="20201031 00:13:50.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:50.885" starttime="20201031 00:13:50.861"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:50.885" starttime="20201031 00:13:50.860"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:50.885" starttime="20201031 00:13:50.860"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:50.885" starttime="20201031 00:13:50.852"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:50.885" starttime="20201031 00:13:50.851"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:50.888" level="INFO">Running command 'ozone sh bucket list 84159-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:54.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:54.175" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:13:54.175" starttime="20201031 00:13:50.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:54.176" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "84159-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T00:13:03.530Z",
  "modificationTime" : "2020-10-31T00:13:03.530Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84159-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "84159-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T00:12:43.383Z",
  "modificationTime" : "2020-10-31T00:12:59.934Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84159-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "84159-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T00:13:10.487Z",
  "modificationTime" : "2020-10-31T00:13:10.487Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84159-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "84159-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T00:12:36.673Z",
  "modificationTime" : "2020-10-31T00:12:56.530Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84159-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "84159-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T00:12:40.008Z",
  "modificationTime" : "2020-10-31T00:12:40.008Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84159-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201031 00:13:54.176" starttime="20201031 00:13:54.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:54.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:54.177" starttime="20201031 00:13:54.177"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:54.178" starttime="20201031 00:13:50.886"></status>
</kw>
<msg timestamp="20201031 00:13:54.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:54.178" starttime="20201031 00:13:50.886"></status>
</kw>
<msg timestamp="20201031 00:13:54.178" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:13:54.178" starttime="20201031 00:13:50.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201031 00:13:54.179" starttime="20201031 00:13:54.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201031 00:13:54.180" starttime="20201031 00:13:54.179"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 00:13:54.180" critical="yes" starttime="20201031 00:13:50.850"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:54.188" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:54.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:54.189" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:13:54.189" starttime="20201031 00:13:54.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:54.189" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:13:54.190" starttime="20201031 00:13:54.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:54.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:54.190" starttime="20201031 00:13:54.190"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:54.191" starttime="20201031 00:13:54.184"></status>
</kw>
<msg timestamp="20201031 00:13:54.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:54.191" starttime="20201031 00:13:54.184"></status>
</kw>
<msg timestamp="20201031 00:13:54.191" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:13:54.191" starttime="20201031 00:13:54.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:13:54.192" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:13:54.192" starttime="20201031 00:13:54.191"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:54.196" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:54.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:54.206" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:13:54.207" starttime="20201031 00:13:54.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:54.207" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:13:54.208" starttime="20201031 00:13:54.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:54.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:54.208" starttime="20201031 00:13:54.208"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:54.208" starttime="20201031 00:13:54.194"></status>
</kw>
<msg timestamp="20201031 00:13:54.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:54.210" starttime="20201031 00:13:54.193"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:54.210" starttime="20201031 00:13:54.192"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:54.210" starttime="20201031 00:13:54.192"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:54.210" starttime="20201031 00:13:54.183"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:54.211" starttime="20201031 00:13:54.182"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:54.215" level="INFO">Running command 'ozone sh bucket info 84159-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:57.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:57.594" level="INFO">${output} = 84159-source bucket1</msg>
<status status="PASS" endtime="20201031 00:13:57.594" starttime="20201031 00:13:54.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:57.595" level="INFO">84159-source bucket1</msg>
<status status="PASS" endtime="20201031 00:13:57.595" starttime="20201031 00:13:57.594"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:57.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:57.595" starttime="20201031 00:13:57.595"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:57.596" starttime="20201031 00:13:54.212"></status>
</kw>
<msg timestamp="20201031 00:13:57.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:57.596" starttime="20201031 00:13:54.211"></status>
</kw>
<msg timestamp="20201031 00:13:57.596" level="INFO">${result} = 84159-source bucket1</msg>
<status status="PASS" endtime="20201031 00:13:57.596" starttime="20201031 00:13:54.211"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201031 00:13:57.597" starttime="20201031 00:13:57.596"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 00:13:57.597" critical="yes" starttime="20201031 00:13:54.182"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:57.605" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:57.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:57.606" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:13:57.606" starttime="20201031 00:13:57.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:57.607" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:13:57.607" starttime="20201031 00:13:57.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:57.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:57.607" starttime="20201031 00:13:57.607"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:57.608" starttime="20201031 00:13:57.601"></status>
</kw>
<msg timestamp="20201031 00:13:57.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:57.608" starttime="20201031 00:13:57.601"></status>
</kw>
<msg timestamp="20201031 00:13:57.608" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:13:57.608" starttime="20201031 00:13:57.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:13:57.609" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:13:57.609" starttime="20201031 00:13:57.608"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:57.613" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:13:57.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:13:57.637" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:13:57.637" starttime="20201031 00:13:57.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:13:57.639" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:13:57.639" starttime="20201031 00:13:57.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:13:57.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:13:57.640" starttime="20201031 00:13:57.639"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:57.640" starttime="20201031 00:13:57.610"></status>
</kw>
<msg timestamp="20201031 00:13:57.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:13:57.640" starttime="20201031 00:13:57.610"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:57.640" starttime="20201031 00:13:57.609"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:57.640" starttime="20201031 00:13:57.609"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:57.641" starttime="20201031 00:13:57.600"></status>
</kw>
<status status="PASS" endtime="20201031 00:13:57.641" starttime="20201031 00:13:57.599"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:13:57.644" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 84159-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:00.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:00.724" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:00.724" starttime="20201031 00:13:57.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:00.726" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 00:14:00.726" starttime="20201031 00:14:00.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:00.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:00.726" starttime="20201031 00:14:00.726"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:00.727" starttime="20201031 00:13:57.642"></status>
</kw>
<msg timestamp="20201031 00:14:00.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:00.727" starttime="20201031 00:13:57.641"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:00.727" starttime="20201031 00:13:57.641"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:00.731" level="INFO">Running command 'ozone sh bucket getacl 84159-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:04.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:04.281" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201031 00:14:04.281" starttime="20201031 00:14:00.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:04.282" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201031 00:14:04.282" starttime="20201031 00:14:04.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:04.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:04.283" starttime="20201031 00:14:04.282"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:04.283" starttime="20201031 00:14:00.729"></status>
</kw>
<msg timestamp="20201031 00:14:04.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:04.283" starttime="20201031 00:14:00.729"></status>
</kw>
<msg timestamp="20201031 00:14:04.283" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201031 00:14:04.283" starttime="20201031 00:14:00.728"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201031 00:14:04.284" starttime="20201031 00:14:04.284"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:04.284" starttime="20201031 00:14:00.727"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:04.290" level="INFO">Running command 'ozone sh bucket getacl 84159-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:07.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:07.673" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:14:07.673" starttime="20201031 00:14:04.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:07.675" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:14:07.675" starttime="20201031 00:14:07.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:07.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:07.675" starttime="20201031 00:14:07.675"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:07.676" starttime="20201031 00:14:04.286"></status>
</kw>
<msg timestamp="20201031 00:14:07.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:07.676" starttime="20201031 00:14:04.286"></status>
</kw>
<msg timestamp="20201031 00:14:07.676" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201031 00:14:07.676" starttime="20201031 00:14:04.285"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201031 00:14:07.677" starttime="20201031 00:14:07.676"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:07.677" starttime="20201031 00:14:04.284"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:07.682" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 84159-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:10.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:10.890" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:10.890" starttime="20201031 00:14:07.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:10.891" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201031 00:14:10.891" starttime="20201031 00:14:10.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:10.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:10.892" starttime="20201031 00:14:10.891"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:10.892" starttime="20201031 00:14:07.678"></status>
</kw>
<msg timestamp="20201031 00:14:10.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:10.892" starttime="20201031 00:14:07.678"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:10.893" starttime="20201031 00:14:07.677"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:10.897" level="INFO">Running command 'ozone sh bucket getacl 84159-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:14.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:14.147" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:14:14.147" starttime="20201031 00:14:10.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:14.148" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:14:14.148" starttime="20201031 00:14:14.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:14.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:14.149" starttime="20201031 00:14:14.148"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:14.149" starttime="20201031 00:14:10.895"></status>
</kw>
<msg timestamp="20201031 00:14:14.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:14.149" starttime="20201031 00:14:10.895"></status>
</kw>
<msg timestamp="20201031 00:14:14.149" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201031 00:14:14.149" starttime="20201031 00:14:10.894"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201031 00:14:14.150" starttime="20201031 00:14:14.149"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:14.150" starttime="20201031 00:14:10.893"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:14.155" level="INFO">Running command 'ozone sh bucket getacl 84159-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:17.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:17.481" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201031 00:14:17.481" starttime="20201031 00:14:14.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:17.482" level="INFO">READ</msg>
<status status="PASS" endtime="20201031 00:14:17.483" starttime="20201031 00:14:17.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:17.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:17.483" starttime="20201031 00:14:17.483"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:17.484" starttime="20201031 00:14:14.152"></status>
</kw>
<msg timestamp="20201031 00:14:17.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:17.484" starttime="20201031 00:14:14.151"></status>
</kw>
<msg timestamp="20201031 00:14:17.484" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201031 00:14:17.484" starttime="20201031 00:14:14.151"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201031 00:14:17.485" starttime="20201031 00:14:17.484"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:17.485" starttime="20201031 00:14:14.150"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 00:14:17.485" critical="yes" starttime="20201031 00:13:57.598"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:17.491" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:17.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:17.493" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:14:17.493" starttime="20201031 00:14:17.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:17.494" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:14:17.494" starttime="20201031 00:14:17.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:17.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:17.495" starttime="20201031 00:14:17.494"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:17.495" starttime="20201031 00:14:17.488"></status>
</kw>
<msg timestamp="20201031 00:14:17.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:17.495" starttime="20201031 00:14:17.488"></status>
</kw>
<msg timestamp="20201031 00:14:17.495" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:14:17.495" starttime="20201031 00:14:17.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:14:17.496" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:14:17.496" starttime="20201031 00:14:17.495"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:17.500" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:17.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:17.511" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:14:17.511" starttime="20201031 00:14:17.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:17.512" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:14:17.512" starttime="20201031 00:14:17.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:17.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:17.513" starttime="20201031 00:14:17.512"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:17.513" starttime="20201031 00:14:17.497"></status>
</kw>
<msg timestamp="20201031 00:14:17.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:17.513" starttime="20201031 00:14:17.497"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:17.513" starttime="20201031 00:14:17.497"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:17.513" starttime="20201031 00:14:17.496"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:17.514" starttime="20201031 00:14:17.487"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:17.514" starttime="20201031 00:14:17.486"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:17.517" level="INFO">Running command 'ozone sh bucket link 84159-source/bucket2 84159-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:20.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:20.939" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:20.939" starttime="20201031 00:14:17.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:20.940" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:14:20.941" starttime="20201031 00:14:20.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:20.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:20.941" starttime="20201031 00:14:20.941"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:20.942" starttime="20201031 00:14:17.515"></status>
</kw>
<msg timestamp="20201031 00:14:20.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:20.942" starttime="20201031 00:14:17.514"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:20.942" starttime="20201031 00:14:17.514"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:20.946" level="INFO">Running command 'ozone sh bucket create 84159-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:24.314" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 00:14:24.314" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:24.314" starttime="20201031 00:14:20.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:24.315" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201031 00:14:24.316" starttime="20201031 00:14:24.315"></status>
</kw>
<msg timestamp="20201031 00:14:24.316" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:24.316" starttime="20201031 00:14:20.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201031 00:14:24.316" starttime="20201031 00:14:24.316"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:24.324" level="INFO">Running command 'ozone sh bucket create 84159-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:27.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:27.734" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:27.734" starttime="20201031 00:14:24.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:27.735" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:14:27.735" starttime="20201031 00:14:27.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:27.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:27.736" starttime="20201031 00:14:27.735"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:27.736" starttime="20201031 00:14:24.317"></status>
</kw>
<msg timestamp="20201031 00:14:27.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:27.736" starttime="20201031 00:14:24.317"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:27.736" starttime="20201031 00:14:24.316"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:27.739" level="INFO">Running command 'ozone sh bucket link 84159-source/bucket1 84159-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:31.120" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 00:14:31.120" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:31.120" starttime="20201031 00:14:27.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:31.121" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201031 00:14:31.121" starttime="20201031 00:14:31.120"></status>
</kw>
<msg timestamp="20201031 00:14:31.122" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:31.122" starttime="20201031 00:14:27.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201031 00:14:31.122" starttime="20201031 00:14:31.122"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 00:14:31.122" critical="yes" starttime="20201031 00:14:17.486"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:31.128" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:31.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:31.131" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:14:31.131" starttime="20201031 00:14:31.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:31.132" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:14:31.132" starttime="20201031 00:14:31.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:31.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:31.133" starttime="20201031 00:14:31.132"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:31.133" starttime="20201031 00:14:31.126"></status>
</kw>
<msg timestamp="20201031 00:14:31.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:31.133" starttime="20201031 00:14:31.125"></status>
</kw>
<msg timestamp="20201031 00:14:31.133" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:14:31.133" starttime="20201031 00:14:31.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:14:31.134" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:14:31.134" starttime="20201031 00:14:31.134"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:31.138" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:31.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:31.147" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:14:31.147" starttime="20201031 00:14:31.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:31.148" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:14:31.148" starttime="20201031 00:14:31.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:31.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:31.149" starttime="20201031 00:14:31.149"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:31.149" starttime="20201031 00:14:31.135"></status>
</kw>
<msg timestamp="20201031 00:14:31.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:31.149" starttime="20201031 00:14:31.135"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:31.150" starttime="20201031 00:14:31.135"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:31.150" starttime="20201031 00:14:31.134"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:31.150" starttime="20201031 00:14:31.124"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:31.150" starttime="20201031 00:14:31.124"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:31.154" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:31.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:31.157" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:14:31.157" starttime="20201031 00:14:31.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:31.158" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:14:31.158" starttime="20201031 00:14:31.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:31.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:31.159" starttime="20201031 00:14:31.158"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:31.159" starttime="20201031 00:14:31.152"></status>
</kw>
<msg timestamp="20201031 00:14:31.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:31.159" starttime="20201031 00:14:31.152"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:31.160" starttime="20201031 00:14:31.151"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:31.164" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:31.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:31.166" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:14:31.166" starttime="20201031 00:14:31.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:31.167" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:14:31.167" starttime="20201031 00:14:31.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:31.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:31.168" starttime="20201031 00:14:31.167"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:31.168" starttime="20201031 00:14:31.161"></status>
</kw>
<msg timestamp="20201031 00:14:31.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:31.168" starttime="20201031 00:14:31.161"></status>
</kw>
<msg timestamp="20201031 00:14:31.168" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:14:31.168" starttime="20201031 00:14:31.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:14:31.169" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:14:31.169" starttime="20201031 00:14:31.169"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:31.172" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:31.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:31.183" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:14:31.183" starttime="20201031 00:14:31.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:31.183" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:14:31.184" starttime="20201031 00:14:31.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:31.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:31.184" starttime="20201031 00:14:31.184"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:31.185" starttime="20201031 00:14:31.170"></status>
</kw>
<msg timestamp="20201031 00:14:31.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:31.185" starttime="20201031 00:14:31.170"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:31.185" starttime="20201031 00:14:31.170"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:31.185" starttime="20201031 00:14:31.169"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:31.185" starttime="20201031 00:14:31.160"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:31.185" starttime="20201031 00:14:31.160"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:31.188" level="INFO">Running command 'ozone sh key list 84159-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:35.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:35.141" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:35.141" starttime="20201031 00:14:31.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:35.142" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "84159-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-10-31T00:12:27.358Z",
  "modificationTime" : "2020-10-31T00:12:29.195Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201031 00:14:35.142" starttime="20201031 00:14:35.142"></status>
</kw>
<msg timestamp="20201031 00:14:35.143" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:35.143" starttime="20201031 00:14:31.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201031 00:14:35.143" starttime="20201031 00:14:35.143"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:35.143" starttime="20201031 00:14:31.151"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:35.143" starttime="20201031 00:14:31.150"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 00:14:35.144" critical="yes" starttime="20201031 00:14:31.123"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:35.150" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:35.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:35.152" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:14:35.152" starttime="20201031 00:14:35.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:35.153" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:14:35.153" starttime="20201031 00:14:35.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:35.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:35.154" starttime="20201031 00:14:35.153"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:35.154" starttime="20201031 00:14:35.147"></status>
</kw>
<msg timestamp="20201031 00:14:35.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:35.154" starttime="20201031 00:14:35.147"></status>
</kw>
<msg timestamp="20201031 00:14:35.154" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:14:35.154" starttime="20201031 00:14:35.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:14:35.155" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:14:35.155" starttime="20201031 00:14:35.155"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:35.158" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:35.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:35.168" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:14:35.168" starttime="20201031 00:14:35.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:35.169" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:14:35.169" starttime="20201031 00:14:35.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:35.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:35.170" starttime="20201031 00:14:35.170"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:35.170" starttime="20201031 00:14:35.156"></status>
</kw>
<msg timestamp="20201031 00:14:35.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:35.170" starttime="20201031 00:14:35.156"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:35.171" starttime="20201031 00:14:35.156"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:35.171" starttime="20201031 00:14:35.155"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:35.171" starttime="20201031 00:14:35.146"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:35.171" starttime="20201031 00:14:35.145"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:35.177" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:35.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:35.180" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:14:35.180" starttime="20201031 00:14:35.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:35.181" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:14:35.181" starttime="20201031 00:14:35.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:35.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:35.181" starttime="20201031 00:14:35.181"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:35.182" starttime="20201031 00:14:35.175"></status>
</kw>
<msg timestamp="20201031 00:14:35.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:35.182" starttime="20201031 00:14:35.174"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:35.182" starttime="20201031 00:14:35.174"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:35.186" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:35.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:35.187" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:14:35.187" starttime="20201031 00:14:35.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:35.188" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:14:35.188" starttime="20201031 00:14:35.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:35.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:35.189" starttime="20201031 00:14:35.189"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:35.189" starttime="20201031 00:14:35.184"></status>
</kw>
<msg timestamp="20201031 00:14:35.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:35.189" starttime="20201031 00:14:35.183"></status>
</kw>
<msg timestamp="20201031 00:14:35.190" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:14:35.190" starttime="20201031 00:14:35.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:14:35.190" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:14:35.190" starttime="20201031 00:14:35.190"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:35.195" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:35.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:35.203" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:14:35.203" starttime="20201031 00:14:35.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:35.204" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:14:35.204" starttime="20201031 00:14:35.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:35.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:35.205" starttime="20201031 00:14:35.204"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:35.205" starttime="20201031 00:14:35.192"></status>
</kw>
<msg timestamp="20201031 00:14:35.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:35.205" starttime="20201031 00:14:35.191"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:35.206" starttime="20201031 00:14:35.191"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:35.206" starttime="20201031 00:14:35.190"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:35.206" starttime="20201031 00:14:35.183"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:35.206" starttime="20201031 00:14:35.182"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:35.209" level="INFO">Running command 'ozone sh key list 84159-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:38.334" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 00:14:38.334" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:38.334" starttime="20201031 00:14:35.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:38.335" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201031 00:14:38.336" starttime="20201031 00:14:38.335"></status>
</kw>
<msg timestamp="20201031 00:14:38.336" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:38.336" starttime="20201031 00:14:35.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201031 00:14:38.337" starttime="20201031 00:14:38.336"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:38.337" starttime="20201031 00:14:35.172"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:38.337" starttime="20201031 00:14:35.171"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 00:14:38.337" critical="yes" starttime="20201031 00:14:35.145"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:38.343" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:38.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:38.345" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:14:38.345" starttime="20201031 00:14:38.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:38.346" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:14:38.346" starttime="20201031 00:14:38.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:38.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:38.347" starttime="20201031 00:14:38.346"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:38.347" starttime="20201031 00:14:38.340"></status>
</kw>
<msg timestamp="20201031 00:14:38.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:38.347" starttime="20201031 00:14:38.340"></status>
</kw>
<msg timestamp="20201031 00:14:38.348" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:14:38.348" starttime="20201031 00:14:38.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:14:38.348" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:14:38.348" starttime="20201031 00:14:38.348"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:38.352" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:38.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:38.362" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:14:38.362" starttime="20201031 00:14:38.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:38.363" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:14:38.363" starttime="20201031 00:14:38.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:38.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:38.364" starttime="20201031 00:14:38.363"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:38.364" starttime="20201031 00:14:38.350"></status>
</kw>
<msg timestamp="20201031 00:14:38.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:38.364" starttime="20201031 00:14:38.350"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:38.364" starttime="20201031 00:14:38.349"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:38.364" starttime="20201031 00:14:38.348"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:38.365" starttime="20201031 00:14:38.339"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:38.365" starttime="20201031 00:14:38.339"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:38.370" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:38.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:38.372" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:14:38.372" starttime="20201031 00:14:38.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:38.373" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:14:38.373" starttime="20201031 00:14:38.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:38.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:38.373" starttime="20201031 00:14:38.373"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:38.374" starttime="20201031 00:14:38.367"></status>
</kw>
<msg timestamp="20201031 00:14:38.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:38.374" starttime="20201031 00:14:38.366"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:38.374" starttime="20201031 00:14:38.366"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:38.377" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:38.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:38.379" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:14:38.379" starttime="20201031 00:14:38.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:38.380" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:14:38.380" starttime="20201031 00:14:38.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:38.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:38.381" starttime="20201031 00:14:38.381"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:38.381" starttime="20201031 00:14:38.375"></status>
</kw>
<msg timestamp="20201031 00:14:38.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:38.382" starttime="20201031 00:14:38.375"></status>
</kw>
<msg timestamp="20201031 00:14:38.382" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:14:38.382" starttime="20201031 00:14:38.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:14:38.382" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:14:38.383" starttime="20201031 00:14:38.382"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:38.387" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:38.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:38.396" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:14:38.396" starttime="20201031 00:14:38.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:38.398" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:14:38.398" starttime="20201031 00:14:38.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:38.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:38.399" starttime="20201031 00:14:38.398"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:38.399" starttime="20201031 00:14:38.384"></status>
</kw>
<msg timestamp="20201031 00:14:38.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:38.399" starttime="20201031 00:14:38.384"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:38.400" starttime="20201031 00:14:38.383"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:38.400" starttime="20201031 00:14:38.383"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:38.400" starttime="20201031 00:14:38.374"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:38.400" starttime="20201031 00:14:38.374"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:38.405" level="INFO">Running command 'ozone sh bucket info 84159-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:41.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:41.777" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:41.777" starttime="20201031 00:14:38.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:41.778" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "84159-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T00:12:43.383Z",
  "modificationTime" : "2020-10-31T00:12:59.934Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84159-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201031 00:14:41.778" starttime="20201031 00:14:41.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:41.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:41.779" starttime="20201031 00:14:41.778"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:41.779" starttime="20201031 00:14:38.401"></status>
</kw>
<msg timestamp="20201031 00:14:41.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:41.780" starttime="20201031 00:14:38.401"></status>
</kw>
<msg timestamp="20201031 00:14:41.780" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:41.780" starttime="20201031 00:14:38.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201031 00:14:41.780" starttime="20201031 00:14:41.780"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201031 00:14:41.781" starttime="20201031 00:14:41.780"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:41.785" level="INFO">Running command 'ozone sh key list 84159-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:45.363" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 00:14:45.364" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:45.364" starttime="20201031 00:14:41.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:45.365" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201031 00:14:45.365" starttime="20201031 00:14:45.364"></status>
</kw>
<msg timestamp="20201031 00:14:45.365" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:45.365" starttime="20201031 00:14:41.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201031 00:14:45.366" starttime="20201031 00:14:45.366"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:45.366" starttime="20201031 00:14:38.366"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:45.366" starttime="20201031 00:14:38.365"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 00:14:45.366" critical="yes" starttime="20201031 00:14:38.338"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:45.374" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:45.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:45.376" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:14:45.376" starttime="20201031 00:14:45.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:45.377" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:14:45.377" starttime="20201031 00:14:45.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:45.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:45.378" starttime="20201031 00:14:45.378"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:45.379" starttime="20201031 00:14:45.370"></status>
</kw>
<msg timestamp="20201031 00:14:45.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:45.379" starttime="20201031 00:14:45.369"></status>
</kw>
<msg timestamp="20201031 00:14:45.379" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:14:45.379" starttime="20201031 00:14:45.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:14:45.380" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:14:45.380" starttime="20201031 00:14:45.379"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:45.386" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:45.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:45.397" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:14:45.397" starttime="20201031 00:14:45.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:45.399" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:14:45.399" starttime="20201031 00:14:45.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:45.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:45.399" starttime="20201031 00:14:45.399"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:45.400" starttime="20201031 00:14:45.382"></status>
</kw>
<msg timestamp="20201031 00:14:45.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:45.400" starttime="20201031 00:14:45.382"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:45.400" starttime="20201031 00:14:45.382"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:45.400" starttime="20201031 00:14:45.380"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:45.400" starttime="20201031 00:14:45.368"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:45.400" starttime="20201031 00:14:45.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:45.405" level="INFO">Running command 'ozone sh bucket link 84159-target/loop1 84159-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:49.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:49.147" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:49.147" starttime="20201031 00:14:45.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:49.148" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:14:49.148" starttime="20201031 00:14:49.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:49.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:49.149" starttime="20201031 00:14:49.148"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:49.149" starttime="20201031 00:14:45.401"></status>
</kw>
<msg timestamp="20201031 00:14:49.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:49.149" starttime="20201031 00:14:45.401"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:49.150" starttime="20201031 00:14:45.401"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:49.153" level="INFO">Running command 'ozone sh bucket link 84159-target/loop2 84159-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:52.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:52.412" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:52.412" starttime="20201031 00:14:49.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:52.413" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:14:52.413" starttime="20201031 00:14:52.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:52.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:52.414" starttime="20201031 00:14:52.413"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:52.414" starttime="20201031 00:14:49.151"></status>
</kw>
<msg timestamp="20201031 00:14:52.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:52.414" starttime="20201031 00:14:49.150"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:52.415" starttime="20201031 00:14:49.150"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:52.419" level="INFO">Running command 'ozone sh bucket link 84159-target/loop3 84159-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:55.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:55.649" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:55.649" starttime="20201031 00:14:52.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:55.650" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:14:55.650" starttime="20201031 00:14:55.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:55.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:55.651" starttime="20201031 00:14:55.650"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:55.651" starttime="20201031 00:14:52.416"></status>
</kw>
<msg timestamp="20201031 00:14:55.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:55.651" starttime="20201031 00:14:52.415"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:55.652" starttime="20201031 00:14:52.415"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:55.655" level="INFO">Running command 'ozone sh key list 84159-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:58.682" level="INFO">${rc} = 255</msg>
<msg timestamp="20201031 00:14:58.682" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:58.682" starttime="20201031 00:14:55.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:58.683" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201031 00:14:58.683" starttime="20201031 00:14:58.683"></status>
</kw>
<msg timestamp="20201031 00:14:58.684" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:14:58.684" starttime="20201031 00:14:55.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201031 00:14:58.684" starttime="20201031 00:14:58.684"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 00:14:58.685" critical="yes" starttime="20201031 00:14:45.367"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:58.691" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:58.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:58.693" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:14:58.693" starttime="20201031 00:14:58.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:58.694" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:14:58.695" starttime="20201031 00:14:58.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:58.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:58.696" starttime="20201031 00:14:58.695"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:58.696" starttime="20201031 00:14:58.688"></status>
</kw>
<msg timestamp="20201031 00:14:58.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:58.697" starttime="20201031 00:14:58.688"></status>
</kw>
<msg timestamp="20201031 00:14:58.697" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:14:58.697" starttime="20201031 00:14:58.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:14:58.698" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:14:58.698" starttime="20201031 00:14:58.697"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:58.709" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:14:58.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:14:58.729" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:14:58.729" starttime="20201031 00:14:58.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:14:58.730" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:14:58.730" starttime="20201031 00:14:58.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:14:58.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:14:58.731" starttime="20201031 00:14:58.730"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:58.731" starttime="20201031 00:14:58.699"></status>
</kw>
<msg timestamp="20201031 00:14:58.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:14:58.731" starttime="20201031 00:14:58.699"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:58.732" starttime="20201031 00:14:58.698"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:58.732" starttime="20201031 00:14:58.698"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:58.732" starttime="20201031 00:14:58.687"></status>
</kw>
<status status="PASS" endtime="20201031 00:14:58.732" starttime="20201031 00:14:58.686"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:14:58.745" level="INFO">Running command 'ozone sh bucket link 84159-source/bucket1 84159-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:15:02.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:15:02.146" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:15:02.146" starttime="20201031 00:14:58.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:15:02.147" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:15:02.147" starttime="20201031 00:15:02.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:15:02.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:15:02.148" starttime="20201031 00:15:02.147"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:02.148" starttime="20201031 00:14:58.733"></status>
</kw>
<msg timestamp="20201031 00:15:02.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:15:02.148" starttime="20201031 00:14:58.733"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:02.149" starttime="20201031 00:14:58.732"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:15:02.152" level="INFO">Running command 'ozone sh key put 84159-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:15:07.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:15:07.425" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:15:07.425" starttime="20201031 00:15:02.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:15:07.426" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:15:07.426" starttime="20201031 00:15:07.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:15:07.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:15:07.427" starttime="20201031 00:15:07.426"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:07.427" starttime="20201031 00:15:02.150"></status>
</kw>
<msg timestamp="20201031 00:15:07.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:15:07.427" starttime="20201031 00:15:02.149"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:07.428" starttime="20201031 00:15:02.149"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201031 00:15:07.430" level="INFO">${postfix} = 07012</msg>
<status status="PASS" endtime="20201031 00:15:07.431" starttime="20201031 00:15:07.430"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201031 00:15:07.431" level="INFO">${tmpfile} = /tmp/tempkey-07012</msg>
<status status="PASS" endtime="20201031 00:15:07.431" starttime="20201031 00:15:07.431"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:15:07.436" level="INFO">Running command 'ozone sh key get -f 84159-target/link1/key3 /tmp/tempkey-07012 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:15:12.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:15:12.336" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:15:12.336" starttime="20201031 00:15:07.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:15:12.337" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:15:12.337" starttime="20201031 00:15:12.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:15:12.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:15:12.338" starttime="20201031 00:15:12.337"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:12.338" starttime="20201031 00:15:07.433"></status>
</kw>
<msg timestamp="20201031 00:15:12.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:15:12.338" starttime="20201031 00:15:07.433"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:12.338" starttime="20201031 00:15:07.431"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201031 00:15:12.340" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-07012 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:15:12.342" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201031 00:15:12.343" starttime="20201031 00:15:12.339"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:15:12.346" level="INFO">Running command 'rm -f /tmp/tempkey-07012 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:15:12.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:15:12.349" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:15:12.349" starttime="20201031 00:15:12.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:15:12.350" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:15:12.350" starttime="20201031 00:15:12.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:15:12.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:15:12.350" starttime="20201031 00:15:12.350"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:12.351" starttime="20201031 00:15:12.344"></status>
</kw>
<msg timestamp="20201031 00:15:12.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:15:12.351" starttime="20201031 00:15:12.344"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:12.351" starttime="20201031 00:15:12.343"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201031 00:15:12.352" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201031 00:15:12.352" starttime="20201031 00:15:12.351"></status>
</kw>
<msg timestamp="20201031 00:15:12.352" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201031 00:15:12.352" starttime="20201031 00:15:07.429"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201031 00:15:12.352" starttime="20201031 00:15:12.352"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:12.353" starttime="20201031 00:15:07.428"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 00:15:12.353" critical="yes" starttime="20201031 00:14:58.685"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:15:12.359" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:15:12.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:15:12.360" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201031 00:15:12.360" starttime="20201031 00:15:12.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:15:12.360" level="INFO">scm</msg>
<status status="PASS" endtime="20201031 00:15:12.361" starttime="20201031 00:15:12.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:15:12.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:15:12.361" starttime="20201031 00:15:12.361"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:12.362" starttime="20201031 00:15:12.356"></status>
</kw>
<msg timestamp="20201031 00:15:12.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:15:12.362" starttime="20201031 00:15:12.356"></status>
</kw>
<msg timestamp="20201031 00:15:12.362" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201031 00:15:12.362" starttime="20201031 00:15:12.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201031 00:15:12.363" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201031 00:15:12.363" starttime="20201031 00:15:12.362"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:15:12.368" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:15:12.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:15:12.384" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201031 00:15:12.384" starttime="20201031 00:15:12.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:15:12.385" level="INFO"></msg>
<status status="PASS" endtime="20201031 00:15:12.385" starttime="20201031 00:15:12.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:15:12.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:15:12.386" starttime="20201031 00:15:12.385"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:12.386" starttime="20201031 00:15:12.364"></status>
</kw>
<msg timestamp="20201031 00:15:12.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:15:12.386" starttime="20201031 00:15:12.364"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:12.386" starttime="20201031 00:15:12.363"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:12.387" starttime="20201031 00:15:12.363"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:12.387" starttime="20201031 00:15:12.355"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:12.387" starttime="20201031 00:15:12.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:15:12.390" level="INFO">Running command 'ozone sh bucket delete 84159-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:15:15.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:15:15.709" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:15:15.709" starttime="20201031 00:15:12.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:15:15.710" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201031 00:15:15.711" starttime="20201031 00:15:15.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:15:15.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:15:15.711" starttime="20201031 00:15:15.711"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:15.711" starttime="20201031 00:15:12.388"></status>
</kw>
<msg timestamp="20201031 00:15:15.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:15:15.712" starttime="20201031 00:15:12.387"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:15.712" starttime="20201031 00:15:12.387"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:15:15.716" level="INFO">Running command 'ozone sh bucket list 84159-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:15:19.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:15:19.266" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:15:19.266" starttime="20201031 00:15:15.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:15:19.267" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "84159-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T00:14:27.575Z",
  "modificationTime" : "2020-10-31T00:14:27.575Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "84159-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T00:13:03.530Z",
  "modificationTime" : "2020-10-31T00:13:03.530Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84159-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "84159-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T00:12:43.383Z",
  "modificationTime" : "2020-10-31T00:12:59.934Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84159-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "84159-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T00:14:20.769Z",
  "modificationTime" : "2020-10-31T00:14:20.769Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84159-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "84159-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T00:15:02.059Z",
  "modificationTime" : "2020-10-31T00:15:02.059Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84159-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "84159-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T00:14:55.485Z",
  "modificationTime" : "2020-10-31T00:14:55.485Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84159-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "84159-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T00:14:48.958Z",
  "modificationTime" : "2020-10-31T00:14:48.958Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84159-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "84159-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T00:14:52.260Z",
  "modificationTime" : "2020-10-31T00:14:52.260Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84159-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "84159-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T00:12:36.673Z",
  "modificationTime" : "2020-10-31T00:12:56.530Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84159-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "84159-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-31T00:12:40.008Z",
  "modificationTime" : "2020-10-31T00:12:40.008Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "84159-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201031 00:15:19.267" starttime="20201031 00:15:19.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:15:19.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:15:19.268" starttime="20201031 00:15:19.267"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:19.268" starttime="20201031 00:15:15.713"></status>
</kw>
<msg timestamp="20201031 00:15:19.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:15:19.268" starttime="20201031 00:15:15.713"></status>
</kw>
<msg timestamp="20201031 00:15:19.268" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201031 00:15:19.269" starttime="20201031 00:15:15.712"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201031 00:15:19.269" starttime="20201031 00:15:19.269"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201031 00:15:19.274" level="INFO">Running command 'ozone sh key list 84159-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201031 00:15:23.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20201031 00:15:23.067" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201031 00:15:23.067" starttime="20201031 00:15:19.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201031 00:15:23.068" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201031 00:15:23.068" starttime="20201031 00:15:23.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201031 00:15:23.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201031 00:15:23.069" starttime="20201031 00:15:23.069"></status>
</kw>
<status status="PASS" endtime="20201031 00:15:23.070" starttime="20201031 00:15:19.270"></status>
</kw>
<msg timestamp="20201031 00:15:23.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201031 00:15:23.070" starttime="20201031 00:15:19.270"></status>
</kw>
<msg timestamp="20201031 00:15:23.070" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201031 00:15:23.070" starttime="20201031 00:15:19.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201031 00:15:23.071" starttime="20201031 00:15:23.070"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201031 00:15:23.071" critical="yes" starttime="20201031 00:15:12.354"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201031 00:15:23.075" starttime="20201031 00:12:14.372"></status>
</suite>
<status status="PASS" elapsedtime="215824" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
