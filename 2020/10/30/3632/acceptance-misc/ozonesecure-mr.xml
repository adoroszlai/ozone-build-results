<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201030 08:03:28.425" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:58:32.996" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:58:37.379" level="INFO">${rc} = 255</msg>
<msg timestamp="20201030 07:58:37.379" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 07:58:37.379" starttime="20201030 07:58:32.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:58:37.380" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 07:58:37.380" starttime="20201030 07:58:37.379"></status>
</kw>
<msg timestamp="20201030 07:58:37.380" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 07:58:37.380" starttime="20201030 07:58:32.990"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:58:37.386" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:58:41.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:58:41.017" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 07:58:41.017" starttime="20201030 07:58:37.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:58:41.018" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 07:58:41.018" starttime="20201030 07:58:41.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:58:41.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:58:41.019" starttime="20201030 07:58:41.018"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:41.019" starttime="20201030 07:58:37.382"></status>
</kw>
<msg timestamp="20201030 07:58:41.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:58:41.019" starttime="20201030 07:58:37.382"></status>
</kw>
<msg timestamp="20201030 07:58:41.020" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 07:58:41.020" starttime="20201030 07:58:37.382"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201030 07:58:41.020" starttime="20201030 07:58:41.020"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:41.021" starttime="20201030 07:58:37.381"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:41.021" starttime="20201030 07:58:37.381"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:58:41.026" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:58:44.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:58:44.460" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 07:58:44.460" starttime="20201030 07:58:41.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:58:44.461" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 07:58:44.461" starttime="20201030 07:58:44.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:58:44.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:58:44.462" starttime="20201030 07:58:44.462"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:44.462" starttime="20201030 07:58:41.023"></status>
</kw>
<msg timestamp="20201030 07:58:44.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:58:44.463" starttime="20201030 07:58:41.022"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:44.463" starttime="20201030 07:58:41.022"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:44.463" starttime="20201030 07:58:41.021"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:44.463" starttime="20201030 07:58:41.021"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201030 07:58:44.464" starttime="20201030 07:58:44.463"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:58:44.468" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:58:48.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:58:48.025" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 07:58:48.025" starttime="20201030 07:58:44.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:58:48.026" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T07:58:44.269Z",
  "modificationTime" : "2020-10-30T07:58:44.269Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201030 07:58:48.026" starttime="20201030 07:58:48.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:58:48.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:58:48.027" starttime="20201030 07:58:48.027"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:48.028" starttime="20201030 07:58:44.465"></status>
</kw>
<msg timestamp="20201030 07:58:48.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:58:48.028" starttime="20201030 07:58:44.465"></status>
</kw>
<msg timestamp="20201030 07:58:48.028" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 07:58:48.028" starttime="20201030 07:58:44.464"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201030 07:58:48.029" starttime="20201030 07:58:48.028"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:58:48.033" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:58:48.033" starttime="20201030 07:58:48.032"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:58:48.033" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:58:48.033" starttime="20201030 07:58:48.033"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:48.034" starttime="20201030 07:58:48.032"></status>
</kw>
<msg timestamp="20201030 07:58:48.034" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:58:48.034" starttime="20201030 07:58:48.031"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:48.034" starttime="20201030 07:58:48.030"></status>
</kw>
<msg timestamp="20201030 07:58:48.034" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201030 07:58:48.034" starttime="20201030 07:58:48.030"></status>
</kw>
<msg timestamp="20201030 07:58:48.034" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201030 07:58:48.034" starttime="20201030 07:58:48.029"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:58:48.039" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:58:51.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:58:51.532" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 07:58:51.532" starttime="20201030 07:58:48.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:58:51.533" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 07:58:51.533" starttime="20201030 07:58:51.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:58:51.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:58:51.534" starttime="20201030 07:58:51.534"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:51.534" starttime="20201030 07:58:48.035"></status>
</kw>
<msg timestamp="20201030 07:58:51.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:58:51.535" starttime="20201030 07:58:48.035"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:51.535" starttime="20201030 07:58:48.035"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:58:51.539" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:58:59.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:58:59.755" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 07:58:59.755" starttime="20201030 07:58:51.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:58:59.756" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 07:58:59.756" starttime="20201030 07:58:59.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:58:59.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:58:59.757" starttime="20201030 07:58:59.756"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:59.757" starttime="20201030 07:58:51.536"></status>
</kw>
<msg timestamp="20201030 07:58:59.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:58:59.757" starttime="20201030 07:58:51.536"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:59.757" starttime="20201030 07:58:51.535"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:58:59.761" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:59:05.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:59:05.101" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 07:59:05.101" starttime="20201030 07:58:59.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:59:05.102" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 07:59:05.102" starttime="20201030 07:59:05.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:59:05.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:59:05.103" starttime="20201030 07:59:05.102"></status>
</kw>
<status status="PASS" endtime="20201030 07:59:05.103" starttime="20201030 07:58:59.758"></status>
</kw>
<msg timestamp="20201030 07:59:05.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:59:05.103" starttime="20201030 07:58:59.758"></status>
</kw>
<status status="PASS" endtime="20201030 07:59:05.104" starttime="20201030 07:58:59.758"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:59:05.109" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:59:10.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:59:10.513" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 07:59:10.513" starttime="20201030 07:59:05.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:59:10.514" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 07:59:10.514" starttime="20201030 07:59:10.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:59:10.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:59:10.514" starttime="20201030 07:59:10.514"></status>
</kw>
<status status="PASS" endtime="20201030 07:59:10.515" starttime="20201030 07:59:05.105"></status>
</kw>
<msg timestamp="20201030 07:59:10.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:59:10.515" starttime="20201030 07:59:05.104"></status>
</kw>
<status status="PASS" endtime="20201030 07:59:10.515" starttime="20201030 07:59:05.104"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 07:59:10.515" critical="yes" starttime="20201030 07:58:32.989"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:59:10.521" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:59:10.521" starttime="20201030 07:59:10.520"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:59:10.521" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:59:10.521" starttime="20201030 07:59:10.521"></status>
</kw>
<status status="PASS" endtime="20201030 07:59:10.522" starttime="20201030 07:59:10.519"></status>
</kw>
<msg timestamp="20201030 07:59:10.522" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:59:10.522" starttime="20201030 07:59:10.519"></status>
</kw>
<status status="PASS" endtime="20201030 07:59:10.522" starttime="20201030 07:59:10.518"></status>
</kw>
<msg timestamp="20201030 07:59:10.522" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 07:59:10.522" starttime="20201030 07:59:10.518"></status>
</kw>
<msg timestamp="20201030 07:59:10.522" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 07:59:10.522" starttime="20201030 07:59:10.517"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:59:10.526" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:59:13.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:59:13.870" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 07:59:13.870" starttime="20201030 07:59:10.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:59:13.871" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 07:59:13.871" starttime="20201030 07:59:13.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:59:13.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:59:13.872" starttime="20201030 07:59:13.871"></status>
</kw>
<status status="PASS" endtime="20201030 07:59:13.872" starttime="20201030 07:59:10.523"></status>
</kw>
<msg timestamp="20201030 07:59:13.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:59:13.872" starttime="20201030 07:59:10.523"></status>
</kw>
<status status="PASS" endtime="20201030 07:59:13.872" starttime="20201030 07:59:10.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:59:13.879" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:59:17.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:59:17.238" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 07:59:17.238" starttime="20201030 07:59:13.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:59:17.239" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 07:59:17.239" starttime="20201030 07:59:17.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:59:17.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:59:17.240" starttime="20201030 07:59:17.239"></status>
</kw>
<status status="PASS" endtime="20201030 07:59:17.240" starttime="20201030 07:59:13.873"></status>
</kw>
<msg timestamp="20201030 07:59:17.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:59:17.240" starttime="20201030 07:59:13.873"></status>
</kw>
<status status="PASS" endtime="20201030 07:59:17.241" starttime="20201030 07:59:13.872"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 07:59:17.241" critical="yes" starttime="20201030 07:59:10.516"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201030 07:59:17.242" starttime="20201030 07:58:32.936"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 08:01:53.550" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 08:01:53.550" starttime="20201030 08:01:53.550"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 08:01:53.551" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 08:01:53.551" starttime="20201030 08:01:53.551"></status>
</kw>
<status status="PASS" endtime="20201030 08:01:53.551" starttime="20201030 08:01:53.550"></status>
</kw>
<msg timestamp="20201030 08:01:53.551" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 08:01:53.551" starttime="20201030 08:01:53.549"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 08:01:53.552" starttime="20201030 08:01:53.552"></status>
</kw>
<msg timestamp="20201030 08:01:53.552" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 08:01:53.552" starttime="20201030 08:01:53.551"></status>
</kw>
<status status="PASS" endtime="20201030 08:01:53.552" starttime="20201030 08:01:53.549"></status>
</kw>
<msg timestamp="20201030 08:01:53.553" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 08:01:53.553" starttime="20201030 08:01:53.548"></status>
</kw>
<msg timestamp="20201030 08:01:53.553" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 08:01:53.553" starttime="20201030 08:01:53.547"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 08:01:53.553" level="INFO">${random} = 37700</msg>
<status status="PASS" endtime="20201030 08:01:53.553" starttime="20201030 08:01:53.553"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:01:53.560" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-37700 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:01:57.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:01:57.204" level="INFO">${output} = 2020-10-30 08:01:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 08:01:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201030 08:01:57.204" starttime="20201030 08:01:53.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:01:57.205" level="INFO">2020-10-30 08:01:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 08:01:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 08:01:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 08:01:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 08:01:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-352FD75B47D1-&gt;3ce69b09-a5c0-440f-8103-4557aea4ce4b
2020-10-30 08:01:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201030 08:01:57.205" starttime="20201030 08:01:57.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:01:57.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:01:57.206" starttime="20201030 08:01:57.205"></status>
</kw>
<status status="PASS" endtime="20201030 08:01:57.206" starttime="20201030 08:01:53.554"></status>
</kw>
<msg timestamp="20201030 08:01:57.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:01:57.206" starttime="20201030 08:01:53.554"></status>
</kw>
<msg timestamp="20201030 08:01:57.206" level="INFO">${result} = 2020-10-30 08:01:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 08:01:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201030 08:01:57.206" starttime="20201030 08:01:53.553"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:01:57.210" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:01:59.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:01:59.303" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 08:00 ofs://om/volume1/bucket1/ozone-11366
-rw-...</msg>
<status status="PASS" endtime="20201030 08:01:59.303" starttime="20201030 08:01:57.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:01:59.304" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 08:00 ofs://om/volume1/bucket1/ozone-11366
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 08:01 ofs://om/volume1/bucket1/ozone-37700
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:59 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 08:01 ofs://om/volume1/bucket1/wordcount-18.txt</msg>
<status status="PASS" endtime="20201030 08:01:59.304" starttime="20201030 08:01:59.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:01:59.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:01:59.305" starttime="20201030 08:01:59.305"></status>
</kw>
<status status="PASS" endtime="20201030 08:01:59.305" starttime="20201030 08:01:57.207"></status>
</kw>
<msg timestamp="20201030 08:01:59.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:01:59.305" starttime="20201030 08:01:57.207"></status>
</kw>
<msg timestamp="20201030 08:01:59.306" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 08:00 ofs://om/volume1/bucket1/ozone-11366
-rw-...</msg>
<status status="PASS" endtime="20201030 08:01:59.306" starttime="20201030 08:01:57.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201030 08:01:59.306" starttime="20201030 08:01:59.306"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201030 08:01:59.306" critical="yes" starttime="20201030 08:01:53.546"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201030 08:01:59.307" starttime="20201030 08:01:53.499"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 08:00:20.356" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 08:00:20.356" starttime="20201030 08:00:20.355"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 08:00:20.356" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 08:00:20.356" starttime="20201030 08:00:20.356"></status>
</kw>
<status status="PASS" endtime="20201030 08:00:20.356" starttime="20201030 08:00:20.355"></status>
</kw>
<msg timestamp="20201030 08:00:20.356" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 08:00:20.357" starttime="20201030 08:00:20.354"></status>
</kw>
<status status="PASS" endtime="20201030 08:00:20.357" starttime="20201030 08:00:20.354"></status>
</kw>
<msg timestamp="20201030 08:00:20.357" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 08:00:20.357" starttime="20201030 08:00:20.353"></status>
</kw>
<msg timestamp="20201030 08:00:20.357" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 08:00:20.357" starttime="20201030 08:00:20.352"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 08:00:20.357" level="INFO">${random} = 11366</msg>
<status status="PASS" endtime="20201030 08:00:20.357" starttime="20201030 08:00:20.357"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:00:20.364" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-11366 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:00:24.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:00:24.502" level="INFO">${output} = 2020-10-30 08:00:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 08:00:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201030 08:00:24.502" starttime="20201030 08:00:20.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:00:24.503" level="INFO">2020-10-30 08:00:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 08:00:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 08:00:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 08:00:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 08:00:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-10AF98D0B5CE-&gt;3ce69b09-a5c0-440f-8103-4557aea4ce4b
2020-10-30 08:00:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201030 08:00:24.503" starttime="20201030 08:00:24.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:00:24.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:00:24.503" starttime="20201030 08:00:24.503"></status>
</kw>
<status status="PASS" endtime="20201030 08:00:24.504" starttime="20201030 08:00:20.358"></status>
</kw>
<msg timestamp="20201030 08:00:24.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:00:24.504" starttime="20201030 08:00:20.358"></status>
</kw>
<msg timestamp="20201030 08:00:24.504" level="INFO">${result} = 2020-10-30 08:00:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 08:00:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201030 08:00:24.504" starttime="20201030 08:00:20.358"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:00:24.507" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:00:26.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:00:26.454" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 08:00 o3fs://bucket1.volume1.om/ozone-11366
dr...</msg>
<status status="PASS" endtime="20201030 08:00:26.454" starttime="20201030 08:00:24.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:00:26.456" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 08:00 o3fs://bucket1.volume1.om/ozone-11366
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:59 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 08:00:26.456" starttime="20201030 08:00:26.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:00:26.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:00:26.456" starttime="20201030 08:00:26.456"></status>
</kw>
<status status="PASS" endtime="20201030 08:00:26.457" starttime="20201030 08:00:24.505"></status>
</kw>
<msg timestamp="20201030 08:00:26.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:00:26.457" starttime="20201030 08:00:24.505"></status>
</kw>
<msg timestamp="20201030 08:00:26.457" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 08:00 o3fs://bucket1.volume1.om/ozone-11366
dr...</msg>
<status status="PASS" endtime="20201030 08:00:26.457" starttime="20201030 08:00:24.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201030 08:00:26.458" starttime="20201030 08:00:26.457"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201030 08:00:26.458" critical="yes" starttime="20201030 08:00:20.352"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201030 08:00:26.459" starttime="20201030 08:00:20.305"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:00:15.084" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:00:15.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:00:15.085" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201030 08:00:15.085" starttime="20201030 08:00:15.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:00:15.086" level="INFO">rm</msg>
<status status="PASS" endtime="20201030 08:00:15.086" starttime="20201030 08:00:15.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:00:15.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:00:15.087" starttime="20201030 08:00:15.086"></status>
</kw>
<status status="PASS" endtime="20201030 08:00:15.087" starttime="20201030 08:00:15.078"></status>
</kw>
<msg timestamp="20201030 08:00:15.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:00:15.087" starttime="20201030 08:00:15.078"></status>
</kw>
<msg timestamp="20201030 08:00:15.088" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201030 08:00:15.088" starttime="20201030 08:00:15.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:00:15.089" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:00:15.090" starttime="20201030 08:00:15.088"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:00:15.094" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:00:15.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:00:15.112" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:00:15.112" starttime="20201030 08:00:15.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:00:15.113" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:00:15.113" starttime="20201030 08:00:15.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:00:15.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:00:15.114" starttime="20201030 08:00:15.113"></status>
</kw>
<status status="PASS" endtime="20201030 08:00:15.114" starttime="20201030 08:00:15.091"></status>
</kw>
<msg timestamp="20201030 08:00:15.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:00:15.114" starttime="20201030 08:00:15.090"></status>
</kw>
<status status="PASS" endtime="20201030 08:00:15.114" starttime="20201030 08:00:15.090"></status>
</kw>
<status status="PASS" endtime="20201030 08:00:15.114" starttime="20201030 08:00:15.090"></status>
</kw>
<status status="PASS" endtime="20201030 08:00:15.114" starttime="20201030 08:00:15.077"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 08:00:15.115" critical="yes" starttime="20201030 08:00:15.077"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201030 08:00:15.115" starttime="20201030 08:00:15.031"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:58:27.656" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:58:27.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:58:27.658" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201030 07:58:27.658" starttime="20201030 07:58:27.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:58:27.659" level="INFO">om</msg>
<status status="PASS" endtime="20201030 07:58:27.659" starttime="20201030 07:58:27.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:58:27.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:58:27.660" starttime="20201030 07:58:27.659"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:27.660" starttime="20201030 07:58:27.651"></status>
</kw>
<msg timestamp="20201030 07:58:27.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:58:27.660" starttime="20201030 07:58:27.651"></status>
</kw>
<msg timestamp="20201030 07:58:27.660" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201030 07:58:27.660" starttime="20201030 07:58:27.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 07:58:27.661" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 07:58:27.661" starttime="20201030 07:58:27.661"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:58:27.665" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:58:27.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:58:27.691" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:58:27.691" starttime="20201030 07:58:27.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:58:27.692" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:58:27.692" starttime="20201030 07:58:27.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:58:27.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:58:27.693" starttime="20201030 07:58:27.692"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:27.693" starttime="20201030 07:58:27.663"></status>
</kw>
<msg timestamp="20201030 07:58:27.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:58:27.693" starttime="20201030 07:58:27.662"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:27.694" starttime="20201030 07:58:27.662"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:27.694" starttime="20201030 07:58:27.661"></status>
</kw>
<status status="PASS" endtime="20201030 07:58:27.694" starttime="20201030 07:58:27.650"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 07:58:27.694" critical="yes" starttime="20201030 07:58:27.649"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201030 07:58:27.695" starttime="20201030 07:58:27.601"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:02:04.515" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:02:04.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:02:04.518" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 08:02:04.518" starttime="20201030 08:02:04.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:02:04.519" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 08:02:04.519" starttime="20201030 08:02:04.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:02:04.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:02:04.520" starttime="20201030 08:02:04.519"></status>
</kw>
<status status="PASS" endtime="20201030 08:02:04.520" starttime="20201030 08:02:04.509"></status>
</kw>
<msg timestamp="20201030 08:02:04.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:02:04.520" starttime="20201030 08:02:04.508"></status>
</kw>
<msg timestamp="20201030 08:02:04.520" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 08:02:04.520" starttime="20201030 08:02:04.508"></status>
</kw>
<msg timestamp="20201030 08:02:04.520" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 08:02:04.521" starttime="20201030 08:02:04.508"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 08:02:04.524" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 08:02:04.524" starttime="20201030 08:02:04.523"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 08:02:04.524" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 08:02:04.524" starttime="20201030 08:02:04.524"></status>
</kw>
<status status="PASS" endtime="20201030 08:02:04.525" starttime="20201030 08:02:04.523"></status>
</kw>
<msg timestamp="20201030 08:02:04.525" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 08:02:04.525" starttime="20201030 08:02:04.523"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 08:02:04.527" starttime="20201030 08:02:04.526"></status>
</kw>
<msg timestamp="20201030 08:02:04.527" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 08:02:04.527" starttime="20201030 08:02:04.526"></status>
</kw>
<status status="PASS" endtime="20201030 08:02:04.527" starttime="20201030 08:02:04.522"></status>
</kw>
<msg timestamp="20201030 08:02:04.527" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 08:02:04.527" starttime="20201030 08:02:04.521"></status>
</kw>
<msg timestamp="20201030 08:02:04.527" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 08:02:04.527" starttime="20201030 08:02:04.521"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:02:04.530" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:02:43.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:02:43.693" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 08:02:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 08:02:06 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201030 08:02:43.693" starttime="20201030 08:02:04.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:02:43.694" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-30 08:02:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 08:02:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 08:02:06 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 08:02:07 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 08:02:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F20A34773325-&gt;3ce69b09-a5c0-440f-8103-4557aea4ce4b
2020-10-30 08:02:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-30 08:02:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-10-30 08:02:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
2020-10-30 08:02:13 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604044933379, maxDate=1604649733379, sequenceNumber=3, masterKeyId=2))
2020-10-30 08:02:13 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ac 91 9d c4 d7 2e 38 ac 99 cf e4 d9 2e 40 03 48 01 5a 0d 32 37 38 32 36 32 30 33 38 30 31 36 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-30 08:02:13 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604044933379, maxDate=1604649733379, sequenceNumber=3, masterKeyId=2)
2020-10-30 08:02:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 08:02:13 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 08:02:13 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 08:02:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604044666611_0003
2020-10-30 08:02:16 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ac 91 9d c4 d7 2e 38 ac 99 cf e4 d9 2e 40 03 48 01 5a 0d 32 37 38 32 36 32 30 33 38 30 31 36 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604044933379, maxDate=1604649733379, sequenceNumber=3, masterKeyId=2)]
2020-10-30 08:02:16 INFO  Configuration:2795 - resource-types.xml not found
2020-10-30 08:02:16 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-30 08:02:16 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-30 08:02:17 INFO  YarnClientImpl:329 - Submitted application application_1604044666611_0003
2020-10-30 08:02:17 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604044666611_0003/
2020-10-30 08:02:17 INFO  Job:1619 - Running job: job_1604044666611_0003
2020-10-30 08:02:24 INFO  Job:1640 - Job job_1604044666611_0003 running in uber mode : false
2020-10-30 08:02:24 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 08:02:35 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 08:02:37 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 08:02:42 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 08:02:43 INFO  Job:1658 - Job job_1604044666611_0003 completed successfully
2020-10-30 08:02:43 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1070949
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47034
		Total time spent by all reduces in occupied slots (ms)=7772
		Total time spent by all map tasks (ms)=23517
		Total time spent by all reduce tasks (ms)=3886
		Total vcore-milliseconds taken by all map tasks=23517
		Total vcore-milliseconds taken by all reduce tasks=3886
		Total megabyte-milliseconds taken by all map tasks=48162816
		Total megabyte-milliseconds taken by all reduce tasks=7958528
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1477
		CPU time spent (ms)=8070
		Physical memory (bytes) snapshot=1586606080
		Virtual memory (bytes) snapshot=14332051456
		Total committed heap usage (bytes)=1333264384
		Peak Map Physical memory (bytes)=519909376
		Peak Map Virtual memory (bytes)=3579052032
		Peak Reduce Physical memory (bytes)=379531264
		Peak Reduce Virtual memory (bytes)=3600195584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.257 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201030 08:02:43.694" starttime="20201030 08:02:43.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:02:43.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:02:43.695" starttime="20201030 08:02:43.694"></status>
</kw>
<status status="PASS" endtime="20201030 08:02:43.695" starttime="20201030 08:02:04.528"></status>
</kw>
<msg timestamp="20201030 08:02:43.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:02:43.695" starttime="20201030 08:02:04.528"></status>
</kw>
<msg timestamp="20201030 08:02:43.696" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 08:02:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 08:02:06 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201030 08:02:43.696" starttime="20201030 08:02:04.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 08:02:43.696" starttime="20201030 08:02:43.696"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 08:02:43.696" critical="yes" starttime="20201030 08:02:04.507"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:02:43.701" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:02:43.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:02:43.708" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 08:02:43.708" starttime="20201030 08:02:43.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:02:43.709" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 08:02:43.709" starttime="20201030 08:02:43.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:02:43.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:02:43.709" starttime="20201030 08:02:43.709"></status>
</kw>
<status status="PASS" endtime="20201030 08:02:43.710" starttime="20201030 08:02:43.699"></status>
</kw>
<msg timestamp="20201030 08:02:43.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:02:43.710" starttime="20201030 08:02:43.698"></status>
</kw>
<msg timestamp="20201030 08:02:43.710" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 08:02:43.710" starttime="20201030 08:02:43.698"></status>
</kw>
<msg timestamp="20201030 08:02:43.710" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 08:02:43.710" starttime="20201030 08:02:43.698"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 08:02:43.711" level="INFO">${random} = 83</msg>
<status status="PASS" endtime="20201030 08:02:43.711" starttime="20201030 08:02:43.710"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 08:02:43.714" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 08:02:43.714" starttime="20201030 08:02:43.714"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 08:02:43.715" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 08:02:43.715" starttime="20201030 08:02:43.714"></status>
</kw>
<status status="PASS" endtime="20201030 08:02:43.715" starttime="20201030 08:02:43.713"></status>
</kw>
<msg timestamp="20201030 08:02:43.715" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 08:02:43.715" starttime="20201030 08:02:43.713"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 08:02:43.716" starttime="20201030 08:02:43.715"></status>
</kw>
<msg timestamp="20201030 08:02:43.716" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 08:02:43.716" starttime="20201030 08:02:43.715"></status>
</kw>
<status status="PASS" endtime="20201030 08:02:43.716" starttime="20201030 08:02:43.712"></status>
</kw>
<msg timestamp="20201030 08:02:43.716" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 08:02:43.716" starttime="20201030 08:02:43.712"></status>
</kw>
<msg timestamp="20201030 08:02:43.716" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 08:02:43.716" starttime="20201030 08:02:43.711"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 08:02:43.719" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 08:02:43.719" starttime="20201030 08:02:43.719"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 08:02:43.720" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 08:02:43.720" starttime="20201030 08:02:43.720"></status>
</kw>
<status status="PASS" endtime="20201030 08:02:43.720" starttime="20201030 08:02:43.719"></status>
</kw>
<msg timestamp="20201030 08:02:43.720" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 08:02:43.720" starttime="20201030 08:02:43.718"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 08:02:43.721" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201030 08:02:43.721" starttime="20201030 08:02:43.721"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 08:02:43.722" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201030 08:02:43.722" starttime="20201030 08:02:43.722"></status>
</kw>
<status status="PASS" endtime="20201030 08:02:43.722" starttime="20201030 08:02:43.721"></status>
</kw>
<msg timestamp="20201030 08:02:43.722" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201030 08:02:43.722" starttime="20201030 08:02:43.720"></status>
</kw>
<status status="PASS" endtime="20201030 08:02:43.723" starttime="20201030 08:02:43.718"></status>
</kw>
<msg timestamp="20201030 08:02:43.723" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201030 08:02:43.723" starttime="20201030 08:02:43.717"></status>
</kw>
<msg timestamp="20201030 08:02:43.723" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201030 08:02:43.723" starttime="20201030 08:02:43.717"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 08:02:43.726" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 08:02:43.726" starttime="20201030 08:02:43.725"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 08:02:43.726" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 08:02:43.726" starttime="20201030 08:02:43.726"></status>
</kw>
<status status="PASS" endtime="20201030 08:02:43.727" starttime="20201030 08:02:43.725"></status>
</kw>
<msg timestamp="20201030 08:02:43.727" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 08:02:43.727" starttime="20201030 08:02:43.724"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 08:02:43.728" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201030 08:02:43.728" starttime="20201030 08:02:43.728"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 08:02:43.728" level="INFO">${result} = /wordcount-83.txt</msg>
<status status="PASS" endtime="20201030 08:02:43.728" starttime="20201030 08:02:43.728"></status>
</kw>
<status status="PASS" endtime="20201030 08:02:43.729" starttime="20201030 08:02:43.727"></status>
</kw>
<msg timestamp="20201030 08:02:43.729" level="INFO">${path_with_leading} = /wordcount-83.txt</msg>
<status status="PASS" endtime="20201030 08:02:43.729" starttime="20201030 08:02:43.727"></status>
</kw>
<status status="PASS" endtime="20201030 08:02:43.729" starttime="20201030 08:02:43.724"></status>
</kw>
<msg timestamp="20201030 08:02:43.729" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-83.txt</msg>
<status status="PASS" endtime="20201030 08:02:43.729" starttime="20201030 08:02:43.723"></status>
</kw>
<msg timestamp="20201030 08:02:43.729" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-83.txt</msg>
<status status="PASS" endtime="20201030 08:02:43.729" starttime="20201030 08:02:43.723"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:02:43.734" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-83.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:03:20.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:03:20.228" level="INFO">${output} = 2020-10-30 08:02:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-10-30 08:02:46 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
20...</msg>
<status status="PASS" endtime="20201030 08:03:20.228" starttime="20201030 08:02:43.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:03:20.229" level="INFO">2020-10-30 08:02:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-10-30 08:02:46 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
2020-10-30 08:02:46 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604044966242, maxDate=1604649766242, sequenceNumber=4, masterKeyId=2))
2020-10-30 08:02:46 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fc 91 9f c4 d7 2e 38 fc 99 d1 e4 d9 2e 40 04 48 01 5a 0d 32 37 38 32 36 32 30 33 38 30 31 36 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-30 08:02:46 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604044966242, maxDate=1604649766242, sequenceNumber=4, masterKeyId=2)
2020-10-30 08:02:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 08:02:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 08:02:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 08:02:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 08:02:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 08:02:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BB9AE7C47CCA-&gt;3ce69b09-a5c0-440f-8103-4557aea4ce4b
2020-10-30 08:02:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 08:02:47 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 08:02:49 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 08:02:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604044666611_0004
2020-10-30 08:02:49 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fc 91 9f c4 d7 2e 38 fc 99 d1 e4 d9 2e 40 04 48 01 5a 0d 32 37 38 32 36 32 30 33 38 30 31 36 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604044966242, maxDate=1604649766242, sequenceNumber=4, masterKeyId=2)]
2020-10-30 08:02:49 INFO  Configuration:2795 - resource-types.xml not found
2020-10-30 08:02:49 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-30 08:02:49 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-30 08:02:50 INFO  YarnClientImpl:329 - Submitted application application_1604044666611_0004
2020-10-30 08:02:50 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604044666611_0004/
2020-10-30 08:02:50 INFO  Job:1619 - Running job: job_1604044666611_0004
2020-10-30 08:02:58 INFO  Job:1640 - Job job_1604044666611_0004 running in uber mode : false
2020-10-30 08:02:58 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 08:03:07 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 08:03:09 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 08:03:13 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 08:03:19 INFO  Job:1658 - Job job_1604044666611_0004 completed successfully
2020-10-30 08:03:19 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1133621
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44240
		Total time spent by all reduces in occupied slots (ms)=8828
		Total time spent by all map tasks (ms)=22120
		Total time spent by all reduce tasks (ms)=4414
		Total vcore-milliseconds taken by all map tasks=22120
		Total vcore-milliseconds taken by all reduce tasks=4414
		Total megabyte-milliseconds taken by all map tasks=45301760
		Total megabyte-milliseconds taken by all reduce tasks=9039872
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1095
		CPU time spent (ms)=8000
		Physical memory (bytes) snapshot=1273454592
		Virtual memory (bytes) snapshot=14309244928
		Total committed heap usage (bytes)=1091043328
		Peak Map Physical memory (bytes)=384409600
		Peak Map Virtual memory (bytes)=3577798656
		Peak Reduce Physical memory (bytes)=297459712
		Peak Reduce Virtual memory (bytes)=3595210752
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201030 08:03:20.229" starttime="20201030 08:03:20.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:03:20.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:03:20.230" starttime="20201030 08:03:20.229"></status>
</kw>
<status status="PASS" endtime="20201030 08:03:20.230" starttime="20201030 08:02:43.730"></status>
</kw>
<msg timestamp="20201030 08:03:20.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:03:20.230" starttime="20201030 08:02:43.730"></status>
</kw>
<msg timestamp="20201030 08:03:20.231" level="INFO">${output} = 2020-10-30 08:02:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-10-30 08:02:46 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
20...</msg>
<status status="PASS" endtime="20201030 08:03:20.231" starttime="20201030 08:02:43.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201030 08:03:20.232" starttime="20201030 08:03:20.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 08:03:20.232" starttime="20201030 08:03:20.232"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 08:03:20.232" critical="yes" starttime="20201030 08:02:43.697"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201030 08:03:20.234" starttime="20201030 08:02:04.460"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:00:31.735" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:00:31.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:00:31.751" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 08:00:31.751" starttime="20201030 08:00:31.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:00:31.752" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 08:00:31.752" starttime="20201030 08:00:31.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:00:31.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:00:31.753" starttime="20201030 08:00:31.752"></status>
</kw>
<status status="PASS" endtime="20201030 08:00:31.753" starttime="20201030 08:00:31.729"></status>
</kw>
<msg timestamp="20201030 08:00:31.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:00:31.753" starttime="20201030 08:00:31.729"></status>
</kw>
<msg timestamp="20201030 08:00:31.753" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 08:00:31.753" starttime="20201030 08:00:31.729"></status>
</kw>
<msg timestamp="20201030 08:00:31.753" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 08:00:31.754" starttime="20201030 08:00:31.728"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 08:00:31.757" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 08:00:31.757" starttime="20201030 08:00:31.757"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 08:00:31.758" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 08:00:31.758" starttime="20201030 08:00:31.757"></status>
</kw>
<status status="PASS" endtime="20201030 08:00:31.758" starttime="20201030 08:00:31.756"></status>
</kw>
<msg timestamp="20201030 08:00:31.758" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 08:00:31.758" starttime="20201030 08:00:31.756"></status>
</kw>
<status status="PASS" endtime="20201030 08:00:31.758" starttime="20201030 08:00:31.755"></status>
</kw>
<msg timestamp="20201030 08:00:31.758" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 08:00:31.758" starttime="20201030 08:00:31.755"></status>
</kw>
<msg timestamp="20201030 08:00:31.759" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 08:00:31.759" starttime="20201030 08:00:31.754"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:00:31.762" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:01:10.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:01:10.227" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 08:00:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 08:00:33 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201030 08:01:10.227" starttime="20201030 08:00:31.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:01:10.228" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-30 08:00:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 08:00:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 08:00:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 08:00:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 08:00:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D7338895083C-&gt;3ce69b09-a5c0-440f-8103-4557aea4ce4b
2020-10-30 08:00:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-30 08:00:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-10-30 08:00:35 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
2020-10-30 08:00:36 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604044836057, maxDate=1604649636057, sequenceNumber=1, masterKeyId=2))
2020-10-30 08:00:36 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e5 96 97 c4 d7 2e 38 e5 9e c9 e4 d9 2e 40 01 48 01 5a 0d 32 37 38 32 36 32 30 33 38 30 31 36 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-30 08:00:36 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604044836057, maxDate=1604649636057, sequenceNumber=1, masterKeyId=2)
2020-10-30 08:00:36 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 08:00:36 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 08:00:36 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604044666611_0001
2020-10-30 08:00:36 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e5 96 97 c4 d7 2e 38 e5 9e c9 e4 d9 2e 40 01 48 01 5a 0d 32 37 38 32 36 32 30 33 38 30 31 36 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604044836057, maxDate=1604649636057, sequenceNumber=1, masterKeyId=2)]
2020-10-30 08:00:37 INFO  Configuration:2795 - resource-types.xml not found
2020-10-30 08:00:37 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-30 08:00:37 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-30 08:00:38 INFO  YarnClientImpl:329 - Submitted application application_1604044666611_0001
2020-10-30 08:00:38 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604044666611_0001/
2020-10-30 08:00:38 INFO  Job:1619 - Running job: job_1604044666611_0001
2020-10-30 08:00:50 INFO  Job:1640 - Job job_1604044666611_0001 running in uber mode : false
2020-10-30 08:00:50 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 08:01:01 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 08:01:02 INFO  Job:1647 -  map 67% reduce 0%
2020-10-30 08:01:03 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 08:01:08 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 08:01:09 INFO  Job:1658 - Job job_1604044666611_0001 completed successfully
2020-10-30 08:01:09 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1071161
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50334
		Total time spent by all reduces in occupied slots (ms)=8316
		Total time spent by all map tasks (ms)=25167
		Total time spent by all reduce tasks (ms)=4158
		Total vcore-milliseconds taken by all map tasks=25167
		Total vcore-milliseconds taken by all reduce tasks=4158
		Total megabyte-milliseconds taken by all map tasks=51542016
		Total megabyte-milliseconds taken by all reduce tasks=8515584
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1182
		CPU time spent (ms)=8080
		Physical memory (bytes) snapshot=1452339200
		Virtual memory (bytes) snapshot=14335524864
		Total committed heap usage (bytes)=1281884160
		Peak Map Physical memory (bytes)=380837888
		Peak Map Virtual memory (bytes)=3579793408
		Peak Reduce Physical memory (bytes)=384581632
		Peak Reduce Virtual memory (bytes)=3601215488
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.392 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201030 08:01:10.228" starttime="20201030 08:01:10.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:01:10.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:01:10.229" starttime="20201030 08:01:10.228"></status>
</kw>
<status status="PASS" endtime="20201030 08:01:10.229" starttime="20201030 08:00:31.760"></status>
</kw>
<msg timestamp="20201030 08:01:10.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:01:10.229" starttime="20201030 08:00:31.759"></status>
</kw>
<msg timestamp="20201030 08:01:10.230" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 08:00:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 08:00:33 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201030 08:01:10.230" starttime="20201030 08:00:31.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 08:01:10.230" starttime="20201030 08:01:10.230"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 08:01:10.231" critical="yes" starttime="20201030 08:00:31.728"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:01:10.235" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:01:10.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:01:10.242" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 08:01:10.242" starttime="20201030 08:01:10.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:01:10.243" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 08:01:10.243" starttime="20201030 08:01:10.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:01:10.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:01:10.243" starttime="20201030 08:01:10.243"></status>
</kw>
<status status="PASS" endtime="20201030 08:01:10.244" starttime="20201030 08:01:10.233"></status>
</kw>
<msg timestamp="20201030 08:01:10.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:01:10.244" starttime="20201030 08:01:10.233"></status>
</kw>
<msg timestamp="20201030 08:01:10.244" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 08:01:10.244" starttime="20201030 08:01:10.232"></status>
</kw>
<msg timestamp="20201030 08:01:10.244" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 08:01:10.244" starttime="20201030 08:01:10.232"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 08:01:10.245" level="INFO">${random} = 18</msg>
<status status="PASS" endtime="20201030 08:01:10.245" starttime="20201030 08:01:10.244"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 08:01:10.248" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 08:01:10.248" starttime="20201030 08:01:10.248"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 08:01:10.249" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 08:01:10.249" starttime="20201030 08:01:10.248"></status>
</kw>
<status status="PASS" endtime="20201030 08:01:10.249" starttime="20201030 08:01:10.247"></status>
</kw>
<msg timestamp="20201030 08:01:10.249" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 08:01:10.249" starttime="20201030 08:01:10.247"></status>
</kw>
<status status="PASS" endtime="20201030 08:01:10.249" starttime="20201030 08:01:10.246"></status>
</kw>
<msg timestamp="20201030 08:01:10.249" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 08:01:10.249" starttime="20201030 08:01:10.246"></status>
</kw>
<msg timestamp="20201030 08:01:10.249" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 08:01:10.249" starttime="20201030 08:01:10.245"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 08:01:10.252" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 08:01:10.252" starttime="20201030 08:01:10.252"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 08:01:10.253" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 08:01:10.253" starttime="20201030 08:01:10.252"></status>
</kw>
<status status="PASS" endtime="20201030 08:01:10.253" starttime="20201030 08:01:10.252"></status>
</kw>
<msg timestamp="20201030 08:01:10.253" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 08:01:10.253" starttime="20201030 08:01:10.251"></status>
</kw>
<status status="PASS" endtime="20201030 08:01:10.253" starttime="20201030 08:01:10.251"></status>
</kw>
<msg timestamp="20201030 08:01:10.253" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201030 08:01:10.253" starttime="20201030 08:01:10.250"></status>
</kw>
<msg timestamp="20201030 08:01:10.254" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201030 08:01:10.254" starttime="20201030 08:01:10.250"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 08:01:10.256" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 08:01:10.256" starttime="20201030 08:01:10.256"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 08:01:10.257" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 08:01:10.257" starttime="20201030 08:01:10.256"></status>
</kw>
<status status="PASS" endtime="20201030 08:01:10.257" starttime="20201030 08:01:10.256"></status>
</kw>
<msg timestamp="20201030 08:01:10.257" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 08:01:10.257" starttime="20201030 08:01:10.255"></status>
</kw>
<status status="PASS" endtime="20201030 08:01:10.257" starttime="20201030 08:01:10.255"></status>
</kw>
<msg timestamp="20201030 08:01:10.257" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-18.txt</msg>
<status status="PASS" endtime="20201030 08:01:10.257" starttime="20201030 08:01:10.254"></status>
</kw>
<msg timestamp="20201030 08:01:10.258" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-18.txt</msg>
<status status="PASS" endtime="20201030 08:01:10.258" starttime="20201030 08:01:10.254"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:01:10.262" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-18.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:01:47.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:01:47.769" level="INFO">${output} = 2020-10-30 08:01:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-10-30 08:01:12 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
20...</msg>
<status status="PASS" endtime="20201030 08:01:47.769" starttime="20201030 08:01:10.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:01:47.770" level="INFO">2020-10-30 08:01:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-10-30 08:01:12 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
2020-10-30 08:01:13 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604044872934, maxDate=1604649672934, sequenceNumber=2, masterKeyId=2))
2020-10-30 08:01:13 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ba b8 99 c4 d7 2e 38 ba c0 cb e4 d9 2e 40 02 48 01 5a 0d 32 37 38 32 36 32 30 33 38 30 31 36 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-30 08:01:13 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604044872934, maxDate=1604649672934, sequenceNumber=2, masterKeyId=2)
2020-10-30 08:01:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 08:01:13 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 08:01:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 08:01:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 08:01:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 08:01:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-72B2A0B086AB-&gt;3ce69b09-a5c0-440f-8103-4557aea4ce4b
2020-10-30 08:01:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 08:01:14 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 08:01:14 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 08:01:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604044666611_0002
2020-10-30 08:01:15 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ba b8 99 c4 d7 2e 38 ba c0 cb e4 d9 2e 40 02 48 01 5a 0d 32 37 38 32 36 32 30 33 38 30 31 36 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1604044872934, maxDate=1604649672934, sequenceNumber=2, masterKeyId=2)]
2020-10-30 08:01:15 INFO  Configuration:2795 - resource-types.xml not found
2020-10-30 08:01:15 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-30 08:01:15 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-30 08:01:16 INFO  YarnClientImpl:329 - Submitted application application_1604044666611_0002
2020-10-30 08:01:16 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604044666611_0002/
2020-10-30 08:01:16 INFO  Job:1619 - Running job: job_1604044666611_0002
2020-10-30 08:01:25 INFO  Job:1640 - Job job_1604044666611_0002 running in uber mode : false
2020-10-30 08:01:25 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 08:01:34 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 08:01:36 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 08:01:43 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 08:01:47 INFO  Job:1658 - Job job_1604044666611_0002 completed successfully
2020-10-30 08:01:47 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1133705
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47144
		Total time spent by all reduces in occupied slots (ms)=13600
		Total time spent by all map tasks (ms)=23572
		Total time spent by all reduce tasks (ms)=6800
		Total vcore-milliseconds taken by all map tasks=23572
		Total vcore-milliseconds taken by all reduce tasks=6800
		Total megabyte-milliseconds taken by all map tasks=48275456
		Total megabyte-milliseconds taken by all reduce tasks=13926400
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1226
		CPU time spent (ms)=8020
		Physical memory (bytes) snapshot=1495642112
		Virtual memory (bytes) snapshot=14306332672
		Total committed heap usage (bytes)=1463812096
		Peak Map Physical memory (bytes)=381698048
		Peak Map Virtual memory (bytes)=3579920384
		Peak Reduce Physical memory (bytes)=384528384
		Peak Reduce Virtual memory (bytes)=3595218944
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201030 08:01:47.771" starttime="20201030 08:01:47.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:01:47.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:01:47.771" starttime="20201030 08:01:47.771"></status>
</kw>
<status status="PASS" endtime="20201030 08:01:47.772" starttime="20201030 08:01:10.258"></status>
</kw>
<msg timestamp="20201030 08:01:47.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:01:47.772" starttime="20201030 08:01:10.258"></status>
</kw>
<msg timestamp="20201030 08:01:47.773" level="INFO">${output} = 2020-10-30 08:01:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-10-30 08:01:12 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
20...</msg>
<status status="PASS" endtime="20201030 08:01:47.773" starttime="20201030 08:01:10.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201030 08:01:47.773" starttime="20201030 08:01:47.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 08:01:47.774" starttime="20201030 08:01:47.773"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 08:01:47.774" critical="yes" starttime="20201030 08:01:10.231"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201030 08:01:47.775" starttime="20201030 08:00:31.680"></status>
</suite>
<status status="PASS" elapsedtime="208315" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
