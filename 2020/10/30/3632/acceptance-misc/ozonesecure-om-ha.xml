<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201030 08:09:39.624" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:05:30.816" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:05:41.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:05:41.425" level="INFO">${output} = 2020-10-30 08:05:32,542 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-30 08:05:32,976 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201030 08:05:41.425" starttime="20201030 08:05:30.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:05:41.426" level="INFO">2020-10-30 08:05:32,542 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-30 08:05:32,976 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-30 08:05:32,976 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-30 08:05:35,844 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-30 08:05:35,844 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-10-30 08:05:35,845 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-10-30 08:05:35,845 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-10-30 08:05:35,845 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-30 08:05:35,845 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-30 08:05:35,846 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-10-30 08:05:35,850 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-30 08:05:35,859 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-30 08:05:35,900 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-72402, with testuser/scm@EXAMPLE.COM as owner.
2020-10-30 08:05:36,514 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-72402/bucket-0-55892, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-30 08:05:36,867 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-30 08:05:37,870 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-30 08:05:38,870 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-30 08:05:38,981 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-30 08:05:39,889 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,595
Average Time spent in bucket creation: 00:00:00,184
Average Time spent in key creation: 00:00:01,272
Average Time spent in key write: 00:00:01,421
Total bytes written: 10240
Total Execution time: 00:00:07,827
***************************************************</msg>
<status status="PASS" endtime="20201030 08:05:41.426" starttime="20201030 08:05:41.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:05:41.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:05:41.426" starttime="20201030 08:05:41.426"></status>
</kw>
<status status="PASS" endtime="20201030 08:05:41.427" starttime="20201030 08:05:30.810"></status>
</kw>
<msg timestamp="20201030 08:05:41.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:05:41.427" starttime="20201030 08:05:30.809"></status>
</kw>
<msg timestamp="20201030 08:05:41.427" level="INFO">${result} = 2020-10-30 08:05:32,542 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-30 08:05:32,976 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201030 08:05:41.427" starttime="20201030 08:05:30.809"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201030 08:05:41.428" starttime="20201030 08:05:41.428"></status>
</kw>
<status status="PASS" endtime="20201030 08:05:41.428" starttime="20201030 08:05:41.427"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201030 08:05:41.429" critical="yes" starttime="20201030 08:05:30.808"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:05:41.436" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:05:49.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:05:49.831" level="INFO">${output} = 2020-10-30 08:05:43,168 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-30 08:05:43,422 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201030 08:05:49.831" starttime="20201030 08:05:41.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:05:49.835" level="INFO">2020-10-30 08:05:43,168 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-30 08:05:43,422 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-30 08:05:43,422 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-30 08:05:43,617 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ppp0q0karv
2020-10-30 08:05:43,632 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-30 08:05:44,641 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-30 08:05:45,180 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-10-30 08:05:45,240 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-30 08:05:45,642 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-30 08:05:45,724 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-30 08:05:46,061 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 08:05:46,062 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-21AD1358C5B4-&gt;4815f9ea-7e73-408f-be6f-5347cfe12137
2020-10-30 08:05:46,063 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 08:05:46,642 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-30 08:05:47,642 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-30 08:05:48,643 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-30 08:05:49,451 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3155.838218, max=3155.838218, mean=3155.838218, stddev=0.0, median=3155.838218, p75=3155.838218, p95=3155.838218, p98=3155.838218, p99=3155.838218, p999=3155.838218, mean_rate=0.2405407183891965, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-30 08:05:49,451 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-10-30 08:05:49,458 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-30 08:05:49,458 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201030 08:05:49.835" starttime="20201030 08:05:49.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:05:49.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:05:49.836" starttime="20201030 08:05:49.835"></status>
</kw>
<status status="PASS" endtime="20201030 08:05:49.837" starttime="20201030 08:05:41.431"></status>
</kw>
<msg timestamp="20201030 08:05:49.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:05:49.837" starttime="20201030 08:05:41.431"></status>
</kw>
<msg timestamp="20201030 08:05:49.838" level="INFO">${result} = 2020-10-30 08:05:43,168 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-30 08:05:43,422 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201030 08:05:49.838" starttime="20201030 08:05:41.430"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201030 08:05:49.839" starttime="20201030 08:05:49.839"></status>
</kw>
<status status="PASS" endtime="20201030 08:05:49.839" starttime="20201030 08:05:49.838"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201030 08:05:49.840" critical="yes" starttime="20201030 08:05:41.429"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:05:49.845" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:05:54.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:05:54.638" level="INFO">${output} = 2020-10-30 08:05:51,600 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-30 08:05:51,759 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201030 08:05:54.638" starttime="20201030 08:05:49.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:05:54.639" level="INFO">2020-10-30 08:05:51,600 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-30 08:05:51,759 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-30 08:05:51,759 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-30 08:05:51,926 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qe4wibmfas
2020-10-30 08:05:51,953 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-30 08:05:52,963 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-30 08:05:53,963 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-30 08:05:54,609 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=310.838846, max=310.838846, mean=310.838846, stddev=0.0, median=310.838846, p75=310.838846, p95=310.838846, p98=310.838846, p99=310.838846, p999=310.838846, mean_rate=0.8716797221436506, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-30 08:05:54,624 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-30 08:05:54,624 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-30 08:05:54,624 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201030 08:05:54.640" starttime="20201030 08:05:54.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:05:54.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:05:54.640" starttime="20201030 08:05:54.640"></status>
</kw>
<status status="PASS" endtime="20201030 08:05:54.641" starttime="20201030 08:05:49.842"></status>
</kw>
<msg timestamp="20201030 08:05:54.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:05:54.641" starttime="20201030 08:05:49.842"></status>
</kw>
<msg timestamp="20201030 08:05:54.641" level="INFO">${result} = 2020-10-30 08:05:51,600 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-30 08:05:51,759 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201030 08:05:54.641" starttime="20201030 08:05:49.841"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201030 08:05:54.642" starttime="20201030 08:05:54.642"></status>
</kw>
<status status="PASS" endtime="20201030 08:05:54.642" starttime="20201030 08:05:54.641"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201030 08:05:54.642" critical="yes" starttime="20201030 08:05:49.840"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:05:54.648" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:05:59.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:05:59.237" level="INFO">${output} = 2020-10-30 08:05:56,316 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-30 08:05:56,450 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201030 08:05:59.237" starttime="20201030 08:05:54.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:05:59.238" level="INFO">2020-10-30 08:05:56,316 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-30 08:05:56,450 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-30 08:05:56,450 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-30 08:05:56,582 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 7r0aobcwc6
2020-10-30 08:05:56,597 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-30 08:05:57,599 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-30 08:05:58,599 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-30 08:05:59,106 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=82.331423, max=82.331423, mean=82.331423, stddev=0.0, median=82.331423, p75=82.331423, p95=82.331423, p98=82.331423, p99=82.331423, p999=82.331423, mean_rate=0.8895693414324506, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-30 08:05:59,109 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-30 08:05:59,111 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-30 08:05:59,112 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201030 08:05:59.238" starttime="20201030 08:05:59.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:05:59.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:05:59.239" starttime="20201030 08:05:59.239"></status>
</kw>
<status status="PASS" endtime="20201030 08:05:59.239" starttime="20201030 08:05:54.645"></status>
</kw>
<msg timestamp="20201030 08:05:59.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:05:59.240" starttime="20201030 08:05:54.645"></status>
</kw>
<msg timestamp="20201030 08:05:59.240" level="INFO">${result} = 2020-10-30 08:05:56,316 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-30 08:05:56,450 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201030 08:05:59.240" starttime="20201030 08:05:54.644"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201030 08:05:59.241" starttime="20201030 08:05:59.241"></status>
</kw>
<status status="PASS" endtime="20201030 08:05:59.241" starttime="20201030 08:05:59.240"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201030 08:05:59.241" critical="yes" starttime="20201030 08:05:54.643"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201030 08:05:59.243" starttime="20201030 08:05:30.783"></status>
</suite>
<status status="PASS" endtime="20201030 08:05:59.246" starttime="20201030 08:05:30.755"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:05:24.122" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:05:24.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:05:24.132" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:05:24.132" starttime="20201030 08:05:24.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:05:24.136" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:05:24.140" starttime="20201030 08:05:24.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:05:24.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:05:24.143" starttime="20201030 08:05:24.140"></status>
</kw>
<status status="PASS" endtime="20201030 08:05:24.143" starttime="20201030 08:05:24.109"></status>
</kw>
<msg timestamp="20201030 08:05:24.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:05:24.143" starttime="20201030 08:05:24.108"></status>
</kw>
<msg timestamp="20201030 08:05:24.144" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:05:24.144" starttime="20201030 08:05:24.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:05:24.144" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:05:24.144" starttime="20201030 08:05:24.144"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:05:24.155" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:05:24.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:05:24.177" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:05:24.177" starttime="20201030 08:05:24.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:05:24.178" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:05:24.179" starttime="20201030 08:05:24.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:05:24.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:05:24.179" starttime="20201030 08:05:24.179"></status>
</kw>
<status status="PASS" endtime="20201030 08:05:24.180" starttime="20201030 08:05:24.152"></status>
</kw>
<msg timestamp="20201030 08:05:24.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:05:24.180" starttime="20201030 08:05:24.152"></status>
</kw>
<status status="PASS" endtime="20201030 08:05:24.180" starttime="20201030 08:05:24.145"></status>
</kw>
<status status="PASS" endtime="20201030 08:05:24.180" starttime="20201030 08:05:24.145"></status>
</kw>
<status status="PASS" endtime="20201030 08:05:24.180" starttime="20201030 08:05:24.104"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 08:05:24.183" critical="yes" starttime="20201030 08:05:24.103"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201030 08:05:24.184" starttime="20201030 08:05:23.975"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 08:06:04.716" level="INFO">${random} = 06702</msg>
<status status="PASS" endtime="20201030 08:06:04.716" starttime="20201030 08:06:04.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201030 08:06:04.718" level="INFO">${source} = 06702-source</msg>
<status status="PASS" endtime="20201030 08:06:04.718" starttime="20201030 08:06:04.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201030 08:06:04.719" level="INFO">${target} = 06702-target</msg>
<status status="PASS" endtime="20201030 08:06:04.719" starttime="20201030 08:06:04.718"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:06:04.724" level="INFO">Running command 'ozone sh volume create 06702-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:06:08.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:06:08.347" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:06:08.347" starttime="20201030 08:06:04.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:06:08.349" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:06:08.349" starttime="20201030 08:06:08.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:06:08.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:06:08.350" starttime="20201030 08:06:08.349"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:08.350" starttime="20201030 08:06:04.720"></status>
</kw>
<msg timestamp="20201030 08:06:08.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:06:08.351" starttime="20201030 08:06:04.719"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:08.351" starttime="20201030 08:06:04.719"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:06:08.355" level="INFO">Running command 'ozone sh volume create 06702-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:06:11.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:06:11.970" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:06:11.970" starttime="20201030 08:06:08.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:06:11.971" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:06:11.971" starttime="20201030 08:06:11.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:06:11.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:06:11.972" starttime="20201030 08:06:11.971"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:11.972" starttime="20201030 08:06:08.352"></status>
</kw>
<msg timestamp="20201030 08:06:11.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:06:11.972" starttime="20201030 08:06:08.351"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:11.972" starttime="20201030 08:06:08.351"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:06:11.977" level="INFO">Running command 'ozone sh bucket create 06702-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:06:16.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:06:16.507" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:06:16.507" starttime="20201030 08:06:11.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:06:16.509" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:06:16.509" starttime="20201030 08:06:16.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:06:16.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:06:16.509" starttime="20201030 08:06:16.509"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:16.510" starttime="20201030 08:06:11.974"></status>
</kw>
<msg timestamp="20201030 08:06:16.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:06:16.510" starttime="20201030 08:06:11.974"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:16.510" starttime="20201030 08:06:11.973"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:06:16.514" level="INFO">Running command 'ozone sh key put 06702-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:06:22.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:06:22.440" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:06:22.440" starttime="20201030 08:06:16.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:06:22.441" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:06:22.441" starttime="20201030 08:06:22.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:06:22.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:06:22.441" starttime="20201030 08:06:22.441"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:22.442" starttime="20201030 08:06:16.511"></status>
</kw>
<msg timestamp="20201030 08:06:22.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:06:22.442" starttime="20201030 08:06:16.511"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:22.442" starttime="20201030 08:06:16.510"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:06:22.446" level="INFO">Running command 'ozone sh bucket create 06702-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:06:25.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:06:25.798" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:06:25.798" starttime="20201030 08:06:22.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:06:25.799" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:06:25.799" starttime="20201030 08:06:25.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:06:25.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:06:25.800" starttime="20201030 08:06:25.799"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:25.800" starttime="20201030 08:06:22.443"></status>
</kw>
<msg timestamp="20201030 08:06:25.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:06:25.800" starttime="20201030 08:06:22.443"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:25.801" starttime="20201030 08:06:22.442"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:06:25.805" level="INFO">Running command 'ozone sh bucket link 06702-source/readable-bucket 06702-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:06:29.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:06:29.419" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:06:29.419" starttime="20201030 08:06:25.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:06:29.420" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:06:29.420" starttime="20201030 08:06:29.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:06:29.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:06:29.421" starttime="20201030 08:06:29.420"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:29.421" starttime="20201030 08:06:25.802"></status>
</kw>
<msg timestamp="20201030 08:06:29.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:06:29.421" starttime="20201030 08:06:25.801"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:29.422" starttime="20201030 08:06:25.801"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:06:29.425" level="INFO">Running command 'ozone sh bucket link 06702-source/readable-bucket 06702-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:06:32.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:06:32.803" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:06:32.803" starttime="20201030 08:06:29.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:06:32.804" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:06:32.804" starttime="20201030 08:06:32.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:06:32.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:06:32.805" starttime="20201030 08:06:32.805"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:32.805" starttime="20201030 08:06:29.423"></status>
</kw>
<msg timestamp="20201030 08:06:32.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:06:32.805" starttime="20201030 08:06:29.422"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:32.806" starttime="20201030 08:06:29.422"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:06:32.809" level="INFO">Running command 'ozone sh bucket link 06702-source/unreadable-bucket 06702-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:06:36.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:06:36.704" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:06:36.704" starttime="20201030 08:06:32.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:06:36.705" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:06:36.706" starttime="20201030 08:06:36.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:06:36.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:06:36.706" starttime="20201030 08:06:36.706"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:36.707" starttime="20201030 08:06:32.807"></status>
</kw>
<msg timestamp="20201030 08:06:36.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:06:36.707" starttime="20201030 08:06:32.806"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:36.707" starttime="20201030 08:06:32.806"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:06:36.711" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 06702-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:06:40.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:06:40.081" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:06:40.081" starttime="20201030 08:06:36.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:06:40.082" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201030 08:06:40.082" starttime="20201030 08:06:40.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:06:40.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:06:40.082" starttime="20201030 08:06:40.082"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:40.083" starttime="20201030 08:06:36.708"></status>
</kw>
<msg timestamp="20201030 08:06:40.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:06:40.083" starttime="20201030 08:06:36.708"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:40.083" starttime="20201030 08:06:36.707"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:06:40.087" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 06702-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:06:43.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:06:43.776" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:06:43.776" starttime="20201030 08:06:40.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:06:43.777" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201030 08:06:43.777" starttime="20201030 08:06:43.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:06:43.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:06:43.778" starttime="20201030 08:06:43.778"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:43.778" starttime="20201030 08:06:40.084"></status>
</kw>
<msg timestamp="20201030 08:06:43.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:06:43.778" starttime="20201030 08:06:40.084"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:43.779" starttime="20201030 08:06:40.083"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:06:43.783" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 06702-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:06:47.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:06:47.506" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:06:47.507" starttime="20201030 08:06:43.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:06:47.508" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201030 08:06:47.508" starttime="20201030 08:06:47.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:06:47.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:06:47.508" starttime="20201030 08:06:47.508"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:47.509" starttime="20201030 08:06:43.780"></status>
</kw>
<msg timestamp="20201030 08:06:47.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:06:47.509" starttime="20201030 08:06:43.779"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:47.509" starttime="20201030 08:06:43.779"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:06:47.513" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 06702-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:06:51.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:06:51.142" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:06:51.142" starttime="20201030 08:06:47.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:06:51.143" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201030 08:06:51.143" starttime="20201030 08:06:51.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:06:51.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:06:51.144" starttime="20201030 08:06:51.144"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:51.144" starttime="20201030 08:06:47.510"></status>
</kw>
<msg timestamp="20201030 08:06:51.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:06:51.145" starttime="20201030 08:06:47.510"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:51.145" starttime="20201030 08:06:47.509"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:06:51.150" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 06702-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:06:54.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:06:54.765" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:06:54.765" starttime="20201030 08:06:51.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:06:54.766" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201030 08:06:54.767" starttime="20201030 08:06:54.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:06:54.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:06:54.767" starttime="20201030 08:06:54.767"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:54.767" starttime="20201030 08:06:51.146"></status>
</kw>
<msg timestamp="20201030 08:06:54.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:06:54.768" starttime="20201030 08:06:51.146"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:54.768" starttime="20201030 08:06:51.145"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:54.768" starttime="20201030 08:06:11.973"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:54.768" starttime="20201030 08:06:11.973"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:54.768" starttime="20201030 08:06:04.715"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:06:54.775" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:06:54.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:06:54.777" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:06:54.777" starttime="20201030 08:06:54.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:06:54.778" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:06:54.778" starttime="20201030 08:06:54.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:06:54.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:06:54.779" starttime="20201030 08:06:54.778"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:54.779" starttime="20201030 08:06:54.771"></status>
</kw>
<msg timestamp="20201030 08:06:54.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:06:54.779" starttime="20201030 08:06:54.771"></status>
</kw>
<msg timestamp="20201030 08:06:54.779" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:06:54.779" starttime="20201030 08:06:54.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:06:54.781" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:06:54.781" starttime="20201030 08:06:54.780"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:06:54.786" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:06:54.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:06:54.802" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:06:54.802" starttime="20201030 08:06:54.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:06:54.803" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:06:54.803" starttime="20201030 08:06:54.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:06:54.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:06:54.804" starttime="20201030 08:06:54.804"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:54.804" starttime="20201030 08:06:54.782"></status>
</kw>
<msg timestamp="20201030 08:06:54.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:06:54.805" starttime="20201030 08:06:54.782"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:54.805" starttime="20201030 08:06:54.781"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:54.805" starttime="20201030 08:06:54.781"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:54.805" starttime="20201030 08:06:54.770"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:54.805" starttime="20201030 08:06:54.770"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:06:54.810" level="INFO">Running command 'ozone sh bucket link 06702-source/no-such-bucket 06702-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:06:58.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:06:58.830" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:06:58.830" starttime="20201030 08:06:54.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:06:58.831" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:06:58.831" starttime="20201030 08:06:58.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:06:58.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:06:58.832" starttime="20201030 08:06:58.832"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:58.833" starttime="20201030 08:06:54.806"></status>
</kw>
<msg timestamp="20201030 08:06:58.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:06:58.833" starttime="20201030 08:06:54.806"></status>
</kw>
<status status="PASS" endtime="20201030 08:06:58.833" starttime="20201030 08:06:54.805"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:06:58.836" level="INFO">Running command 'ozone sh key list 06702-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:02.340" level="INFO">${rc} = 255</msg>
<msg timestamp="20201030 08:07:02.340" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:07:02.341" starttime="20201030 08:06:58.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:02.342" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201030 08:07:02.342" starttime="20201030 08:07:02.341"></status>
</kw>
<msg timestamp="20201030 08:07:02.342" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:07:02.342" starttime="20201030 08:06:58.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201030 08:07:02.343" starttime="20201030 08:07:02.342"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 08:07:02.343" critical="yes" starttime="20201030 08:06:54.769"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:02.349" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:02.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:02.351" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:07:02.351" starttime="20201030 08:07:02.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:02.352" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:07:02.352" starttime="20201030 08:07:02.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:02.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:02.353" starttime="20201030 08:07:02.353"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:02.353" starttime="20201030 08:07:02.346"></status>
</kw>
<msg timestamp="20201030 08:07:02.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:02.354" starttime="20201030 08:07:02.346"></status>
</kw>
<msg timestamp="20201030 08:07:02.354" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:07:02.354" starttime="20201030 08:07:02.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:07:02.354" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:07:02.354" starttime="20201030 08:07:02.354"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:02.360" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:02.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:02.370" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:07:02.370" starttime="20201030 08:07:02.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:02.371" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:07:02.371" starttime="20201030 08:07:02.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:02.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:02.372" starttime="20201030 08:07:02.371"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:02.372" starttime="20201030 08:07:02.356"></status>
</kw>
<msg timestamp="20201030 08:07:02.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:02.372" starttime="20201030 08:07:02.356"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:02.372" starttime="20201030 08:07:02.355"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:02.373" starttime="20201030 08:07:02.355"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:02.373" starttime="20201030 08:07:02.345"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:02.373" starttime="20201030 08:07:02.344"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:02.377" level="INFO">Running command 'ozone sh bucket link 06702-source/bucket1 06702-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:06.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:06.026" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:07:06.026" starttime="20201030 08:07:02.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:06.027" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:07:06.027" starttime="20201030 08:07:06.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:06.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:06.028" starttime="20201030 08:07:06.027"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:06.028" starttime="20201030 08:07:02.374"></status>
</kw>
<msg timestamp="20201030 08:07:06.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:06.028" starttime="20201030 08:07:02.374"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:06.028" starttime="20201030 08:07:02.373"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:06.033" level="INFO">Running command 'ozone sh bucket create 06702-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:09.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:09.394" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:07:09.394" starttime="20201030 08:07:06.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:09.395" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:07:09.395" starttime="20201030 08:07:09.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:09.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:09.396" starttime="20201030 08:07:09.395"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:09.396" starttime="20201030 08:07:06.030"></status>
</kw>
<msg timestamp="20201030 08:07:09.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:09.396" starttime="20201030 08:07:06.029"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:09.397" starttime="20201030 08:07:06.029"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:09.402" level="INFO">Running command 'ozone sh key put 06702-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:15.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:15.500" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:07:15.500" starttime="20201030 08:07:09.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:15.501" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:07:15.501" starttime="20201030 08:07:15.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:15.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:15.502" starttime="20201030 08:07:15.501"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:15.502" starttime="20201030 08:07:09.398"></status>
</kw>
<msg timestamp="20201030 08:07:15.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:15.502" starttime="20201030 08:07:09.397"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:15.502" starttime="20201030 08:07:09.397"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201030 08:07:15.504" level="INFO">${postfix} = 61039</msg>
<status status="PASS" endtime="20201030 08:07:15.504" starttime="20201030 08:07:15.504"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201030 08:07:15.505" level="INFO">${tmpfile} = /tmp/tempkey-61039</msg>
<status status="PASS" endtime="20201030 08:07:15.505" starttime="20201030 08:07:15.504"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:15.509" level="INFO">Running command 'ozone sh key get -f 06702-target/link1/key1 /tmp/tempkey-61039 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:21.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:21.831" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:07:21.831" starttime="20201030 08:07:15.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:21.832" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:07:21.832" starttime="20201030 08:07:21.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:21.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:21.833" starttime="20201030 08:07:21.833"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:21.833" starttime="20201030 08:07:15.506"></status>
</kw>
<msg timestamp="20201030 08:07:21.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:21.833" starttime="20201030 08:07:15.505"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:21.834" starttime="20201030 08:07:15.505"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201030 08:07:21.838" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-61039 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:21.839" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201030 08:07:21.839" starttime="20201030 08:07:21.834"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:21.844" level="INFO">Running command 'rm -f /tmp/tempkey-61039 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:21.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:21.846" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:07:21.847" starttime="20201030 08:07:21.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:21.847" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:07:21.848" starttime="20201030 08:07:21.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:21.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:21.849" starttime="20201030 08:07:21.848"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:21.849" starttime="20201030 08:07:21.841"></status>
</kw>
<msg timestamp="20201030 08:07:21.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:21.849" starttime="20201030 08:07:21.841"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:21.849" starttime="20201030 08:07:21.840"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 08:07:21.850" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201030 08:07:21.850" starttime="20201030 08:07:21.849"></status>
</kw>
<msg timestamp="20201030 08:07:21.850" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201030 08:07:21.850" starttime="20201030 08:07:15.503"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201030 08:07:21.851" starttime="20201030 08:07:21.850"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:21.851" starttime="20201030 08:07:15.503"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 08:07:21.851" critical="yes" starttime="20201030 08:07:02.343"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:21.858" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:21.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:21.859" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:07:21.859" starttime="20201030 08:07:21.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:21.860" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:07:21.860" starttime="20201030 08:07:21.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:21.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:21.861" starttime="20201030 08:07:21.861"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:21.861" starttime="20201030 08:07:21.854"></status>
</kw>
<msg timestamp="20201030 08:07:21.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:21.861" starttime="20201030 08:07:21.854"></status>
</kw>
<msg timestamp="20201030 08:07:21.862" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:07:21.862" starttime="20201030 08:07:21.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:07:21.862" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:07:21.862" starttime="20201030 08:07:21.862"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:21.867" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:21.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:21.878" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:07:21.878" starttime="20201030 08:07:21.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:21.879" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:07:21.879" starttime="20201030 08:07:21.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:21.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:21.880" starttime="20201030 08:07:21.879"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:21.880" starttime="20201030 08:07:21.864"></status>
</kw>
<msg timestamp="20201030 08:07:21.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:21.881" starttime="20201030 08:07:21.864"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:21.881" starttime="20201030 08:07:21.863"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:21.881" starttime="20201030 08:07:21.863"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:21.881" starttime="20201030 08:07:21.853"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:21.881" starttime="20201030 08:07:21.853"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:21.885" level="INFO">Running command 'ozone sh key put 06702-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:27.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:27.952" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:07:27.953" starttime="20201030 08:07:21.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:27.954" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:07:27.954" starttime="20201030 08:07:27.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:27.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:27.955" starttime="20201030 08:07:27.954"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:27.955" starttime="20201030 08:07:21.882"></status>
</kw>
<msg timestamp="20201030 08:07:27.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:27.955" starttime="20201030 08:07:21.882"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:27.955" starttime="20201030 08:07:21.881"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201030 08:07:27.957" level="INFO">${postfix} = 64971</msg>
<status status="PASS" endtime="20201030 08:07:27.957" starttime="20201030 08:07:27.957"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201030 08:07:27.958" level="INFO">${tmpfile} = /tmp/tempkey-64971</msg>
<status status="PASS" endtime="20201030 08:07:27.958" starttime="20201030 08:07:27.957"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:27.962" level="INFO">Running command 'ozone sh key get -f 06702-source/bucket1/key2 /tmp/tempkey-64971 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:33.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:33.475" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:07:33.475" starttime="20201030 08:07:27.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:33.477" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:07:33.477" starttime="20201030 08:07:33.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:33.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:33.478" starttime="20201030 08:07:33.477"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:33.478" starttime="20201030 08:07:27.958"></status>
</kw>
<msg timestamp="20201030 08:07:33.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:33.478" starttime="20201030 08:07:27.958"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:33.478" starttime="20201030 08:07:27.958"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201030 08:07:33.485" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-64971 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:33.488" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201030 08:07:33.488" starttime="20201030 08:07:33.479"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:33.493" level="INFO">Running command 'rm -f /tmp/tempkey-64971 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:33.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:33.496" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:07:33.496" starttime="20201030 08:07:33.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:33.497" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:07:33.497" starttime="20201030 08:07:33.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:33.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:33.498" starttime="20201030 08:07:33.497"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:33.498" starttime="20201030 08:07:33.489"></status>
</kw>
<msg timestamp="20201030 08:07:33.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:33.498" starttime="20201030 08:07:33.489"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:33.498" starttime="20201030 08:07:33.488"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 08:07:33.499" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201030 08:07:33.499" starttime="20201030 08:07:33.498"></status>
</kw>
<msg timestamp="20201030 08:07:33.499" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201030 08:07:33.499" starttime="20201030 08:07:27.956"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201030 08:07:33.500" starttime="20201030 08:07:33.500"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:33.500" starttime="20201030 08:07:27.955"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 08:07:33.501" critical="yes" starttime="20201030 08:07:21.852"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:33.507" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:33.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:33.510" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:07:33.510" starttime="20201030 08:07:33.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:33.511" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:07:33.511" starttime="20201030 08:07:33.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:33.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:33.512" starttime="20201030 08:07:33.512"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:33.512" starttime="20201030 08:07:33.505"></status>
</kw>
<msg timestamp="20201030 08:07:33.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:33.513" starttime="20201030 08:07:33.504"></status>
</kw>
<msg timestamp="20201030 08:07:33.513" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:07:33.513" starttime="20201030 08:07:33.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:07:33.513" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:07:33.513" starttime="20201030 08:07:33.513"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:33.519" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:33.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:33.530" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:07:33.531" starttime="20201030 08:07:33.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:33.532" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:07:33.532" starttime="20201030 08:07:33.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:33.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:33.532" starttime="20201030 08:07:33.532"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:33.533" starttime="20201030 08:07:33.515"></status>
</kw>
<msg timestamp="20201030 08:07:33.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:33.533" starttime="20201030 08:07:33.515"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:33.533" starttime="20201030 08:07:33.514"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:33.533" starttime="20201030 08:07:33.514"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:33.533" starttime="20201030 08:07:33.503"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:33.533" starttime="20201030 08:07:33.503"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:33.538" level="INFO">Running command 'ozone sh key list 06702-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:37.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:37.398" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201030 08:07:37.398" starttime="20201030 08:07:33.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:37.400" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201030 08:07:37.400" starttime="20201030 08:07:37.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:37.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:37.400" starttime="20201030 08:07:37.400"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:37.401" starttime="20201030 08:07:33.534"></status>
</kw>
<msg timestamp="20201030 08:07:37.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:37.401" starttime="20201030 08:07:33.534"></status>
</kw>
<msg timestamp="20201030 08:07:37.401" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201030 08:07:37.401" starttime="20201030 08:07:33.534"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:37.406" level="INFO">Running command 'ozone sh key list 06702-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:41.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:41.298" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201030 08:07:41.298" starttime="20201030 08:07:37.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:41.299" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201030 08:07:41.299" starttime="20201030 08:07:41.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:41.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:41.300" starttime="20201030 08:07:41.300"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:41.300" starttime="20201030 08:07:37.403"></status>
</kw>
<msg timestamp="20201030 08:07:41.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:41.301" starttime="20201030 08:07:37.402"></status>
</kw>
<msg timestamp="20201030 08:07:41.301" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201030 08:07:41.301" starttime="20201030 08:07:37.402"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201030 08:07:41.301" starttime="20201030 08:07:41.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201030 08:07:41.302" starttime="20201030 08:07:41.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201030 08:07:41.302" starttime="20201030 08:07:41.302"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 08:07:41.303" critical="yes" starttime="20201030 08:07:33.502"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:41.310" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:41.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:41.312" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:07:41.312" starttime="20201030 08:07:41.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:41.313" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:07:41.313" starttime="20201030 08:07:41.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:41.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:41.314" starttime="20201030 08:07:41.314"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:41.314" starttime="20201030 08:07:41.306"></status>
</kw>
<msg timestamp="20201030 08:07:41.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:41.315" starttime="20201030 08:07:41.306"></status>
</kw>
<msg timestamp="20201030 08:07:41.315" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:07:41.315" starttime="20201030 08:07:41.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:07:41.316" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:07:41.316" starttime="20201030 08:07:41.315"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:41.320" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:41.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:41.331" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:07:41.331" starttime="20201030 08:07:41.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:41.333" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:07:41.333" starttime="20201030 08:07:41.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:41.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:41.333" starttime="20201030 08:07:41.333"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:41.334" starttime="20201030 08:07:41.317"></status>
</kw>
<msg timestamp="20201030 08:07:41.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:41.334" starttime="20201030 08:07:41.317"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:41.334" starttime="20201030 08:07:41.316"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:41.334" starttime="20201030 08:07:41.316"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:41.334" starttime="20201030 08:07:41.305"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:41.334" starttime="20201030 08:07:41.305"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:41.340" level="INFO">Running command 'ozone sh key delete 06702-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:45.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:45.111" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:07:45.112" starttime="20201030 08:07:41.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:45.113" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:07:45.113" starttime="20201030 08:07:45.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:45.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:45.113" starttime="20201030 08:07:45.113"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:45.114" starttime="20201030 08:07:41.335"></status>
</kw>
<msg timestamp="20201030 08:07:45.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:45.114" starttime="20201030 08:07:41.335"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:45.114" starttime="20201030 08:07:41.335"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:45.120" level="INFO">Running command 'ozone sh key list 06702-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:49.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:49.060" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201030 08:07:49.060" starttime="20201030 08:07:45.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:49.061" level="INFO">key1</msg>
<status status="PASS" endtime="20201030 08:07:49.061" starttime="20201030 08:07:49.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:49.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:49.062" starttime="20201030 08:07:49.061"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:49.062" starttime="20201030 08:07:45.116"></status>
</kw>
<msg timestamp="20201030 08:07:49.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:49.062" starttime="20201030 08:07:45.115"></status>
</kw>
<msg timestamp="20201030 08:07:49.062" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201030 08:07:49.062" starttime="20201030 08:07:45.114"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201030 08:07:49.063" starttime="20201030 08:07:49.063"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 08:07:49.063" critical="yes" starttime="20201030 08:07:41.304"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:49.070" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:49.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:49.072" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:07:49.072" starttime="20201030 08:07:49.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:49.074" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:07:49.074" starttime="20201030 08:07:49.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:49.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:49.075" starttime="20201030 08:07:49.075"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:49.076" starttime="20201030 08:07:49.067"></status>
</kw>
<msg timestamp="20201030 08:07:49.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:49.076" starttime="20201030 08:07:49.066"></status>
</kw>
<msg timestamp="20201030 08:07:49.076" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:07:49.076" starttime="20201030 08:07:49.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:07:49.077" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:07:49.077" starttime="20201030 08:07:49.076"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:49.083" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:49.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:49.099" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:07:49.099" starttime="20201030 08:07:49.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:49.101" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:07:49.101" starttime="20201030 08:07:49.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:49.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:49.101" starttime="20201030 08:07:49.101"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:49.102" starttime="20201030 08:07:49.078"></status>
</kw>
<msg timestamp="20201030 08:07:49.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:49.102" starttime="20201030 08:07:49.078"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:49.102" starttime="20201030 08:07:49.077"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:49.102" starttime="20201030 08:07:49.077"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:49.102" starttime="20201030 08:07:49.065"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:49.102" starttime="20201030 08:07:49.065"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:49.107" level="INFO">Running command 'ozone sh bucket list 06702-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:53.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:53.117" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:07:53.118" starttime="20201030 08:07:49.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:53.119" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "06702-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T08:06:58.648Z",
  "modificationTime" : "2020-10-30T08:06:58.648Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06702-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "06702-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T08:06:36.453Z",
  "modificationTime" : "2020-10-30T08:06:54.679Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06702-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "06702-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T08:07:05.841Z",
  "modificationTime" : "2020-10-30T08:07:05.841Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06702-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "06702-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T08:06:29.240Z",
  "modificationTime" : "2020-10-30T08:06:51.068Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06702-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "06702-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T08:06:32.594Z",
  "modificationTime" : "2020-10-30T08:06:32.594Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06702-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201030 08:07:53.119" starttime="20201030 08:07:53.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:53.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:53.119" starttime="20201030 08:07:53.119"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:53.120" starttime="20201030 08:07:49.103"></status>
</kw>
<msg timestamp="20201030 08:07:53.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:53.120" starttime="20201030 08:07:49.103"></status>
</kw>
<msg timestamp="20201030 08:07:53.120" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:07:53.120" starttime="20201030 08:07:49.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201030 08:07:53.121" starttime="20201030 08:07:53.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201030 08:07:53.121" starttime="20201030 08:07:53.121"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 08:07:53.122" critical="yes" starttime="20201030 08:07:49.064"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:53.128" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:53.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:53.131" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:07:53.131" starttime="20201030 08:07:53.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:53.132" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:07:53.132" starttime="20201030 08:07:53.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:53.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:53.133" starttime="20201030 08:07:53.132"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:53.133" starttime="20201030 08:07:53.125"></status>
</kw>
<msg timestamp="20201030 08:07:53.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:53.133" starttime="20201030 08:07:53.125"></status>
</kw>
<msg timestamp="20201030 08:07:53.133" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:07:53.133" starttime="20201030 08:07:53.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:07:53.134" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:07:53.134" starttime="20201030 08:07:53.134"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:53.139" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:53.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:53.158" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:07:53.158" starttime="20201030 08:07:53.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:53.159" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:07:53.159" starttime="20201030 08:07:53.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:53.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:53.160" starttime="20201030 08:07:53.159"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:53.160" starttime="20201030 08:07:53.136"></status>
</kw>
<msg timestamp="20201030 08:07:53.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:53.160" starttime="20201030 08:07:53.135"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:53.160" starttime="20201030 08:07:53.135"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:53.160" starttime="20201030 08:07:53.134"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:53.161" starttime="20201030 08:07:53.124"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:53.161" starttime="20201030 08:07:53.123"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:53.165" level="INFO">Running command 'ozone sh bucket info 06702-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:57.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:57.133" level="INFO">${output} = 06702-source bucket1</msg>
<status status="PASS" endtime="20201030 08:07:57.133" starttime="20201030 08:07:53.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:57.134" level="INFO">06702-source bucket1</msg>
<status status="PASS" endtime="20201030 08:07:57.134" starttime="20201030 08:07:57.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:57.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:57.135" starttime="20201030 08:07:57.134"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:57.135" starttime="20201030 08:07:53.162"></status>
</kw>
<msg timestamp="20201030 08:07:57.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:57.135" starttime="20201030 08:07:53.162"></status>
</kw>
<msg timestamp="20201030 08:07:57.135" level="INFO">${result} = 06702-source bucket1</msg>
<status status="PASS" endtime="20201030 08:07:57.135" starttime="20201030 08:07:53.161"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201030 08:07:57.136" starttime="20201030 08:07:57.136"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 08:07:57.136" critical="yes" starttime="20201030 08:07:53.122"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:57.143" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:57.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:57.146" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:07:57.146" starttime="20201030 08:07:57.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:57.147" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:07:57.147" starttime="20201030 08:07:57.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:57.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:57.148" starttime="20201030 08:07:57.147"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:57.148" starttime="20201030 08:07:57.140"></status>
</kw>
<msg timestamp="20201030 08:07:57.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:57.148" starttime="20201030 08:07:57.139"></status>
</kw>
<msg timestamp="20201030 08:07:57.149" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:07:57.149" starttime="20201030 08:07:57.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:07:57.149" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:07:57.149" starttime="20201030 08:07:57.149"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:57.155" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:07:57.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:07:57.164" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:07:57.164" starttime="20201030 08:07:57.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:07:57.166" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:07:57.166" starttime="20201030 08:07:57.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:07:57.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:07:57.166" starttime="20201030 08:07:57.166"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:57.167" starttime="20201030 08:07:57.151"></status>
</kw>
<msg timestamp="20201030 08:07:57.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:07:57.167" starttime="20201030 08:07:57.151"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:57.167" starttime="20201030 08:07:57.150"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:57.167" starttime="20201030 08:07:57.149"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:57.167" starttime="20201030 08:07:57.138"></status>
</kw>
<status status="PASS" endtime="20201030 08:07:57.167" starttime="20201030 08:07:57.138"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:07:57.172" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 06702-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:01.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:01.016" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:01.016" starttime="20201030 08:07:57.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:01.017" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201030 08:08:01.017" starttime="20201030 08:08:01.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:01.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:01.019" starttime="20201030 08:08:01.017"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:01.019" starttime="20201030 08:07:57.168"></status>
</kw>
<msg timestamp="20201030 08:08:01.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:01.019" starttime="20201030 08:07:57.168"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:01.019" starttime="20201030 08:07:57.167"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:01.024" level="INFO">Running command 'ozone sh bucket getacl 06702-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:05.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:05.180" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201030 08:08:05.181" starttime="20201030 08:08:01.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:05.183" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201030 08:08:05.183" starttime="20201030 08:08:05.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:05.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:05.184" starttime="20201030 08:08:05.183"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:05.184" starttime="20201030 08:08:01.021"></status>
</kw>
<msg timestamp="20201030 08:08:05.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:05.184" starttime="20201030 08:08:01.021"></status>
</kw>
<msg timestamp="20201030 08:08:05.184" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201030 08:08:05.184" starttime="20201030 08:08:01.020"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201030 08:08:05.185" starttime="20201030 08:08:05.185"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:05.185" starttime="20201030 08:08:01.019"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:05.190" level="INFO">Running command 'ozone sh bucket getacl 06702-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:08.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:08.957" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:08:08.957" starttime="20201030 08:08:05.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:08.958" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:08:08.958" starttime="20201030 08:08:08.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:08.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:08.959" starttime="20201030 08:08:08.959"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:08.959" starttime="20201030 08:08:05.187"></status>
</kw>
<msg timestamp="20201030 08:08:08.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:08.960" starttime="20201030 08:08:05.187"></status>
</kw>
<msg timestamp="20201030 08:08:08.960" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201030 08:08:08.960" starttime="20201030 08:08:05.186"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201030 08:08:08.961" starttime="20201030 08:08:08.960"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:08.961" starttime="20201030 08:08:05.185"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:08.966" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 06702-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:12.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:12.492" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:12.492" starttime="20201030 08:08:08.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:12.493" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201030 08:08:12.493" starttime="20201030 08:08:12.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:12.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:12.494" starttime="20201030 08:08:12.493"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:12.494" starttime="20201030 08:08:08.962"></status>
</kw>
<msg timestamp="20201030 08:08:12.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:12.494" starttime="20201030 08:08:08.962"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:12.495" starttime="20201030 08:08:08.961"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:12.505" level="INFO">Running command 'ozone sh bucket getacl 06702-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:16.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:16.047" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:08:16.047" starttime="20201030 08:08:12.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:16.048" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:08:16.048" starttime="20201030 08:08:16.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:16.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:16.049" starttime="20201030 08:08:16.048"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:16.049" starttime="20201030 08:08:12.497"></status>
</kw>
<msg timestamp="20201030 08:08:16.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:16.049" starttime="20201030 08:08:12.496"></status>
</kw>
<msg timestamp="20201030 08:08:16.050" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201030 08:08:16.050" starttime="20201030 08:08:12.496"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201030 08:08:16.050" starttime="20201030 08:08:16.050"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:16.050" starttime="20201030 08:08:12.495"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:16.056" level="INFO">Running command 'ozone sh bucket getacl 06702-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:19.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:19.878" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201030 08:08:19.878" starttime="20201030 08:08:16.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:19.879" level="INFO">READ</msg>
<status status="PASS" endtime="20201030 08:08:19.879" starttime="20201030 08:08:19.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:19.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:19.880" starttime="20201030 08:08:19.879"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:19.880" starttime="20201030 08:08:16.052"></status>
</kw>
<msg timestamp="20201030 08:08:19.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:19.881" starttime="20201030 08:08:16.052"></status>
</kw>
<msg timestamp="20201030 08:08:19.881" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201030 08:08:19.881" starttime="20201030 08:08:16.051"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201030 08:08:19.881" starttime="20201030 08:08:19.881"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:19.882" starttime="20201030 08:08:16.050"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 08:08:19.882" critical="yes" starttime="20201030 08:07:57.137"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:19.889" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:19.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:19.892" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:08:19.892" starttime="20201030 08:08:19.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:19.893" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:08:19.893" starttime="20201030 08:08:19.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:19.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:19.894" starttime="20201030 08:08:19.893"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:19.894" starttime="20201030 08:08:19.886"></status>
</kw>
<msg timestamp="20201030 08:08:19.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:19.894" starttime="20201030 08:08:19.885"></status>
</kw>
<msg timestamp="20201030 08:08:19.894" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:08:19.894" starttime="20201030 08:08:19.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:08:19.895" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:08:19.895" starttime="20201030 08:08:19.895"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:19.900" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:19.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:19.912" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:08:19.912" starttime="20201030 08:08:19.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:19.913" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:08:19.913" starttime="20201030 08:08:19.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:19.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:19.913" starttime="20201030 08:08:19.913"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:19.914" starttime="20201030 08:08:19.897"></status>
</kw>
<msg timestamp="20201030 08:08:19.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:19.914" starttime="20201030 08:08:19.896"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:19.914" starttime="20201030 08:08:19.896"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:19.914" starttime="20201030 08:08:19.895"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:19.914" starttime="20201030 08:08:19.884"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:19.914" starttime="20201030 08:08:19.884"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:19.919" level="INFO">Running command 'ozone sh bucket link 06702-source/bucket2 06702-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:23.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:23.813" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:23.813" starttime="20201030 08:08:19.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:23.814" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:08:23.814" starttime="20201030 08:08:23.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:23.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:23.815" starttime="20201030 08:08:23.814"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:23.815" starttime="20201030 08:08:19.915"></status>
</kw>
<msg timestamp="20201030 08:08:23.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:23.815" starttime="20201030 08:08:19.915"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:23.816" starttime="20201030 08:08:19.914"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:23.818" level="INFO">Running command 'ozone sh bucket create 06702-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:27.144" level="INFO">${rc} = 255</msg>
<msg timestamp="20201030 08:08:27.144" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:27.144" starttime="20201030 08:08:23.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:27.145" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201030 08:08:27.145" starttime="20201030 08:08:27.145"></status>
</kw>
<msg timestamp="20201030 08:08:27.146" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:27.146" starttime="20201030 08:08:23.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201030 08:08:27.146" starttime="20201030 08:08:27.146"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:27.151" level="INFO">Running command 'ozone sh bucket create 06702-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:30.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:30.423" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:30.423" starttime="20201030 08:08:27.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:30.424" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:08:30.424" starttime="20201030 08:08:30.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:30.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:30.425" starttime="20201030 08:08:30.424"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:30.425" starttime="20201030 08:08:27.147"></status>
</kw>
<msg timestamp="20201030 08:08:30.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:30.425" starttime="20201030 08:08:27.147"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:30.426" starttime="20201030 08:08:27.147"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:30.430" level="INFO">Running command 'ozone sh bucket link 06702-source/bucket1 06702-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:34.558" level="INFO">${rc} = 255</msg>
<msg timestamp="20201030 08:08:34.558" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:34.558" starttime="20201030 08:08:30.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:34.559" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201030 08:08:34.559" starttime="20201030 08:08:34.558"></status>
</kw>
<msg timestamp="20201030 08:08:34.560" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:34.560" starttime="20201030 08:08:30.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201030 08:08:34.560" starttime="20201030 08:08:34.560"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 08:08:34.560" critical="yes" starttime="20201030 08:08:19.883"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:34.568" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:34.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:34.569" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:08:34.569" starttime="20201030 08:08:34.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:34.570" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:08:34.570" starttime="20201030 08:08:34.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:34.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:34.571" starttime="20201030 08:08:34.570"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:34.571" starttime="20201030 08:08:34.564"></status>
</kw>
<msg timestamp="20201030 08:08:34.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:34.571" starttime="20201030 08:08:34.563"></status>
</kw>
<msg timestamp="20201030 08:08:34.572" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:08:34.572" starttime="20201030 08:08:34.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:08:34.572" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:08:34.572" starttime="20201030 08:08:34.572"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:34.578" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:34.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:34.587" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:08:34.587" starttime="20201030 08:08:34.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:34.588" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:08:34.588" starttime="20201030 08:08:34.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:34.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:34.589" starttime="20201030 08:08:34.589"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:34.589" starttime="20201030 08:08:34.574"></status>
</kw>
<msg timestamp="20201030 08:08:34.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:34.590" starttime="20201030 08:08:34.573"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:34.590" starttime="20201030 08:08:34.573"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:34.590" starttime="20201030 08:08:34.573"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:34.590" starttime="20201030 08:08:34.562"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:34.590" starttime="20201030 08:08:34.562"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:34.596" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:34.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:34.599" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:08:34.599" starttime="20201030 08:08:34.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:34.600" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:08:34.600" starttime="20201030 08:08:34.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:34.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:34.600" starttime="20201030 08:08:34.600"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:34.601" starttime="20201030 08:08:34.592"></status>
</kw>
<msg timestamp="20201030 08:08:34.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:34.601" starttime="20201030 08:08:34.592"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:34.601" starttime="20201030 08:08:34.591"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:34.606" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:34.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:34.608" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:08:34.608" starttime="20201030 08:08:34.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:34.609" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:08:34.609" starttime="20201030 08:08:34.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:34.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:34.609" starttime="20201030 08:08:34.609"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:34.610" starttime="20201030 08:08:34.603"></status>
</kw>
<msg timestamp="20201030 08:08:34.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:34.610" starttime="20201030 08:08:34.602"></status>
</kw>
<msg timestamp="20201030 08:08:34.610" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:08:34.610" starttime="20201030 08:08:34.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:08:34.611" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:08:34.611" starttime="20201030 08:08:34.610"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:34.616" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:34.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:34.631" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:08:34.632" starttime="20201030 08:08:34.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:34.633" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:08:34.633" starttime="20201030 08:08:34.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:34.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:34.634" starttime="20201030 08:08:34.633"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:34.635" starttime="20201030 08:08:34.612"></status>
</kw>
<msg timestamp="20201030 08:08:34.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:34.635" starttime="20201030 08:08:34.612"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:34.635" starttime="20201030 08:08:34.611"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:34.635" starttime="20201030 08:08:34.611"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:34.635" starttime="20201030 08:08:34.601"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:34.635" starttime="20201030 08:08:34.601"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:34.638" level="INFO">Running command 'ozone sh key list 06702-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:38.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:38.343" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:38.343" starttime="20201030 08:08:34.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:38.344" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "06702-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-10-30T08:06:20.080Z",
  "modificationTime" : "2020-10-30T08:06:21.822Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201030 08:08:38.344" starttime="20201030 08:08:38.344"></status>
</kw>
<msg timestamp="20201030 08:08:38.345" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:38.345" starttime="20201030 08:08:34.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201030 08:08:38.345" starttime="20201030 08:08:38.345"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:38.346" starttime="20201030 08:08:34.591"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:38.346" starttime="20201030 08:08:34.590"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 08:08:38.346" critical="yes" starttime="20201030 08:08:34.561"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:38.352" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:38.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:38.355" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:08:38.355" starttime="20201030 08:08:38.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:38.356" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:08:38.356" starttime="20201030 08:08:38.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:38.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:38.356" starttime="20201030 08:08:38.356"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:38.357" starttime="20201030 08:08:38.349"></status>
</kw>
<msg timestamp="20201030 08:08:38.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:38.357" starttime="20201030 08:08:38.349"></status>
</kw>
<msg timestamp="20201030 08:08:38.357" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:08:38.357" starttime="20201030 08:08:38.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:08:38.358" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:08:38.358" starttime="20201030 08:08:38.357"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:38.362" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:38.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:38.385" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:08:38.385" starttime="20201030 08:08:38.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:38.386" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:08:38.386" starttime="20201030 08:08:38.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:38.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:38.387" starttime="20201030 08:08:38.386"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:38.387" starttime="20201030 08:08:38.359"></status>
</kw>
<msg timestamp="20201030 08:08:38.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:38.387" starttime="20201030 08:08:38.359"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:38.387" starttime="20201030 08:08:38.358"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:38.387" starttime="20201030 08:08:38.358"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:38.388" starttime="20201030 08:08:38.348"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:38.388" starttime="20201030 08:08:38.348"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:38.392" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:38.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:38.396" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:08:38.396" starttime="20201030 08:08:38.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:38.397" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:08:38.397" starttime="20201030 08:08:38.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:38.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:38.398" starttime="20201030 08:08:38.397"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:38.398" starttime="20201030 08:08:38.390"></status>
</kw>
<msg timestamp="20201030 08:08:38.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:38.398" starttime="20201030 08:08:38.390"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:38.398" starttime="20201030 08:08:38.389"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:38.407" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:38.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:38.409" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:08:38.409" starttime="20201030 08:08:38.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:38.410" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:08:38.411" starttime="20201030 08:08:38.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:38.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:38.411" starttime="20201030 08:08:38.411"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:38.411" starttime="20201030 08:08:38.400"></status>
</kw>
<msg timestamp="20201030 08:08:38.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:38.412" starttime="20201030 08:08:38.400"></status>
</kw>
<msg timestamp="20201030 08:08:38.412" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:08:38.412" starttime="20201030 08:08:38.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:08:38.413" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:08:38.413" starttime="20201030 08:08:38.412"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:38.418" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:38.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:38.434" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:08:38.434" starttime="20201030 08:08:38.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:38.435" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:08:38.435" starttime="20201030 08:08:38.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:38.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:38.435" starttime="20201030 08:08:38.435"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:38.436" starttime="20201030 08:08:38.414"></status>
</kw>
<msg timestamp="20201030 08:08:38.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:38.436" starttime="20201030 08:08:38.414"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:38.436" starttime="20201030 08:08:38.413"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:38.436" starttime="20201030 08:08:38.413"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:38.436" starttime="20201030 08:08:38.399"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:38.437" starttime="20201030 08:08:38.399"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:38.440" level="INFO">Running command 'ozone sh key list 06702-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:41.725" level="INFO">${rc} = 255</msg>
<msg timestamp="20201030 08:08:41.725" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:41.725" starttime="20201030 08:08:38.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:41.726" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201030 08:08:41.726" starttime="20201030 08:08:41.725"></status>
</kw>
<msg timestamp="20201030 08:08:41.727" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:41.727" starttime="20201030 08:08:38.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201030 08:08:41.727" starttime="20201030 08:08:41.727"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:41.727" starttime="20201030 08:08:38.388"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:41.728" starttime="20201030 08:08:38.388"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 08:08:41.728" critical="yes" starttime="20201030 08:08:38.347"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:41.734" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:41.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:41.737" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:08:41.737" starttime="20201030 08:08:41.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:41.738" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:08:41.738" starttime="20201030 08:08:41.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:41.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:41.739" starttime="20201030 08:08:41.738"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:41.739" starttime="20201030 08:08:41.731"></status>
</kw>
<msg timestamp="20201030 08:08:41.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:41.739" starttime="20201030 08:08:41.731"></status>
</kw>
<msg timestamp="20201030 08:08:41.739" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:08:41.739" starttime="20201030 08:08:41.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:08:41.740" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:08:41.740" starttime="20201030 08:08:41.740"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:41.745" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:41.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:41.756" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:08:41.756" starttime="20201030 08:08:41.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:41.757" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:08:41.757" starttime="20201030 08:08:41.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:41.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:41.758" starttime="20201030 08:08:41.757"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:41.758" starttime="20201030 08:08:41.742"></status>
</kw>
<msg timestamp="20201030 08:08:41.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:41.758" starttime="20201030 08:08:41.741"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:41.759" starttime="20201030 08:08:41.741"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:41.759" starttime="20201030 08:08:41.740"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:41.759" starttime="20201030 08:08:41.730"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:41.759" starttime="20201030 08:08:41.730"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:41.764" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:41.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:41.767" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:08:41.767" starttime="20201030 08:08:41.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:41.768" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:08:41.768" starttime="20201030 08:08:41.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:41.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:41.769" starttime="20201030 08:08:41.768"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:41.769" starttime="20201030 08:08:41.761"></status>
</kw>
<msg timestamp="20201030 08:08:41.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:41.769" starttime="20201030 08:08:41.760"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:41.769" starttime="20201030 08:08:41.760"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:41.773" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:41.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:41.776" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:08:41.776" starttime="20201030 08:08:41.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:41.777" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:08:41.777" starttime="20201030 08:08:41.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:41.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:41.777" starttime="20201030 08:08:41.777"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:41.778" starttime="20201030 08:08:41.771"></status>
</kw>
<msg timestamp="20201030 08:08:41.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:41.778" starttime="20201030 08:08:41.771"></status>
</kw>
<msg timestamp="20201030 08:08:41.778" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:08:41.778" starttime="20201030 08:08:41.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:08:41.779" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:08:41.779" starttime="20201030 08:08:41.778"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:41.784" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:41.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:41.793" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:08:41.793" starttime="20201030 08:08:41.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:41.794" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:08:41.794" starttime="20201030 08:08:41.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:41.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:41.795" starttime="20201030 08:08:41.794"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:41.795" starttime="20201030 08:08:41.780"></status>
</kw>
<msg timestamp="20201030 08:08:41.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:41.795" starttime="20201030 08:08:41.780"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:41.795" starttime="20201030 08:08:41.779"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:41.795" starttime="20201030 08:08:41.779"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:41.796" starttime="20201030 08:08:41.770"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:41.796" starttime="20201030 08:08:41.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:41.800" level="INFO">Running command 'ozone sh bucket info 06702-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:45.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:45.774" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:45.775" starttime="20201030 08:08:41.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:45.776" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "06702-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T08:06:36.453Z",
  "modificationTime" : "2020-10-30T08:06:54.679Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06702-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201030 08:08:45.776" starttime="20201030 08:08:45.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:45.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:45.777" starttime="20201030 08:08:45.776"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:45.777" starttime="20201030 08:08:41.797"></status>
</kw>
<msg timestamp="20201030 08:08:45.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:45.777" starttime="20201030 08:08:41.796"></status>
</kw>
<msg timestamp="20201030 08:08:45.777" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:45.777" starttime="20201030 08:08:41.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201030 08:08:45.778" starttime="20201030 08:08:45.777"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201030 08:08:45.778" starttime="20201030 08:08:45.778"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:45.781" level="INFO">Running command 'ozone sh key list 06702-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:49.294" level="INFO">${rc} = 255</msg>
<msg timestamp="20201030 08:08:49.294" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:49.294" starttime="20201030 08:08:45.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:49.295" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201030 08:08:49.295" starttime="20201030 08:08:49.295"></status>
</kw>
<msg timestamp="20201030 08:08:49.296" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:49.296" starttime="20201030 08:08:45.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201030 08:08:49.296" starttime="20201030 08:08:49.296"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:49.296" starttime="20201030 08:08:41.759"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:49.297" starttime="20201030 08:08:41.759"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 08:08:49.297" critical="yes" starttime="20201030 08:08:41.729"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:49.303" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:49.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:49.306" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:08:49.306" starttime="20201030 08:08:49.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:49.307" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:08:49.307" starttime="20201030 08:08:49.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:49.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:49.308" starttime="20201030 08:08:49.307"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:49.308" starttime="20201030 08:08:49.300"></status>
</kw>
<msg timestamp="20201030 08:08:49.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:49.308" starttime="20201030 08:08:49.300"></status>
</kw>
<msg timestamp="20201030 08:08:49.308" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:08:49.308" starttime="20201030 08:08:49.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:08:49.309" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:08:49.309" starttime="20201030 08:08:49.308"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:49.314" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:49.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:49.346" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:08:49.346" starttime="20201030 08:08:49.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:49.347" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:08:49.347" starttime="20201030 08:08:49.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:49.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:49.348" starttime="20201030 08:08:49.347"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:49.348" starttime="20201030 08:08:49.311"></status>
</kw>
<msg timestamp="20201030 08:08:49.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:49.348" starttime="20201030 08:08:49.310"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:49.348" starttime="20201030 08:08:49.310"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:49.349" starttime="20201030 08:08:49.309"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:49.349" starttime="20201030 08:08:49.299"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:49.349" starttime="20201030 08:08:49.299"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:49.353" level="INFO">Running command 'ozone sh bucket link 06702-target/loop1 06702-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:52.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:52.752" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:52.752" starttime="20201030 08:08:49.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:52.753" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:08:52.753" starttime="20201030 08:08:52.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:52.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:52.754" starttime="20201030 08:08:52.753"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:52.754" starttime="20201030 08:08:49.350"></status>
</kw>
<msg timestamp="20201030 08:08:52.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:52.754" starttime="20201030 08:08:49.350"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:52.754" starttime="20201030 08:08:49.349"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:52.760" level="INFO">Running command 'ozone sh bucket link 06702-target/loop2 06702-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:56.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:56.306" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:56.306" starttime="20201030 08:08:52.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:56.307" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:08:56.307" starttime="20201030 08:08:56.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:56.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:56.308" starttime="20201030 08:08:56.307"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:56.308" starttime="20201030 08:08:52.755"></status>
</kw>
<msg timestamp="20201030 08:08:56.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:56.309" starttime="20201030 08:08:52.755"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:56.309" starttime="20201030 08:08:52.754"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:56.313" level="INFO">Running command 'ozone sh bucket link 06702-target/loop3 06702-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:08:59.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:08:59.690" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:08:59.690" starttime="20201030 08:08:56.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:08:59.691" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:08:59.691" starttime="20201030 08:08:59.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:08:59.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:08:59.692" starttime="20201030 08:08:59.691"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:59.692" starttime="20201030 08:08:56.310"></status>
</kw>
<msg timestamp="20201030 08:08:59.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:08:59.692" starttime="20201030 08:08:56.310"></status>
</kw>
<status status="PASS" endtime="20201030 08:08:59.693" starttime="20201030 08:08:56.309"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:08:59.696" level="INFO">Running command 'ozone sh key list 06702-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:09:03.838" level="INFO">${rc} = 255</msg>
<msg timestamp="20201030 08:09:03.838" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:09:03.838" starttime="20201030 08:08:59.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:09:03.839" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201030 08:09:03.839" starttime="20201030 08:09:03.838"></status>
</kw>
<msg timestamp="20201030 08:09:03.840" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:09:03.840" starttime="20201030 08:08:59.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201030 08:09:03.840" starttime="20201030 08:09:03.840"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 08:09:03.841" critical="yes" starttime="20201030 08:08:49.298"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:09:03.848" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:09:03.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:09:03.850" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:09:03.850" starttime="20201030 08:09:03.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:09:03.851" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:09:03.851" starttime="20201030 08:09:03.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:09:03.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:09:03.852" starttime="20201030 08:09:03.851"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:03.852" starttime="20201030 08:09:03.845"></status>
</kw>
<msg timestamp="20201030 08:09:03.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:09:03.852" starttime="20201030 08:09:03.844"></status>
</kw>
<msg timestamp="20201030 08:09:03.853" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:09:03.853" starttime="20201030 08:09:03.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:09:03.853" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:09:03.853" starttime="20201030 08:09:03.853"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:09:03.858" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:09:03.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:09:03.881" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:09:03.881" starttime="20201030 08:09:03.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:09:03.882" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:09:03.882" starttime="20201030 08:09:03.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:09:03.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:09:03.882" starttime="20201030 08:09:03.882"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:03.883" starttime="20201030 08:09:03.855"></status>
</kw>
<msg timestamp="20201030 08:09:03.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:09:03.883" starttime="20201030 08:09:03.855"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:03.883" starttime="20201030 08:09:03.854"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:03.883" starttime="20201030 08:09:03.854"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:03.883" starttime="20201030 08:09:03.843"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:03.883" starttime="20201030 08:09:03.843"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:09:03.887" level="INFO">Running command 'ozone sh bucket link 06702-source/bucket1 06702-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:09:07.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:09:07.222" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:09:07.222" starttime="20201030 08:09:03.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:09:07.224" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:09:07.224" starttime="20201030 08:09:07.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:09:07.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:09:07.225" starttime="20201030 08:09:07.224"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:07.225" starttime="20201030 08:09:03.884"></status>
</kw>
<msg timestamp="20201030 08:09:07.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:09:07.225" starttime="20201030 08:09:03.884"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:07.225" starttime="20201030 08:09:03.884"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:09:07.230" level="INFO">Running command 'ozone sh key put 06702-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:09:12.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:09:12.886" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:09:12.886" starttime="20201030 08:09:07.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:09:12.887" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:09:12.888" starttime="20201030 08:09:12.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:09:12.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:09:12.888" starttime="20201030 08:09:12.888"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:12.889" starttime="20201030 08:09:07.226"></status>
</kw>
<msg timestamp="20201030 08:09:12.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:09:12.889" starttime="20201030 08:09:07.226"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:12.889" starttime="20201030 08:09:07.225"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201030 08:09:12.891" level="INFO">${postfix} = 60328</msg>
<status status="PASS" endtime="20201030 08:09:12.891" starttime="20201030 08:09:12.890"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201030 08:09:12.892" level="INFO">${tmpfile} = /tmp/tempkey-60328</msg>
<status status="PASS" endtime="20201030 08:09:12.892" starttime="20201030 08:09:12.891"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:09:12.896" level="INFO">Running command 'ozone sh key get -f 06702-target/link1/key3 /tmp/tempkey-60328 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:09:18.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:09:18.190" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:09:18.190" starttime="20201030 08:09:12.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:09:18.191" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:09:18.192" starttime="20201030 08:09:18.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:09:18.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:09:18.193" starttime="20201030 08:09:18.192"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:18.193" starttime="20201030 08:09:12.893"></status>
</kw>
<msg timestamp="20201030 08:09:18.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:09:18.193" starttime="20201030 08:09:12.893"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:18.193" starttime="20201030 08:09:12.892"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201030 08:09:18.198" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-60328 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:09:18.201" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201030 08:09:18.201" starttime="20201030 08:09:18.194"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:09:18.206" level="INFO">Running command 'rm -f /tmp/tempkey-60328 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:09:18.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:09:18.209" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:09:18.209" starttime="20201030 08:09:18.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:09:18.210" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:09:18.210" starttime="20201030 08:09:18.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:09:18.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:09:18.211" starttime="20201030 08:09:18.210"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:18.211" starttime="20201030 08:09:18.203"></status>
</kw>
<msg timestamp="20201030 08:09:18.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:09:18.211" starttime="20201030 08:09:18.203"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:18.212" starttime="20201030 08:09:18.202"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 08:09:18.213" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201030 08:09:18.213" starttime="20201030 08:09:18.212"></status>
</kw>
<msg timestamp="20201030 08:09:18.213" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201030 08:09:18.213" starttime="20201030 08:09:12.890"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201030 08:09:18.213" starttime="20201030 08:09:18.213"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:18.214" starttime="20201030 08:09:12.889"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 08:09:18.214" critical="yes" starttime="20201030 08:09:03.842"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:09:18.220" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:09:18.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:09:18.222" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201030 08:09:18.222" starttime="20201030 08:09:18.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:09:18.223" level="INFO">scm</msg>
<status status="PASS" endtime="20201030 08:09:18.223" starttime="20201030 08:09:18.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:09:18.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:09:18.225" starttime="20201030 08:09:18.224"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:18.225" starttime="20201030 08:09:18.217"></status>
</kw>
<msg timestamp="20201030 08:09:18.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:09:18.225" starttime="20201030 08:09:18.217"></status>
</kw>
<msg timestamp="20201030 08:09:18.225" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201030 08:09:18.225" starttime="20201030 08:09:18.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201030 08:09:18.226" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201030 08:09:18.226" starttime="20201030 08:09:18.226"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:09:18.231" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:09:18.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:09:18.259" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 08:09:18.259" starttime="20201030 08:09:18.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:09:18.260" level="INFO"></msg>
<status status="PASS" endtime="20201030 08:09:18.260" starttime="20201030 08:09:18.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:09:18.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:09:18.261" starttime="20201030 08:09:18.260"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:18.261" starttime="20201030 08:09:18.227"></status>
</kw>
<msg timestamp="20201030 08:09:18.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:09:18.262" starttime="20201030 08:09:18.227"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:18.262" starttime="20201030 08:09:18.227"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:18.262" starttime="20201030 08:09:18.226"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:18.262" starttime="20201030 08:09:18.216"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:18.262" starttime="20201030 08:09:18.215"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:09:18.267" level="INFO">Running command 'ozone sh bucket delete 06702-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:09:22.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:09:22.124" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:09:22.124" starttime="20201030 08:09:18.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:09:22.125" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201030 08:09:22.125" starttime="20201030 08:09:22.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:09:22.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:09:22.126" starttime="20201030 08:09:22.126"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:22.126" starttime="20201030 08:09:18.263"></status>
</kw>
<msg timestamp="20201030 08:09:22.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:09:22.127" starttime="20201030 08:09:18.263"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:22.127" starttime="20201030 08:09:18.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:09:22.131" level="INFO">Running command 'ozone sh bucket list 06702-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:09:25.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:09:25.661" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:09:25.661" starttime="20201030 08:09:22.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:09:25.662" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "06702-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T08:08:30.353Z",
  "modificationTime" : "2020-10-30T08:08:30.353Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "06702-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T08:06:58.648Z",
  "modificationTime" : "2020-10-30T08:06:58.648Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06702-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "06702-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T08:06:36.453Z",
  "modificationTime" : "2020-10-30T08:06:54.679Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06702-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "06702-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T08:08:23.661Z",
  "modificationTime" : "2020-10-30T08:08:23.661Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06702-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "06702-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T08:09:07.103Z",
  "modificationTime" : "2020-10-30T08:09:07.103Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06702-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "06702-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T08:08:59.511Z",
  "modificationTime" : "2020-10-30T08:08:59.511Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06702-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "06702-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T08:08:52.681Z",
  "modificationTime" : "2020-10-30T08:08:52.681Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06702-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "06702-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T08:08:56.068Z",
  "modificationTime" : "2020-10-30T08:08:56.068Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06702-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "06702-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T08:06:29.240Z",
  "modificationTime" : "2020-10-30T08:06:51.068Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06702-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "06702-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T08:06:32.594Z",
  "modificationTime" : "2020-10-30T08:06:32.594Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06702-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201030 08:09:25.663" starttime="20201030 08:09:25.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:09:25.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:09:25.663" starttime="20201030 08:09:25.663"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:25.664" starttime="20201030 08:09:22.128"></status>
</kw>
<msg timestamp="20201030 08:09:25.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:09:25.664" starttime="20201030 08:09:22.128"></status>
</kw>
<msg timestamp="20201030 08:09:25.664" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201030 08:09:25.664" starttime="20201030 08:09:22.127"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201030 08:09:25.665" starttime="20201030 08:09:25.664"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 08:09:25.670" level="INFO">Running command 'ozone sh key list 06702-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 08:09:29.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 08:09:29.291" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201030 08:09:29.291" starttime="20201030 08:09:25.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 08:09:29.292" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201030 08:09:29.292" starttime="20201030 08:09:29.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 08:09:29.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 08:09:29.293" starttime="20201030 08:09:29.292"></status>
</kw>
<status status="PASS" endtime="20201030 08:09:29.293" starttime="20201030 08:09:25.666"></status>
</kw>
<msg timestamp="20201030 08:09:29.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 08:09:29.293" starttime="20201030 08:09:25.666"></status>
</kw>
<msg timestamp="20201030 08:09:29.293" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201030 08:09:29.293" starttime="20201030 08:09:25.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201030 08:09:29.294" starttime="20201030 08:09:29.293"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 08:09:29.294" critical="yes" starttime="20201030 08:09:18.215"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201030 08:09:29.297" starttime="20201030 08:06:04.661"></status>
</suite>
<status status="PASS" elapsedtime="233336" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
