<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201030 07:42:05.300" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:29:12.523" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:29:14.636" level="INFO">${rc} = 255</msg>
<msg timestamp="20201030 07:29:14.636" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 07:29:14.636" starttime="20201030 07:29:12.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:29:14.637" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 07:29:14.637" starttime="20201030 07:29:14.636"></status>
</kw>
<msg timestamp="20201030 07:29:14.637" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 07:29:14.637" starttime="20201030 07:29:12.518"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:29:14.644" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:29:16.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:29:16.677" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:29:16.677" starttime="20201030 07:29:14.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:29:16.678" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:29:16.679" starttime="20201030 07:29:16.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:29:16.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:29:16.679" starttime="20201030 07:29:16.679"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:16.679" starttime="20201030 07:29:14.639"></status>
</kw>
<msg timestamp="20201030 07:29:16.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:29:16.680" starttime="20201030 07:29:14.639"></status>
</kw>
<msg timestamp="20201030 07:29:16.680" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201030 07:29:16.680" starttime="20201030 07:29:14.638"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201030 07:29:16.681" starttime="20201030 07:29:16.680"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:16.681" starttime="20201030 07:29:14.638"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:16.681" starttime="20201030 07:29:14.637"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:29:16.686" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:29:18.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:29:18.796" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:29:18.796" starttime="20201030 07:29:16.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:29:18.797" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:29:18.797" starttime="20201030 07:29:18.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:29:18.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:29:18.798" starttime="20201030 07:29:18.797"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:18.798" starttime="20201030 07:29:16.682"></status>
</kw>
<msg timestamp="20201030 07:29:18.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:29:18.798" starttime="20201030 07:29:16.682"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:18.798" starttime="20201030 07:29:16.682"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:18.798" starttime="20201030 07:29:16.681"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:18.798" starttime="20201030 07:29:16.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201030 07:29:18.799" starttime="20201030 07:29:18.799"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:29:18.803" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:29:21.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:29:21.097" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T07:29:18.651Z",
  "modificat...</msg>
<status status="PASS" endtime="20201030 07:29:21.097" starttime="20201030 07:29:18.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:29:21.098" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T07:29:18.651Z",
  "modificationTime" : "2020-10-30T07:29:18.651Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201030 07:29:21.098" starttime="20201030 07:29:21.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:29:21.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:29:21.099" starttime="20201030 07:29:21.098"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:21.099" starttime="20201030 07:29:18.800"></status>
</kw>
<msg timestamp="20201030 07:29:21.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:29:21.099" starttime="20201030 07:29:18.800"></status>
</kw>
<msg timestamp="20201030 07:29:21.099" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T07:29:18.651Z",
  "modificat...</msg>
<status status="PASS" endtime="20201030 07:29:21.099" starttime="20201030 07:29:18.799"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201030 07:29:21.100" starttime="20201030 07:29:21.100"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:29:21.104" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:29:21.104" starttime="20201030 07:29:21.103"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:29:21.105" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:29:21.105" starttime="20201030 07:29:21.104"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:21.105" starttime="20201030 07:29:21.103"></status>
</kw>
<msg timestamp="20201030 07:29:21.105" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:29:21.105" starttime="20201030 07:29:21.102"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:21.105" starttime="20201030 07:29:21.102"></status>
</kw>
<msg timestamp="20201030 07:29:21.105" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201030 07:29:21.105" starttime="20201030 07:29:21.101"></status>
</kw>
<msg timestamp="20201030 07:29:21.106" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201030 07:29:21.106" starttime="20201030 07:29:21.100"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:29:21.109" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:29:23.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:29:23.261" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:29:23.261" starttime="20201030 07:29:21.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:29:23.262" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:29:23.262" starttime="20201030 07:29:23.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:29:23.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:29:23.262" starttime="20201030 07:29:23.262"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:23.263" starttime="20201030 07:29:21.106"></status>
</kw>
<msg timestamp="20201030 07:29:23.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:29:23.263" starttime="20201030 07:29:21.106"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:23.263" starttime="20201030 07:29:21.106"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:29:23.268" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:29:28.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:29:28.914" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:29:28.914" starttime="20201030 07:29:23.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:29:28.915" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:29:28.915" starttime="20201030 07:29:28.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:29:28.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:29:28.916" starttime="20201030 07:29:28.916"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:28.916" starttime="20201030 07:29:23.264"></status>
</kw>
<msg timestamp="20201030 07:29:28.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:29:28.917" starttime="20201030 07:29:23.264"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:28.917" starttime="20201030 07:29:23.263"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:29:28.920" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:29:32.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:29:32.575" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:29:32.575" starttime="20201030 07:29:28.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:29:32.576" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:29:32.577" starttime="20201030 07:29:32.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:29:32.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:29:32.577" starttime="20201030 07:29:32.577"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:32.577" starttime="20201030 07:29:28.918"></status>
</kw>
<msg timestamp="20201030 07:29:32.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:29:32.578" starttime="20201030 07:29:28.918"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:32.578" starttime="20201030 07:29:28.917"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:29:32.582" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:29:36.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:29:36.358" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:29:36.358" starttime="20201030 07:29:32.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:29:36.359" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:29:36.359" starttime="20201030 07:29:36.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:29:36.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:29:36.360" starttime="20201030 07:29:36.360"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:36.360" starttime="20201030 07:29:32.579"></status>
</kw>
<msg timestamp="20201030 07:29:36.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:29:36.361" starttime="20201030 07:29:32.579"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:36.361" starttime="20201030 07:29:32.578"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 07:29:36.361" critical="yes" starttime="20201030 07:29:12.517"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:29:36.367" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:29:36.367" starttime="20201030 07:29:36.366"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:29:36.368" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:29:36.368" starttime="20201030 07:29:36.367"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:36.368" starttime="20201030 07:29:36.366"></status>
</kw>
<msg timestamp="20201030 07:29:36.368" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:29:36.368" starttime="20201030 07:29:36.365"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:36.368" starttime="20201030 07:29:36.365"></status>
</kw>
<msg timestamp="20201030 07:29:36.368" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 07:29:36.368" starttime="20201030 07:29:36.364"></status>
</kw>
<msg timestamp="20201030 07:29:36.369" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 07:29:36.369" starttime="20201030 07:29:36.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:29:36.372" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:29:38.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:29:38.547" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:29:38.547" starttime="20201030 07:29:36.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:29:38.548" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:29:38.548" starttime="20201030 07:29:38.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:29:38.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:29:38.549" starttime="20201030 07:29:38.549"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:38.549" starttime="20201030 07:29:36.369"></status>
</kw>
<msg timestamp="20201030 07:29:38.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:29:38.550" starttime="20201030 07:29:36.369"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:38.550" starttime="20201030 07:29:36.369"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:29:38.554" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:29:40.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:29:40.597" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:29:40.597" starttime="20201030 07:29:38.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:29:40.598" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:29:40.598" starttime="20201030 07:29:40.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:29:40.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:29:40.599" starttime="20201030 07:29:40.598"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:40.599" starttime="20201030 07:29:38.551"></status>
</kw>
<msg timestamp="20201030 07:29:40.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:29:40.599" starttime="20201030 07:29:38.550"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:40.599" starttime="20201030 07:29:38.550"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 07:29:40.600" critical="yes" starttime="20201030 07:29:36.362"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201030 07:29:40.601" starttime="20201030 07:29:12.465"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 07:31:11.182" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 07:31:11.182" starttime="20201030 07:31:11.182"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:31:11.183" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 07:31:11.183" starttime="20201030 07:31:11.182"></status>
</kw>
<status status="PASS" endtime="20201030 07:31:11.183" starttime="20201030 07:31:11.182"></status>
</kw>
<msg timestamp="20201030 07:31:11.183" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 07:31:11.183" starttime="20201030 07:31:11.181"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 07:31:11.184" starttime="20201030 07:31:11.184"></status>
</kw>
<msg timestamp="20201030 07:31:11.184" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 07:31:11.184" starttime="20201030 07:31:11.183"></status>
</kw>
<status status="PASS" endtime="20201030 07:31:11.184" starttime="20201030 07:31:11.181"></status>
</kw>
<msg timestamp="20201030 07:31:11.184" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 07:31:11.184" starttime="20201030 07:31:11.180"></status>
</kw>
<msg timestamp="20201030 07:31:11.185" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 07:31:11.185" starttime="20201030 07:31:11.179"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 07:31:11.185" level="INFO">${random} = 35565</msg>
<status status="PASS" endtime="20201030 07:31:11.185" starttime="20201030 07:31:11.185"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:31:11.192" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-35565 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:31:14.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:31:14.369" level="INFO">${output} = 2020-10-30 07:31:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:31:13 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 ...</msg>
<status status="PASS" endtime="20201030 07:31:14.369" starttime="20201030 07:31:11.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:31:14.370" level="INFO">2020-10-30 07:31:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:31:13 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 07:31:13 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-30 07:31:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 07:31:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-28B5BC77BCE8-&gt;60d34cf3-dcda-4a22-a860-6d75bfe3ab7f
2020-10-30 07:31:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201030 07:31:14.370" starttime="20201030 07:31:14.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:31:14.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:31:14.371" starttime="20201030 07:31:14.370"></status>
</kw>
<status status="PASS" endtime="20201030 07:31:14.371" starttime="20201030 07:31:11.186"></status>
</kw>
<msg timestamp="20201030 07:31:14.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:31:14.371" starttime="20201030 07:31:11.186"></status>
</kw>
<msg timestamp="20201030 07:31:14.371" level="INFO">${result} = 2020-10-30 07:31:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:31:13 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 ...</msg>
<status status="PASS" endtime="20201030 07:31:14.371" starttime="20201030 07:31:11.185"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:31:14.376" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:31:16.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:31:16.176" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-30 07:31 ofs://om/volume1/bucket1/ozone-35565
-rw-...</msg>
<status status="PASS" endtime="20201030 07:31:16.176" starttime="20201030 07:31:14.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:31:16.177" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-30 07:31 ofs://om/volume1/bucket1/ozone-35565
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-30 07:29 ofs://om/volume1/bucket1/ozone-43298
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:29 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:30 ofs://om/volume1/bucket1/wordcount-45.txt</msg>
<status status="PASS" endtime="20201030 07:31:16.177" starttime="20201030 07:31:16.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:31:16.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:31:16.178" starttime="20201030 07:31:16.177"></status>
</kw>
<status status="PASS" endtime="20201030 07:31:16.178" starttime="20201030 07:31:14.372"></status>
</kw>
<msg timestamp="20201030 07:31:16.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:31:16.178" starttime="20201030 07:31:14.372"></status>
</kw>
<msg timestamp="20201030 07:31:16.179" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-30 07:31 ofs://om/volume1/bucket1/ozone-35565
-rw-...</msg>
<status status="PASS" endtime="20201030 07:31:16.179" starttime="20201030 07:31:14.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201030 07:31:16.179" starttime="20201030 07:31:16.179"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201030 07:31:16.179" critical="yes" starttime="20201030 07:31:11.178"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201030 07:31:16.180" starttime="20201030 07:31:11.131"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:29:45.418" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:29:45.418" starttime="20201030 07:29:45.418"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:29:45.419" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:29:45.419" starttime="20201030 07:29:45.419"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:45.419" starttime="20201030 07:29:45.418"></status>
</kw>
<msg timestamp="20201030 07:29:45.419" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:29:45.419" starttime="20201030 07:29:45.417"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:45.420" starttime="20201030 07:29:45.417"></status>
</kw>
<msg timestamp="20201030 07:29:45.420" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 07:29:45.420" starttime="20201030 07:29:45.416"></status>
</kw>
<msg timestamp="20201030 07:29:45.420" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 07:29:45.420" starttime="20201030 07:29:45.415"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 07:29:45.420" level="INFO">${random} = 43298</msg>
<status status="PASS" endtime="20201030 07:29:45.420" starttime="20201030 07:29:45.420"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:29:45.425" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-43298 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:29:48.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:29:48.841" level="INFO">${output} = 2020-10-30 07:29:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:29:47 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 ...</msg>
<status status="PASS" endtime="20201030 07:29:48.841" starttime="20201030 07:29:45.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:29:48.842" level="INFO">2020-10-30 07:29:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:29:47 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 07:29:47 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-30 07:29:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 07:29:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-03163AFA19F5-&gt;60d34cf3-dcda-4a22-a860-6d75bfe3ab7f
2020-10-30 07:29:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201030 07:29:48.842" starttime="20201030 07:29:48.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:29:48.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:29:48.842" starttime="20201030 07:29:48.842"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:48.843" starttime="20201030 07:29:45.421"></status>
</kw>
<msg timestamp="20201030 07:29:48.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:29:48.843" starttime="20201030 07:29:45.421"></status>
</kw>
<msg timestamp="20201030 07:29:48.843" level="INFO">${result} = 2020-10-30 07:29:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:29:47 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 ...</msg>
<status status="PASS" endtime="20201030 07:29:48.843" starttime="20201030 07:29:45.421"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:29:48.846" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:29:50.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:29:50.542" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-30 07:29 o3fs://bucket1.volume1.om/ozone-43298
dr...</msg>
<status status="PASS" endtime="20201030 07:29:50.542" starttime="20201030 07:29:48.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:29:50.543" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-30 07:29 o3fs://bucket1.volume1.om/ozone-43298
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:29 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 07:29:50.543" starttime="20201030 07:29:50.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:29:50.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:29:50.544" starttime="20201030 07:29:50.543"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:50.544" starttime="20201030 07:29:48.844"></status>
</kw>
<msg timestamp="20201030 07:29:50.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:29:50.544" starttime="20201030 07:29:48.844"></status>
</kw>
<msg timestamp="20201030 07:29:50.544" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-30 07:29 o3fs://bucket1.volume1.om/ozone-43298
dr...</msg>
<status status="PASS" endtime="20201030 07:29:50.544" starttime="20201030 07:29:48.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201030 07:29:50.545" starttime="20201030 07:29:50.544"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201030 07:29:50.545" critical="yes" starttime="20201030 07:29:45.414"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201030 07:29:50.546" starttime="20201030 07:29:45.367"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:31:20.772" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:31:20.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:31:20.777" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 07:31:20.777" starttime="20201030 07:31:20.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:31:20.778" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 07:31:20.778" starttime="20201030 07:31:20.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:31:20.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:31:20.778" starttime="20201030 07:31:20.778"></status>
</kw>
<status status="PASS" endtime="20201030 07:31:20.779" starttime="20201030 07:31:20.767"></status>
</kw>
<msg timestamp="20201030 07:31:20.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:31:20.779" starttime="20201030 07:31:20.766"></status>
</kw>
<msg timestamp="20201030 07:31:20.779" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 07:31:20.779" starttime="20201030 07:31:20.766"></status>
</kw>
<msg timestamp="20201030 07:31:20.779" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 07:31:20.779" starttime="20201030 07:31:20.766"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 07:31:20.782" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 07:31:20.782" starttime="20201030 07:31:20.782"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:31:20.783" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 07:31:20.783" starttime="20201030 07:31:20.782"></status>
</kw>
<status status="PASS" endtime="20201030 07:31:20.783" starttime="20201030 07:31:20.782"></status>
</kw>
<msg timestamp="20201030 07:31:20.783" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 07:31:20.783" starttime="20201030 07:31:20.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 07:31:20.784" starttime="20201030 07:31:20.784"></status>
</kw>
<msg timestamp="20201030 07:31:20.784" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 07:31:20.784" starttime="20201030 07:31:20.783"></status>
</kw>
<status status="PASS" endtime="20201030 07:31:20.785" starttime="20201030 07:31:20.781"></status>
</kw>
<msg timestamp="20201030 07:31:20.785" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 07:31:20.785" starttime="20201030 07:31:20.780"></status>
</kw>
<msg timestamp="20201030 07:31:20.785" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 07:31:20.785" starttime="20201030 07:31:20.779"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:31:20.788" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:31:57.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:31:57.943" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 07:31:22 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:31:22 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201030 07:31:57.943" starttime="20201030 07:31:20.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:31:57.944" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-30 07:31:22 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:31:22 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 07:31:22 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-30 07:31:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 07:31:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-09D44CCEB9D0-&gt;60d34cf3-dcda-4a22-a860-6d75bfe3ab7f
2020-10-30 07:31:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-30 07:31:26 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-10-30 07:31:26 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 07:31:26 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-30 07:31:26 INFO  JobSubmitter:198 - number of splits:3
2020-10-30 07:31:26 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604042920120_0003
2020-10-30 07:31:26 INFO  YarnClientImpl:273 - Submitted application application_1604042920120_0003
2020-10-30 07:31:26 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604042920120_0003/
2020-10-30 07:31:26 INFO  Job:1339 - Running job: job_1604042920120_0003
2020-10-30 07:31:34 INFO  Job:1360 - Job job_1604042920120_0003 running in uber mode : false
2020-10-30 07:31:34 INFO  Job:1367 -  map 0% reduce 0%
2020-10-30 07:31:40 INFO  Job:1367 -  map 33% reduce 0%
2020-10-30 07:31:45 INFO  Job:1367 -  map 67% reduce 0%
2020-10-30 07:31:50 INFO  Job:1367 -  map 100% reduce 0%
2020-10-30 07:31:54 INFO  Job:1367 -  map 100% reduce 100%
2020-10-30 07:31:57 INFO  Job:1378 - Job job_1604042920120_0003 completed successfully
2020-10-30 07:31:57 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615229
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36712
		Total time spent by all reduces in occupied slots (ms)=14032
		Total time spent by all map tasks (ms)=9178
		Total time spent by all reduce tasks (ms)=3508
		Total vcore-milliseconds taken by all map tasks=9178
		Total vcore-milliseconds taken by all reduce tasks=3508
		Total megabyte-milliseconds taken by all map tasks=37593088
		Total megabyte-milliseconds taken by all reduce tasks=14368768
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=565
		CPU time spent (ms)=6380
		Physical memory (bytes) snapshot=1106784256
		Virtual memory (bytes) snapshot=16036724736
		Total committed heap usage (bytes)=1054343168
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.312 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201030 07:31:57.944" starttime="20201030 07:31:57.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:31:57.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:31:57.945" starttime="20201030 07:31:57.945"></status>
</kw>
<status status="PASS" endtime="20201030 07:31:57.945" starttime="20201030 07:31:20.786"></status>
</kw>
<msg timestamp="20201030 07:31:57.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:31:57.945" starttime="20201030 07:31:20.785"></status>
</kw>
<msg timestamp="20201030 07:31:57.946" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 07:31:22 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:31:22 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201030 07:31:57.946" starttime="20201030 07:31:20.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 07:31:57.946" starttime="20201030 07:31:57.946"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 07:31:57.947" critical="yes" starttime="20201030 07:31:20.765"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:31:57.953" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:31:57.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:31:57.958" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 07:31:57.958" starttime="20201030 07:31:57.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:31:57.959" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 07:31:57.959" starttime="20201030 07:31:57.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:31:57.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:31:57.960" starttime="20201030 07:31:57.959"></status>
</kw>
<status status="PASS" endtime="20201030 07:31:57.960" starttime="20201030 07:31:57.949"></status>
</kw>
<msg timestamp="20201030 07:31:57.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:31:57.960" starttime="20201030 07:31:57.949"></status>
</kw>
<msg timestamp="20201030 07:31:57.960" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 07:31:57.960" starttime="20201030 07:31:57.948"></status>
</kw>
<msg timestamp="20201030 07:31:57.960" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 07:31:57.960" starttime="20201030 07:31:57.948"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 07:31:57.961" level="INFO">${random} = 94</msg>
<status status="PASS" endtime="20201030 07:31:57.961" starttime="20201030 07:31:57.961"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 07:31:57.964" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 07:31:57.964" starttime="20201030 07:31:57.964"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:31:57.965" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 07:31:57.965" starttime="20201030 07:31:57.965"></status>
</kw>
<status status="PASS" endtime="20201030 07:31:57.965" starttime="20201030 07:31:57.964"></status>
</kw>
<msg timestamp="20201030 07:31:57.965" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 07:31:57.965" starttime="20201030 07:31:57.963"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 07:31:57.966" starttime="20201030 07:31:57.966"></status>
</kw>
<msg timestamp="20201030 07:31:57.966" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 07:31:57.966" starttime="20201030 07:31:57.965"></status>
</kw>
<status status="PASS" endtime="20201030 07:31:57.966" starttime="20201030 07:31:57.962"></status>
</kw>
<msg timestamp="20201030 07:31:57.967" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 07:31:57.967" starttime="20201030 07:31:57.962"></status>
</kw>
<msg timestamp="20201030 07:31:57.967" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 07:31:57.967" starttime="20201030 07:31:57.961"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 07:31:57.969" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 07:31:57.969" starttime="20201030 07:31:57.969"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:31:57.970" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 07:31:57.970" starttime="20201030 07:31:57.970"></status>
</kw>
<status status="PASS" endtime="20201030 07:31:57.970" starttime="20201030 07:31:57.969"></status>
</kw>
<msg timestamp="20201030 07:31:57.970" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 07:31:57.970" starttime="20201030 07:31:57.968"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:31:57.972" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201030 07:31:57.972" starttime="20201030 07:31:57.971"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:31:57.972" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201030 07:31:57.972" starttime="20201030 07:31:57.972"></status>
</kw>
<status status="PASS" endtime="20201030 07:31:57.972" starttime="20201030 07:31:57.971"></status>
</kw>
<msg timestamp="20201030 07:31:57.973" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201030 07:31:57.973" starttime="20201030 07:31:57.970"></status>
</kw>
<status status="PASS" endtime="20201030 07:31:57.973" starttime="20201030 07:31:57.968"></status>
</kw>
<msg timestamp="20201030 07:31:57.973" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201030 07:31:57.973" starttime="20201030 07:31:57.967"></status>
</kw>
<msg timestamp="20201030 07:31:57.973" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201030 07:31:57.973" starttime="20201030 07:31:57.967"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 07:31:57.976" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 07:31:57.976" starttime="20201030 07:31:57.975"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:31:57.976" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 07:31:57.976" starttime="20201030 07:31:57.976"></status>
</kw>
<status status="PASS" endtime="20201030 07:31:57.977" starttime="20201030 07:31:57.975"></status>
</kw>
<msg timestamp="20201030 07:31:57.977" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 07:31:57.977" starttime="20201030 07:31:57.975"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:31:57.978" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201030 07:31:57.978" starttime="20201030 07:31:57.977"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:31:57.978" level="INFO">${result} = /wordcount-94.txt</msg>
<status status="PASS" endtime="20201030 07:31:57.978" starttime="20201030 07:31:57.978"></status>
</kw>
<status status="PASS" endtime="20201030 07:31:57.978" starttime="20201030 07:31:57.977"></status>
</kw>
<msg timestamp="20201030 07:31:57.979" level="INFO">${path_with_leading} = /wordcount-94.txt</msg>
<status status="PASS" endtime="20201030 07:31:57.979" starttime="20201030 07:31:57.977"></status>
</kw>
<status status="PASS" endtime="20201030 07:31:57.979" starttime="20201030 07:31:57.974"></status>
</kw>
<msg timestamp="20201030 07:31:57.979" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-94.txt</msg>
<status status="PASS" endtime="20201030 07:31:57.979" starttime="20201030 07:31:57.974"></status>
</kw>
<msg timestamp="20201030 07:31:57.979" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-94.txt</msg>
<status status="PASS" endtime="20201030 07:31:57.979" starttime="20201030 07:31:57.973"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:31:57.983" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-94.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:32:32.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:32:32.308" level="INFO">${output} = 2020-10-30 07:31:59 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-10-30 07:32:00 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201030 07:32:32.308" starttime="20201030 07:31:57.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:32:32.309" level="INFO">2020-10-30 07:31:59 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-10-30 07:32:00 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 07:32:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:32:00 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 07:32:00 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-30 07:32:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 07:32:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EEA47FFDF6F4-&gt;60d34cf3-dcda-4a22-a860-6d75bfe3ab7f
2020-10-30 07:32:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 07:32:01 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-30 07:32:03 INFO  JobSubmitter:198 - number of splits:3
2020-10-30 07:32:04 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604042920120_0004
2020-10-30 07:32:04 INFO  YarnClientImpl:273 - Submitted application application_1604042920120_0004
2020-10-30 07:32:04 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604042920120_0004/
2020-10-30 07:32:04 INFO  Job:1339 - Running job: job_1604042920120_0004
2020-10-30 07:32:10 INFO  Job:1360 - Job job_1604042920120_0004 running in uber mode : false
2020-10-30 07:32:10 INFO  Job:1367 -  map 0% reduce 0%
2020-10-30 07:32:17 INFO  Job:1367 -  map 33% reduce 0%
2020-10-30 07:32:21 INFO  Job:1367 -  map 67% reduce 0%
2020-10-30 07:32:26 INFO  Job:1367 -  map 100% reduce 0%
2020-10-30 07:32:31 INFO  Job:1367 -  map 100% reduce 100%
2020-10-30 07:32:31 INFO  Job:1378 - Job job_1604042920120_0004 completed successfully
2020-10-30 07:32:31 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37896
		Total time spent by all reduces in occupied slots (ms)=13716
		Total time spent by all map tasks (ms)=9474
		Total time spent by all reduce tasks (ms)=3429
		Total vcore-milliseconds taken by all map tasks=9474
		Total vcore-milliseconds taken by all reduce tasks=3429
		Total megabyte-milliseconds taken by all map tasks=38805504
		Total megabyte-milliseconds taken by all reduce tasks=14045184
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=592
		CPU time spent (ms)=7020
		Physical memory (bytes) snapshot=1140150272
		Virtual memory (bytes) snapshot=16069885952
		Total committed heap usage (bytes)=1055916032
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201030 07:32:32.310" starttime="20201030 07:32:32.309"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:32:32.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:32:32.310" starttime="20201030 07:32:32.310"></status>
</kw>
<status status="PASS" endtime="20201030 07:32:32.310" starttime="20201030 07:31:57.980"></status>
</kw>
<msg timestamp="20201030 07:32:32.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:32:32.311" starttime="20201030 07:31:57.980"></status>
</kw>
<msg timestamp="20201030 07:32:32.311" level="INFO">${output} = 2020-10-30 07:31:59 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-10-30 07:32:00 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201030 07:32:32.311" starttime="20201030 07:31:57.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201030 07:32:32.312" starttime="20201030 07:32:32.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 07:32:32.312" starttime="20201030 07:32:32.312"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 07:32:32.312" critical="yes" starttime="20201030 07:31:57.947"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201030 07:32:32.313" starttime="20201030 07:31:20.714"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:29:55.147" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:29:55.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:29:55.150" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 07:29:55.150" starttime="20201030 07:29:55.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:29:55.151" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 07:29:55.151" starttime="20201030 07:29:55.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:29:55.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:29:55.152" starttime="20201030 07:29:55.152"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:55.152" starttime="20201030 07:29:55.141"></status>
</kw>
<msg timestamp="20201030 07:29:55.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:29:55.153" starttime="20201030 07:29:55.141"></status>
</kw>
<msg timestamp="20201030 07:29:55.153" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 07:29:55.153" starttime="20201030 07:29:55.140"></status>
</kw>
<msg timestamp="20201030 07:29:55.153" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 07:29:55.153" starttime="20201030 07:29:55.140"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:29:55.156" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:29:55.156" starttime="20201030 07:29:55.155"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:29:55.157" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:29:55.157" starttime="20201030 07:29:55.156"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:55.157" starttime="20201030 07:29:55.155"></status>
</kw>
<msg timestamp="20201030 07:29:55.157" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:29:55.157" starttime="20201030 07:29:55.155"></status>
</kw>
<status status="PASS" endtime="20201030 07:29:55.157" starttime="20201030 07:29:55.154"></status>
</kw>
<msg timestamp="20201030 07:29:55.157" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 07:29:55.157" starttime="20201030 07:29:55.154"></status>
</kw>
<msg timestamp="20201030 07:29:55.157" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 07:29:55.157" starttime="20201030 07:29:55.153"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:29:55.162" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:30:31.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:30:31.547" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 07:29:57 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:29:57 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201030 07:30:31.547" starttime="20201030 07:29:55.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:30:31.548" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-30 07:29:57 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:29:57 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 07:29:57 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-30 07:29:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 07:29:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-08BE336143BC-&gt;60d34cf3-dcda-4a22-a860-6d75bfe3ab7f
2020-10-30 07:29:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-30 07:29:58 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-10-30 07:29:58 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-30 07:29:58 INFO  JobSubmitter:198 - number of splits:3
2020-10-30 07:29:59 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604042920120_0001
2020-10-30 07:29:59 INFO  YarnClientImpl:273 - Submitted application application_1604042920120_0001
2020-10-30 07:29:59 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604042920120_0001/
2020-10-30 07:29:59 INFO  Job:1339 - Running job: job_1604042920120_0001
2020-10-30 07:30:09 INFO  Job:1360 - Job job_1604042920120_0001 running in uber mode : false
2020-10-30 07:30:09 INFO  Job:1367 -  map 0% reduce 0%
2020-10-30 07:30:15 INFO  Job:1367 -  map 33% reduce 0%
2020-10-30 07:30:20 INFO  Job:1367 -  map 67% reduce 0%
2020-10-30 07:30:25 INFO  Job:1367 -  map 100% reduce 0%
2020-10-30 07:30:29 INFO  Job:1367 -  map 100% reduce 100%
2020-10-30 07:30:30 INFO  Job:1378 - Job job_1604042920120_0001 completed successfully
2020-10-30 07:30:30 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615465
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37064
		Total time spent by all reduces in occupied slots (ms)=14300
		Total time spent by all map tasks (ms)=9266
		Total time spent by all reduce tasks (ms)=3575
		Total vcore-milliseconds taken by all map tasks=9266
		Total vcore-milliseconds taken by all reduce tasks=3575
		Total megabyte-milliseconds taken by all map tasks=37953536
		Total megabyte-milliseconds taken by all reduce tasks=14643200
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=589
		CPU time spent (ms)=6180
		Physical memory (bytes) snapshot=1124139008
		Virtual memory (bytes) snapshot=16052862976
		Total committed heap usage (bytes)=1003487232
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.663 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201030 07:30:31.548" starttime="20201030 07:30:31.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:30:31.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:30:31.549" starttime="20201030 07:30:31.549"></status>
</kw>
<status status="PASS" endtime="20201030 07:30:31.549" starttime="20201030 07:29:55.158"></status>
</kw>
<msg timestamp="20201030 07:30:31.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:30:31.549" starttime="20201030 07:29:55.158"></status>
</kw>
<msg timestamp="20201030 07:30:31.550" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 07:29:57 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:29:57 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201030 07:30:31.550" starttime="20201030 07:29:55.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 07:30:31.550" starttime="20201030 07:30:31.550"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 07:30:31.551" critical="yes" starttime="20201030 07:29:55.140"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:30:31.555" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:30:31.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:30:31.560" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 07:30:31.560" starttime="20201030 07:30:31.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:30:31.561" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 07:30:31.561" starttime="20201030 07:30:31.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:30:31.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:30:31.562" starttime="20201030 07:30:31.561"></status>
</kw>
<status status="PASS" endtime="20201030 07:30:31.562" starttime="20201030 07:30:31.552"></status>
</kw>
<msg timestamp="20201030 07:30:31.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:30:31.562" starttime="20201030 07:30:31.552"></status>
</kw>
<msg timestamp="20201030 07:30:31.562" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 07:30:31.562" starttime="20201030 07:30:31.552"></status>
</kw>
<msg timestamp="20201030 07:30:31.562" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201030 07:30:31.562" starttime="20201030 07:30:31.551"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 07:30:31.563" level="INFO">${random} = 45</msg>
<status status="PASS" endtime="20201030 07:30:31.563" starttime="20201030 07:30:31.563"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:30:31.566" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:30:31.566" starttime="20201030 07:30:31.566"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:30:31.567" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:30:31.567" starttime="20201030 07:30:31.566"></status>
</kw>
<status status="PASS" endtime="20201030 07:30:31.567" starttime="20201030 07:30:31.565"></status>
</kw>
<msg timestamp="20201030 07:30:31.567" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:30:31.567" starttime="20201030 07:30:31.565"></status>
</kw>
<status status="PASS" endtime="20201030 07:30:31.567" starttime="20201030 07:30:31.564"></status>
</kw>
<msg timestamp="20201030 07:30:31.567" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 07:30:31.567" starttime="20201030 07:30:31.564"></status>
</kw>
<msg timestamp="20201030 07:30:31.567" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 07:30:31.568" starttime="20201030 07:30:31.563"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:30:31.570" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:30:31.570" starttime="20201030 07:30:31.570"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:30:31.571" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:30:31.571" starttime="20201030 07:30:31.570"></status>
</kw>
<status status="PASS" endtime="20201030 07:30:31.571" starttime="20201030 07:30:31.570"></status>
</kw>
<msg timestamp="20201030 07:30:31.571" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:30:31.571" starttime="20201030 07:30:31.569"></status>
</kw>
<status status="PASS" endtime="20201030 07:30:31.571" starttime="20201030 07:30:31.569"></status>
</kw>
<msg timestamp="20201030 07:30:31.571" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201030 07:30:31.571" starttime="20201030 07:30:31.568"></status>
</kw>
<msg timestamp="20201030 07:30:31.571" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201030 07:30:31.572" starttime="20201030 07:30:31.568"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:30:31.574" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:30:31.574" starttime="20201030 07:30:31.574"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:30:31.575" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:30:31.575" starttime="20201030 07:30:31.574"></status>
</kw>
<status status="PASS" endtime="20201030 07:30:31.575" starttime="20201030 07:30:31.573"></status>
</kw>
<msg timestamp="20201030 07:30:31.575" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:30:31.575" starttime="20201030 07:30:31.573"></status>
</kw>
<status status="PASS" endtime="20201030 07:30:31.575" starttime="20201030 07:30:31.573"></status>
</kw>
<msg timestamp="20201030 07:30:31.575" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-45.txt</msg>
<status status="PASS" endtime="20201030 07:30:31.575" starttime="20201030 07:30:31.572"></status>
</kw>
<msg timestamp="20201030 07:30:31.575" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-45.txt</msg>
<status status="PASS" endtime="20201030 07:30:31.575" starttime="20201030 07:30:31.572"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:30:31.578" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-45.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:31:06.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:31:06.573" level="INFO">${output} = 2020-10-30 07:30:33 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-10-30 07:30:33 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201030 07:31:06.573" starttime="20201030 07:30:31.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:31:06.574" level="INFO">2020-10-30 07:30:33 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-10-30 07:30:33 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 07:30:33 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:30:33 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-30 07:30:33 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-30 07:30:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 07:30:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DA68CE23E95B-&gt;60d34cf3-dcda-4a22-a860-6d75bfe3ab7f
2020-10-30 07:30:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 07:30:34 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-30 07:30:34 INFO  JobSubmitter:198 - number of splits:3
2020-10-30 07:30:37 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604042920120_0002
2020-10-30 07:30:37 INFO  YarnClientImpl:273 - Submitted application application_1604042920120_0002
2020-10-30 07:30:37 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604042920120_0002/
2020-10-30 07:30:37 INFO  Job:1339 - Running job: job_1604042920120_0002
2020-10-30 07:30:44 INFO  Job:1360 - Job job_1604042920120_0002 running in uber mode : false
2020-10-30 07:30:44 INFO  Job:1367 -  map 0% reduce 0%
2020-10-30 07:30:50 INFO  Job:1367 -  map 33% reduce 0%
2020-10-30 07:30:56 INFO  Job:1367 -  map 67% reduce 0%
2020-10-30 07:31:01 INFO  Job:1367 -  map 100% reduce 0%
2020-10-30 07:31:05 INFO  Job:1367 -  map 100% reduce 100%
2020-10-30 07:31:06 INFO  Job:1378 - Job job_1604042920120_0002 completed successfully
2020-10-30 07:31:06 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38452
		Total time spent by all reduces in occupied slots (ms)=14164
		Total time spent by all map tasks (ms)=9613
		Total time spent by all reduce tasks (ms)=3541
		Total vcore-milliseconds taken by all map tasks=9613
		Total vcore-milliseconds taken by all reduce tasks=3541
		Total megabyte-milliseconds taken by all map tasks=39374848
		Total megabyte-milliseconds taken by all reduce tasks=14503936
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=582
		CPU time spent (ms)=7190
		Physical memory (bytes) snapshot=1161891840
		Virtual memory (bytes) snapshot=16079740928
		Total committed heap usage (bytes)=1055916032
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201030 07:31:06.575" starttime="20201030 07:31:06.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:31:06.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:31:06.575" starttime="20201030 07:31:06.575"></status>
</kw>
<status status="PASS" endtime="20201030 07:31:06.576" starttime="20201030 07:30:31.576"></status>
</kw>
<msg timestamp="20201030 07:31:06.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:31:06.576" starttime="20201030 07:30:31.576"></status>
</kw>
<msg timestamp="20201030 07:31:06.576" level="INFO">${output} = 2020-10-30 07:30:33 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-10-30 07:30:33 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201030 07:31:06.576" starttime="20201030 07:30:31.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201030 07:31:06.577" starttime="20201030 07:31:06.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 07:31:06.577" starttime="20201030 07:31:06.577"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 07:31:06.578" critical="yes" starttime="20201030 07:30:31.551"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201030 07:31:06.579" starttime="20201030 07:29:55.093"></status>
</suite>
<status status="PASS" elapsedtime="181449" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:33:36.022" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:33:38.164" level="INFO">${rc} = 255</msg>
<msg timestamp="20201030 07:33:38.164" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 07:33:38.164" starttime="20201030 07:33:36.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:33:38.165" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 07:33:38.165" starttime="20201030 07:33:38.164"></status>
</kw>
<msg timestamp="20201030 07:33:38.165" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 07:33:38.165" starttime="20201030 07:33:36.016"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:33:38.171" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:33:40.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:33:40.106" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:33:40.106" starttime="20201030 07:33:38.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:33:40.107" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:33:40.107" starttime="20201030 07:33:40.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:33:40.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:33:40.108" starttime="20201030 07:33:40.107"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:40.108" starttime="20201030 07:33:38.167"></status>
</kw>
<msg timestamp="20201030 07:33:40.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:33:40.108" starttime="20201030 07:33:38.167"></status>
</kw>
<msg timestamp="20201030 07:33:40.109" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201030 07:33:40.109" starttime="20201030 07:33:38.166"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201030 07:33:40.109" starttime="20201030 07:33:40.109"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:40.109" starttime="20201030 07:33:38.166"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:40.109" starttime="20201030 07:33:38.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:33:40.114" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:33:42.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:33:42.146" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:33:42.146" starttime="20201030 07:33:40.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:33:42.147" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:33:42.147" starttime="20201030 07:33:42.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:33:42.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:33:42.148" starttime="20201030 07:33:42.148"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:42.148" starttime="20201030 07:33:40.111"></status>
</kw>
<msg timestamp="20201030 07:33:42.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:33:42.149" starttime="20201030 07:33:40.111"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:42.149" starttime="20201030 07:33:40.110"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:42.149" starttime="20201030 07:33:40.110"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:42.149" starttime="20201030 07:33:40.110"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201030 07:33:42.149" starttime="20201030 07:33:42.149"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:33:42.159" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:33:44.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:33:44.289" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T07:33:42.021Z",
  "modificat...</msg>
<status status="PASS" endtime="20201030 07:33:44.289" starttime="20201030 07:33:42.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:33:44.290" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T07:33:42.021Z",
  "modificationTime" : "2020-10-30T07:33:42.021Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201030 07:33:44.290" starttime="20201030 07:33:44.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:33:44.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:33:44.291" starttime="20201030 07:33:44.290"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:44.291" starttime="20201030 07:33:42.151"></status>
</kw>
<msg timestamp="20201030 07:33:44.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:33:44.291" starttime="20201030 07:33:42.150"></status>
</kw>
<msg timestamp="20201030 07:33:44.292" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T07:33:42.021Z",
  "modificat...</msg>
<status status="PASS" endtime="20201030 07:33:44.292" starttime="20201030 07:33:42.150"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201030 07:33:44.292" starttime="20201030 07:33:44.292"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:33:44.296" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:33:44.296" starttime="20201030 07:33:44.295"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:33:44.297" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:33:44.297" starttime="20201030 07:33:44.296"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:44.297" starttime="20201030 07:33:44.295"></status>
</kw>
<msg timestamp="20201030 07:33:44.297" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:33:44.297" starttime="20201030 07:33:44.295"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:44.297" starttime="20201030 07:33:44.294"></status>
</kw>
<msg timestamp="20201030 07:33:44.297" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201030 07:33:44.297" starttime="20201030 07:33:44.293"></status>
</kw>
<msg timestamp="20201030 07:33:44.298" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201030 07:33:44.298" starttime="20201030 07:33:44.292"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:33:44.301" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:33:46.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:33:46.365" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:33:46.365" starttime="20201030 07:33:44.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:33:46.366" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:33:46.366" starttime="20201030 07:33:46.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:33:46.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:33:46.367" starttime="20201030 07:33:46.366"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:46.367" starttime="20201030 07:33:44.298"></status>
</kw>
<msg timestamp="20201030 07:33:46.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:33:46.367" starttime="20201030 07:33:44.298"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:46.368" starttime="20201030 07:33:44.298"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:33:46.371" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:33:51.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:33:51.883" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:33:51.883" starttime="20201030 07:33:46.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:33:51.884" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:33:51.884" starttime="20201030 07:33:51.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:33:51.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:33:51.885" starttime="20201030 07:33:51.885"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:51.885" starttime="20201030 07:33:46.369"></status>
</kw>
<msg timestamp="20201030 07:33:51.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:33:51.886" starttime="20201030 07:33:46.368"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:51.886" starttime="20201030 07:33:46.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:33:51.891" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:33:55.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:33:55.650" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:33:55.650" starttime="20201030 07:33:51.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:33:55.651" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:33:55.651" starttime="20201030 07:33:55.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:33:55.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:33:55.652" starttime="20201030 07:33:55.652"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:55.653" starttime="20201030 07:33:51.887"></status>
</kw>
<msg timestamp="20201030 07:33:55.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:33:55.653" starttime="20201030 07:33:51.887"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:55.653" starttime="20201030 07:33:51.886"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:33:55.657" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:33:59.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:33:59.486" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:33:59.486" starttime="20201030 07:33:55.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:33:59.487" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:33:59.487" starttime="20201030 07:33:59.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:33:59.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:33:59.488" starttime="20201030 07:33:59.487"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:59.488" starttime="20201030 07:33:55.654"></status>
</kw>
<msg timestamp="20201030 07:33:59.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:33:59.488" starttime="20201030 07:33:55.654"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:59.488" starttime="20201030 07:33:55.653"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 07:33:59.489" critical="yes" starttime="20201030 07:33:36.016"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:33:59.494" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:33:59.494" starttime="20201030 07:33:59.493"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:33:59.494" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:33:59.494" starttime="20201030 07:33:59.494"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:59.495" starttime="20201030 07:33:59.493"></status>
</kw>
<msg timestamp="20201030 07:33:59.495" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:33:59.495" starttime="20201030 07:33:59.492"></status>
</kw>
<status status="PASS" endtime="20201030 07:33:59.495" starttime="20201030 07:33:59.492"></status>
</kw>
<msg timestamp="20201030 07:33:59.495" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 07:33:59.495" starttime="20201030 07:33:59.491"></status>
</kw>
<msg timestamp="20201030 07:33:59.495" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 07:33:59.496" starttime="20201030 07:33:59.490"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:33:59.499" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:34:01.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:34:01.682" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:34:01.682" starttime="20201030 07:33:59.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:34:01.683" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:34:01.683" starttime="20201030 07:34:01.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:34:01.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:34:01.684" starttime="20201030 07:34:01.683"></status>
</kw>
<status status="PASS" endtime="20201030 07:34:01.684" starttime="20201030 07:33:59.496"></status>
</kw>
<msg timestamp="20201030 07:34:01.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:34:01.685" starttime="20201030 07:33:59.496"></status>
</kw>
<status status="PASS" endtime="20201030 07:34:01.685" starttime="20201030 07:33:59.496"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:34:01.688" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:34:03.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:34:03.968" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:34:03.968" starttime="20201030 07:34:01.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:34:03.969" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:34:03.969" starttime="20201030 07:34:03.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:34:03.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:34:03.970" starttime="20201030 07:34:03.970"></status>
</kw>
<status status="PASS" endtime="20201030 07:34:03.970" starttime="20201030 07:34:01.686"></status>
</kw>
<msg timestamp="20201030 07:34:03.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:34:03.971" starttime="20201030 07:34:01.685"></status>
</kw>
<status status="PASS" endtime="20201030 07:34:03.971" starttime="20201030 07:34:01.685"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 07:34:03.971" critical="yes" starttime="20201030 07:33:59.489"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201030 07:34:03.972" starttime="20201030 07:33:35.963"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 07:35:41.850" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 07:35:41.850" starttime="20201030 07:35:41.850"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:35:41.850" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 07:35:41.851" starttime="20201030 07:35:41.850"></status>
</kw>
<status status="PASS" endtime="20201030 07:35:41.851" starttime="20201030 07:35:41.849"></status>
</kw>
<msg timestamp="20201030 07:35:41.851" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 07:35:41.851" starttime="20201030 07:35:41.849"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 07:35:41.852" starttime="20201030 07:35:41.851"></status>
</kw>
<msg timestamp="20201030 07:35:41.852" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 07:35:41.852" starttime="20201030 07:35:41.851"></status>
</kw>
<status status="PASS" endtime="20201030 07:35:41.852" starttime="20201030 07:35:41.848"></status>
</kw>
<msg timestamp="20201030 07:35:41.852" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 07:35:41.852" starttime="20201030 07:35:41.848"></status>
</kw>
<msg timestamp="20201030 07:35:41.852" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 07:35:41.852" starttime="20201030 07:35:41.846"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 07:35:41.853" level="INFO">${random} = 16535</msg>
<status status="PASS" endtime="20201030 07:35:41.853" starttime="20201030 07:35:41.852"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:35:41.859" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-16535 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:35:45.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:35:45.283" level="INFO">${output} = 2020-10-30 07:35:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:43 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 07:35:45.283" starttime="20201030 07:35:41.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:35:45.285" level="INFO">2020-10-30 07:35:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:43 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-30 07:35:43 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:35:43 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 07:35:43 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 07:35:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 07:35:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EB82BD3AAA00-&gt;38007e51-5c8c-4c55-afe5-db9a3986add3
2020-10-30 07:35:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 07:35:44 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201030 07:35:45.285" starttime="20201030 07:35:45.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:35:45.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:35:45.286" starttime="20201030 07:35:45.285"></status>
</kw>
<status status="PASS" endtime="20201030 07:35:45.286" starttime="20201030 07:35:41.854"></status>
</kw>
<msg timestamp="20201030 07:35:45.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:35:45.286" starttime="20201030 07:35:41.854"></status>
</kw>
<msg timestamp="20201030 07:35:45.286" level="INFO">${result} = 2020-10-30 07:35:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:43 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 07:35:45.286" starttime="20201030 07:35:41.853"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:35:45.291" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:35:47.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:35:47.068" level="INFO">${output} = 2020-10-30 07:35:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:46 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 07:35:47.068" starttime="20201030 07:35:45.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:35:47.069" level="INFO">2020-10-30 07:35:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:46 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:33 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-30 07:35 ofs://om/volume1/bucket1/ozone-16535
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-30 07:34 ofs://om/volume1/bucket1/ozone-45672
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:34 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:35 ofs://om/volume1/bucket1/wordcount-56.txt
2020-10-30 07:35:47 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201030 07:35:47.069" starttime="20201030 07:35:47.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:35:47.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:35:47.070" starttime="20201030 07:35:47.069"></status>
</kw>
<status status="PASS" endtime="20201030 07:35:47.070" starttime="20201030 07:35:45.288"></status>
</kw>
<msg timestamp="20201030 07:35:47.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:35:47.070" starttime="20201030 07:35:45.287"></status>
</kw>
<msg timestamp="20201030 07:35:47.070" level="INFO">${result} = 2020-10-30 07:35:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:46 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 07:35:47.070" starttime="20201030 07:35:45.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201030 07:35:47.071" starttime="20201030 07:35:47.070"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201030 07:35:47.071" critical="yes" starttime="20201030 07:35:41.846"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201030 07:35:47.072" starttime="20201030 07:35:41.795"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:34:08.822" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:34:08.822" starttime="20201030 07:34:08.821"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:34:08.822" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:34:08.822" starttime="20201030 07:34:08.822"></status>
</kw>
<status status="PASS" endtime="20201030 07:34:08.823" starttime="20201030 07:34:08.821"></status>
</kw>
<msg timestamp="20201030 07:34:08.823" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:34:08.823" starttime="20201030 07:34:08.821"></status>
</kw>
<status status="PASS" endtime="20201030 07:34:08.823" starttime="20201030 07:34:08.820"></status>
</kw>
<msg timestamp="20201030 07:34:08.823" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 07:34:08.823" starttime="20201030 07:34:08.820"></status>
</kw>
<msg timestamp="20201030 07:34:08.823" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 07:34:08.823" starttime="20201030 07:34:08.818"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 07:34:08.824" level="INFO">${random} = 45672</msg>
<status status="PASS" endtime="20201030 07:34:08.824" starttime="20201030 07:34:08.823"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:34:08.830" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-45672 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:34:12.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:34:12.327" level="INFO">${output} = 2020-10-30 07:34:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:10 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 07:34:12.327" starttime="20201030 07:34:08.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:34:12.331" level="INFO">2020-10-30 07:34:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:10 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-30 07:34:10 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:34:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 07:34:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 07:34:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 07:34:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-40F2F15A1BC6-&gt;38007e51-5c8c-4c55-afe5-db9a3986add3
2020-10-30 07:34:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 07:34:11 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201030 07:34:12.332" starttime="20201030 07:34:12.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:34:12.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:34:12.332" starttime="20201030 07:34:12.332"></status>
</kw>
<status status="PASS" endtime="20201030 07:34:12.332" starttime="20201030 07:34:08.824"></status>
</kw>
<msg timestamp="20201030 07:34:12.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:34:12.333" starttime="20201030 07:34:08.824"></status>
</kw>
<msg timestamp="20201030 07:34:12.333" level="INFO">${result} = 2020-10-30 07:34:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:10 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 07:34:12.333" starttime="20201030 07:34:08.824"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:34:12.340" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:34:14.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:34:14.192" level="INFO">${output} = 2020-10-30 07:34:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 07:34:14.192" starttime="20201030 07:34:12.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:34:14.193" level="INFO">2020-10-30 07:34:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:13 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:33 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-30 07:34 o3fs://bucket1.volume1.om/ozone-45672
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:34 o3fs://bucket1.volume1.om/user
2020-10-30 07:34:14 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201030 07:34:14.193" starttime="20201030 07:34:14.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:34:14.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:34:14.194" starttime="20201030 07:34:14.193"></status>
</kw>
<status status="PASS" endtime="20201030 07:34:14.194" starttime="20201030 07:34:12.334"></status>
</kw>
<msg timestamp="20201030 07:34:14.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:34:14.194" starttime="20201030 07:34:12.333"></status>
</kw>
<msg timestamp="20201030 07:34:14.194" level="INFO">${result} = 2020-10-30 07:34:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 07:34:14.194" starttime="20201030 07:34:12.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201030 07:34:14.195" starttime="20201030 07:34:14.195"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201030 07:34:14.195" critical="yes" starttime="20201030 07:34:08.817"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201030 07:34:14.196" starttime="20201030 07:34:08.767"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:35:51.852" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:35:51.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:35:51.858" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 07:35:51.858" starttime="20201030 07:35:51.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:35:51.859" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 07:35:51.859" starttime="20201030 07:35:51.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:35:51.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:35:51.860" starttime="20201030 07:35:51.860"></status>
</kw>
<status status="PASS" endtime="20201030 07:35:51.860" starttime="20201030 07:35:51.847"></status>
</kw>
<msg timestamp="20201030 07:35:51.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:35:51.861" starttime="20201030 07:35:51.847"></status>
</kw>
<msg timestamp="20201030 07:35:51.861" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 07:35:51.861" starttime="20201030 07:35:51.847"></status>
</kw>
<msg timestamp="20201030 07:35:51.861" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 07:35:51.861" starttime="20201030 07:35:51.846"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 07:35:51.864" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 07:35:51.864" starttime="20201030 07:35:51.864"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:35:51.865" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 07:35:51.865" starttime="20201030 07:35:51.864"></status>
</kw>
<status status="PASS" endtime="20201030 07:35:51.865" starttime="20201030 07:35:51.863"></status>
</kw>
<msg timestamp="20201030 07:35:51.865" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 07:35:51.865" starttime="20201030 07:35:51.863"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 07:35:51.866" starttime="20201030 07:35:51.866"></status>
</kw>
<msg timestamp="20201030 07:35:51.866" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 07:35:51.866" starttime="20201030 07:35:51.865"></status>
</kw>
<status status="PASS" endtime="20201030 07:35:51.866" starttime="20201030 07:35:51.862"></status>
</kw>
<msg timestamp="20201030 07:35:51.866" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 07:35:51.866" starttime="20201030 07:35:51.862"></status>
</kw>
<msg timestamp="20201030 07:35:51.867" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 07:35:51.867" starttime="20201030 07:35:51.861"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:35:51.871" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:36:28.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:36:28.553" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 07:35:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35...</msg>
<status status="PASS" endtime="20201030 07:36:28.553" starttime="20201030 07:35:51.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:36:28.554" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-30 07:35:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:53 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-30 07:35:53 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:35:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 07:35:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 07:35:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 07:35:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-325BB9336215-&gt;38007e51-5c8c-4c55-afe5-db9a3986add3
2020-10-30 07:35:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-30 07:35:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:55 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-10-30 07:35:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 07:35:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:55 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 07:35:55 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 07:35:56 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604043195046_0003
2020-10-30 07:35:56 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-30 07:35:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:56 INFO  Configuration:2752 - resource-types.xml not found
2020-10-30 07:35:56 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-30 07:35:56 INFO  YarnClientImpl:324 - Submitted application application_1604043195046_0003
2020-10-30 07:35:56 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604043195046_0003/
2020-10-30 07:35:56 INFO  Job:1619 - Running job: job_1604043195046_0003
2020-10-30 07:36:04 INFO  Job:1640 - Job job_1604043195046_0003 running in uber mode : false
2020-10-30 07:36:04 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 07:36:10 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 07:36:15 INFO  Job:1647 -  map 67% reduce 0%
2020-10-30 07:36:21 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 07:36:26 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 07:36:27 INFO  Job:1658 - Job job_1604043195046_0003 completed successfully
2020-10-30 07:36:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:36:27 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021317
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41160
		Total time spent by all reduces in occupied slots (ms)=15224
		Total time spent by all map tasks (ms)=10290
		Total time spent by all reduce tasks (ms)=3806
		Total vcore-milliseconds taken by all map tasks=10290
		Total vcore-milliseconds taken by all reduce tasks=3806
		Total megabyte-milliseconds taken by all map tasks=42147840
		Total megabyte-milliseconds taken by all reduce tasks=15589376
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=658
		CPU time spent (ms)=7420
		Physical memory (bytes) snapshot=1176784896
		Virtual memory (bytes) snapshot=16079605760
		Total committed heap usage (bytes)=1065877504
		Peak Map Physical memory (bytes)=294797312
		Peak Map Virtual memory (bytes)=4018159616
		Peak Reduce Physical memory (bytes)=299872256
		Peak Reduce Virtual memory (bytes)=4034035712
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.893 seconds
2020-10-30 07:36:27 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-30 07:36:28 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201030 07:36:28.554" starttime="20201030 07:36:28.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:36:28.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:36:28.555" starttime="20201030 07:36:28.554"></status>
</kw>
<status status="PASS" endtime="20201030 07:36:28.555" starttime="20201030 07:35:51.867"></status>
</kw>
<msg timestamp="20201030 07:36:28.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:36:28.555" starttime="20201030 07:35:51.867"></status>
</kw>
<msg timestamp="20201030 07:36:28.556" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 07:35:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35...</msg>
<status status="PASS" endtime="20201030 07:36:28.556" starttime="20201030 07:35:51.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 07:36:28.556" starttime="20201030 07:36:28.556"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 07:36:28.557" critical="yes" starttime="20201030 07:35:51.846"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:36:28.561" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:36:28.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:36:28.566" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 07:36:28.566" starttime="20201030 07:36:28.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:36:28.567" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 07:36:28.567" starttime="20201030 07:36:28.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:36:28.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:36:28.568" starttime="20201030 07:36:28.567"></status>
</kw>
<status status="PASS" endtime="20201030 07:36:28.568" starttime="20201030 07:36:28.559"></status>
</kw>
<msg timestamp="20201030 07:36:28.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:36:28.568" starttime="20201030 07:36:28.558"></status>
</kw>
<msg timestamp="20201030 07:36:28.568" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 07:36:28.568" starttime="20201030 07:36:28.558"></status>
</kw>
<msg timestamp="20201030 07:36:28.569" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 07:36:28.569" starttime="20201030 07:36:28.558"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 07:36:28.569" level="INFO">${random} = 02</msg>
<status status="PASS" endtime="20201030 07:36:28.569" starttime="20201030 07:36:28.569"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 07:36:28.572" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 07:36:28.573" starttime="20201030 07:36:28.572"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:36:28.573" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 07:36:28.573" starttime="20201030 07:36:28.573"></status>
</kw>
<status status="PASS" endtime="20201030 07:36:28.573" starttime="20201030 07:36:28.572"></status>
</kw>
<msg timestamp="20201030 07:36:28.573" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 07:36:28.573" starttime="20201030 07:36:28.571"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 07:36:28.574" starttime="20201030 07:36:28.574"></status>
</kw>
<msg timestamp="20201030 07:36:28.574" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 07:36:28.574" starttime="20201030 07:36:28.573"></status>
</kw>
<status status="PASS" endtime="20201030 07:36:28.575" starttime="20201030 07:36:28.570"></status>
</kw>
<msg timestamp="20201030 07:36:28.575" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 07:36:28.575" starttime="20201030 07:36:28.570"></status>
</kw>
<msg timestamp="20201030 07:36:28.575" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 07:36:28.575" starttime="20201030 07:36:28.569"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 07:36:28.578" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 07:36:28.578" starttime="20201030 07:36:28.577"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:36:28.578" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 07:36:28.578" starttime="20201030 07:36:28.578"></status>
</kw>
<status status="PASS" endtime="20201030 07:36:28.578" starttime="20201030 07:36:28.577"></status>
</kw>
<msg timestamp="20201030 07:36:28.579" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 07:36:28.579" starttime="20201030 07:36:28.576"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:36:28.580" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201030 07:36:28.580" starttime="20201030 07:36:28.579"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:36:28.580" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201030 07:36:28.580" starttime="20201030 07:36:28.580"></status>
</kw>
<status status="PASS" endtime="20201030 07:36:28.581" starttime="20201030 07:36:28.579"></status>
</kw>
<msg timestamp="20201030 07:36:28.581" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201030 07:36:28.581" starttime="20201030 07:36:28.579"></status>
</kw>
<status status="PASS" endtime="20201030 07:36:28.581" starttime="20201030 07:36:28.576"></status>
</kw>
<msg timestamp="20201030 07:36:28.581" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201030 07:36:28.581" starttime="20201030 07:36:28.575"></status>
</kw>
<msg timestamp="20201030 07:36:28.581" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201030 07:36:28.581" starttime="20201030 07:36:28.575"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 07:36:28.584" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 07:36:28.584" starttime="20201030 07:36:28.584"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:36:28.585" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 07:36:28.585" starttime="20201030 07:36:28.584"></status>
</kw>
<status status="PASS" endtime="20201030 07:36:28.585" starttime="20201030 07:36:28.583"></status>
</kw>
<msg timestamp="20201030 07:36:28.585" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 07:36:28.585" starttime="20201030 07:36:28.583"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:36:28.586" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201030 07:36:28.586" starttime="20201030 07:36:28.586"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:36:28.587" level="INFO">${result} = /wordcount-02.txt</msg>
<status status="PASS" endtime="20201030 07:36:28.587" starttime="20201030 07:36:28.586"></status>
</kw>
<status status="PASS" endtime="20201030 07:36:28.587" starttime="20201030 07:36:28.585"></status>
</kw>
<msg timestamp="20201030 07:36:28.587" level="INFO">${path_with_leading} = /wordcount-02.txt</msg>
<status status="PASS" endtime="20201030 07:36:28.587" starttime="20201030 07:36:28.585"></status>
</kw>
<status status="PASS" endtime="20201030 07:36:28.587" starttime="20201030 07:36:28.582"></status>
</kw>
<msg timestamp="20201030 07:36:28.587" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-02.txt</msg>
<status status="PASS" endtime="20201030 07:36:28.587" starttime="20201030 07:36:28.582"></status>
</kw>
<msg timestamp="20201030 07:36:28.587" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-02.txt</msg>
<status status="PASS" endtime="20201030 07:36:28.587" starttime="20201030 07:36:28.581"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:36:28.591" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-02.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:37:08.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:37:08.311" level="INFO">${output} = 2020-10-30 07:36:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:36:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:36:30 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 07:37:08.311" starttime="20201030 07:36:28.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:37:08.312" level="INFO">2020-10-30 07:36:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:36:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:36:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:36:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:36:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:36:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:36:30 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-10-30 07:36:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:36:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:36:30 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 07:36:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:36:30 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-30 07:36:31 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:36:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 07:36:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 07:36:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 07:36:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-32A5C93A2A80-&gt;38007e51-5c8c-4c55-afe5-db9a3986add3
2020-10-30 07:36:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 07:36:32 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 07:36:34 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 07:36:35 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604043195046_0004
2020-10-30 07:36:35 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-30 07:36:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:36:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:36:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:36:35 INFO  Configuration:2752 - resource-types.xml not found
2020-10-30 07:36:35 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-30 07:36:35 INFO  YarnClientImpl:324 - Submitted application application_1604043195046_0004
2020-10-30 07:36:35 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604043195046_0004/
2020-10-30 07:36:35 INFO  Job:1619 - Running job: job_1604043195046_0004
2020-10-30 07:36:42 INFO  Job:1640 - Job job_1604043195046_0004 running in uber mode : false
2020-10-30 07:36:42 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 07:36:49 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 07:36:55 INFO  Job:1647 -  map 67% reduce 0%
2020-10-30 07:37:00 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 07:37:04 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 07:37:07 INFO  Job:1658 - Job job_1604043195046_0004 completed successfully
2020-10-30 07:37:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:37:07 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40212
		Total time spent by all reduces in occupied slots (ms)=14836
		Total time spent by all map tasks (ms)=10053
		Total time spent by all reduce tasks (ms)=3709
		Total vcore-milliseconds taken by all map tasks=10053
		Total vcore-milliseconds taken by all reduce tasks=3709
		Total megabyte-milliseconds taken by all map tasks=41177088
		Total megabyte-milliseconds taken by all reduce tasks=15192064
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=649
		CPU time spent (ms)=7490
		Physical memory (bytes) snapshot=1172992000
		Virtual memory (bytes) snapshot=16071692288
		Total committed heap usage (bytes)=1064828928
		Peak Map Physical memory (bytes)=299081728
		Peak Map Virtual memory (bytes)=4020174848
		Peak Reduce Physical memory (bytes)=293421056
		Peak Reduce Virtual memory (bytes)=4030332928
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-30 07:37:07 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201030 07:37:08.313" starttime="20201030 07:37:08.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:37:08.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:37:08.313" starttime="20201030 07:37:08.313"></status>
</kw>
<status status="PASS" endtime="20201030 07:37:08.313" starttime="20201030 07:36:28.588"></status>
</kw>
<msg timestamp="20201030 07:37:08.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:37:08.314" starttime="20201030 07:36:28.588"></status>
</kw>
<msg timestamp="20201030 07:37:08.314" level="INFO">${output} = 2020-10-30 07:36:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:36:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:36:30 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 07:37:08.314" starttime="20201030 07:36:28.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201030 07:37:08.315" starttime="20201030 07:37:08.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 07:37:08.315" starttime="20201030 07:37:08.315"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 07:37:08.316" critical="yes" starttime="20201030 07:36:28.557"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201030 07:37:08.317" starttime="20201030 07:35:51.795"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:34:19.036" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:34:19.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:34:19.042" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 07:34:19.042" starttime="20201030 07:34:19.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:34:19.043" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 07:34:19.043" starttime="20201030 07:34:19.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:34:19.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:34:19.044" starttime="20201030 07:34:19.044"></status>
</kw>
<status status="PASS" endtime="20201030 07:34:19.044" starttime="20201030 07:34:19.032"></status>
</kw>
<msg timestamp="20201030 07:34:19.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:34:19.044" starttime="20201030 07:34:19.032"></status>
</kw>
<msg timestamp="20201030 07:34:19.045" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 07:34:19.045" starttime="20201030 07:34:19.031"></status>
</kw>
<msg timestamp="20201030 07:34:19.045" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 07:34:19.045" starttime="20201030 07:34:19.031"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:34:19.048" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:34:19.048" starttime="20201030 07:34:19.047"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:34:19.049" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:34:19.049" starttime="20201030 07:34:19.048"></status>
</kw>
<status status="PASS" endtime="20201030 07:34:19.049" starttime="20201030 07:34:19.047"></status>
</kw>
<msg timestamp="20201030 07:34:19.049" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:34:19.049" starttime="20201030 07:34:19.047"></status>
</kw>
<status status="PASS" endtime="20201030 07:34:19.049" starttime="20201030 07:34:19.046"></status>
</kw>
<msg timestamp="20201030 07:34:19.049" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 07:34:19.049" starttime="20201030 07:34:19.046"></status>
</kw>
<msg timestamp="20201030 07:34:19.050" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 07:34:19.050" starttime="20201030 07:34:19.045"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:34:19.052" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:35:00.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:35:00.581" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 07:34:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34...</msg>
<status status="PASS" endtime="20201030 07:35:00.581" starttime="20201030 07:34:19.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:35:00.582" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-30 07:34:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:21 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-30 07:34:21 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:34:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 07:34:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 07:34:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 07:34:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BE251846A7EE-&gt;38007e51-5c8c-4c55-afe5-db9a3986add3
2020-10-30 07:34:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-30 07:34:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-10-30 07:34:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:23 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 07:34:25 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 07:34:25 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604043195046_0001
2020-10-30 07:34:25 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-30 07:34:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:26 INFO  Configuration:2752 - resource-types.xml not found
2020-10-30 07:34:26 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-30 07:34:26 INFO  YarnClientImpl:324 - Submitted application application_1604043195046_0001
2020-10-30 07:34:26 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604043195046_0001/
2020-10-30 07:34:26 INFO  Job:1619 - Running job: job_1604043195046_0001
2020-10-30 07:34:36 INFO  Job:1640 - Job job_1604043195046_0001 running in uber mode : false
2020-10-30 07:34:36 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 07:34:43 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 07:34:49 INFO  Job:1647 -  map 67% reduce 0%
2020-10-30 07:34:54 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 07:34:58 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 07:34:59 INFO  Job:1658 - Job job_1604043195046_0001 completed successfully
2020-10-30 07:34:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:59 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40240
		Total time spent by all reduces in occupied slots (ms)=15552
		Total time spent by all map tasks (ms)=10060
		Total time spent by all reduce tasks (ms)=3888
		Total vcore-milliseconds taken by all map tasks=10060
		Total vcore-milliseconds taken by all reduce tasks=3888
		Total megabyte-milliseconds taken by all map tasks=41205760
		Total megabyte-milliseconds taken by all reduce tasks=15925248
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=638
		CPU time spent (ms)=7040
		Physical memory (bytes) snapshot=1180278784
		Virtual memory (bytes) snapshot=16072011776
		Total committed heap usage (bytes)=1144520704
		Peak Map Physical memory (bytes)=302522368
		Peak Map Virtual memory (bytes)=4014129152
		Peak Reduce Physical memory (bytes)=303157248
		Peak Reduce Virtual memory (bytes)=4036628480
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.604 seconds
2020-10-30 07:34:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:59 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-30 07:35:00 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201030 07:35:00.582" starttime="20201030 07:35:00.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:35:00.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:35:00.583" starttime="20201030 07:35:00.582"></status>
</kw>
<status status="PASS" endtime="20201030 07:35:00.583" starttime="20201030 07:34:19.050"></status>
</kw>
<msg timestamp="20201030 07:35:00.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:35:00.583" starttime="20201030 07:34:19.050"></status>
</kw>
<msg timestamp="20201030 07:35:00.584" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 07:34:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:34...</msg>
<status status="PASS" endtime="20201030 07:35:00.584" starttime="20201030 07:34:19.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 07:35:00.584" starttime="20201030 07:35:00.584"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 07:35:00.584" critical="yes" starttime="20201030 07:34:19.030"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:35:00.589" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:35:00.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:35:00.594" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 07:35:00.594" starttime="20201030 07:35:00.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:35:00.595" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 07:35:00.595" starttime="20201030 07:35:00.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:35:00.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:35:00.596" starttime="20201030 07:35:00.595"></status>
</kw>
<status status="PASS" endtime="20201030 07:35:00.596" starttime="20201030 07:35:00.586"></status>
</kw>
<msg timestamp="20201030 07:35:00.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:35:00.596" starttime="20201030 07:35:00.586"></status>
</kw>
<msg timestamp="20201030 07:35:00.596" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 07:35:00.597" starttime="20201030 07:35:00.586"></status>
</kw>
<msg timestamp="20201030 07:35:00.597" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201030 07:35:00.597" starttime="20201030 07:35:00.586"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 07:35:00.597" level="INFO">${random} = 56</msg>
<status status="PASS" endtime="20201030 07:35:00.597" starttime="20201030 07:35:00.597"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:35:00.600" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:35:00.601" starttime="20201030 07:35:00.600"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:35:00.601" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:35:00.601" starttime="20201030 07:35:00.601"></status>
</kw>
<status status="PASS" endtime="20201030 07:35:00.601" starttime="20201030 07:35:00.600"></status>
</kw>
<msg timestamp="20201030 07:35:00.601" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:35:00.601" starttime="20201030 07:35:00.599"></status>
</kw>
<status status="PASS" endtime="20201030 07:35:00.602" starttime="20201030 07:35:00.599"></status>
</kw>
<msg timestamp="20201030 07:35:00.602" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 07:35:00.602" starttime="20201030 07:35:00.598"></status>
</kw>
<msg timestamp="20201030 07:35:00.602" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 07:35:00.602" starttime="20201030 07:35:00.597"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:35:00.605" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:35:00.605" starttime="20201030 07:35:00.604"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:35:00.605" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:35:00.605" starttime="20201030 07:35:00.605"></status>
</kw>
<status status="PASS" endtime="20201030 07:35:00.605" starttime="20201030 07:35:00.604"></status>
</kw>
<msg timestamp="20201030 07:35:00.606" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:35:00.606" starttime="20201030 07:35:00.604"></status>
</kw>
<status status="PASS" endtime="20201030 07:35:00.606" starttime="20201030 07:35:00.603"></status>
</kw>
<msg timestamp="20201030 07:35:00.606" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201030 07:35:00.606" starttime="20201030 07:35:00.602"></status>
</kw>
<msg timestamp="20201030 07:35:00.606" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201030 07:35:00.606" starttime="20201030 07:35:00.602"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:35:00.609" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:35:00.609" starttime="20201030 07:35:00.608"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:35:00.609" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:35:00.609" starttime="20201030 07:35:00.609"></status>
</kw>
<status status="PASS" endtime="20201030 07:35:00.610" starttime="20201030 07:35:00.608"></status>
</kw>
<msg timestamp="20201030 07:35:00.610" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:35:00.610" starttime="20201030 07:35:00.608"></status>
</kw>
<status status="PASS" endtime="20201030 07:35:00.610" starttime="20201030 07:35:00.607"></status>
</kw>
<msg timestamp="20201030 07:35:00.610" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-56.txt</msg>
<status status="PASS" endtime="20201030 07:35:00.610" starttime="20201030 07:35:00.607"></status>
</kw>
<msg timestamp="20201030 07:35:00.610" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-56.txt</msg>
<status status="PASS" endtime="20201030 07:35:00.610" starttime="20201030 07:35:00.606"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:35:00.614" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-56.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:35:37.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:35:37.009" level="INFO">${output} = 2020-10-30 07:35:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 07:35:37.009" starttime="20201030 07:35:00.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:35:37.010" level="INFO">2020-10-30 07:35:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:02 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-10-30 07:35:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:02 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 07:35:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:02 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-30 07:35:03 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-30 07:35:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 07:35:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 07:35:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 07:35:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C50AD716F9B5-&gt;38007e51-5c8c-4c55-afe5-db9a3986add3
2020-10-30 07:35:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 07:35:04 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 07:35:04 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 07:35:04 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604043195046_0002
2020-10-30 07:35:04 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-30 07:35:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:04 INFO  Configuration:2752 - resource-types.xml not found
2020-10-30 07:35:04 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-30 07:35:05 INFO  YarnClientImpl:324 - Submitted application application_1604043195046_0002
2020-10-30 07:35:05 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604043195046_0002/
2020-10-30 07:35:05 INFO  Job:1619 - Running job: job_1604043195046_0002
2020-10-30 07:35:13 INFO  Job:1640 - Job job_1604043195046_0002 running in uber mode : false
2020-10-30 07:35:13 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 07:35:20 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 07:35:25 INFO  Job:1647 -  map 67% reduce 0%
2020-10-30 07:35:31 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 07:35:36 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 07:35:36 INFO  Job:1658 - Job job_1604043195046_0002 completed successfully
2020-10-30 07:35:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:36 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41312
		Total time spent by all reduces in occupied slots (ms)=15032
		Total time spent by all map tasks (ms)=10328
		Total time spent by all reduce tasks (ms)=3758
		Total vcore-milliseconds taken by all map tasks=10328
		Total vcore-milliseconds taken by all reduce tasks=3758
		Total megabyte-milliseconds taken by all map tasks=42303488
		Total megabyte-milliseconds taken by all reduce tasks=15392768
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=636
		CPU time spent (ms)=6810
		Physical memory (bytes) snapshot=1163083776
		Virtual memory (bytes) snapshot=16060542976
		Total committed heap usage (bytes)=1147666432
		Peak Map Physical memory (bytes)=300060672
		Peak Map Virtual memory (bytes)=4020736000
		Peak Reduce Physical memory (bytes)=296648704
		Peak Reduce Virtual memory (bytes)=4034662400
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-30 07:35:36 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201030 07:35:37.010" starttime="20201030 07:35:37.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:35:37.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:35:37.011" starttime="20201030 07:35:37.011"></status>
</kw>
<status status="PASS" endtime="20201030 07:35:37.011" starttime="20201030 07:35:00.611"></status>
</kw>
<msg timestamp="20201030 07:35:37.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:35:37.012" starttime="20201030 07:35:00.611"></status>
</kw>
<msg timestamp="20201030 07:35:37.012" level="INFO">${output} = 2020-10-30 07:35:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-30 07:35:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201030 07:35:37.012" starttime="20201030 07:35:00.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201030 07:35:37.013" starttime="20201030 07:35:37.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 07:35:37.013" starttime="20201030 07:35:37.013"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 07:35:37.013" critical="yes" starttime="20201030 07:35:00.585"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201030 07:35:37.015" starttime="20201030 07:34:18.982"></status>
</suite>
<status status="PASS" elapsedtime="193270" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:38:13.872" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:38:18.352" level="INFO">${rc} = 255</msg>
<msg timestamp="20201030 07:38:18.352" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 07:38:18.352" starttime="20201030 07:38:13.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:38:18.353" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 07:38:18.353" starttime="20201030 07:38:18.353"></status>
</kw>
<msg timestamp="20201030 07:38:18.354" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201030 07:38:18.354" starttime="20201030 07:38:13.867"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:38:18.360" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:38:21.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:38:21.859" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:38:21.859" starttime="20201030 07:38:18.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:38:21.860" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:38:21.860" starttime="20201030 07:38:21.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:38:21.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:38:21.861" starttime="20201030 07:38:21.860"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:21.861" starttime="20201030 07:38:18.356"></status>
</kw>
<msg timestamp="20201030 07:38:21.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:38:21.861" starttime="20201030 07:38:18.355"></status>
</kw>
<msg timestamp="20201030 07:38:21.861" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201030 07:38:21.861" starttime="20201030 07:38:18.355"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201030 07:38:21.862" starttime="20201030 07:38:21.862"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:21.862" starttime="20201030 07:38:18.354"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:21.862" starttime="20201030 07:38:18.354"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:38:21.867" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:38:24.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:38:24.791" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:38:24.791" starttime="20201030 07:38:21.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:38:24.792" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:38:24.792" starttime="20201030 07:38:24.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:38:24.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:38:24.793" starttime="20201030 07:38:24.792"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:24.793" starttime="20201030 07:38:21.864"></status>
</kw>
<msg timestamp="20201030 07:38:24.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:38:24.793" starttime="20201030 07:38:21.864"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:24.794" starttime="20201030 07:38:21.863"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:24.794" starttime="20201030 07:38:21.863"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:24.794" starttime="20201030 07:38:21.862"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201030 07:38:24.795" starttime="20201030 07:38:24.795"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:38:24.799" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:38:27.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:38:27.937" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T07:38:24.637Z",
  "modificat...</msg>
<status status="PASS" endtime="20201030 07:38:27.937" starttime="20201030 07:38:24.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:38:27.938" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T07:38:24.637Z",
  "modificationTime" : "2020-10-30T07:38:24.637Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201030 07:38:27.938" starttime="20201030 07:38:27.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:38:27.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:38:27.939" starttime="20201030 07:38:27.939"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:27.939" starttime="20201030 07:38:24.796"></status>
</kw>
<msg timestamp="20201030 07:38:27.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:38:27.940" starttime="20201030 07:38:24.796"></status>
</kw>
<msg timestamp="20201030 07:38:27.940" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-30T07:38:24.637Z",
  "modificat...</msg>
<status status="PASS" endtime="20201030 07:38:27.940" starttime="20201030 07:38:24.795"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201030 07:38:27.941" starttime="20201030 07:38:27.940"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:38:27.944" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:38:27.944" starttime="20201030 07:38:27.944"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:38:27.945" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:38:27.945" starttime="20201030 07:38:27.945"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:27.945" starttime="20201030 07:38:27.943"></status>
</kw>
<msg timestamp="20201030 07:38:27.945" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:38:27.945" starttime="20201030 07:38:27.943"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:27.946" starttime="20201030 07:38:27.942"></status>
</kw>
<msg timestamp="20201030 07:38:27.946" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201030 07:38:27.946" starttime="20201030 07:38:27.941"></status>
</kw>
<msg timestamp="20201030 07:38:27.946" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201030 07:38:27.946" starttime="20201030 07:38:27.941"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:38:27.949" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:38:31.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:38:31.354" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:38:31.355" starttime="20201030 07:38:27.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:38:31.356" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:38:31.356" starttime="20201030 07:38:31.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:38:31.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:38:31.356" starttime="20201030 07:38:31.356"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:31.357" starttime="20201030 07:38:27.947"></status>
</kw>
<msg timestamp="20201030 07:38:31.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:38:31.357" starttime="20201030 07:38:27.947"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:31.357" starttime="20201030 07:38:27.946"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:38:31.361" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:38:40.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:38:40.488" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:38:40.488" starttime="20201030 07:38:31.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:38:40.489" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:38:40.489" starttime="20201030 07:38:40.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:38:40.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:38:40.490" starttime="20201030 07:38:40.489"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:40.490" starttime="20201030 07:38:31.358"></status>
</kw>
<msg timestamp="20201030 07:38:40.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:38:40.490" starttime="20201030 07:38:31.358"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:40.490" starttime="20201030 07:38:31.357"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:38:40.494" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:38:45.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:38:45.402" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:38:45.402" starttime="20201030 07:38:40.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:38:45.403" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:38:45.404" starttime="20201030 07:38:45.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:38:45.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:38:45.404" starttime="20201030 07:38:45.404"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:45.405" starttime="20201030 07:38:40.491"></status>
</kw>
<msg timestamp="20201030 07:38:45.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:38:45.405" starttime="20201030 07:38:40.491"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:45.405" starttime="20201030 07:38:40.490"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:38:45.410" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:38:50.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:38:50.563" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:38:50.563" starttime="20201030 07:38:45.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:38:50.565" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:38:50.565" starttime="20201030 07:38:50.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:38:50.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:38:50.565" starttime="20201030 07:38:50.565"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:50.566" starttime="20201030 07:38:45.406"></status>
</kw>
<msg timestamp="20201030 07:38:50.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:38:50.566" starttime="20201030 07:38:45.406"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:50.566" starttime="20201030 07:38:45.405"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 07:38:50.566" critical="yes" starttime="20201030 07:38:13.866"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:38:50.571" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:38:50.572" starttime="20201030 07:38:50.571"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:38:50.572" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:38:50.572" starttime="20201030 07:38:50.572"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:50.572" starttime="20201030 07:38:50.570"></status>
</kw>
<msg timestamp="20201030 07:38:50.572" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:38:50.573" starttime="20201030 07:38:50.570"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:50.573" starttime="20201030 07:38:50.569"></status>
</kw>
<msg timestamp="20201030 07:38:50.573" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 07:38:50.573" starttime="20201030 07:38:50.569"></status>
</kw>
<msg timestamp="20201030 07:38:50.573" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 07:38:50.573" starttime="20201030 07:38:50.568"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:38:50.578" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:38:53.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:38:53.830" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:38:53.830" starttime="20201030 07:38:50.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:38:53.831" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:38:53.831" starttime="20201030 07:38:53.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:38:53.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:38:53.832" starttime="20201030 07:38:53.831"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:53.832" starttime="20201030 07:38:50.574"></status>
</kw>
<msg timestamp="20201030 07:38:53.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:38:53.832" starttime="20201030 07:38:50.574"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:53.832" starttime="20201030 07:38:50.573"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:38:53.836" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:38:56.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:38:56.918" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201030 07:38:56.918" starttime="20201030 07:38:53.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:38:56.919" level="INFO"></msg>
<status status="PASS" endtime="20201030 07:38:56.919" starttime="20201030 07:38:56.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:38:56.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:38:56.920" starttime="20201030 07:38:56.919"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:56.920" starttime="20201030 07:38:53.833"></status>
</kw>
<msg timestamp="20201030 07:38:56.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:38:56.920" starttime="20201030 07:38:53.833"></status>
</kw>
<status status="PASS" endtime="20201030 07:38:56.920" starttime="20201030 07:38:53.833"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201030 07:38:56.920" critical="yes" starttime="20201030 07:38:50.567"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201030 07:38:56.922" starttime="20201030 07:38:13.809"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 07:40:35.030" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 07:40:35.030" starttime="20201030 07:40:35.029"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:40:35.030" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 07:40:35.031" starttime="20201030 07:40:35.030"></status>
</kw>
<status status="PASS" endtime="20201030 07:40:35.031" starttime="20201030 07:40:35.029"></status>
</kw>
<msg timestamp="20201030 07:40:35.031" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 07:40:35.031" starttime="20201030 07:40:35.029"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 07:40:35.032" starttime="20201030 07:40:35.031"></status>
</kw>
<msg timestamp="20201030 07:40:35.032" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 07:40:35.032" starttime="20201030 07:40:35.031"></status>
</kw>
<status status="PASS" endtime="20201030 07:40:35.032" starttime="20201030 07:40:35.028"></status>
</kw>
<msg timestamp="20201030 07:40:35.032" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 07:40:35.032" starttime="20201030 07:40:35.027"></status>
</kw>
<msg timestamp="20201030 07:40:35.032" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 07:40:35.032" starttime="20201030 07:40:35.026"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 07:40:35.033" level="INFO">${random} = 79714</msg>
<status status="PASS" endtime="20201030 07:40:35.033" starttime="20201030 07:40:35.032"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:40:35.040" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-79714 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:40:38.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:40:38.650" level="INFO">${output} = 2020-10-30 07:40:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 07:40:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201030 07:40:38.650" starttime="20201030 07:40:35.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:40:38.652" level="INFO">2020-10-30 07:40:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 07:40:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 07:40:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 07:40:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 07:40:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-30BDD5FE588A-&gt;8146e299-49c8-4d40-bb7f-cda38cabcda9
2020-10-30 07:40:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201030 07:40:38.652" starttime="20201030 07:40:38.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:40:38.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:40:38.652" starttime="20201030 07:40:38.652"></status>
</kw>
<status status="PASS" endtime="20201030 07:40:38.653" starttime="20201030 07:40:35.034"></status>
</kw>
<msg timestamp="20201030 07:40:38.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:40:38.653" starttime="20201030 07:40:35.033"></status>
</kw>
<msg timestamp="20201030 07:40:38.653" level="INFO">${result} = 2020-10-30 07:40:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 07:40:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201030 07:40:38.653" starttime="20201030 07:40:35.033"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:40:38.656" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:40:40.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:40:40.450" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:38 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 07:39 ofs://om/volume1/bucket1/ozone-60906
-rw-...</msg>
<status status="PASS" endtime="20201030 07:40:40.451" starttime="20201030 07:40:38.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:40:40.452" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:38 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 07:39 ofs://om/volume1/bucket1/ozone-60906
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 07:40 ofs://om/volume1/bucket1/ozone-79714
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:38 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:40 ofs://om/volume1/bucket1/wordcount-41.txt</msg>
<status status="PASS" endtime="20201030 07:40:40.452" starttime="20201030 07:40:40.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:40:40.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:40:40.453" starttime="20201030 07:40:40.452"></status>
</kw>
<status status="PASS" endtime="20201030 07:40:40.453" starttime="20201030 07:40:38.654"></status>
</kw>
<msg timestamp="20201030 07:40:40.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:40:40.453" starttime="20201030 07:40:38.654"></status>
</kw>
<msg timestamp="20201030 07:40:40.453" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:38 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 07:39 ofs://om/volume1/bucket1/ozone-60906
-rw-...</msg>
<status status="PASS" endtime="20201030 07:40:40.453" starttime="20201030 07:40:38.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201030 07:40:40.454" starttime="20201030 07:40:40.454"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201030 07:40:40.454" critical="yes" starttime="20201030 07:40:35.025"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201030 07:40:40.456" starttime="20201030 07:40:34.975"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:39:01.754" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:39:01.754" starttime="20201030 07:39:01.754"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:39:01.755" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:39:01.755" starttime="20201030 07:39:01.755"></status>
</kw>
<status status="PASS" endtime="20201030 07:39:01.755" starttime="20201030 07:39:01.754"></status>
</kw>
<msg timestamp="20201030 07:39:01.755" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:39:01.755" starttime="20201030 07:39:01.753"></status>
</kw>
<status status="PASS" endtime="20201030 07:39:01.755" starttime="20201030 07:39:01.751"></status>
</kw>
<msg timestamp="20201030 07:39:01.756" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 07:39:01.756" starttime="20201030 07:39:01.751"></status>
</kw>
<msg timestamp="20201030 07:39:01.756" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 07:39:01.756" starttime="20201030 07:39:01.750"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 07:39:01.756" level="INFO">${random} = 60906</msg>
<status status="PASS" endtime="20201030 07:39:01.756" starttime="20201030 07:39:01.756"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:39:01.761" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-60906 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:39:05.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:39:05.522" level="INFO">${output} = 2020-10-30 07:39:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 07:39:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201030 07:39:05.522" starttime="20201030 07:39:01.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:39:05.524" level="INFO">2020-10-30 07:39:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 07:39:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 07:39:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 07:39:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 07:39:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2F48A522E50D-&gt;8146e299-49c8-4d40-bb7f-cda38cabcda9
2020-10-30 07:39:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201030 07:39:05.524" starttime="20201030 07:39:05.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:39:05.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:39:05.524" starttime="20201030 07:39:05.524"></status>
</kw>
<status status="PASS" endtime="20201030 07:39:05.525" starttime="20201030 07:39:01.757"></status>
</kw>
<msg timestamp="20201030 07:39:05.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:39:05.525" starttime="20201030 07:39:01.757"></status>
</kw>
<msg timestamp="20201030 07:39:05.525" level="INFO">${result} = 2020-10-30 07:39:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 07:39:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201030 07:39:05.525" starttime="20201030 07:39:01.756"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:39:05.528" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:39:07.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:39:07.360" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 07:39 o3fs://bucket1.volume1.om/ozone-60906
dr...</msg>
<status status="PASS" endtime="20201030 07:39:07.360" starttime="20201030 07:39:05.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:39:07.361" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 07:39 o3fs://bucket1.volume1.om/ozone-60906
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:38 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201030 07:39:07.361" starttime="20201030 07:39:07.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:39:07.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:39:07.362" starttime="20201030 07:39:07.361"></status>
</kw>
<status status="PASS" endtime="20201030 07:39:07.362" starttime="20201030 07:39:05.526"></status>
</kw>
<msg timestamp="20201030 07:39:07.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:39:07.362" starttime="20201030 07:39:05.526"></status>
</kw>
<msg timestamp="20201030 07:39:07.362" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-30 07:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-30 07:39 o3fs://bucket1.volume1.om/ozone-60906
dr...</msg>
<status status="PASS" endtime="20201030 07:39:07.362" starttime="20201030 07:39:05.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201030 07:39:07.363" starttime="20201030 07:39:07.362"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201030 07:39:07.363" critical="yes" starttime="20201030 07:39:01.749"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201030 07:39:07.364" starttime="20201030 07:39:01.700"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:40:45.232" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:40:45.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:40:45.236" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 07:40:45.236" starttime="20201030 07:40:45.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:40:45.237" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 07:40:45.237" starttime="20201030 07:40:45.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:40:45.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:40:45.238" starttime="20201030 07:40:45.237"></status>
</kw>
<status status="PASS" endtime="20201030 07:40:45.238" starttime="20201030 07:40:45.226"></status>
</kw>
<msg timestamp="20201030 07:40:45.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:40:45.238" starttime="20201030 07:40:45.226"></status>
</kw>
<msg timestamp="20201030 07:40:45.238" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 07:40:45.238" starttime="20201030 07:40:45.226"></status>
</kw>
<msg timestamp="20201030 07:40:45.238" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 07:40:45.238" starttime="20201030 07:40:45.225"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 07:40:45.241" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 07:40:45.242" starttime="20201030 07:40:45.241"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:40:45.242" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 07:40:45.242" starttime="20201030 07:40:45.242"></status>
</kw>
<status status="PASS" endtime="20201030 07:40:45.242" starttime="20201030 07:40:45.241"></status>
</kw>
<msg timestamp="20201030 07:40:45.242" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 07:40:45.242" starttime="20201030 07:40:45.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 07:40:45.244" starttime="20201030 07:40:45.243"></status>
</kw>
<msg timestamp="20201030 07:40:45.244" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 07:40:45.244" starttime="20201030 07:40:45.243"></status>
</kw>
<status status="PASS" endtime="20201030 07:40:45.244" starttime="20201030 07:40:45.240"></status>
</kw>
<msg timestamp="20201030 07:40:45.244" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 07:40:45.244" starttime="20201030 07:40:45.239"></status>
</kw>
<msg timestamp="20201030 07:40:45.244" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 07:40:45.244" starttime="20201030 07:40:45.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:40:45.247" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:41:19.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:41:19.851" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 07:40:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 07:40:47 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201030 07:41:19.851" starttime="20201030 07:40:45.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:41:19.853" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-30 07:40:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 07:40:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 07:40:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 07:40:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 07:40:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FB2960AF2D96-&gt;8146e299-49c8-4d40-bb7f-cda38cabcda9
2020-10-30 07:40:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-30 07:40:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-30 07:40:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 07:40:49 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 07:40:49 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 07:40:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604043473200_0003
2020-10-30 07:40:49 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-30 07:40:49 INFO  Configuration:2795 - resource-types.xml not found
2020-10-30 07:40:49 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-30 07:40:49 INFO  YarnClientImpl:329 - Submitted application application_1604043473200_0003
2020-10-30 07:40:49 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604043473200_0003/
2020-10-30 07:40:49 INFO  Job:1619 - Running job: job_1604043473200_0003
2020-10-30 07:40:57 INFO  Job:1640 - Job job_1604043473200_0003 running in uber mode : false
2020-10-30 07:40:57 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 07:41:04 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 07:41:09 INFO  Job:1647 -  map 67% reduce 0%
2020-10-30 07:41:14 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 07:41:19 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 07:41:19 INFO  Job:1658 - Job job_1604043473200_0003 completed successfully
2020-10-30 07:41:19 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061445
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41504
		Total time spent by all reduces in occupied slots (ms)=15016
		Total time spent by all map tasks (ms)=10376
		Total time spent by all reduce tasks (ms)=3754
		Total vcore-milliseconds taken by all map tasks=10376
		Total vcore-milliseconds taken by all reduce tasks=3754
		Total megabyte-milliseconds taken by all map tasks=42500096
		Total megabyte-milliseconds taken by all reduce tasks=15376384
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=636
		CPU time spent (ms)=7290
		Physical memory (bytes) snapshot=1390477312
		Virtual memory (bytes) snapshot=16068308992
		Total committed heap usage (bytes)=1547173888
		Peak Map Physical memory (bytes)=361807872
		Peak Map Virtual memory (bytes)=4014977024
		Peak Reduce Physical memory (bytes)=377143296
		Peak Reduce Virtual memory (bytes)=4035067904
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.772 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201030 07:41:19.853" starttime="20201030 07:41:19.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:41:19.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:41:19.854" starttime="20201030 07:41:19.853"></status>
</kw>
<status status="PASS" endtime="20201030 07:41:19.854" starttime="20201030 07:40:45.245"></status>
</kw>
<msg timestamp="20201030 07:41:19.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:41:19.854" starttime="20201030 07:40:45.245"></status>
</kw>
<msg timestamp="20201030 07:41:19.855" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 07:40:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 07:40:47 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201030 07:41:19.855" starttime="20201030 07:40:45.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 07:41:19.855" starttime="20201030 07:41:19.855"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 07:41:19.855" critical="yes" starttime="20201030 07:40:45.225"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:41:19.860" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:41:19.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:41:19.867" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 07:41:19.867" starttime="20201030 07:41:19.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:41:19.868" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 07:41:19.868" starttime="20201030 07:41:19.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:41:19.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:41:19.868" starttime="20201030 07:41:19.868"></status>
</kw>
<status status="PASS" endtime="20201030 07:41:19.869" starttime="20201030 07:41:19.857"></status>
</kw>
<msg timestamp="20201030 07:41:19.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:41:19.869" starttime="20201030 07:41:19.857"></status>
</kw>
<msg timestamp="20201030 07:41:19.869" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 07:41:19.869" starttime="20201030 07:41:19.857"></status>
</kw>
<msg timestamp="20201030 07:41:19.869" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 07:41:19.869" starttime="20201030 07:41:19.856"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 07:41:19.870" level="INFO">${random} = 49</msg>
<status status="PASS" endtime="20201030 07:41:19.870" starttime="20201030 07:41:19.869"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 07:41:19.873" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 07:41:19.873" starttime="20201030 07:41:19.873"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:41:19.874" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 07:41:19.874" starttime="20201030 07:41:19.873"></status>
</kw>
<status status="PASS" endtime="20201030 07:41:19.874" starttime="20201030 07:41:19.872"></status>
</kw>
<msg timestamp="20201030 07:41:19.874" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 07:41:19.874" starttime="20201030 07:41:19.872"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201030 07:41:19.875" starttime="20201030 07:41:19.875"></status>
</kw>
<msg timestamp="20201030 07:41:19.875" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201030 07:41:19.875" starttime="20201030 07:41:19.874"></status>
</kw>
<status status="PASS" endtime="20201030 07:41:19.875" starttime="20201030 07:41:19.871"></status>
</kw>
<msg timestamp="20201030 07:41:19.875" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 07:41:19.875" starttime="20201030 07:41:19.871"></status>
</kw>
<msg timestamp="20201030 07:41:19.875" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201030 07:41:19.876" starttime="20201030 07:41:19.870"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 07:41:19.878" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 07:41:19.878" starttime="20201030 07:41:19.878"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:41:19.879" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 07:41:19.879" starttime="20201030 07:41:19.879"></status>
</kw>
<status status="PASS" endtime="20201030 07:41:19.879" starttime="20201030 07:41:19.878"></status>
</kw>
<msg timestamp="20201030 07:41:19.879" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 07:41:19.879" starttime="20201030 07:41:19.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:41:19.881" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201030 07:41:19.881" starttime="20201030 07:41:19.880"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:41:19.881" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201030 07:41:19.881" starttime="20201030 07:41:19.881"></status>
</kw>
<status status="PASS" endtime="20201030 07:41:19.881" starttime="20201030 07:41:19.880"></status>
</kw>
<msg timestamp="20201030 07:41:19.882" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201030 07:41:19.882" starttime="20201030 07:41:19.879"></status>
</kw>
<status status="PASS" endtime="20201030 07:41:19.882" starttime="20201030 07:41:19.877"></status>
</kw>
<msg timestamp="20201030 07:41:19.882" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201030 07:41:19.882" starttime="20201030 07:41:19.876"></status>
</kw>
<msg timestamp="20201030 07:41:19.882" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201030 07:41:19.882" starttime="20201030 07:41:19.876"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201030 07:41:19.885" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201030 07:41:19.885" starttime="20201030 07:41:19.885"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:41:19.886" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201030 07:41:19.886" starttime="20201030 07:41:19.885"></status>
</kw>
<status status="PASS" endtime="20201030 07:41:19.886" starttime="20201030 07:41:19.884"></status>
</kw>
<msg timestamp="20201030 07:41:19.886" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201030 07:41:19.886" starttime="20201030 07:41:19.884"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:41:19.887" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201030 07:41:19.887" starttime="20201030 07:41:19.887"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:41:19.888" level="INFO">${result} = /wordcount-49.txt</msg>
<status status="PASS" endtime="20201030 07:41:19.888" starttime="20201030 07:41:19.887"></status>
</kw>
<status status="PASS" endtime="20201030 07:41:19.888" starttime="20201030 07:41:19.886"></status>
</kw>
<msg timestamp="20201030 07:41:19.888" level="INFO">${path_with_leading} = /wordcount-49.txt</msg>
<status status="PASS" endtime="20201030 07:41:19.888" starttime="20201030 07:41:19.886"></status>
</kw>
<status status="PASS" endtime="20201030 07:41:19.888" starttime="20201030 07:41:19.883"></status>
</kw>
<msg timestamp="20201030 07:41:19.888" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-49.txt</msg>
<status status="PASS" endtime="20201030 07:41:19.888" starttime="20201030 07:41:19.883"></status>
</kw>
<msg timestamp="20201030 07:41:19.889" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-49.txt</msg>
<status status="PASS" endtime="20201030 07:41:19.889" starttime="20201030 07:41:19.882"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:41:19.892" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-49.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:41:58.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:41:58.274" level="INFO">${output} = 2020-10-30 07:41:21 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-30 07:41:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201030 07:41:58.274" starttime="20201030 07:41:19.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:41:58.275" level="INFO">2020-10-30 07:41:21 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-30 07:41:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 07:41:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 07:41:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 07:41:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 07:41:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 07:41:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C1FADB6F2C53-&gt;8146e299-49c8-4d40-bb7f-cda38cabcda9
2020-10-30 07:41:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 07:41:23 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 07:41:23 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 07:41:24 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604043473200_0004
2020-10-30 07:41:24 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-30 07:41:24 INFO  Configuration:2795 - resource-types.xml not found
2020-10-30 07:41:24 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-30 07:41:24 INFO  YarnClientImpl:329 - Submitted application application_1604043473200_0004
2020-10-30 07:41:24 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604043473200_0004/
2020-10-30 07:41:24 INFO  Job:1619 - Running job: job_1604043473200_0004
2020-10-30 07:41:32 INFO  Job:1640 - Job job_1604043473200_0004 running in uber mode : false
2020-10-30 07:41:32 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 07:41:38 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 07:41:44 INFO  Job:1647 -  map 67% reduce 0%
2020-10-30 07:41:49 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 07:41:54 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 07:41:57 INFO  Job:1658 - Job job_1604043473200_0004 completed successfully
2020-10-30 07:41:57 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40228
		Total time spent by all reduces in occupied slots (ms)=15216
		Total time spent by all map tasks (ms)=10057
		Total time spent by all reduce tasks (ms)=3804
		Total vcore-milliseconds taken by all map tasks=10057
		Total vcore-milliseconds taken by all reduce tasks=3804
		Total megabyte-milliseconds taken by all map tasks=41193472
		Total megabyte-milliseconds taken by all reduce tasks=15581184
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=685
		CPU time spent (ms)=7980
		Physical memory (bytes) snapshot=1491144704
		Virtual memory (bytes) snapshot=16094134272
		Total committed heap usage (bytes)=1696595968
		Peak Map Physical memory (bytes)=374202368
		Peak Map Virtual memory (bytes)=4017905664
		Peak Reduce Physical memory (bytes)=379826176
		Peak Reduce Virtual memory (bytes)=4043116544
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201030 07:41:58.276" starttime="20201030 07:41:58.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:41:58.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:41:58.276" starttime="20201030 07:41:58.276"></status>
</kw>
<status status="PASS" endtime="20201030 07:41:58.277" starttime="20201030 07:41:19.889"></status>
</kw>
<msg timestamp="20201030 07:41:58.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:41:58.277" starttime="20201030 07:41:19.889"></status>
</kw>
<msg timestamp="20201030 07:41:58.277" level="INFO">${output} = 2020-10-30 07:41:21 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-30 07:41:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201030 07:41:58.277" starttime="20201030 07:41:19.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201030 07:41:58.278" starttime="20201030 07:41:58.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 07:41:58.278" starttime="20201030 07:41:58.278"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 07:41:58.279" critical="yes" starttime="20201030 07:41:19.856"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201030 07:41:58.280" starttime="20201030 07:40:45.172"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:39:12.155" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:39:12.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:39:12.160" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 07:39:12.160" starttime="20201030 07:39:12.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:39:12.161" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 07:39:12.161" starttime="20201030 07:39:12.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:39:12.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:39:12.162" starttime="20201030 07:39:12.161"></status>
</kw>
<status status="PASS" endtime="20201030 07:39:12.162" starttime="20201030 07:39:12.150"></status>
</kw>
<msg timestamp="20201030 07:39:12.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:39:12.162" starttime="20201030 07:39:12.150"></status>
</kw>
<msg timestamp="20201030 07:39:12.162" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 07:39:12.162" starttime="20201030 07:39:12.150"></status>
</kw>
<msg timestamp="20201030 07:39:12.163" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 07:39:12.163" starttime="20201030 07:39:12.150"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:39:12.165" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:39:12.165" starttime="20201030 07:39:12.165"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:39:12.166" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:39:12.166" starttime="20201030 07:39:12.166"></status>
</kw>
<status status="PASS" endtime="20201030 07:39:12.166" starttime="20201030 07:39:12.165"></status>
</kw>
<msg timestamp="20201030 07:39:12.166" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:39:12.166" starttime="20201030 07:39:12.164"></status>
</kw>
<status status="PASS" endtime="20201030 07:39:12.167" starttime="20201030 07:39:12.164"></status>
</kw>
<msg timestamp="20201030 07:39:12.167" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 07:39:12.167" starttime="20201030 07:39:12.163"></status>
</kw>
<msg timestamp="20201030 07:39:12.167" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 07:39:12.167" starttime="20201030 07:39:12.163"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:39:12.171" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:39:51.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:39:51.348" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 07:39:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 07:39:14 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201030 07:39:51.348" starttime="20201030 07:39:12.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:39:51.349" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-30 07:39:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 07:39:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 07:39:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 07:39:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 07:39:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-84DCA33ED113-&gt;8146e299-49c8-4d40-bb7f-cda38cabcda9
2020-10-30 07:39:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-30 07:39:15 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-30 07:39:16 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 07:39:16 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 07:39:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604043473200_0001
2020-10-30 07:39:16 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-30 07:39:16 INFO  Configuration:2795 - resource-types.xml not found
2020-10-30 07:39:16 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-30 07:39:17 INFO  YarnClientImpl:329 - Submitted application application_1604043473200_0001
2020-10-30 07:39:17 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604043473200_0001/
2020-10-30 07:39:17 INFO  Job:1619 - Running job: job_1604043473200_0001
2020-10-30 07:39:27 INFO  Job:1640 - Job job_1604043473200_0001 running in uber mode : false
2020-10-30 07:39:27 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 07:39:34 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 07:39:40 INFO  Job:1647 -  map 67% reduce 0%
2020-10-30 07:39:45 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 07:39:50 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 07:39:50 INFO  Job:1658 - Job job_1604043473200_0001 completed successfully
2020-10-30 07:39:50 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40892
		Total time spent by all reduces in occupied slots (ms)=15940
		Total time spent by all map tasks (ms)=10223
		Total time spent by all reduce tasks (ms)=3985
		Total vcore-milliseconds taken by all map tasks=10223
		Total vcore-milliseconds taken by all reduce tasks=3985
		Total megabyte-milliseconds taken by all map tasks=41873408
		Total megabyte-milliseconds taken by all reduce tasks=16322560
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=648
		CPU time spent (ms)=7590
		Physical memory (bytes) snapshot=1492516864
		Virtual memory (bytes) snapshot=16086036480
		Total committed heap usage (bytes)=1703411712
		Peak Map Physical memory (bytes)=375824384
		Peak Map Virtual memory (bytes)=4017516544
		Peak Reduce Physical memory (bytes)=376434688
		Peak Reduce Virtual memory (bytes)=4035371008
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.318 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201030 07:39:51.349" starttime="20201030 07:39:51.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:39:51.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:39:51.350" starttime="20201030 07:39:51.350"></status>
</kw>
<status status="PASS" endtime="20201030 07:39:51.350" starttime="20201030 07:39:12.168"></status>
</kw>
<msg timestamp="20201030 07:39:51.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:39:51.351" starttime="20201030 07:39:12.168"></status>
</kw>
<msg timestamp="20201030 07:39:51.351" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-30 07:39:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 07:39:14 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201030 07:39:51.351" starttime="20201030 07:39:12.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 07:39:51.352" starttime="20201030 07:39:51.351"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 07:39:51.352" critical="yes" starttime="20201030 07:39:12.149"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:39:51.358" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:39:51.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:39:51.363" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 07:39:51.364" starttime="20201030 07:39:51.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:39:51.365" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 07:39:51.365" starttime="20201030 07:39:51.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:39:51.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:39:51.365" starttime="20201030 07:39:51.365"></status>
</kw>
<status status="PASS" endtime="20201030 07:39:51.365" starttime="20201030 07:39:51.355"></status>
</kw>
<msg timestamp="20201030 07:39:51.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:39:51.366" starttime="20201030 07:39:51.354"></status>
</kw>
<msg timestamp="20201030 07:39:51.366" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 07:39:51.366" starttime="20201030 07:39:51.354"></status>
</kw>
<msg timestamp="20201030 07:39:51.366" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201030 07:39:51.366" starttime="20201030 07:39:51.354"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201030 07:39:51.366" level="INFO">${random} = 41</msg>
<status status="PASS" endtime="20201030 07:39:51.367" starttime="20201030 07:39:51.366"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:39:51.370" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:39:51.370" starttime="20201030 07:39:51.369"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:39:51.370" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:39:51.370" starttime="20201030 07:39:51.370"></status>
</kw>
<status status="PASS" endtime="20201030 07:39:51.371" starttime="20201030 07:39:51.369"></status>
</kw>
<msg timestamp="20201030 07:39:51.371" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:39:51.371" starttime="20201030 07:39:51.369"></status>
</kw>
<status status="PASS" endtime="20201030 07:39:51.371" starttime="20201030 07:39:51.368"></status>
</kw>
<msg timestamp="20201030 07:39:51.371" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 07:39:51.371" starttime="20201030 07:39:51.367"></status>
</kw>
<msg timestamp="20201030 07:39:51.371" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201030 07:39:51.371" starttime="20201030 07:39:51.367"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:39:51.374" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:39:51.374" starttime="20201030 07:39:51.374"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:39:51.375" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:39:51.375" starttime="20201030 07:39:51.374"></status>
</kw>
<status status="PASS" endtime="20201030 07:39:51.375" starttime="20201030 07:39:51.373"></status>
</kw>
<msg timestamp="20201030 07:39:51.375" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:39:51.375" starttime="20201030 07:39:51.373"></status>
</kw>
<status status="PASS" endtime="20201030 07:39:51.375" starttime="20201030 07:39:51.372"></status>
</kw>
<msg timestamp="20201030 07:39:51.375" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201030 07:39:51.375" starttime="20201030 07:39:51.372"></status>
</kw>
<msg timestamp="20201030 07:39:51.375" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201030 07:39:51.375" starttime="20201030 07:39:51.371"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201030 07:39:51.378" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201030 07:39:51.378" starttime="20201030 07:39:51.378"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201030 07:39:51.379" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201030 07:39:51.379" starttime="20201030 07:39:51.378"></status>
</kw>
<status status="PASS" endtime="20201030 07:39:51.379" starttime="20201030 07:39:51.377"></status>
</kw>
<msg timestamp="20201030 07:39:51.379" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201030 07:39:51.379" starttime="20201030 07:39:51.377"></status>
</kw>
<status status="PASS" endtime="20201030 07:39:51.380" starttime="20201030 07:39:51.376"></status>
</kw>
<msg timestamp="20201030 07:39:51.380" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-41.txt</msg>
<status status="PASS" endtime="20201030 07:39:51.380" starttime="20201030 07:39:51.376"></status>
</kw>
<msg timestamp="20201030 07:39:51.380" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-41.txt</msg>
<status status="PASS" endtime="20201030 07:39:51.380" starttime="20201030 07:39:51.375"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201030 07:39:51.384" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-41.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201030 07:40:30.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20201030 07:40:30.211" level="INFO">${output} = 2020-10-30 07:39:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-30 07:39:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201030 07:40:30.211" starttime="20201030 07:39:51.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201030 07:40:30.212" level="INFO">2020-10-30 07:39:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-30 07:39:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-30 07:39:53 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-30 07:39:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-30 07:39:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-30 07:39:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-30 07:39:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D87797680E81-&gt;8146e299-49c8-4d40-bb7f-cda38cabcda9
2020-10-30 07:39:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-30 07:39:57 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-30 07:39:57 INFO  JobSubmitter:202 - number of splits:3
2020-10-30 07:39:57 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604043473200_0002
2020-10-30 07:39:57 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-30 07:39:58 INFO  Configuration:2795 - resource-types.xml not found
2020-10-30 07:39:58 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-10-30 07:39:58 INFO  YarnClientImpl:329 - Submitted application application_1604043473200_0002
2020-10-30 07:39:58 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604043473200_0002/
2020-10-30 07:39:58 INFO  Job:1619 - Running job: job_1604043473200_0002
2020-10-30 07:40:06 INFO  Job:1640 - Job job_1604043473200_0002 running in uber mode : false
2020-10-30 07:40:06 INFO  Job:1647 -  map 0% reduce 0%
2020-10-30 07:40:11 INFO  Job:1647 -  map 33% reduce 0%
2020-10-30 07:40:17 INFO  Job:1647 -  map 67% reduce 0%
2020-10-30 07:40:23 INFO  Job:1647 -  map 100% reduce 0%
2020-10-30 07:40:28 INFO  Job:1647 -  map 100% reduce 100%
2020-10-30 07:40:29 INFO  Job:1658 - Job job_1604043473200_0002 completed successfully
2020-10-30 07:40:29 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124185
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41544
		Total time spent by all reduces in occupied slots (ms)=15244
		Total time spent by all map tasks (ms)=10386
		Total time spent by all reduce tasks (ms)=3811
		Total vcore-milliseconds taken by all map tasks=10386
		Total vcore-milliseconds taken by all reduce tasks=3811
		Total megabyte-milliseconds taken by all map tasks=42541056
		Total megabyte-milliseconds taken by all reduce tasks=15609856
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=673
		CPU time spent (ms)=7430
		Physical memory (bytes) snapshot=1476952064
		Virtual memory (bytes) snapshot=16075407360
		Total committed heap usage (bytes)=1675624448
		Peak Map Physical memory (bytes)=373350400
		Peak Map Virtual memory (bytes)=4016386048
		Peak Reduce Physical memory (bytes)=377745408
		Peak Reduce Virtual memory (bytes)=4039294976
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201030 07:40:30.213" starttime="20201030 07:40:30.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201030 07:40:30.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201030 07:40:30.213" starttime="20201030 07:40:30.213"></status>
</kw>
<status status="PASS" endtime="20201030 07:40:30.214" starttime="20201030 07:39:51.381"></status>
</kw>
<msg timestamp="20201030 07:40:30.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201030 07:40:30.214" starttime="20201030 07:39:51.381"></status>
</kw>
<msg timestamp="20201030 07:40:30.214" level="INFO">${output} = 2020-10-30 07:39:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-10-30 07:39:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201030 07:40:30.214" starttime="20201030 07:39:51.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201030 07:40:30.215" starttime="20201030 07:40:30.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201030 07:40:30.215" starttime="20201030 07:40:30.215"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201030 07:40:30.215" critical="yes" starttime="20201030 07:39:51.353"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201030 07:40:30.216" starttime="20201030 07:39:12.103"></status>
</suite>
<status status="PASS" elapsedtime="205479" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="580198" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
